syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.github.saturn_xiv.palm.plugins.musa.v1";
package palm.musa.v1;

import "google/protobuf/empty.proto";

// ----------------------------------------------------------------------------

message WechatPayPrepayRequest {
  message Amount {
    enum Currency {
      CNY = 0;
    }

    // cent
    int32 total = 1;
    Currency currenty = 2;
  }

  string app_id = 1;
  string payer_open_id = 2;
  Amount amount = 3;

  string description = 9;
  string notify_url = 11;
}

message WechatPayCloseOrderRequest {
  string out_trade_no = 1;
  string reason = 2;
}

service WechatPayNative {
  rpc Prepay(WechatPayPrepayRequest)
      returns (WechatPayNativeQrCodeUrlResponse) {}
}

message WechatPayNativeQrCodeUrlResponse {
  string url = 1;
  string out_trade_no = 2;
}

message WechatPayTradeResponse {}

message WechatPayQueryOrderByIdRequest { string id = 1; }
message WechatPayQueryOrderByOutTradeNoRequest { string no = 1; }

service WechatPayJsapi {
  rpc Prepay(WechatPayPrepayRequest) returns (WechatPayJsapiPrepayIdResponse) {}
  rpc QueryOrderByOutTradeNo(WechatPayQueryOrderByOutTradeNoRequest)
      returns (WechatPayTradeResponse) {}
  rpc QueryOrderById(WechatPayQueryOrderByIdRequest)
      returns (WechatPayTradeResponse) {}
  rpc CloseOrder(WechatPayCloseOrderRequest) returns (google.protobuf.Empty) {}
}

message WechatPayJsapiPrepayIdResponse {
  string app_id = 1;
  string time_stamp = 2;
  string nonce_str = 3;
  string package = 4;
  string sign_type = 5;
  string pay_sign = 6;

  string out_trade_no = 11;
}

service WechatPayNotification {
  rpc transaction(WechatPayNotificationRequest)
      returns (WechatPayNotificationTransactionResponse) {}
  rpc refund(WechatPayNotificationRequest)
      returns (WechatPayNotificationRefundResponse) {}
}

message WechatPayNotificationRequest {
  string serial_number = 1;
  string nonce = 2;
  string signature = 3;
  string timestamp = 4;
  string body = 5;
}

message WechatPayNotificationTransactionResponse {}

message WechatPayNotificationRefundResponse {}

service WechatPayBill {
  rpc Trade(WechatPayTradeBillRequest) returns (WechatPayBillResponse) {}
  rpc FundFlow(WechatPayFundFlowBillRequest) returns (WechatPayBillResponse) {}
}

enum WechatPayTarType {
  GZIP = 0;
}

message WechatPayBillResponse { bytes content = 1; }
message WechatPayTradeBillRequest {
  enum BillType {
    ALL = 0;
    SUCCESS = 1;
    REFUND = 2;
  }
  string bill_date = 1;
  BillType bill_type = 2;
}
message WechatPayFundFlowBillRequest {
  enum AccountType {
    BASIC = 0;
    OPERATION = 1;
    FEES = 2;
  }
  string bill_date = 1;
  AccountType account_type = 2;
}

// ----------------------------------------------------------------------------

service Health {
  rpc Check(google.protobuf.Empty) returns (google.protobuf.Empty) {}
}
