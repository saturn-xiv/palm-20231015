// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auth.proto

#include "auth.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace palm {
namespace auth {
namespace v1 {
        template <typename>
PROTOBUF_CONSTEXPR UserDetail::UserDetail(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.nickname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.real_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct UserDetailDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserDetailDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserDetailDefaultTypeInternal() {}
  union {
    UserDetail _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserDetailDefaultTypeInternal _UserDetail_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Oauth2State::Oauth2State(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.goto__)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.host_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.user_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct Oauth2StateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Oauth2StateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Oauth2StateDefaultTypeInternal() {}
  union {
    Oauth2State _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Oauth2StateDefaultTypeInternal _Oauth2State_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UserSignInRequest::UserSignInRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.password_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.ttl_)*/ nullptr,
      /*decltype(_impl_.user_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
    } {}
struct UserSignInRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserSignInRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserSignInRequestDefaultTypeInternal() {}
  union {
    UserSignInRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserSignInRequestDefaultTypeInternal _UserSignInRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UserQueryRequest::UserQueryRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.home_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.user_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
    } {}
struct UserQueryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserQueryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserQueryRequestDefaultTypeInternal() {}
  union {
    UserQueryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserQueryRequestDefaultTypeInternal _UserQueryRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UserSignInResponse::UserSignInResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.roles_)*/ {},
      /*decltype(_impl_.permissions_)*/ {},
      /*decltype(_impl_.token_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.provider_type_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.user_)*/ nullptr,
      /*decltype(_impl_.has_google_)*/ false,
      /*decltype(_impl_.has_wechat_mini_program_)*/ false,
      /*decltype(_impl_.has_wechat_oauth2_)*/ false,
    } {}
struct UserSignInResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserSignInResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserSignInResponseDefaultTypeInternal() {}
  union {
    UserSignInResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserSignInResponseDefaultTypeInternal _UserSignInResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UserSignUpRequest::UserSignUpRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.real_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.nickname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.email_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.password_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.lang_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.timezone_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.home_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct UserSignUpRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserSignUpRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserSignUpRequestDefaultTypeInternal() {}
  union {
    UserSignUpRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserSignUpRequestDefaultTypeInternal _UserSignUpRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UserTokenRequest::UserTokenRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.payload_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct UserTokenRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserTokenRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserTokenRequestDefaultTypeInternal() {}
  union {
    UserTokenRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserTokenRequestDefaultTypeInternal _UserTokenRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UserResetPasswordRequest::UserResetPasswordRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.token_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.password_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct UserResetPasswordRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserResetPasswordRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserResetPasswordRequestDefaultTypeInternal() {}
  union {
    UserResetPasswordRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserResetPasswordRequestDefaultTypeInternal _UserResetPasswordRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UserSetPasswordRequest::UserSetPasswordRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.password_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.user_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct UserSetPasswordRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserSetPasswordRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserSetPasswordRequestDefaultTypeInternal() {}
  union {
    UserSetPasswordRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserSetPasswordRequestDefaultTypeInternal _UserSetPasswordRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UserSetProfileRequest::UserSetProfileRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.real_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.avatar_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.timezone_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.lang_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.wechat_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.phone_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct UserSetProfileRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserSetProfileRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserSetProfileRequestDefaultTypeInternal() {}
  union {
    UserSetProfileRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserSetProfileRequestDefaultTypeInternal _UserSetProfileRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UserGetProfileResponse::UserGetProfileResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.real_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.avatar_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.nickname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.email_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.timezone_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.lang_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.wechat_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.phone_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct UserGetProfileResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserGetProfileResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserGetProfileResponseDefaultTypeInternal() {}
  union {
    UserGetProfileResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserGetProfileResponseDefaultTypeInternal _UserGetProfileResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UserLogsResponse_Item::UserLogsResponse_Item(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.ip_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.message_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.resource_)*/ nullptr,
      /*decltype(_impl_.created_at_)*/ nullptr,
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_.user_id_)*/ 0,
      /*decltype(_impl_.level_)*/ 0,
    } {}
struct UserLogsResponse_ItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserLogsResponse_ItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserLogsResponse_ItemDefaultTypeInternal() {}
  union {
    UserLogsResponse_Item _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserLogsResponse_ItemDefaultTypeInternal _UserLogsResponse_Item_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UserLogsResponse::UserLogsResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.items_)*/ {},
      /*decltype(_impl_.pagination_)*/ nullptr,
    } {}
struct UserLogsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserLogsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserLogsResponseDefaultTypeInternal() {}
  union {
    UserLogsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserLogsResponseDefaultTypeInternal _UserLogsResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UserChangePasswordRequest::UserChangePasswordRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.current_password_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.new_password_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct UserChangePasswordRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserChangePasswordRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserChangePasswordRequestDefaultTypeInternal() {}
  union {
    UserChangePasswordRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserChangePasswordRequestDefaultTypeInternal _UserChangePasswordRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UserIndexResponse_Item::UserIndexResponse_Item(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.email_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.nickname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.real_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.last_sign_in_ip_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.current_sign_in_ip_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.lang_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.timezone_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.avatar_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.updated_at_)*/ nullptr,
      /*decltype(_impl_.last_sign_in_at_)*/ nullptr,
      /*decltype(_impl_.current_sign_in_at_)*/ nullptr,
      /*decltype(_impl_.confirmed_at_)*/ nullptr,
      /*decltype(_impl_.locked_at_)*/ nullptr,
      /*decltype(_impl_.deleted_at_)*/ nullptr,
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_.sign_in_count_)*/ 0,
    } {}
struct UserIndexResponse_ItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserIndexResponse_ItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserIndexResponse_ItemDefaultTypeInternal() {}
  union {
    UserIndexResponse_Item _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserIndexResponse_ItemDefaultTypeInternal _UserIndexResponse_Item_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UserIndexResponse::UserIndexResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.items_)*/ {},
      /*decltype(_impl_.pagination_)*/ nullptr,
    } {}
struct UserIndexResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserIndexResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserIndexResponseDefaultTypeInternal() {}
  union {
    UserIndexResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserIndexResponseDefaultTypeInternal _UserIndexResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SignInByGoogleRequest::SignInByGoogleRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.scopes_)*/ {},
      /*decltype(_impl_.code_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.state_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.redirect_uri_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.nonce_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.ttl_)*/ nullptr,
    } {}
struct SignInByGoogleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignInByGoogleRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignInByGoogleRequestDefaultTypeInternal() {}
  union {
    SignInByGoogleRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignInByGoogleRequestDefaultTypeInternal _SignInByGoogleRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GoogleSignInUrlRequest::GoogleSignInUrlRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.redirect_uri_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.state_)*/ nullptr,
    } {}
struct GoogleSignInUrlRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GoogleSignInUrlRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GoogleSignInUrlRequestDefaultTypeInternal() {}
  union {
    GoogleSignInUrlRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GoogleSignInUrlRequestDefaultTypeInternal _GoogleSignInUrlRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GoogleSignInUrlResponse::GoogleSignInUrlResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.url_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.nonce_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct GoogleSignInUrlResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GoogleSignInUrlResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GoogleSignInUrlResponseDefaultTypeInternal() {}
  union {
    GoogleSignInUrlResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GoogleSignInUrlResponseDefaultTypeInternal _GoogleSignInUrlResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WechatUserBindByIdRequest::WechatUserBindByIdRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.user_id_)*/ 0,
      /*decltype(_impl_.wechat_user_id_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct WechatUserBindByIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatUserBindByIdRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatUserBindByIdRequestDefaultTypeInternal() {}
  union {
    WechatUserBindByIdRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatUserBindByIdRequestDefaultTypeInternal _WechatUserBindByIdRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WechatUserBindByAccountRequest::WechatUserBindByAccountRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.nickname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.password_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct WechatUserBindByAccountRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatUserBindByAccountRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatUserBindByAccountRequestDefaultTypeInternal() {}
  union {
    WechatUserBindByAccountRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatUserBindByAccountRequestDefaultTypeInternal _WechatUserBindByAccountRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WechatUserQueryByOpenIdRequest::WechatUserQueryByOpenIdRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.app_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.open_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct WechatUserQueryByOpenIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatUserQueryByOpenIdRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatUserQueryByOpenIdRequestDefaultTypeInternal() {}
  union {
    WechatUserQueryByOpenIdRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatUserQueryByOpenIdRequestDefaultTypeInternal _WechatUserQueryByOpenIdRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WechatUserQueryByUnionIdRequest::WechatUserQueryByUnionIdRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.union_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct WechatUserQueryByUnionIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatUserQueryByUnionIdRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatUserQueryByUnionIdRequestDefaultTypeInternal() {}
  union {
    WechatUserQueryByUnionIdRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatUserQueryByUnionIdRequestDefaultTypeInternal _WechatUserQueryByUnionIdRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WechatAllMiniProgramUserResponse_Item::WechatAllMiniProgramUserResponse_Item(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.union_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.app_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.open_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.nickname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.avatar_url_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_.user_id_)*/ 0,
    } {}
struct WechatAllMiniProgramUserResponse_ItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatAllMiniProgramUserResponse_ItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatAllMiniProgramUserResponse_ItemDefaultTypeInternal() {}
  union {
    WechatAllMiniProgramUserResponse_Item _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatAllMiniProgramUserResponse_ItemDefaultTypeInternal _WechatAllMiniProgramUserResponse_Item_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WechatAllMiniProgramUserResponse::WechatAllMiniProgramUserResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.items_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct WechatAllMiniProgramUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatAllMiniProgramUserResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatAllMiniProgramUserResponseDefaultTypeInternal() {}
  union {
    WechatAllMiniProgramUserResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatAllMiniProgramUserResponseDefaultTypeInternal _WechatAllMiniProgramUserResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WechatAllOauth2UserResponse_Item::WechatAllOauth2UserResponse_Item(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.privilege_)*/ {},
      /*decltype(_impl_.union_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.app_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.open_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.nickname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.city_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.province_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.country_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.head_img_url_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.lang_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_.user_id_)*/ 0,
      /*decltype(_impl_.sex_)*/ 0,
    } {}
struct WechatAllOauth2UserResponse_ItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatAllOauth2UserResponse_ItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatAllOauth2UserResponse_ItemDefaultTypeInternal() {}
  union {
    WechatAllOauth2UserResponse_Item _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatAllOauth2UserResponse_ItemDefaultTypeInternal _WechatAllOauth2UserResponse_Item_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WechatAllOauth2UserResponse::WechatAllOauth2UserResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.items_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct WechatAllOauth2UserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatAllOauth2UserResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatAllOauth2UserResponseDefaultTypeInternal() {}
  union {
    WechatAllOauth2UserResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatAllOauth2UserResponseDefaultTypeInternal _WechatAllOauth2UserResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SignInByWechatOauth2Request::SignInByWechatOauth2Request(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.state_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.code_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.app_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.ttl_)*/ nullptr,
      /*decltype(_impl_.language_)*/ 0,
    } {}
struct SignInByWechatOauth2RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignInByWechatOauth2RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignInByWechatOauth2RequestDefaultTypeInternal() {}
  union {
    SignInByWechatOauth2Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignInByWechatOauth2RequestDefaultTypeInternal _SignInByWechatOauth2Request_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WechatOauth2SignInStateResponse::WechatOauth2SignInStateResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.state_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct WechatOauth2SignInStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatOauth2SignInStateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatOauth2SignInStateResponseDefaultTypeInternal() {}
  union {
    WechatOauth2SignInStateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatOauth2SignInStateResponseDefaultTypeInternal _WechatOauth2SignInStateResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WechatOauth2SignInUrlRequest::WechatOauth2SignInUrlRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.app_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.redirect_uri_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.language_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct WechatOauth2SignInUrlRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatOauth2SignInUrlRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatOauth2SignInUrlRequestDefaultTypeInternal() {}
  union {
    WechatOauth2SignInUrlRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatOauth2SignInUrlRequestDefaultTypeInternal _WechatOauth2SignInUrlRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WechatMiniProgramUser::WechatMiniProgramUser(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.app_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.open_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.union_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.nickname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.avatar_url_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct WechatMiniProgramUserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatMiniProgramUserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatMiniProgramUserDefaultTypeInternal() {}
  union {
    WechatMiniProgramUser _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatMiniProgramUserDefaultTypeInternal _WechatMiniProgramUser_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR AttachmentShowRequest::AttachmentShowRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.ttl_)*/ nullptr,
      /*decltype(_impl_.id_)*/ 0,
    } {}
struct AttachmentShowRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttachmentShowRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttachmentShowRequestDefaultTypeInternal() {}
  union {
    AttachmentShowRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttachmentShowRequestDefaultTypeInternal _AttachmentShowRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR AttachmentShowResponse::AttachmentShowResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.url_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.item_)*/ nullptr,
    } {}
struct AttachmentShowResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttachmentShowResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttachmentShowResponseDefaultTypeInternal() {}
  union {
    AttachmentShowResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttachmentShowResponseDefaultTypeInternal _AttachmentShowResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR AttachmentIndexResponse_Item::AttachmentIndexResponse_Item(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.bucket_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.title_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.content_type_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.updated_at_)*/ nullptr,
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_.status_)*/ 0,
      /*decltype(_impl_.size_)*/ ::int64_t{0},
    } {}
struct AttachmentIndexResponse_ItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttachmentIndexResponse_ItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttachmentIndexResponse_ItemDefaultTypeInternal() {}
  union {
    AttachmentIndexResponse_Item _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttachmentIndexResponse_ItemDefaultTypeInternal _AttachmentIndexResponse_Item_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR AttachmentIndexResponse::AttachmentIndexResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.items_)*/ {},
      /*decltype(_impl_.pagination_)*/ nullptr,
    } {}
struct AttachmentIndexResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttachmentIndexResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttachmentIndexResponseDefaultTypeInternal() {}
  union {
    AttachmentIndexResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttachmentIndexResponseDefaultTypeInternal _AttachmentIndexResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR LocaleByLangRequest::LocaleByLangRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.lang_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct LocaleByLangRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocaleByLangRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocaleByLangRequestDefaultTypeInternal() {}
  union {
    LocaleByLangRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocaleByLangRequestDefaultTypeInternal _LocaleByLangRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR LocaleListResponse::LocaleListResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.items_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct LocaleListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocaleListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocaleListResponseDefaultTypeInternal() {}
  union {
    LocaleListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocaleListResponseDefaultTypeInternal _LocaleListResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR LocaleIndexResponse_Item::LocaleIndexResponse_Item(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.lang_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.code_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.message_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.updated_at_)*/ nullptr,
      /*decltype(_impl_.id_)*/ 0,
    } {}
struct LocaleIndexResponse_ItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocaleIndexResponse_ItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocaleIndexResponse_ItemDefaultTypeInternal() {}
  union {
    LocaleIndexResponse_Item _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocaleIndexResponse_ItemDefaultTypeInternal _LocaleIndexResponse_Item_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR LocaleIndexResponse::LocaleIndexResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.items_)*/ {},
      /*decltype(_impl_.pagination_)*/ nullptr,
    } {}
struct LocaleIndexResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocaleIndexResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocaleIndexResponseDefaultTypeInternal() {}
  union {
    LocaleIndexResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocaleIndexResponseDefaultTypeInternal _LocaleIndexResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR LocaleByCodeRequest::LocaleByCodeRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.code_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct LocaleByCodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocaleByCodeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocaleByCodeRequestDefaultTypeInternal() {}
  union {
    LocaleByCodeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocaleByCodeRequestDefaultTypeInternal _LocaleByCodeRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR LocaleByLangAndCodeRequest::LocaleByLangAndCodeRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.lang_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.code_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct LocaleByLangAndCodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocaleByLangAndCodeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocaleByLangAndCodeRequestDefaultTypeInternal() {}
  union {
    LocaleByLangAndCodeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocaleByLangAndCodeRequestDefaultTypeInternal _LocaleByLangAndCodeRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR LocaleCreateRequest::LocaleCreateRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.lang_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.code_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.message_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct LocaleCreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocaleCreateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocaleCreateRequestDefaultTypeInternal() {}
  union {
    LocaleCreateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocaleCreateRequestDefaultTypeInternal _LocaleCreateRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR LocaleUpdateRequest::LocaleUpdateRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.message_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct LocaleUpdateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocaleUpdateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocaleUpdateRequestDefaultTypeInternal() {}
  union {
    LocaleUpdateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocaleUpdateRequestDefaultTypeInternal _LocaleUpdateRequest_default_instance_;
}  // namespace v1
}  // namespace auth
}  // namespace palm
static ::_pb::Metadata file_level_metadata_auth_2eproto[43];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_auth_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_auth_2eproto = nullptr;
const ::uint32_t TableStruct_auth_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserDetail, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserDetail, _impl_.nickname_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserDetail, _impl_.real_name_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::Oauth2State, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::Oauth2State, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::Oauth2State, _impl_.goto__),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::Oauth2State, _impl_.host_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::Oauth2State, _impl_.user_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::Oauth2State, _impl_.id_),
    ~0u,
    ~0u,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignInRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignInRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignInRequest, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignInRequest, _impl_.password_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignInRequest, _impl_.ttl_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignInRequest, _impl_.user_),
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserQueryRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserQueryRequest, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserQueryRequest, _impl_.home_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserQueryRequest, _impl_.user_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignInResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignInResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignInResponse, _impl_.token_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignInResponse, _impl_.user_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignInResponse, _impl_.provider_type_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignInResponse, _impl_.roles_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignInResponse, _impl_.permissions_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignInResponse, _impl_.has_google_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignInResponse, _impl_.has_wechat_mini_program_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignInResponse, _impl_.has_wechat_oauth2_),
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignUpRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignUpRequest, _impl_.real_name_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignUpRequest, _impl_.nickname_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignUpRequest, _impl_.email_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignUpRequest, _impl_.password_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignUpRequest, _impl_.lang_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignUpRequest, _impl_.timezone_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignUpRequest, _impl_.home_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserTokenRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserTokenRequest, _impl_.payload_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserResetPasswordRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserResetPasswordRequest, _impl_.token_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserResetPasswordRequest, _impl_.password_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSetPasswordRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSetPasswordRequest, _impl_.user_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSetPasswordRequest, _impl_.password_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSetProfileRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSetProfileRequest, _impl_.real_name_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSetProfileRequest, _impl_.avatar_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSetProfileRequest, _impl_.timezone_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSetProfileRequest, _impl_.lang_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSetProfileRequest, _impl_.wechat_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSetProfileRequest, _impl_.phone_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserGetProfileResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserGetProfileResponse, _impl_.real_name_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserGetProfileResponse, _impl_.avatar_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserGetProfileResponse, _impl_.nickname_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserGetProfileResponse, _impl_.email_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserGetProfileResponse, _impl_.timezone_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserGetProfileResponse, _impl_.lang_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserGetProfileResponse, _impl_.wechat_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserGetProfileResponse, _impl_.phone_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserLogsResponse_Item, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserLogsResponse_Item, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserLogsResponse_Item, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserLogsResponse_Item, _impl_.user_id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserLogsResponse_Item, _impl_.ip_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserLogsResponse_Item, _impl_.level_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserLogsResponse_Item, _impl_.message_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserLogsResponse_Item, _impl_.resource_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserLogsResponse_Item, _impl_.created_at_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserLogsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserLogsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserLogsResponse, _impl_.pagination_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserLogsResponse, _impl_.items_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserChangePasswordRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserChangePasswordRequest, _impl_.current_password_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserChangePasswordRequest, _impl_.new_password_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _impl_.email_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _impl_.nickname_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _impl_.real_name_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _impl_.updated_at_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _impl_.last_sign_in_at_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _impl_.last_sign_in_ip_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _impl_.current_sign_in_at_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _impl_.current_sign_in_ip_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _impl_.sign_in_count_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _impl_.lang_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _impl_.timezone_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _impl_.avatar_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _impl_.confirmed_at_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _impl_.locked_at_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse_Item, _impl_.deleted_at_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    2,
    3,
    0,
    4,
    1,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    5,
    6,
    7,
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse, _impl_.pagination_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserIndexResponse, _impl_.items_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::SignInByGoogleRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::SignInByGoogleRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::SignInByGoogleRequest, _impl_.scopes_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::SignInByGoogleRequest, _impl_.code_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::SignInByGoogleRequest, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::SignInByGoogleRequest, _impl_.redirect_uri_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::SignInByGoogleRequest, _impl_.nonce_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::SignInByGoogleRequest, _impl_.ttl_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::GoogleSignInUrlRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::GoogleSignInUrlRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::GoogleSignInUrlRequest, _impl_.redirect_uri_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::GoogleSignInUrlRequest, _impl_.state_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::GoogleSignInUrlResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::GoogleSignInUrlResponse, _impl_.url_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::GoogleSignInUrlResponse, _impl_.nonce_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatUserBindByIdRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatUserBindByIdRequest, _impl_.user_id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatUserBindByIdRequest, _impl_.wechat_user_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatUserBindByAccountRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatUserBindByAccountRequest, _impl_.nickname_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatUserBindByAccountRequest, _impl_.password_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatUserQueryByOpenIdRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatUserQueryByOpenIdRequest, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatUserQueryByOpenIdRequest, _impl_.open_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatUserQueryByUnionIdRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatUserQueryByUnionIdRequest, _impl_.union_id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllMiniProgramUserResponse_Item, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllMiniProgramUserResponse_Item, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllMiniProgramUserResponse_Item, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllMiniProgramUserResponse_Item, _impl_.user_id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllMiniProgramUserResponse_Item, _impl_.union_id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllMiniProgramUserResponse_Item, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllMiniProgramUserResponse_Item, _impl_.open_id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllMiniProgramUserResponse_Item, _impl_.nickname_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllMiniProgramUserResponse_Item, _impl_.avatar_url_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllMiniProgramUserResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllMiniProgramUserResponse, _impl_.items_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllOauth2UserResponse_Item, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllOauth2UserResponse_Item, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllOauth2UserResponse_Item, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllOauth2UserResponse_Item, _impl_.user_id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllOauth2UserResponse_Item, _impl_.union_id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllOauth2UserResponse_Item, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllOauth2UserResponse_Item, _impl_.open_id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllOauth2UserResponse_Item, _impl_.nickname_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllOauth2UserResponse_Item, _impl_.sex_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllOauth2UserResponse_Item, _impl_.city_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllOauth2UserResponse_Item, _impl_.province_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllOauth2UserResponse_Item, _impl_.country_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllOauth2UserResponse_Item, _impl_.head_img_url_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllOauth2UserResponse_Item, _impl_.privilege_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllOauth2UserResponse_Item, _impl_.lang_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllOauth2UserResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatAllOauth2UserResponse, _impl_.items_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::SignInByWechatOauth2Request, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::SignInByWechatOauth2Request, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::SignInByWechatOauth2Request, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::SignInByWechatOauth2Request, _impl_.code_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::SignInByWechatOauth2Request, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::SignInByWechatOauth2Request, _impl_.language_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::SignInByWechatOauth2Request, _impl_.ttl_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatOauth2SignInStateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatOauth2SignInStateResponse, _impl_.state_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatOauth2SignInUrlRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatOauth2SignInUrlRequest, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatOauth2SignInUrlRequest, _impl_.redirect_uri_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatOauth2SignInUrlRequest, _impl_.language_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatMiniProgramUser, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatMiniProgramUser, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatMiniProgramUser, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatMiniProgramUser, _impl_.open_id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatMiniProgramUser, _impl_.union_id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatMiniProgramUser, _impl_.nickname_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::WechatMiniProgramUser, _impl_.avatar_url_),
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentShowRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentShowRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentShowRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentShowRequest, _impl_.ttl_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentShowResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentShowResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentShowResponse, _impl_.item_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentShowResponse, _impl_.url_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentIndexResponse_Item, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentIndexResponse_Item, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentIndexResponse_Item, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentIndexResponse_Item, _impl_.bucket_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentIndexResponse_Item, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentIndexResponse_Item, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentIndexResponse_Item, _impl_.size_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentIndexResponse_Item, _impl_.content_type_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentIndexResponse_Item, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentIndexResponse_Item, _impl_.updated_at_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentIndexResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentIndexResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentIndexResponse, _impl_.pagination_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::AttachmentIndexResponse, _impl_.items_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleByLangRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleByLangRequest, _impl_.lang_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleListResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleListResponse, _impl_.items_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleIndexResponse_Item, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleIndexResponse_Item, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleIndexResponse_Item, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleIndexResponse_Item, _impl_.lang_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleIndexResponse_Item, _impl_.code_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleIndexResponse_Item, _impl_.message_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleIndexResponse_Item, _impl_.updated_at_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleIndexResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleIndexResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleIndexResponse, _impl_.items_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleIndexResponse, _impl_.pagination_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleByCodeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleByCodeRequest, _impl_.code_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleByLangAndCodeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleByLangAndCodeRequest, _impl_.lang_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleByLangAndCodeRequest, _impl_.code_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleCreateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleCreateRequest, _impl_.lang_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleCreateRequest, _impl_.code_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleCreateRequest, _impl_.message_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleUpdateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleUpdateRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::LocaleUpdateRequest, _impl_.message_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::palm::auth::v1::UserDetail)},
        {10, 22, -1, sizeof(::palm::auth::v1::Oauth2State)},
        {26, 39, -1, sizeof(::palm::auth::v1::UserSignInRequest)},
        {43, -1, -1, sizeof(::palm::auth::v1::UserQueryRequest)},
        {55, 71, -1, sizeof(::palm::auth::v1::UserSignInResponse)},
        {79, -1, -1, sizeof(::palm::auth::v1::UserSignUpRequest)},
        {94, -1, -1, sizeof(::palm::auth::v1::UserTokenRequest)},
        {103, -1, -1, sizeof(::palm::auth::v1::UserResetPasswordRequest)},
        {113, -1, -1, sizeof(::palm::auth::v1::UserSetPasswordRequest)},
        {123, -1, -1, sizeof(::palm::auth::v1::UserSetProfileRequest)},
        {137, -1, -1, sizeof(::palm::auth::v1::UserGetProfileResponse)},
        {153, 168, -1, sizeof(::palm::auth::v1::UserLogsResponse_Item)},
        {175, 185, -1, sizeof(::palm::auth::v1::UserLogsResponse)},
        {187, -1, -1, sizeof(::palm::auth::v1::UserChangePasswordRequest)},
        {197, 221, -1, sizeof(::palm::auth::v1::UserIndexResponse_Item)},
        {237, 247, -1, sizeof(::palm::auth::v1::UserIndexResponse)},
        {249, 263, -1, sizeof(::palm::auth::v1::SignInByGoogleRequest)},
        {269, 279, -1, sizeof(::palm::auth::v1::GoogleSignInUrlRequest)},
        {281, -1, -1, sizeof(::palm::auth::v1::GoogleSignInUrlResponse)},
        {291, -1, -1, sizeof(::palm::auth::v1::WechatUserBindByIdRequest)},
        {301, -1, -1, sizeof(::palm::auth::v1::WechatUserBindByAccountRequest)},
        {311, -1, -1, sizeof(::palm::auth::v1::WechatUserQueryByOpenIdRequest)},
        {321, -1, -1, sizeof(::palm::auth::v1::WechatUserQueryByUnionIdRequest)},
        {330, 345, -1, sizeof(::palm::auth::v1::WechatAllMiniProgramUserResponse_Item)},
        {352, -1, -1, sizeof(::palm::auth::v1::WechatAllMiniProgramUserResponse)},
        {361, 382, -1, sizeof(::palm::auth::v1::WechatAllOauth2UserResponse_Item)},
        {395, -1, -1, sizeof(::palm::auth::v1::WechatAllOauth2UserResponse)},
        {404, 417, -1, sizeof(::palm::auth::v1::SignInByWechatOauth2Request)},
        {422, -1, -1, sizeof(::palm::auth::v1::WechatOauth2SignInStateResponse)},
        {431, -1, -1, sizeof(::palm::auth::v1::WechatOauth2SignInUrlRequest)},
        {442, 455, -1, sizeof(::palm::auth::v1::WechatMiniProgramUser)},
        {460, 470, -1, sizeof(::palm::auth::v1::AttachmentShowRequest)},
        {472, 482, -1, sizeof(::palm::auth::v1::AttachmentShowResponse)},
        {484, 500, -1, sizeof(::palm::auth::v1::AttachmentIndexResponse_Item)},
        {508, 518, -1, sizeof(::palm::auth::v1::AttachmentIndexResponse)},
        {520, -1, -1, sizeof(::palm::auth::v1::LocaleByLangRequest)},
        {529, -1, -1, sizeof(::palm::auth::v1::LocaleListResponse)},
        {538, 551, -1, sizeof(::palm::auth::v1::LocaleIndexResponse_Item)},
        {556, 566, -1, sizeof(::palm::auth::v1::LocaleIndexResponse)},
        {568, -1, -1, sizeof(::palm::auth::v1::LocaleByCodeRequest)},
        {577, -1, -1, sizeof(::palm::auth::v1::LocaleByLangAndCodeRequest)},
        {587, -1, -1, sizeof(::palm::auth::v1::LocaleCreateRequest)},
        {598, -1, -1, sizeof(::palm::auth::v1::LocaleUpdateRequest)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::palm::auth::v1::_UserDetail_default_instance_._instance,
    &::palm::auth::v1::_Oauth2State_default_instance_._instance,
    &::palm::auth::v1::_UserSignInRequest_default_instance_._instance,
    &::palm::auth::v1::_UserQueryRequest_default_instance_._instance,
    &::palm::auth::v1::_UserSignInResponse_default_instance_._instance,
    &::palm::auth::v1::_UserSignUpRequest_default_instance_._instance,
    &::palm::auth::v1::_UserTokenRequest_default_instance_._instance,
    &::palm::auth::v1::_UserResetPasswordRequest_default_instance_._instance,
    &::palm::auth::v1::_UserSetPasswordRequest_default_instance_._instance,
    &::palm::auth::v1::_UserSetProfileRequest_default_instance_._instance,
    &::palm::auth::v1::_UserGetProfileResponse_default_instance_._instance,
    &::palm::auth::v1::_UserLogsResponse_Item_default_instance_._instance,
    &::palm::auth::v1::_UserLogsResponse_default_instance_._instance,
    &::palm::auth::v1::_UserChangePasswordRequest_default_instance_._instance,
    &::palm::auth::v1::_UserIndexResponse_Item_default_instance_._instance,
    &::palm::auth::v1::_UserIndexResponse_default_instance_._instance,
    &::palm::auth::v1::_SignInByGoogleRequest_default_instance_._instance,
    &::palm::auth::v1::_GoogleSignInUrlRequest_default_instance_._instance,
    &::palm::auth::v1::_GoogleSignInUrlResponse_default_instance_._instance,
    &::palm::auth::v1::_WechatUserBindByIdRequest_default_instance_._instance,
    &::palm::auth::v1::_WechatUserBindByAccountRequest_default_instance_._instance,
    &::palm::auth::v1::_WechatUserQueryByOpenIdRequest_default_instance_._instance,
    &::palm::auth::v1::_WechatUserQueryByUnionIdRequest_default_instance_._instance,
    &::palm::auth::v1::_WechatAllMiniProgramUserResponse_Item_default_instance_._instance,
    &::palm::auth::v1::_WechatAllMiniProgramUserResponse_default_instance_._instance,
    &::palm::auth::v1::_WechatAllOauth2UserResponse_Item_default_instance_._instance,
    &::palm::auth::v1::_WechatAllOauth2UserResponse_default_instance_._instance,
    &::palm::auth::v1::_SignInByWechatOauth2Request_default_instance_._instance,
    &::palm::auth::v1::_WechatOauth2SignInStateResponse_default_instance_._instance,
    &::palm::auth::v1::_WechatOauth2SignInUrlRequest_default_instance_._instance,
    &::palm::auth::v1::_WechatMiniProgramUser_default_instance_._instance,
    &::palm::auth::v1::_AttachmentShowRequest_default_instance_._instance,
    &::palm::auth::v1::_AttachmentShowResponse_default_instance_._instance,
    &::palm::auth::v1::_AttachmentIndexResponse_Item_default_instance_._instance,
    &::palm::auth::v1::_AttachmentIndexResponse_default_instance_._instance,
    &::palm::auth::v1::_LocaleByLangRequest_default_instance_._instance,
    &::palm::auth::v1::_LocaleListResponse_default_instance_._instance,
    &::palm::auth::v1::_LocaleIndexResponse_Item_default_instance_._instance,
    &::palm::auth::v1::_LocaleIndexResponse_default_instance_._instance,
    &::palm::auth::v1::_LocaleByCodeRequest_default_instance_._instance,
    &::palm::auth::v1::_LocaleByLangAndCodeRequest_default_instance_._instance,
    &::palm::auth::v1::_LocaleCreateRequest_default_instance_._instance,
    &::palm::auth::v1::_LocaleUpdateRequest_default_instance_._instance,
};
const char descriptor_table_protodef_auth_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\nauth.proto\022\014palm.auth.v1\032\033google/proto"
    "buf/empty.proto\032\037google/protobuf/timesta"
    "mp.proto\032\036google/protobuf/duration.proto"
    "\032\tnut.proto\032\nrbac.proto\032\014orchid.proto\"1\n"
    "\nUserDetail\022\020\n\010nickname\030\001 \001(\t\022\021\n\treal_na"
    "me\030\002 \001(\t\"Q\n\013Oauth2State\022\014\n\004goto\030\001 \001(\t\022\014\n"
    "\004host\030\002 \001(\t\022\021\n\004user\030\003 \001(\tH\000\210\001\001\022\n\n\002id\030\t \001"
    "(\tB\007\n\005_user\"z\n\021UserSignInRequest\022\022\n\010nick"
    "name\030\001 \001(\tH\000\022\017\n\005email\030\002 \001(\tH\000\022\020\n\010passwor"
    "d\030\t \001(\t\022&\n\003ttl\030\013 \001(\0132\031.google.protobuf.D"
    "urationB\006\n\004user\"M\n\020UserQueryRequest\022\022\n\010n"
    "ickname\030\001 \001(\tH\000\022\017\n\005email\030\002 \001(\tH\000\022\014\n\004home"
    "\030\t \001(\tB\006\n\004user\"\212\002\n\022UserSignInResponse\022\r\n"
    "\005token\030\001 \001(\t\0222\n\004user\030\002 \001(\0132$.palm.auth.v"
    "1.UserIndexResponse.Item\022\025\n\rprovider_typ"
    "e\030\t \001(\t\022\r\n\005roles\030\013 \003(\t\022;\n\013permissions\030\014 "
    "\003(\0132&.palm.rbac.v1.PermissionsResponse.I"
    "tem\022\022\n\nhas_google\030\025 \001(\010\022\037\n\027has_wechat_mi"
    "ni_program\030\026 \001(\010\022\031\n\021has_wechat_oauth2\030\027 "
    "\001(\010\"\207\001\n\021UserSignUpRequest\022\021\n\treal_name\030\001"
    " \001(\t\022\020\n\010nickname\030\002 \001(\t\022\r\n\005email\030\003 \001(\t\022\020\n"
    "\010password\030\004 \001(\t\022\014\n\004lang\030\013 \001(\t\022\020\n\010timezon"
    "e\030\014 \001(\t\022\014\n\004home\030\025 \001(\t\"#\n\020UserTokenReques"
    "t\022\017\n\007payload\030\001 \001(\t\";\n\030UserResetPasswordR"
    "equest\022\r\n\005token\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\""
    "8\n\026UserSetPasswordRequest\022\014\n\004user\030\001 \001(\005\022"
    "\020\n\010password\030\002 \001(\t\"y\n\025UserSetProfileReque"
    "st\022\021\n\treal_name\030\001 \001(\t\022\016\n\006avatar\030\002 \001(\t\022\020\n"
    "\010timezone\030\010 \001(\t\022\014\n\004lang\030\t \001(\t\022\016\n\006wechat\030"
    "\013 \001(\t\022\r\n\005phone\030\014 \001(\t\"\233\001\n\026UserGetProfileR"
    "esponse\022\021\n\treal_name\030\001 \001(\t\022\016\n\006avatar\030\002 \001"
    "(\t\022\020\n\010nickname\030\003 \001(\t\022\r\n\005email\030\004 \001(\t\022\020\n\010t"
    "imezone\030\010 \001(\t\022\014\n\004lang\030\t \001(\t\022\016\n\006wechat\030\013 "
    "\001(\t\022\r\n\005phone\030\014 \001(\t\"\231\003\n\020UserLogsResponse\022"
    "+\n\npagination\030\001 \001(\0132\027.palm.nut.v1.Pagina"
    "tion\0222\n\005items\030\013 \003(\0132#.palm.auth.v1.UserL"
    "ogsResponse.Item\032\243\002\n\004Item\022\n\n\002id\030\001 \001(\005\022\017\n"
    "\007user_id\030\002 \001(\005\022\n\n\002ip\030\003 \001(\t\0228\n\005level\030\004 \001("
    "\0162).palm.auth.v1.UserLogsResponse.Item.L"
    "evel\022\017\n\007message\030\005 \001(\t\0226\n\010resource\030\006 \001(\0132"
    "$.palm.rbac.v1.ResourcesResponse.Item\022.\n"
    "\ncreated_at\030\013 \001(\0132\032.google.protobuf.Time"
    "stamp\"\?\n\005Level\022\t\n\005DEBUG\020\000\022\010\n\004INFO\020\001\022\013\n\007W"
    "ARNING\020\002\022\t\n\005ERROR\020\003\022\t\n\005PANIC\020\004\"K\n\031UserCh"
    "angePasswordRequest\022\030\n\020current_password\030"
    "\001 \001(\t\022\024\n\014new_password\030\002 \001(\t\"\217\006\n\021UserInde"
    "xResponse\022+\n\npagination\030\001 \001(\0132\027.palm.nut"
    ".v1.Pagination\0223\n\005items\030\013 \003(\0132$.palm.aut"
    "h.v1.UserIndexResponse.Item\032\227\005\n\004Item\022\n\n\002"
    "id\030\001 \001(\005\022\r\n\005email\030\002 \001(\t\022\020\n\010nickname\030\003 \001("
    "\t\022\021\n\treal_name\030\004 \001(\t\022.\n\nupdated_at\030\t \001(\013"
    "2\032.google.protobuf.Timestamp\0228\n\017last_sig"
    "n_in_at\030\013 \001(\0132\032.google.protobuf.Timestam"
    "pH\000\210\001\001\022\034\n\017last_sign_in_ip\030\014 \001(\tH\001\210\001\001\022;\n\022"
    "current_sign_in_at\030\r \001(\0132\032.google.protob"
    "uf.TimestampH\002\210\001\001\022\037\n\022current_sign_in_ip\030"
    "\016 \001(\tH\003\210\001\001\022\025\n\rsign_in_count\030\023 \001(\005\022\014\n\004lan"
    "g\030\025 \001(\t\022\020\n\010timezone\030\026 \001(\t\022\016\n\006avatar\030\027 \001("
    "\t\0225\n\014confirmed_at\030\033 \001(\0132\032.google.protobu"
    "f.TimestampH\004\210\001\001\0222\n\tlocked_at\030\034 \001(\0132\032.go"
    "ogle.protobuf.TimestampH\005\210\001\001\0223\n\ndeleted_"
    "at\030\035 \001(\0132\032.google.protobuf.TimestampH\006\210\001"
    "\001B\022\n\020_last_sign_in_atB\022\n\020_last_sign_in_i"
    "pB\025\n\023_current_sign_in_atB\025\n\023_current_sig"
    "n_in_ipB\017\n\r_confirmed_atB\014\n\n_locked_atB\r"
    "\n\013_deleted_at\"\221\001\n\025SignInByGoogleRequest\022"
    "\016\n\006scopes\030\001 \003(\t\022\014\n\004code\030\002 \001(\t\022\r\n\005state\030\003"
    " \001(\t\022\024\n\014redirect_uri\030\004 \001(\t\022\r\n\005nonce\030\t \001("
    "\t\022&\n\003ttl\030\013 \001(\0132\031.google.protobuf.Duratio"
    "n\"X\n\026GoogleSignInUrlRequest\022\024\n\014redirect_"
    "uri\030\001 \001(\t\022(\n\005state\030\002 \001(\0132\031.palm.auth.v1."
    "Oauth2State\"5\n\027GoogleSignInUrlResponse\022\013"
    "\n\003url\030\001 \001(\t\022\r\n\005nonce\030\002 \001(\t\"D\n\031WechatUser"
    "BindByIdRequest\022\017\n\007user_id\030\001 \001(\005\022\026\n\016wech"
    "at_user_id\030\002 \001(\005\"D\n\036WechatUserBindByAcco"
    "untRequest\022\020\n\010nickname\030\001 \001(\t\022\020\n\010password"
    "\030\002 \001(\t\"A\n\036WechatUserQueryByOpenIdRequest"
    "\022\016\n\006app_id\030\001 \001(\t\022\017\n\007open_id\030\002 \001(\t\"3\n\037Wec"
    "hatUserQueryByUnionIdRequest\022\020\n\010union_id"
    "\030\001 \001(\t\"\213\002\n WechatAllMiniProgramUserRespo"
    "nse\022B\n\005items\030\001 \003(\01323.palm.auth.v1.Wechat"
    "AllMiniProgramUserResponse.Item\032\242\001\n\004Item"
    "\022\n\n\002id\030\001 \001(\005\022\017\n\007user_id\030\002 \001(\005\022\020\n\010union_i"
    "d\030\003 \001(\t\022\016\n\006app_id\030\004 \001(\t\022\017\n\007open_id\030\005 \001(\t"
    "\022\025\n\010nickname\030\013 \001(\tH\000\210\001\001\022\027\n\navatar_url\030\014 "
    "\001(\tH\001\210\001\001B\013\n\t_nicknameB\r\n\013_avatar_url\"\322\002\n"
    "\033WechatAllOauth2UserResponse\022=\n\005items\030\001 "
    "\003(\0132..palm.auth.v1.WechatAllOauth2UserRe"
    "sponse.Item\032\363\001\n\004Item\022\n\n\002id\030\001 \001(\005\022\017\n\007user"
    "_id\030\002 \001(\005\022\020\n\010union_id\030\003 \001(\t\022\016\n\006app_id\030\004 "
    "\001(\t\022\017\n\007open_id\030\005 \001(\t\022\020\n\010nickname\030\013 \001(\t\022\013"
    "\n\003sex\030\014 \001(\005\022\014\n\004city\030\r \001(\t\022\020\n\010province\030\016 "
    "\001(\t\022\017\n\007country\030\017 \001(\t\022\031\n\014head_img_url\030\020 \001"
    "(\tH\000\210\001\001\022\021\n\tprivilege\030\021 \003(\t\022\014\n\004lang\030\022 \001(\t"
    "B\017\n\r_head_img_url\"\273\001\n\033SignInByWechatOaut"
    "h2Request\022\r\n\005state\030\001 \001(\t\022\014\n\004code\030\002 \001(\t\022\016"
    "\n\006app_id\030\003 \001(\t\022G\n\010language\030\010 \001(\01625.palm."
    "orchid.v1.WechatOauth2QrConnectRequest.L"
    "anguage\022&\n\003ttl\030\013 \001(\0132\031.google.protobuf.D"
    "uration\"0\n\037WechatOauth2SignInStateRespon"
    "se\022\r\n\005state\030\001 \001(\t\"\215\001\n\034WechatOauth2SignIn"
    "UrlRequest\022\016\n\006app_id\030\001 \001(\t\022\024\n\014redirect_u"
    "ri\030\002 \001(\t\022G\n\010language\030\003 \001(\01625.palm.orchid"
    ".v1.WechatOauth2QrConnectRequest.Languag"
    "e\"\226\001\n\025WechatMiniProgramUser\022\016\n\006app_id\030\013 "
    "\001(\t\022\017\n\007open_id\030\014 \001(\t\022\020\n\010union_id\030\r \001(\t\022\025"
    "\n\010nickname\030\025 \001(\tH\000\210\001\001\022\027\n\navatar_url\030\026 \001("
    "\tH\001\210\001\001B\013\n\t_nicknameB\r\n\013_avatar_url\"K\n\025At"
    "tachmentShowRequest\022\n\n\002id\030\001 \001(\005\022&\n\003ttl\030\002"
    " \001(\0132\031.google.protobuf.Duration\"_\n\026Attac"
    "hmentShowResponse\0228\n\004item\030\001 \001(\0132*.palm.a"
    "uth.v1.AttachmentIndexResponse.Item\022\013\n\003u"
    "rl\030\002 \001(\t\"\311\002\n\027AttachmentIndexResponse\022+\n\n"
    "pagination\030\001 \001(\0132\027.palm.nut.v1.Paginatio"
    "n\0229\n\005items\030\013 \003(\0132*.palm.auth.v1.Attachme"
    "ntIndexResponse.Item\032\305\001\n\004Item\022\n\n\002id\030\001 \001("
    "\005\022\016\n\006bucket\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\r\n\005title"
    "\030\004 \001(\t\022\014\n\004size\030\005 \001(\003\022\024\n\014content_type\030\006 \001"
    "(\t\0220\n\006status\030\007 \001(\0162 .palm.nut.v1.MediaCo"
    "ntent.Status\022.\n\nupdated_at\030\013 \001(\0132\032.googl"
    "e.protobuf.Timestamp\"#\n\023LocaleByLangRequ"
    "est\022\014\n\004lang\030\001 \001(\t\"K\n\022LocaleListResponse\022"
    "5\n\005items\030\001 \003(\0132&.palm.auth.v1.LocaleInde"
    "xResponse.Item\"\352\001\n\023LocaleIndexResponse\0225"
    "\n\005items\030\001 \003(\0132&.palm.auth.v1.LocaleIndex"
    "Response.Item\022+\n\npagination\030\t \001(\0132\027.palm"
    ".nut.v1.Pagination\032o\n\004Item\022\n\n\002id\030\001 \001(\005\022\014"
    "\n\004lang\030\002 \001(\t\022\014\n\004code\030\003 \001(\t\022\017\n\007message\030\004 "
    "\001(\t\022.\n\nupdated_at\030\t \001(\0132\032.google.protobu"
    "f.Timestamp\"#\n\023LocaleByCodeRequest\022\014\n\004co"
    "de\030\001 \001(\t\"8\n\032LocaleByLangAndCodeRequest\022\014"
    "\n\004lang\030\001 \001(\t\022\014\n\004code\030\002 \001(\t\"B\n\023LocaleCrea"
    "teRequest\022\014\n\004lang\030\001 \001(\t\022\014\n\004code\030\002 \001(\t\022\017\n"
    "\007message\030\003 \001(\t\"2\n\023LocaleUpdateRequest\022\n\n"
    "\002id\030\001 \001(\005\022\017\n\007message\030\002 \001(\t2\215\014\n\004User\022M\n\006S"
    "ignIn\022\037.palm.auth.v1.UserSignInRequest\032 "
    ".palm.auth.v1.UserSignInResponse\"\000\022C\n\006Si"
    "gnUp\022\037.palm.auth.v1.UserSignUpRequest\032\026."
    "google.protobuf.Empty\"\000\022J\n\016ConfirmByEmai"
    "l\022\036.palm.auth.v1.UserQueryRequest\032\026.goog"
    "le.protobuf.Empty\"\000\022J\n\016ConfirmByToken\022\036."
    "palm.auth.v1.UserTokenRequest\032\026.google.p"
    "rotobuf.Empty\"\000\022I\n\rUnlockByEmail\022\036.palm."
    "auth.v1.UserQueryRequest\032\026.google.protob"
    "uf.Empty\"\000\022I\n\rUnlockByToken\022\036.palm.auth."
    "v1.UserTokenRequest\032\026.google.protobuf.Em"
    "pty\"\000\022J\n\016ForgotPassword\022\036.palm.auth.v1.U"
    "serQueryRequest\032\026.google.protobuf.Empty\""
    "\000\022Q\n\rResetPassword\022&.palm.auth.v1.UserRe"
    "setPasswordRequest\032\026.google.protobuf.Emp"
    "ty\"\000\022H\n\007Refresh\022\031.google.protobuf.Durati"
    "on\032 .palm.auth.v1.UserSignInResponse\"\000\022<"
    "\n\004Logs\022\022.palm.nut.v1.Pager\032\036.palm.auth.v"
    "1.UserLogsResponse\"\000\022K\n\nSetProfile\022#.pal"
    "m.auth.v1.UserSetProfileRequest\032\026.google"
    ".protobuf.Empty\"\000\022S\n\016ChangePassword\022\'.pa"
    "lm.auth.v1.UserChangePasswordRequest\032\026.g"
    "oogle.protobuf.Empty\"\000\022;\n\007SignOut\022\026.goog"
    "le.protobuf.Empty\032\026.google.protobuf.Empt"
    "y\"\000\022>\n\005Index\022\022.palm.nut.v1.Pager\032\037.palm."
    "auth.v1.UserIndexResponse\"\000\022F\n\004Show\022\026.pa"
    "lm.nut.v1.IdRequest\032$.palm.auth.v1.UserI"
    "ndexResponse.Item\"\000\022;\n\007Disable\022\026.palm.nu"
    "t.v1.IdRequest\032\026.google.protobuf.Empty\"\000"
    "\022:\n\006Enable\022\026.palm.nut.v1.IdRequest\032\026.goo"
    "gle.protobuf.Empty\"\000\0228\n\004Lock\022\026.palm.nut."
    "v1.IdRequest\032\026.google.protobuf.Empty\"\000\022:"
    "\n\006Unlock\022\026.palm.nut.v1.IdRequest\032\026.googl"
    "e.protobuf.Empty\"\000\022;\n\007Confirm\022\026.palm.nut"
    ".v1.IdRequest\032\026.google.protobuf.Empty\"\000\022"
    ":\n\006Delete\022\026.palm.nut.v1.IdRequest\032\026.goog"
    "le.protobuf.Empty\"\000\022M\n\013SetPassword\022$.pal"
    "m.auth.v1.UserSetPasswordRequest\032\026.googl"
    "e.protobuf.Empty\"\0002\267\001\n\006Google\022Z\n\tSignInU"
    "rl\022$.palm.auth.v1.GoogleSignInUrlRequest"
    "\032%.palm.auth.v1.GoogleSignInUrlResponse\""
    "\000\022Q\n\006SignIn\022#.palm.auth.v1.SignInByGoogl"
    "eRequest\032 .palm.auth.v1.UserSignInRespon"
    "se\"\0002\325\014\n\006Wechat\022\\\n\021Oauth2SignInState\022\026.g"
    "oogle.protobuf.Empty\032-.palm.auth.v1.Wech"
    "atOauth2SignInStateResponse\"\000\022n\n\017Oauth2S"
    "ignInUrl\022*.palm.auth.v1.WechatOauth2Sign"
    "InUrlRequest\032-.palm.orchid.v1.WechatOaut"
    "h2QrConnectResponse\"\000\022_\n\016SignInByOauth2\022"
    ").palm.auth.v1.SignInByWechatOauth2Reque"
    "st\032 .palm.auth.v1.UserSignInResponse\"\000\022T"
    "\n\rAllOauth2User\022\026.google.protobuf.Empty\032"
    ").palm.auth.v1.WechatAllOauth2UserRespon"
    "se\"\000\022E\n\021DestroyOauth2User\022\026.palm.nut.v1."
    "IdRequest\032\026.google.protobuf.Empty\"\000\022W\n\022B"
    "indOauth2UserById\022\'.palm.auth.v1.WechatU"
    "serBindByIdRequest\032\026.google.protobuf.Emp"
    "ty\"\000\022a\n\027BindOauth2UserByAccount\022,.palm.a"
    "uth.v1.WechatUserBindByAccountRequest\032\026."
    "google.protobuf.Empty\"\000\022]\n\021GetOauth2User"
    "ById\022\026.palm.nut.v1.IdRequest\032..palm.auth"
    ".v1.WechatAllOauth2UserResponse.Item\"\000\022w"
    "\n\025GetOauth2UserByOpenId\022,.palm.auth.v1.W"
    "echatUserQueryByOpenIdRequest\032..palm.aut"
    "h.v1.WechatAllOauth2UserResponse.Item\"\000\022"
    "t\n\026GetOauth2UserByUnionId\022-.palm.auth.v1"
    ".WechatUserQueryByUnionIdRequest\032).palm."
    "auth.v1.WechatAllOauth2UserResponse\"\000\022^\n"
    "\022AllMiniProgramUser\022\026.google.protobuf.Em"
    "pty\032..palm.auth.v1.WechatAllMiniProgramU"
    "serResponse\"\000\022J\n\026DestroyMiniProgramUser\022"
    "\026.palm.nut.v1.IdRequest\032\026.google.protobu"
    "f.Empty\"\000\022\\\n\027BindMiniProgramUserById\022\'.p"
    "alm.auth.v1.WechatUserBindByIdRequest\032\026."
    "google.protobuf.Empty\"\000\022g\n\026GetMiniProgra"
    "mUserById\022\026.palm.nut.v1.IdRequest\0323.palm"
    ".auth.v1.WechatAllMiniProgramUserRespons"
    "e.Item\"\000\022\201\001\n\032GetMiniProgramUserByOpenId\022"
    ",.palm.auth.v1.WechatUserQueryByOpenIdRe"
    "quest\0323.palm.auth.v1.WechatAllMiniProgra"
    "mUserResponse.Item\"\000\022~\n\033GetMiniProgramUs"
    "erByUnionId\022-.palm.auth.v1.WechatUserQue"
    "ryByUnionIdRequest\032..palm.auth.v1.Wechat"
    "AllMiniProgramUserResponse\"\0002\344\001\n\nAttachm"
    "ent\022D\n\005Index\022\022.palm.nut.v1.Pager\032%.palm."
    "auth.v1.AttachmentIndexResponse\"\000\022;\n\007Des"
    "troy\022\026.palm.nut.v1.IdRequest\032\026.google.pr"
    "otobuf.Empty\"\000\022S\n\004Show\022#.palm.auth.v1.At"
    "tachmentShowRequest\032$.palm.auth.v1.Attac"
    "hmentShowResponse\"\0002\346\004\n\006Locale\022E\n\006Create"
    "\022!.palm.auth.v1.LocaleCreateRequest\032\026.go"
    "ogle.protobuf.Empty\"\000\022E\n\006Update\022!.palm.a"
    "uth.v1.LocaleUpdateRequest\032\026.google.prot"
    "obuf.Empty\"\000\022c\n\rByLangAndCode\022(.palm.aut"
    "h.v1.LocaleByLangAndCodeRequest\032&.palm.a"
    "uth.v1.LocaleIndexResponse.Item\"\000\022H\n\004ByI"
    "d\022\026.palm.nut.v1.IdRequest\032&.palm.auth.v1"
    ".LocaleIndexResponse.Item\"\000\022O\n\006ByLang\022!."
    "palm.auth.v1.LocaleByLangRequest\032 .palm."
    "auth.v1.LocaleListResponse\"\000\022O\n\006ByCode\022!"
    ".palm.auth.v1.LocaleByCodeRequest\032 .palm"
    ".auth.v1.LocaleListResponse\"\000\022@\n\005Index\022\022"
    ".palm.nut.v1.Pager\032!.palm.auth.v1.Locale"
    "IndexResponse\"\000\022;\n\007Destroy\022\026.palm.nut.v1"
    ".IdRequest\032\026.google.protobuf.Empty\"\000B.\n*"
    "com.github.saturn_xiv.palm.plugins.auth."
    "v1P\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_auth_2eproto_deps[6] =
    {
        &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_nut_2eproto,
        &::descriptor_table_orchid_2eproto,
        &::descriptor_table_rbac_2eproto,
};
static ::absl::once_flag descriptor_table_auth_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_auth_2eproto = {
    false,
    false,
    9652,
    descriptor_table_protodef_auth_2eproto,
    "auth.proto",
    &descriptor_table_auth_2eproto_once,
    descriptor_table_auth_2eproto_deps,
    6,
    43,
    schemas,
    file_default_instances,
    TableStruct_auth_2eproto::offsets,
    file_level_metadata_auth_2eproto,
    file_level_enum_descriptors_auth_2eproto,
    file_level_service_descriptors_auth_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_auth_2eproto_getter() {
  return &descriptor_table_auth_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_auth_2eproto(&descriptor_table_auth_2eproto);
namespace palm {
namespace auth {
namespace v1 {
const ::google::protobuf::EnumDescriptor* UserLogsResponse_Item_Level_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_auth_2eproto);
  return file_level_enum_descriptors_auth_2eproto[0];
}
bool UserLogsResponse_Item_Level_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr UserLogsResponse_Item_Level UserLogsResponse_Item::DEBUG;
constexpr UserLogsResponse_Item_Level UserLogsResponse_Item::INFO;
constexpr UserLogsResponse_Item_Level UserLogsResponse_Item::WARNING;
constexpr UserLogsResponse_Item_Level UserLogsResponse_Item::ERROR;
constexpr UserLogsResponse_Item_Level UserLogsResponse_Item::PANIC;
constexpr UserLogsResponse_Item_Level UserLogsResponse_Item::Level_MIN;
constexpr UserLogsResponse_Item_Level UserLogsResponse_Item::Level_MAX;
constexpr int UserLogsResponse_Item::Level_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class UserDetail::_Internal {
 public:
};

UserDetail::UserDetail(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.UserDetail)
}
UserDetail::UserDetail(const UserDetail& from) : ::google::protobuf::Message() {
  UserDetail* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){},
      decltype(_impl_.real_name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), _this->GetArenaForAllocation());
  }
  _impl_.real_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.real_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_real_name().empty()) {
    _this->_impl_.real_name_.Set(from._internal_real_name(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.UserDetail)
}
inline void UserDetail::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){},
      decltype(_impl_.real_name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.real_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.real_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
UserDetail::~UserDetail() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.UserDetail)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserDetail::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.real_name_.Destroy();
}
void UserDetail::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UserDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.UserDetail)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.real_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserDetail::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> UserDetail::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserDetail_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string real_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UserDetail, _impl_.real_name_)}},
    // string nickname = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserDetail, _impl_.nickname_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string nickname = 1;
    {PROTOBUF_FIELD_OFFSET(UserDetail, _impl_.nickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string real_name = 2;
    {PROTOBUF_FIELD_OFFSET(UserDetail, _impl_.real_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\10\11\0\0\0\0\0"
    "palm.auth.v1.UserDetail"
    "nickname"
    "real_name"
  }},
};

::uint8_t* UserDetail::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.UserDetail)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string nickname = 1;
  if (!this->_internal_nickname().empty()) {
    const std::string& _s = this->_internal_nickname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserDetail.nickname");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string real_name = 2;
  if (!this->_internal_real_name().empty()) {
    const std::string& _s = this->_internal_real_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserDetail.real_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.UserDetail)
  return target;
}

::size_t UserDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.UserDetail)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 1;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_nickname());
  }

  // string real_name = 2;
  if (!this->_internal_real_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_real_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserDetail::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UserDetail::MergeImpl
};
const ::google::protobuf::Message::ClassData*UserDetail::GetClassData() const { return &_class_data_; }


void UserDetail::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserDetail*>(&to_msg);
  auto& from = static_cast<const UserDetail&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.UserDetail)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_real_name().empty()) {
    _this->_internal_set_real_name(from._internal_real_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserDetail::CopyFrom(const UserDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.UserDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserDetail::IsInitialized() const {
  return true;
}

void UserDetail::InternalSwap(UserDetail* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, lhs_arena,
                                       &other->_impl_.nickname_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.real_name_, lhs_arena,
                                       &other->_impl_.real_name_, rhs_arena);
}

::google::protobuf::Metadata UserDetail::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[0]);
}
// ===================================================================

class Oauth2State::_Internal {
 public:
  using HasBits = decltype(std::declval<Oauth2State>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Oauth2State, _impl_._has_bits_);
  static void set_has_user(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Oauth2State::Oauth2State(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.Oauth2State)
}
Oauth2State::Oauth2State(const Oauth2State& from) : ::google::protobuf::Message() {
  Oauth2State* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.goto__){},
      decltype(_impl_.host_){},
      decltype(_impl_.user_){},
      decltype(_impl_.id_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.goto__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.goto__.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_goto_().empty()) {
    _this->_impl_.goto__.Set(from._internal_goto_(), _this->GetArenaForAllocation());
  }
  _impl_.host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.host_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_host().empty()) {
    _this->_impl_.host_.Set(from._internal_host(), _this->GetArenaForAllocation());
  }
  _impl_.user_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.user_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.user_.Set(from._internal_user(), _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.Oauth2State)
}
inline void Oauth2State::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.goto__){},
      decltype(_impl_.host_){},
      decltype(_impl_.user_){},
      decltype(_impl_.id_){},
  };
  _impl_.goto__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.goto__.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.host_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.user_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Oauth2State::~Oauth2State() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.Oauth2State)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Oauth2State::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.goto__.Destroy();
  _impl_.host_.Destroy();
  _impl_.user_.Destroy();
  _impl_.id_.Destroy();
}
void Oauth2State::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Oauth2State::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.Oauth2State)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.goto__.ClearToEmpty();
  _impl_.host_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.user_.ClearNonDefaultToEmpty();
  }
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Oauth2State::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 47, 2> Oauth2State::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Oauth2State, _impl_._has_bits_),
    0, // no _extensions_
    9, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967032,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Oauth2State_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string goto = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Oauth2State, _impl_.goto__)}},
    // string host = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Oauth2State, _impl_.host_)}},
    // optional string user = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Oauth2State, _impl_.user_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string goto = 1;
    {PROTOBUF_FIELD_OFFSET(Oauth2State, _impl_.goto__), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string host = 2;
    {PROTOBUF_FIELD_OFFSET(Oauth2State, _impl_.host_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string user = 3;
    {PROTOBUF_FIELD_OFFSET(Oauth2State, _impl_.user_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string id = 9;
    {PROTOBUF_FIELD_OFFSET(Oauth2State, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\4\4\4\2\0\0\0"
    "palm.auth.v1.Oauth2State"
    "goto"
    "host"
    "user"
    "id"
  }},
};

::uint8_t* Oauth2State::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.Oauth2State)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string goto = 1;
  if (!this->_internal_goto_().empty()) {
    const std::string& _s = this->_internal_goto_();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.Oauth2State.goto");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string host = 2;
  if (!this->_internal_host().empty()) {
    const std::string& _s = this->_internal_host();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.Oauth2State.host");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string user = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_user();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.Oauth2State.user");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string id = 9;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.Oauth2State.id");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.Oauth2State)
  return target;
}

::size_t Oauth2State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.Oauth2State)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string goto = 1;
  if (!this->_internal_goto_().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_goto_());
  }

  // string host = 2;
  if (!this->_internal_host().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_host());
  }

  // optional string user = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user());
  }

  // string id = 9;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Oauth2State::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Oauth2State::MergeImpl
};
const ::google::protobuf::Message::ClassData*Oauth2State::GetClassData() const { return &_class_data_; }


void Oauth2State::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Oauth2State*>(&to_msg);
  auto& from = static_cast<const Oauth2State&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.Oauth2State)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_goto_().empty()) {
    _this->_internal_set_goto_(from._internal_goto_());
  }
  if (!from._internal_host().empty()) {
    _this->_internal_set_host(from._internal_host());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_user(from._internal_user());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Oauth2State::CopyFrom(const Oauth2State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.Oauth2State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Oauth2State::IsInitialized() const {
  return true;
}

void Oauth2State::InternalSwap(Oauth2State* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.goto__, lhs_arena,
                                       &other->_impl_.goto__, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.host_, lhs_arena,
                                       &other->_impl_.host_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_, lhs_arena,
                                       &other->_impl_.user_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
}

::google::protobuf::Metadata Oauth2State::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[1]);
}
// ===================================================================

class UserSignInRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UserSignInRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserSignInRequest, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserSignInRequest, _impl_._oneof_case_);
  static const ::google::protobuf::Duration& ttl(const UserSignInRequest* msg);
  static void set_has_ttl(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Duration& UserSignInRequest::_Internal::ttl(const UserSignInRequest* msg) {
  return *msg->_impl_.ttl_;
}
void UserSignInRequest::clear_ttl() {
  if (_impl_.ttl_ != nullptr) _impl_.ttl_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
UserSignInRequest::UserSignInRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.UserSignInRequest)
}
UserSignInRequest::UserSignInRequest(const UserSignInRequest& from) : ::google::protobuf::Message() {
  UserSignInRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.password_){},
      decltype(_impl_.ttl_){nullptr},
      decltype(_impl_.user_){},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.password_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.ttl_ = new ::google::protobuf::Duration(*from._impl_.ttl_);
  }
  clear_has_user();
  switch (from.user_case()) {
    case kNickname: {
      _this->_internal_set_nickname(from._internal_nickname());
      break;
    }
    case kEmail: {
      _this->_internal_set_email(from._internal_email());
      break;
    }
    case USER_NOT_SET: {
      break;
    }
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.UserSignInRequest)
}
inline void UserSignInRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.password_){},
      decltype(_impl_.ttl_){nullptr},
      decltype(_impl_.user_){},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.password_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_user();
}
UserSignInRequest::~UserSignInRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.UserSignInRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserSignInRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.password_.Destroy();
  if (this != internal_default_instance()) delete _impl_.ttl_;
  if (has_user()) {
    clear_user();
  }
}
void UserSignInRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserSignInRequest::clear_user() {
// @@protoc_insertion_point(one_of_clear_start:palm.auth.v1.UserSignInRequest)
  switch (user_case()) {
    case kNickname: {
      _impl_.user_.nickname_.Destroy();
      break;
    }
    case kEmail: {
      _impl_.user_.email_.Destroy();
      break;
    }
    case USER_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = USER_NOT_SET;
}


PROTOBUF_NOINLINE void UserSignInRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.UserSignInRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.password_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ttl_ != nullptr);
    _impl_.ttl_->Clear();
  }
  clear_user();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserSignInRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 60, 2> UserSignInRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserSignInRequest, _impl_._has_bits_),
    0, // no _extensions_
    11, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966012,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UserSignInRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string password = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(UserSignInRequest, _impl_.password_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Duration ttl = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 0, 0, PROTOBUF_FIELD_OFFSET(UserSignInRequest, _impl_.ttl_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string nickname = 1;
    {PROTOBUF_FIELD_OFFSET(UserSignInRequest, _impl_.user_.nickname_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string email = 2;
    {PROTOBUF_FIELD_OFFSET(UserSignInRequest, _impl_.user_.email_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 9;
    {PROTOBUF_FIELD_OFFSET(UserSignInRequest, _impl_.password_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Duration ttl = 11;
    {PROTOBUF_FIELD_OFFSET(UserSignInRequest, _impl_.ttl_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }}, {{
    "\36\10\5\10\0\0\0\0"
    "palm.auth.v1.UserSignInRequest"
    "nickname"
    "email"
    "password"
  }},
};

::uint8_t* UserSignInRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.UserSignInRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (user_case()) {
    case kNickname: {
      const std::string& _s = this->_internal_nickname();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSignInRequest.nickname");
      target = stream->WriteStringMaybeAliased(1, _s, target);
      break;
    }
    case kEmail: {
      const std::string& _s = this->_internal_email();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSignInRequest.email");
      target = stream->WriteStringMaybeAliased(2, _s, target);
      break;
    }
    default:
      break;
  }
  // string password = 9;
  if (!this->_internal_password().empty()) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSignInRequest.password");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Duration ttl = 11;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::ttl(this),
        _Internal::ttl(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.UserSignInRequest)
  return target;
}

::size_t UserSignInRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.UserSignInRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string password = 9;
  if (!this->_internal_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  // .google.protobuf.Duration ttl = 11;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.ttl_);
  }

  switch (user_case()) {
    // string nickname = 1;
    case kNickname: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_nickname());
      break;
    }
    // string email = 2;
    case kEmail: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_email());
      break;
    }
    case USER_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserSignInRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UserSignInRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*UserSignInRequest::GetClassData() const { return &_class_data_; }


void UserSignInRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserSignInRequest*>(&to_msg);
  auto& from = static_cast<const UserSignInRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.UserSignInRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_ttl()->::google::protobuf::Duration::MergeFrom(
        from._internal_ttl());
  }
  switch (from.user_case()) {
    case kNickname: {
      _this->_internal_set_nickname(from._internal_nickname());
      break;
    }
    case kEmail: {
      _this->_internal_set_email(from._internal_email());
      break;
    }
    case USER_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserSignInRequest::CopyFrom(const UserSignInRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.UserSignInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserSignInRequest::IsInitialized() const {
  return true;
}

void UserSignInRequest::InternalSwap(UserSignInRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, lhs_arena,
                                       &other->_impl_.password_, rhs_arena);
  swap(_impl_.ttl_, other->_impl_.ttl_);
  swap(_impl_.user_, other->_impl_.user_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata UserSignInRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[2]);
}
// ===================================================================

class UserQueryRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::palm::auth::v1::UserQueryRequest, _impl_._oneof_case_);
};

UserQueryRequest::UserQueryRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.UserQueryRequest)
}
UserQueryRequest::UserQueryRequest(const UserQueryRequest& from) : ::google::protobuf::Message() {
  UserQueryRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.home_){},
      decltype(_impl_.user_){},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.home_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.home_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_home().empty()) {
    _this->_impl_.home_.Set(from._internal_home(), _this->GetArenaForAllocation());
  }
  clear_has_user();
  switch (from.user_case()) {
    case kNickname: {
      _this->_internal_set_nickname(from._internal_nickname());
      break;
    }
    case kEmail: {
      _this->_internal_set_email(from._internal_email());
      break;
    }
    case USER_NOT_SET: {
      break;
    }
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.UserQueryRequest)
}
inline void UserQueryRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.home_){},
      decltype(_impl_.user_){},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _impl_.home_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.home_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_user();
}
UserQueryRequest::~UserQueryRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.UserQueryRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserQueryRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.home_.Destroy();
  if (has_user()) {
    clear_user();
  }
}
void UserQueryRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserQueryRequest::clear_user() {
// @@protoc_insertion_point(one_of_clear_start:palm.auth.v1.UserQueryRequest)
  switch (user_case()) {
    case kNickname: {
      _impl_.user_.nickname_.Destroy();
      break;
    }
    case kEmail: {
      _impl_.user_.email_.Destroy();
      break;
    }
    case USER_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = USER_NOT_SET;
}


PROTOBUF_NOINLINE void UserQueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.UserQueryRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.home_.ClearToEmpty();
  clear_user();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserQueryRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 0, 55, 2> UserQueryRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967036,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserQueryRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string home = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(UserQueryRequest, _impl_.home_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string nickname = 1;
    {PROTOBUF_FIELD_OFFSET(UserQueryRequest, _impl_.user_.nickname_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string email = 2;
    {PROTOBUF_FIELD_OFFSET(UserQueryRequest, _impl_.user_.email_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string home = 9;
    {PROTOBUF_FIELD_OFFSET(UserQueryRequest, _impl_.home_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\10\5\4\0\0\0\0"
    "palm.auth.v1.UserQueryRequest"
    "nickname"
    "email"
    "home"
  }},
};

::uint8_t* UserQueryRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.UserQueryRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (user_case()) {
    case kNickname: {
      const std::string& _s = this->_internal_nickname();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserQueryRequest.nickname");
      target = stream->WriteStringMaybeAliased(1, _s, target);
      break;
    }
    case kEmail: {
      const std::string& _s = this->_internal_email();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserQueryRequest.email");
      target = stream->WriteStringMaybeAliased(2, _s, target);
      break;
    }
    default:
      break;
  }
  // string home = 9;
  if (!this->_internal_home().empty()) {
    const std::string& _s = this->_internal_home();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserQueryRequest.home");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.UserQueryRequest)
  return target;
}

::size_t UserQueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.UserQueryRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string home = 9;
  if (!this->_internal_home().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_home());
  }

  switch (user_case()) {
    // string nickname = 1;
    case kNickname: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_nickname());
      break;
    }
    // string email = 2;
    case kEmail: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_email());
      break;
    }
    case USER_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserQueryRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UserQueryRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*UserQueryRequest::GetClassData() const { return &_class_data_; }


void UserQueryRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserQueryRequest*>(&to_msg);
  auto& from = static_cast<const UserQueryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.UserQueryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_home().empty()) {
    _this->_internal_set_home(from._internal_home());
  }
  switch (from.user_case()) {
    case kNickname: {
      _this->_internal_set_nickname(from._internal_nickname());
      break;
    }
    case kEmail: {
      _this->_internal_set_email(from._internal_email());
      break;
    }
    case USER_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserQueryRequest::CopyFrom(const UserQueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.UserQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserQueryRequest::IsInitialized() const {
  return true;
}

void UserQueryRequest::InternalSwap(UserQueryRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.home_, lhs_arena,
                                       &other->_impl_.home_, rhs_arena);
  swap(_impl_.user_, other->_impl_.user_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata UserQueryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[3]);
}
// ===================================================================

class UserSignInResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<UserSignInResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_._has_bits_);
  static const ::palm::auth::v1::UserIndexResponse_Item& user(const UserSignInResponse* msg);
  static void set_has_user(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::auth::v1::UserIndexResponse_Item& UserSignInResponse::_Internal::user(const UserSignInResponse* msg) {
  return *msg->_impl_.user_;
}
void UserSignInResponse::clear_permissions() {
  _internal_mutable_permissions()->Clear();
}
UserSignInResponse::UserSignInResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.UserSignInResponse)
}
UserSignInResponse::UserSignInResponse(const UserSignInResponse& from) : ::google::protobuf::Message() {
  UserSignInResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.roles_){from._impl_.roles_},
      decltype(_impl_.permissions_){from._impl_.permissions_},
      decltype(_impl_.token_){},
      decltype(_impl_.provider_type_){},
      decltype(_impl_.user_){nullptr},
      decltype(_impl_.has_google_){},
      decltype(_impl_.has_wechat_mini_program_){},
      decltype(_impl_.has_wechat_oauth2_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    _this->_impl_.token_.Set(from._internal_token(), _this->GetArenaForAllocation());
  }
  _impl_.provider_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.provider_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_provider_type().empty()) {
    _this->_impl_.provider_type_.Set(from._internal_provider_type(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.user_ = new ::palm::auth::v1::UserIndexResponse_Item(*from._impl_.user_);
  }
  ::memcpy(&_impl_.has_google_, &from._impl_.has_google_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.has_wechat_oauth2_) -
    reinterpret_cast<char*>(&_impl_.has_google_)) + sizeof(_impl_.has_wechat_oauth2_));

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.UserSignInResponse)
}
inline void UserSignInResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.roles_){arena},
      decltype(_impl_.permissions_){arena},
      decltype(_impl_.token_){},
      decltype(_impl_.provider_type_){},
      decltype(_impl_.user_){nullptr},
      decltype(_impl_.has_google_){false},
      decltype(_impl_.has_wechat_mini_program_){false},
      decltype(_impl_.has_wechat_oauth2_){false},
  };
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.provider_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.provider_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
UserSignInResponse::~UserSignInResponse() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.UserSignInResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserSignInResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_roles()->~RepeatedPtrField();
  _impl_.permissions_.~RepeatedPtrField();
  _impl_.token_.Destroy();
  _impl_.provider_type_.Destroy();
  if (this != internal_default_instance()) delete _impl_.user_;
}
void UserSignInResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UserSignInResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.UserSignInResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_roles()->Clear();
  _internal_mutable_permissions()->Clear();
  _impl_.token_.ClearToEmpty();
  _impl_.provider_type_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.user_ != nullptr);
    _impl_.user_->Clear();
  }
  ::memset(&_impl_.has_google_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.has_wechat_oauth2_) -
      reinterpret_cast<char*>(&_impl_.has_google_)) + sizeof(_impl_.has_wechat_oauth2_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserSignInResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 2, 71, 2> UserSignInResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_._has_bits_),
    0, // no _extensions_
    23, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4287623932,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UserSignInResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string token = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.token_)}},
    // .palm.auth.v1.UserIndexResponse.Item user = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.user_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool has_google = 21;
    {::_pbi::TcParser::FastV8S2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.has_google_)}},
    // bool has_wechat_mini_program = 22;
    {::_pbi::TcParser::FastV8S2,
     {432, 63, 0, PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.has_wechat_mini_program_)}},
    // bool has_wechat_oauth2 = 23;
    {::_pbi::TcParser::FastV8S2,
     {440, 63, 0, PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.has_wechat_oauth2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string provider_type = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.provider_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string roles = 11;
    {::_pbi::TcParser::FastUR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.roles_)}},
    // repeated .palm.rbac.v1.PermissionsResponse.Item permissions = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 1, PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.permissions_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string token = 1;
    {PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.token_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .palm.auth.v1.UserIndexResponse.Item user = 2;
    {PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.user_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string provider_type = 9;
    {PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.provider_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string roles = 11;
    {PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.roles_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .palm.rbac.v1.PermissionsResponse.Item permissions = 12;
    {PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.permissions_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool has_google = 21;
    {PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.has_google_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool has_wechat_mini_program = 22;
    {PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.has_wechat_mini_program_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool has_wechat_oauth2 = 23;
    {PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.has_wechat_oauth2_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::auth::v1::UserIndexResponse_Item>()},
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PermissionsResponse_Item>()},
  }}, {{
    "\37\5\0\15\5\0\0\0\0\0\0\0\0\0\0\0"
    "palm.auth.v1.UserSignInResponse"
    "token"
    "provider_type"
    "roles"
  }},
};

::uint8_t* UserSignInResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.UserSignInResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    const std::string& _s = this->_internal_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSignInResponse.token");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.auth.v1.UserIndexResponse.Item user = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::user(this),
        _Internal::user(this).GetCachedSize(), target, stream);
  }

  // string provider_type = 9;
  if (!this->_internal_provider_type().empty()) {
    const std::string& _s = this->_internal_provider_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSignInResponse.provider_type");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // repeated string roles = 11;
  for (int i = 0, n = this->_internal_roles_size(); i < n; ++i) {
    const auto& s = this->_internal_roles().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSignInResponse.roles");
    target = stream->WriteString(11, s, target);
  }

  // repeated .palm.rbac.v1.PermissionsResponse.Item permissions = 12;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_permissions_size()); i < n; i++) {
    const auto& repfield = this->_internal_permissions().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(12, repfield, repfield.GetCachedSize(), target, stream);
  }

  // bool has_google = 21;
  if (this->_internal_has_google() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        21, this->_internal_has_google(), target);
  }

  // bool has_wechat_mini_program = 22;
  if (this->_internal_has_wechat_mini_program() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        22, this->_internal_has_wechat_mini_program(), target);
  }

  // bool has_wechat_oauth2 = 23;
  if (this->_internal_has_wechat_oauth2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        23, this->_internal_has_wechat_oauth2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.UserSignInResponse)
  return target;
}

::size_t UserSignInResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.UserSignInResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string roles = 11;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_roles().size());
  for (int i = 0, n = _internal_roles().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_roles().Get(i));
  }
  // repeated .palm.rbac.v1.PermissionsResponse.Item permissions = 12;
  total_size += 1UL * this->_internal_permissions_size();
  for (const auto& msg : this->_internal_permissions()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string token = 1;
  if (!this->_internal_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_token());
  }

  // string provider_type = 9;
  if (!this->_internal_provider_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_provider_type());
  }

  // .palm.auth.v1.UserIndexResponse.Item user = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.user_);
  }

  // bool has_google = 21;
  if (this->_internal_has_google() != 0) {
    total_size += 3;
  }

  // bool has_wechat_mini_program = 22;
  if (this->_internal_has_wechat_mini_program() != 0) {
    total_size += 3;
  }

  // bool has_wechat_oauth2 = 23;
  if (this->_internal_has_wechat_oauth2() != 0) {
    total_size += 3;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserSignInResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UserSignInResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*UserSignInResponse::GetClassData() const { return &_class_data_; }


void UserSignInResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserSignInResponse*>(&to_msg);
  auto& from = static_cast<const UserSignInResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.UserSignInResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_roles()->MergeFrom(from._internal_roles());
  _this->_internal_mutable_permissions()->MergeFrom(from._internal_permissions());
  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (!from._internal_provider_type().empty()) {
    _this->_internal_set_provider_type(from._internal_provider_type());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_user()->::palm::auth::v1::UserIndexResponse_Item::MergeFrom(
        from._internal_user());
  }
  if (from._internal_has_google() != 0) {
    _this->_internal_set_has_google(from._internal_has_google());
  }
  if (from._internal_has_wechat_mini_program() != 0) {
    _this->_internal_set_has_wechat_mini_program(from._internal_has_wechat_mini_program());
  }
  if (from._internal_has_wechat_oauth2() != 0) {
    _this->_internal_set_has_wechat_oauth2(from._internal_has_wechat_oauth2());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserSignInResponse::CopyFrom(const UserSignInResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.UserSignInResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserSignInResponse::IsInitialized() const {
  return true;
}

void UserSignInResponse::InternalSwap(UserSignInResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.roles_.InternalSwap(&other->_impl_.roles_);
  _impl_.permissions_.InternalSwap(&other->_impl_.permissions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, lhs_arena,
                                       &other->_impl_.token_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.provider_type_, lhs_arena,
                                       &other->_impl_.provider_type_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.has_wechat_oauth2_)
      + sizeof(UserSignInResponse::_impl_.has_wechat_oauth2_)
      - PROTOBUF_FIELD_OFFSET(UserSignInResponse, _impl_.user_)>(
          reinterpret_cast<char*>(&_impl_.user_),
          reinterpret_cast<char*>(&other->_impl_.user_));
}

::google::protobuf::Metadata UserSignInResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[4]);
}
// ===================================================================

class UserSignUpRequest::_Internal {
 public:
};

UserSignUpRequest::UserSignUpRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.UserSignUpRequest)
}
UserSignUpRequest::UserSignUpRequest(const UserSignUpRequest& from) : ::google::protobuf::Message() {
  UserSignUpRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.real_name_){},
      decltype(_impl_.nickname_){},
      decltype(_impl_.email_){},
      decltype(_impl_.password_){},
      decltype(_impl_.lang_){},
      decltype(_impl_.timezone_){},
      decltype(_impl_.home_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.real_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.real_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_real_name().empty()) {
    _this->_impl_.real_name_.Set(from._internal_real_name(), _this->GetArenaForAllocation());
  }
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), _this->GetArenaForAllocation());
  }
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.email_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.password_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), _this->GetArenaForAllocation());
  }
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lang().empty()) {
    _this->_impl_.lang_.Set(from._internal_lang(), _this->GetArenaForAllocation());
  }
  _impl_.timezone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.timezone_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_timezone().empty()) {
    _this->_impl_.timezone_.Set(from._internal_timezone(), _this->GetArenaForAllocation());
  }
  _impl_.home_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.home_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_home().empty()) {
    _this->_impl_.home_.Set(from._internal_home(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.UserSignUpRequest)
}
inline void UserSignUpRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.real_name_){},
      decltype(_impl_.nickname_){},
      decltype(_impl_.email_){},
      decltype(_impl_.password_){},
      decltype(_impl_.lang_){},
      decltype(_impl_.timezone_){},
      decltype(_impl_.home_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.real_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.real_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.email_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.password_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.timezone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.timezone_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.home_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.home_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
UserSignUpRequest::~UserSignUpRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.UserSignUpRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserSignUpRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.real_name_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.email_.Destroy();
  _impl_.password_.Destroy();
  _impl_.lang_.Destroy();
  _impl_.timezone_.Destroy();
  _impl_.home_.Destroy();
}
void UserSignUpRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UserSignUpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.UserSignUpRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.real_name_.ClearToEmpty();
  _impl_.nickname_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _impl_.lang_.ClearToEmpty();
  _impl_.timezone_.ClearToEmpty();
  _impl_.home_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserSignUpRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 85, 2> UserSignUpRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    21, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293915632,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserSignUpRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string real_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserSignUpRequest, _impl_.real_name_)}},
    // string nickname = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UserSignUpRequest, _impl_.nickname_)}},
    // string email = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UserSignUpRequest, _impl_.email_)}},
    // string password = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(UserSignUpRequest, _impl_.password_)}},
    // string home = 21;
    {::_pbi::TcParser::FastUS2,
     {426, 63, 0, PROTOBUF_FIELD_OFFSET(UserSignUpRequest, _impl_.home_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string real_name = 1;
    {PROTOBUF_FIELD_OFFSET(UserSignUpRequest, _impl_.real_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string nickname = 2;
    {PROTOBUF_FIELD_OFFSET(UserSignUpRequest, _impl_.nickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string email = 3;
    {PROTOBUF_FIELD_OFFSET(UserSignUpRequest, _impl_.email_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 4;
    {PROTOBUF_FIELD_OFFSET(UserSignUpRequest, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string lang = 11;
    {PROTOBUF_FIELD_OFFSET(UserSignUpRequest, _impl_.lang_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timezone = 12;
    {PROTOBUF_FIELD_OFFSET(UserSignUpRequest, _impl_.timezone_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string home = 21;
    {PROTOBUF_FIELD_OFFSET(UserSignUpRequest, _impl_.home_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\11\10\5\10\4\10\4"
    "palm.auth.v1.UserSignUpRequest"
    "real_name"
    "nickname"
    "email"
    "password"
    "lang"
    "timezone"
    "home"
  }},
};

::uint8_t* UserSignUpRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.UserSignUpRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string real_name = 1;
  if (!this->_internal_real_name().empty()) {
    const std::string& _s = this->_internal_real_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSignUpRequest.real_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    const std::string& _s = this->_internal_nickname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSignUpRequest.nickname");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string email = 3;
  if (!this->_internal_email().empty()) {
    const std::string& _s = this->_internal_email();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSignUpRequest.email");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string password = 4;
  if (!this->_internal_password().empty()) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSignUpRequest.password");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string lang = 11;
  if (!this->_internal_lang().empty()) {
    const std::string& _s = this->_internal_lang();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSignUpRequest.lang");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // string timezone = 12;
  if (!this->_internal_timezone().empty()) {
    const std::string& _s = this->_internal_timezone();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSignUpRequest.timezone");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // string home = 21;
  if (!this->_internal_home().empty()) {
    const std::string& _s = this->_internal_home();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSignUpRequest.home");
    target = stream->WriteStringMaybeAliased(21, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.UserSignUpRequest)
  return target;
}

::size_t UserSignUpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.UserSignUpRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string real_name = 1;
  if (!this->_internal_real_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_real_name());
  }

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_nickname());
  }

  // string email = 3;
  if (!this->_internal_email().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_email());
  }

  // string password = 4;
  if (!this->_internal_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  // string lang = 11;
  if (!this->_internal_lang().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_lang());
  }

  // string timezone = 12;
  if (!this->_internal_timezone().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_timezone());
  }

  // string home = 21;
  if (!this->_internal_home().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_home());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserSignUpRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UserSignUpRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*UserSignUpRequest::GetClassData() const { return &_class_data_; }


void UserSignUpRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserSignUpRequest*>(&to_msg);
  auto& from = static_cast<const UserSignUpRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.UserSignUpRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_real_name().empty()) {
    _this->_internal_set_real_name(from._internal_real_name());
  }
  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (!from._internal_lang().empty()) {
    _this->_internal_set_lang(from._internal_lang());
  }
  if (!from._internal_timezone().empty()) {
    _this->_internal_set_timezone(from._internal_timezone());
  }
  if (!from._internal_home().empty()) {
    _this->_internal_set_home(from._internal_home());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserSignUpRequest::CopyFrom(const UserSignUpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.UserSignUpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserSignUpRequest::IsInitialized() const {
  return true;
}

void UserSignUpRequest::InternalSwap(UserSignUpRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.real_name_, lhs_arena,
                                       &other->_impl_.real_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, lhs_arena,
                                       &other->_impl_.nickname_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, lhs_arena,
                                       &other->_impl_.email_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, lhs_arena,
                                       &other->_impl_.password_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lang_, lhs_arena,
                                       &other->_impl_.lang_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timezone_, lhs_arena,
                                       &other->_impl_.timezone_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.home_, lhs_arena,
                                       &other->_impl_.home_, rhs_arena);
}

::google::protobuf::Metadata UserSignUpRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[5]);
}
// ===================================================================

class UserTokenRequest::_Internal {
 public:
};

UserTokenRequest::UserTokenRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.UserTokenRequest)
}
UserTokenRequest::UserTokenRequest(const UserTokenRequest& from) : ::google::protobuf::Message() {
  UserTokenRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.payload_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.payload_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.payload_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_payload().empty()) {
    _this->_impl_.payload_.Set(from._internal_payload(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.UserTokenRequest)
}
inline void UserTokenRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.payload_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.payload_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.payload_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
UserTokenRequest::~UserTokenRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.UserTokenRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserTokenRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.payload_.Destroy();
}
void UserTokenRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UserTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.UserTokenRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payload_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserTokenRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 45, 2> UserTokenRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserTokenRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string payload = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserTokenRequest, _impl_.payload_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string payload = 1;
    {PROTOBUF_FIELD_OFFSET(UserTokenRequest, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\7\0\0\0\0\0\0"
    "palm.auth.v1.UserTokenRequest"
    "payload"
  }},
};

::uint8_t* UserTokenRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.UserTokenRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string payload = 1;
  if (!this->_internal_payload().empty()) {
    const std::string& _s = this->_internal_payload();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserTokenRequest.payload");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.UserTokenRequest)
  return target;
}

::size_t UserTokenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.UserTokenRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payload = 1;
  if (!this->_internal_payload().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_payload());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserTokenRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UserTokenRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*UserTokenRequest::GetClassData() const { return &_class_data_; }


void UserTokenRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserTokenRequest*>(&to_msg);
  auto& from = static_cast<const UserTokenRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.UserTokenRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserTokenRequest::CopyFrom(const UserTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.UserTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserTokenRequest::IsInitialized() const {
  return true;
}

void UserTokenRequest::InternalSwap(UserTokenRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, lhs_arena,
                                       &other->_impl_.payload_, rhs_arena);
}

::google::protobuf::Metadata UserTokenRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[6]);
}
// ===================================================================

class UserResetPasswordRequest::_Internal {
 public:
};

UserResetPasswordRequest::UserResetPasswordRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.UserResetPasswordRequest)
}
UserResetPasswordRequest::UserResetPasswordRequest(const UserResetPasswordRequest& from) : ::google::protobuf::Message() {
  UserResetPasswordRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){},
      decltype(_impl_.password_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    _this->_impl_.token_.Set(from._internal_token(), _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.password_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.UserResetPasswordRequest)
}
inline void UserResetPasswordRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){},
      decltype(_impl_.password_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.password_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
UserResetPasswordRequest::~UserResetPasswordRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.UserResetPasswordRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserResetPasswordRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_.Destroy();
  _impl_.password_.Destroy();
}
void UserResetPasswordRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UserResetPasswordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.UserResetPasswordRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserResetPasswordRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2> UserResetPasswordRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserResetPasswordRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UserResetPasswordRequest, _impl_.password_)}},
    // string token = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserResetPasswordRequest, _impl_.token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string token = 1;
    {PROTOBUF_FIELD_OFFSET(UserResetPasswordRequest, _impl_.token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(UserResetPasswordRequest, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\5\10\0\0\0\0\0"
    "palm.auth.v1.UserResetPasswordRequest"
    "token"
    "password"
  }},
};

::uint8_t* UserResetPasswordRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.UserResetPasswordRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    const std::string& _s = this->_internal_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserResetPasswordRequest.token");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserResetPasswordRequest.password");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.UserResetPasswordRequest)
  return target;
}

::size_t UserResetPasswordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.UserResetPasswordRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_token());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserResetPasswordRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UserResetPasswordRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*UserResetPasswordRequest::GetClassData() const { return &_class_data_; }


void UserResetPasswordRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserResetPasswordRequest*>(&to_msg);
  auto& from = static_cast<const UserResetPasswordRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.UserResetPasswordRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserResetPasswordRequest::CopyFrom(const UserResetPasswordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.UserResetPasswordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserResetPasswordRequest::IsInitialized() const {
  return true;
}

void UserResetPasswordRequest::InternalSwap(UserResetPasswordRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, lhs_arena,
                                       &other->_impl_.token_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, lhs_arena,
                                       &other->_impl_.password_, rhs_arena);
}

::google::protobuf::Metadata UserResetPasswordRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[7]);
}
// ===================================================================

class UserSetPasswordRequest::_Internal {
 public:
};

UserSetPasswordRequest::UserSetPasswordRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.UserSetPasswordRequest)
}
UserSetPasswordRequest::UserSetPasswordRequest(const UserSetPasswordRequest& from) : ::google::protobuf::Message() {
  UserSetPasswordRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.password_){},
      decltype(_impl_.user_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.password_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), _this->GetArenaForAllocation());
  }
  _this->_impl_.user_ = from._impl_.user_;

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.UserSetPasswordRequest)
}
inline void UserSetPasswordRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.password_){},
      decltype(_impl_.user_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.password_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
UserSetPasswordRequest::~UserSetPasswordRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.UserSetPasswordRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserSetPasswordRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.password_.Destroy();
}
void UserSetPasswordRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UserSetPasswordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.UserSetPasswordRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.password_.ClearToEmpty();
  _impl_.user_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserSetPasswordRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 52, 2> UserSetPasswordRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserSetPasswordRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UserSetPasswordRequest, _impl_.password_)}},
    // int32 user = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserSetPasswordRequest, _impl_.user_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UserSetPasswordRequest, _impl_.user_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 user = 1;
    {PROTOBUF_FIELD_OFFSET(UserSetPasswordRequest, _impl_.user_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(UserSetPasswordRequest, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\0\10\0\0\0\0\0"
    "palm.auth.v1.UserSetPasswordRequest"
    "password"
  }},
};

::uint8_t* UserSetPasswordRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.UserSetPasswordRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 user = 1;
  if (this->_internal_user() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_user(), target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSetPasswordRequest.password");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.UserSetPasswordRequest)
  return target;
}

::size_t UserSetPasswordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.UserSetPasswordRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  // int32 user = 1;
  if (this->_internal_user() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_user());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserSetPasswordRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UserSetPasswordRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*UserSetPasswordRequest::GetClassData() const { return &_class_data_; }


void UserSetPasswordRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserSetPasswordRequest*>(&to_msg);
  auto& from = static_cast<const UserSetPasswordRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.UserSetPasswordRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (from._internal_user() != 0) {
    _this->_internal_set_user(from._internal_user());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserSetPasswordRequest::CopyFrom(const UserSetPasswordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.UserSetPasswordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserSetPasswordRequest::IsInitialized() const {
  return true;
}

void UserSetPasswordRequest::InternalSwap(UserSetPasswordRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, lhs_arena,
                                       &other->_impl_.password_, rhs_arena);
        swap(_impl_.user_, other->_impl_.user_);
}

::google::protobuf::Metadata UserSetPasswordRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[8]);
}
// ===================================================================

class UserSetProfileRequest::_Internal {
 public:
};

UserSetProfileRequest::UserSetProfileRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.UserSetProfileRequest)
}
UserSetProfileRequest::UserSetProfileRequest(const UserSetProfileRequest& from) : ::google::protobuf::Message() {
  UserSetProfileRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.real_name_){},
      decltype(_impl_.avatar_){},
      decltype(_impl_.timezone_){},
      decltype(_impl_.lang_){},
      decltype(_impl_.wechat_){},
      decltype(_impl_.phone_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.real_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.real_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_real_name().empty()) {
    _this->_impl_.real_name_.Set(from._internal_real_name(), _this->GetArenaForAllocation());
  }
  _impl_.avatar_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.avatar_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_avatar().empty()) {
    _this->_impl_.avatar_.Set(from._internal_avatar(), _this->GetArenaForAllocation());
  }
  _impl_.timezone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.timezone_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_timezone().empty()) {
    _this->_impl_.timezone_.Set(from._internal_timezone(), _this->GetArenaForAllocation());
  }
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lang().empty()) {
    _this->_impl_.lang_.Set(from._internal_lang(), _this->GetArenaForAllocation());
  }
  _impl_.wechat_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.wechat_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_wechat().empty()) {
    _this->_impl_.wechat_.Set(from._internal_wechat(), _this->GetArenaForAllocation());
  }
  _impl_.phone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.phone_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_phone().empty()) {
    _this->_impl_.phone_.Set(from._internal_phone(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.UserSetProfileRequest)
}
inline void UserSetProfileRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.real_name_){},
      decltype(_impl_.avatar_){},
      decltype(_impl_.timezone_){},
      decltype(_impl_.lang_){},
      decltype(_impl_.wechat_){},
      decltype(_impl_.phone_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.real_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.real_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avatar_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.avatar_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.timezone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.timezone_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.wechat_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.wechat_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.phone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.phone_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
UserSetProfileRequest::~UserSetProfileRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.UserSetProfileRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserSetProfileRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.real_name_.Destroy();
  _impl_.avatar_.Destroy();
  _impl_.timezone_.Destroy();
  _impl_.lang_.Destroy();
  _impl_.wechat_.Destroy();
  _impl_.phone_.Destroy();
}
void UserSetProfileRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UserSetProfileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.UserSetProfileRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.real_name_.ClearToEmpty();
  _impl_.avatar_.ClearToEmpty();
  _impl_.timezone_.ClearToEmpty();
  _impl_.lang_.ClearToEmpty();
  _impl_.wechat_.ClearToEmpty();
  _impl_.phone_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserSetProfileRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 81, 2> UserSetProfileRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963836,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserSetProfileRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string timezone = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(UserSetProfileRequest, _impl_.timezone_)}},
    // string real_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserSetProfileRequest, _impl_.real_name_)}},
    // string avatar = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UserSetProfileRequest, _impl_.avatar_)}},
    // string wechat = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(UserSetProfileRequest, _impl_.wechat_)}},
    // string phone = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(UserSetProfileRequest, _impl_.phone_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string real_name = 1;
    {PROTOBUF_FIELD_OFFSET(UserSetProfileRequest, _impl_.real_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string avatar = 2;
    {PROTOBUF_FIELD_OFFSET(UserSetProfileRequest, _impl_.avatar_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timezone = 8;
    {PROTOBUF_FIELD_OFFSET(UserSetProfileRequest, _impl_.timezone_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string lang = 9;
    {PROTOBUF_FIELD_OFFSET(UserSetProfileRequest, _impl_.lang_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string wechat = 11;
    {PROTOBUF_FIELD_OFFSET(UserSetProfileRequest, _impl_.wechat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string phone = 12;
    {PROTOBUF_FIELD_OFFSET(UserSetProfileRequest, _impl_.phone_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\11\6\10\4\6\5\0"
    "palm.auth.v1.UserSetProfileRequest"
    "real_name"
    "avatar"
    "timezone"
    "lang"
    "wechat"
    "phone"
  }},
};

::uint8_t* UserSetProfileRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.UserSetProfileRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string real_name = 1;
  if (!this->_internal_real_name().empty()) {
    const std::string& _s = this->_internal_real_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSetProfileRequest.real_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string avatar = 2;
  if (!this->_internal_avatar().empty()) {
    const std::string& _s = this->_internal_avatar();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSetProfileRequest.avatar");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string timezone = 8;
  if (!this->_internal_timezone().empty()) {
    const std::string& _s = this->_internal_timezone();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSetProfileRequest.timezone");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // string lang = 9;
  if (!this->_internal_lang().empty()) {
    const std::string& _s = this->_internal_lang();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSetProfileRequest.lang");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // string wechat = 11;
  if (!this->_internal_wechat().empty()) {
    const std::string& _s = this->_internal_wechat();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSetProfileRequest.wechat");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // string phone = 12;
  if (!this->_internal_phone().empty()) {
    const std::string& _s = this->_internal_phone();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserSetProfileRequest.phone");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.UserSetProfileRequest)
  return target;
}

::size_t UserSetProfileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.UserSetProfileRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string real_name = 1;
  if (!this->_internal_real_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_real_name());
  }

  // string avatar = 2;
  if (!this->_internal_avatar().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_avatar());
  }

  // string timezone = 8;
  if (!this->_internal_timezone().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_timezone());
  }

  // string lang = 9;
  if (!this->_internal_lang().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_lang());
  }

  // string wechat = 11;
  if (!this->_internal_wechat().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_wechat());
  }

  // string phone = 12;
  if (!this->_internal_phone().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_phone());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserSetProfileRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UserSetProfileRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*UserSetProfileRequest::GetClassData() const { return &_class_data_; }


void UserSetProfileRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserSetProfileRequest*>(&to_msg);
  auto& from = static_cast<const UserSetProfileRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.UserSetProfileRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_real_name().empty()) {
    _this->_internal_set_real_name(from._internal_real_name());
  }
  if (!from._internal_avatar().empty()) {
    _this->_internal_set_avatar(from._internal_avatar());
  }
  if (!from._internal_timezone().empty()) {
    _this->_internal_set_timezone(from._internal_timezone());
  }
  if (!from._internal_lang().empty()) {
    _this->_internal_set_lang(from._internal_lang());
  }
  if (!from._internal_wechat().empty()) {
    _this->_internal_set_wechat(from._internal_wechat());
  }
  if (!from._internal_phone().empty()) {
    _this->_internal_set_phone(from._internal_phone());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserSetProfileRequest::CopyFrom(const UserSetProfileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.UserSetProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserSetProfileRequest::IsInitialized() const {
  return true;
}

void UserSetProfileRequest::InternalSwap(UserSetProfileRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.real_name_, lhs_arena,
                                       &other->_impl_.real_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.avatar_, lhs_arena,
                                       &other->_impl_.avatar_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timezone_, lhs_arena,
                                       &other->_impl_.timezone_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lang_, lhs_arena,
                                       &other->_impl_.lang_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.wechat_, lhs_arena,
                                       &other->_impl_.wechat_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.phone_, lhs_arena,
                                       &other->_impl_.phone_, rhs_arena);
}

::google::protobuf::Metadata UserSetProfileRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[9]);
}
// ===================================================================

class UserGetProfileResponse::_Internal {
 public:
};

UserGetProfileResponse::UserGetProfileResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.UserGetProfileResponse)
}
UserGetProfileResponse::UserGetProfileResponse(const UserGetProfileResponse& from) : ::google::protobuf::Message() {
  UserGetProfileResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.real_name_){},
      decltype(_impl_.avatar_){},
      decltype(_impl_.nickname_){},
      decltype(_impl_.email_){},
      decltype(_impl_.timezone_){},
      decltype(_impl_.lang_){},
      decltype(_impl_.wechat_){},
      decltype(_impl_.phone_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.real_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.real_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_real_name().empty()) {
    _this->_impl_.real_name_.Set(from._internal_real_name(), _this->GetArenaForAllocation());
  }
  _impl_.avatar_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.avatar_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_avatar().empty()) {
    _this->_impl_.avatar_.Set(from._internal_avatar(), _this->GetArenaForAllocation());
  }
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), _this->GetArenaForAllocation());
  }
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.email_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), _this->GetArenaForAllocation());
  }
  _impl_.timezone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.timezone_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_timezone().empty()) {
    _this->_impl_.timezone_.Set(from._internal_timezone(), _this->GetArenaForAllocation());
  }
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lang().empty()) {
    _this->_impl_.lang_.Set(from._internal_lang(), _this->GetArenaForAllocation());
  }
  _impl_.wechat_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.wechat_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_wechat().empty()) {
    _this->_impl_.wechat_.Set(from._internal_wechat(), _this->GetArenaForAllocation());
  }
  _impl_.phone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.phone_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_phone().empty()) {
    _this->_impl_.phone_.Set(from._internal_phone(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.UserGetProfileResponse)
}
inline void UserGetProfileResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.real_name_){},
      decltype(_impl_.avatar_){},
      decltype(_impl_.nickname_){},
      decltype(_impl_.email_){},
      decltype(_impl_.timezone_){},
      decltype(_impl_.lang_){},
      decltype(_impl_.wechat_){},
      decltype(_impl_.phone_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.real_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.real_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avatar_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.avatar_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.email_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.timezone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.timezone_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.wechat_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.wechat_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.phone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.phone_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
UserGetProfileResponse::~UserGetProfileResponse() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.UserGetProfileResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserGetProfileResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.real_name_.Destroy();
  _impl_.avatar_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.email_.Destroy();
  _impl_.timezone_.Destroy();
  _impl_.lang_.Destroy();
  _impl_.wechat_.Destroy();
  _impl_.phone_.Destroy();
}
void UserGetProfileResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UserGetProfileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.UserGetProfileResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.real_name_.ClearToEmpty();
  _impl_.avatar_.ClearToEmpty();
  _impl_.nickname_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  _impl_.timezone_.ClearToEmpty();
  _impl_.lang_.ClearToEmpty();
  _impl_.wechat_.ClearToEmpty();
  _impl_.phone_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserGetProfileResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 0, 103, 2> UserGetProfileResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963824,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserGetProfileResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string real_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserGetProfileResponse, _impl_.real_name_)}},
    // string avatar = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UserGetProfileResponse, _impl_.avatar_)}},
    // string nickname = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UserGetProfileResponse, _impl_.nickname_)}},
    // string email = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(UserGetProfileResponse, _impl_.email_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string timezone = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(UserGetProfileResponse, _impl_.timezone_)}},
    // string lang = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(UserGetProfileResponse, _impl_.lang_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string wechat = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(UserGetProfileResponse, _impl_.wechat_)}},
    // string phone = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(UserGetProfileResponse, _impl_.phone_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string real_name = 1;
    {PROTOBUF_FIELD_OFFSET(UserGetProfileResponse, _impl_.real_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string avatar = 2;
    {PROTOBUF_FIELD_OFFSET(UserGetProfileResponse, _impl_.avatar_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string nickname = 3;
    {PROTOBUF_FIELD_OFFSET(UserGetProfileResponse, _impl_.nickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string email = 4;
    {PROTOBUF_FIELD_OFFSET(UserGetProfileResponse, _impl_.email_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timezone = 8;
    {PROTOBUF_FIELD_OFFSET(UserGetProfileResponse, _impl_.timezone_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string lang = 9;
    {PROTOBUF_FIELD_OFFSET(UserGetProfileResponse, _impl_.lang_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string wechat = 11;
    {PROTOBUF_FIELD_OFFSET(UserGetProfileResponse, _impl_.wechat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string phone = 12;
    {PROTOBUF_FIELD_OFFSET(UserGetProfileResponse, _impl_.phone_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\11\6\10\5\10\4\6\5\0\0\0\0\0\0\0"
    "palm.auth.v1.UserGetProfileResponse"
    "real_name"
    "avatar"
    "nickname"
    "email"
    "timezone"
    "lang"
    "wechat"
    "phone"
  }},
};

::uint8_t* UserGetProfileResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.UserGetProfileResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string real_name = 1;
  if (!this->_internal_real_name().empty()) {
    const std::string& _s = this->_internal_real_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserGetProfileResponse.real_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string avatar = 2;
  if (!this->_internal_avatar().empty()) {
    const std::string& _s = this->_internal_avatar();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserGetProfileResponse.avatar");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string nickname = 3;
  if (!this->_internal_nickname().empty()) {
    const std::string& _s = this->_internal_nickname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserGetProfileResponse.nickname");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string email = 4;
  if (!this->_internal_email().empty()) {
    const std::string& _s = this->_internal_email();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserGetProfileResponse.email");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string timezone = 8;
  if (!this->_internal_timezone().empty()) {
    const std::string& _s = this->_internal_timezone();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserGetProfileResponse.timezone");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // string lang = 9;
  if (!this->_internal_lang().empty()) {
    const std::string& _s = this->_internal_lang();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserGetProfileResponse.lang");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // string wechat = 11;
  if (!this->_internal_wechat().empty()) {
    const std::string& _s = this->_internal_wechat();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserGetProfileResponse.wechat");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // string phone = 12;
  if (!this->_internal_phone().empty()) {
    const std::string& _s = this->_internal_phone();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserGetProfileResponse.phone");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.UserGetProfileResponse)
  return target;
}

::size_t UserGetProfileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.UserGetProfileResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string real_name = 1;
  if (!this->_internal_real_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_real_name());
  }

  // string avatar = 2;
  if (!this->_internal_avatar().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_avatar());
  }

  // string nickname = 3;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_nickname());
  }

  // string email = 4;
  if (!this->_internal_email().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_email());
  }

  // string timezone = 8;
  if (!this->_internal_timezone().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_timezone());
  }

  // string lang = 9;
  if (!this->_internal_lang().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_lang());
  }

  // string wechat = 11;
  if (!this->_internal_wechat().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_wechat());
  }

  // string phone = 12;
  if (!this->_internal_phone().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_phone());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserGetProfileResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UserGetProfileResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*UserGetProfileResponse::GetClassData() const { return &_class_data_; }


void UserGetProfileResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserGetProfileResponse*>(&to_msg);
  auto& from = static_cast<const UserGetProfileResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.UserGetProfileResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_real_name().empty()) {
    _this->_internal_set_real_name(from._internal_real_name());
  }
  if (!from._internal_avatar().empty()) {
    _this->_internal_set_avatar(from._internal_avatar());
  }
  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_timezone().empty()) {
    _this->_internal_set_timezone(from._internal_timezone());
  }
  if (!from._internal_lang().empty()) {
    _this->_internal_set_lang(from._internal_lang());
  }
  if (!from._internal_wechat().empty()) {
    _this->_internal_set_wechat(from._internal_wechat());
  }
  if (!from._internal_phone().empty()) {
    _this->_internal_set_phone(from._internal_phone());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserGetProfileResponse::CopyFrom(const UserGetProfileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.UserGetProfileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserGetProfileResponse::IsInitialized() const {
  return true;
}

void UserGetProfileResponse::InternalSwap(UserGetProfileResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.real_name_, lhs_arena,
                                       &other->_impl_.real_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.avatar_, lhs_arena,
                                       &other->_impl_.avatar_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, lhs_arena,
                                       &other->_impl_.nickname_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, lhs_arena,
                                       &other->_impl_.email_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timezone_, lhs_arena,
                                       &other->_impl_.timezone_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lang_, lhs_arena,
                                       &other->_impl_.lang_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.wechat_, lhs_arena,
                                       &other->_impl_.wechat_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.phone_, lhs_arena,
                                       &other->_impl_.phone_, rhs_arena);
}

::google::protobuf::Metadata UserGetProfileResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[10]);
}
// ===================================================================

class UserLogsResponse_Item::_Internal {
 public:
  using HasBits = decltype(std::declval<UserLogsResponse_Item>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserLogsResponse_Item, _impl_._has_bits_);
  static const ::palm::rbac::v1::ResourcesResponse_Item& resource(const UserLogsResponse_Item* msg);
  static void set_has_resource(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& created_at(const UserLogsResponse_Item* msg);
  static void set_has_created_at(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::palm::rbac::v1::ResourcesResponse_Item& UserLogsResponse_Item::_Internal::resource(const UserLogsResponse_Item* msg) {
  return *msg->_impl_.resource_;
}
const ::google::protobuf::Timestamp& UserLogsResponse_Item::_Internal::created_at(const UserLogsResponse_Item* msg) {
  return *msg->_impl_.created_at_;
}
void UserLogsResponse_Item::clear_resource() {
  if (_impl_.resource_ != nullptr) _impl_.resource_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void UserLogsResponse_Item::clear_created_at() {
  if (_impl_.created_at_ != nullptr) _impl_.created_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
UserLogsResponse_Item::UserLogsResponse_Item(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.UserLogsResponse.Item)
}
UserLogsResponse_Item::UserLogsResponse_Item(const UserLogsResponse_Item& from) : ::google::protobuf::Message() {
  UserLogsResponse_Item* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ip_){},
      decltype(_impl_.message_){},
      decltype(_impl_.resource_){nullptr},
      decltype(_impl_.created_at_){nullptr},
      decltype(_impl_.id_){},
      decltype(_impl_.user_id_){},
      decltype(_impl_.level_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ip_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ip().empty()) {
    _this->_impl_.ip_.Set(from._internal_ip(), _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.resource_ = new ::palm::rbac::v1::ResourcesResponse_Item(*from._impl_.resource_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.created_at_ = new ::google::protobuf::Timestamp(*from._impl_.created_at_);
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.level_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.level_));

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.UserLogsResponse.Item)
}
inline void UserLogsResponse_Item::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ip_){},
      decltype(_impl_.message_){},
      decltype(_impl_.resource_){nullptr},
      decltype(_impl_.created_at_){nullptr},
      decltype(_impl_.id_){0},
      decltype(_impl_.user_id_){0},
      decltype(_impl_.level_){0},
  };
  _impl_.ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ip_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
UserLogsResponse_Item::~UserLogsResponse_Item() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.UserLogsResponse.Item)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserLogsResponse_Item::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ip_.Destroy();
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.resource_;
  if (this != internal_default_instance()) delete _impl_.created_at_;
}
void UserLogsResponse_Item::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UserLogsResponse_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.UserLogsResponse.Item)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ip_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.resource_ != nullptr);
      _impl_.resource_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.created_at_ != nullptr);
      _impl_.created_at_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.level_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.level_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserLogsResponse_Item::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 52, 2> UserLogsResponse_Item::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserLogsResponse_Item, _impl_._has_bits_),
    0, // no _extensions_
    11, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966208,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UserLogsResponse_Item_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserLogsResponse_Item, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UserLogsResponse_Item, _impl_.id_)}},
    // int32 user_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserLogsResponse_Item, _impl_.user_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UserLogsResponse_Item, _impl_.user_id_)}},
    // string ip = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UserLogsResponse_Item, _impl_.ip_)}},
    // .palm.auth.v1.UserLogsResponse.Item.Level level = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserLogsResponse_Item, _impl_.level_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(UserLogsResponse_Item, _impl_.level_)}},
    // string message = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(UserLogsResponse_Item, _impl_.message_)}},
    // .palm.rbac.v1.ResourcesResponse.Item resource = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(UserLogsResponse_Item, _impl_.resource_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(UserLogsResponse_Item, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 user_id = 2;
    {PROTOBUF_FIELD_OFFSET(UserLogsResponse_Item, _impl_.user_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string ip = 3;
    {PROTOBUF_FIELD_OFFSET(UserLogsResponse_Item, _impl_.ip_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .palm.auth.v1.UserLogsResponse.Item.Level level = 4;
    {PROTOBUF_FIELD_OFFSET(UserLogsResponse_Item, _impl_.level_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string message = 5;
    {PROTOBUF_FIELD_OFFSET(UserLogsResponse_Item, _impl_.message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .palm.rbac.v1.ResourcesResponse.Item resource = 6;
    {PROTOBUF_FIELD_OFFSET(UserLogsResponse_Item, _impl_.resource_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp created_at = 11;
    {PROTOBUF_FIELD_OFFSET(UserLogsResponse_Item, _impl_.created_at_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::ResourcesResponse_Item>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\42\0\0\2\0\7\0\0"
    "palm.auth.v1.UserLogsResponse.Item"
    "ip"
    "message"
  }},
};

::uint8_t* UserLogsResponse_Item::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.UserLogsResponse.Item)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // int32 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_user_id(), target);
  }

  // string ip = 3;
  if (!this->_internal_ip().empty()) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserLogsResponse.Item.ip");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // .palm.auth.v1.UserLogsResponse.Item.Level level = 4;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_level(), target);
  }

  // string message = 5;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserLogsResponse.Item.message");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.rbac.v1.ResourcesResponse.Item resource = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::resource(this),
        _Internal::resource(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp created_at = 11;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::created_at(this),
        _Internal::created_at(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.UserLogsResponse.Item)
  return target;
}

::size_t UserLogsResponse_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.UserLogsResponse.Item)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 3;
  if (!this->_internal_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip());
  }

  // string message = 5;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .palm.rbac.v1.ResourcesResponse.Item resource = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.resource_);
    }

    // .google.protobuf.Timestamp created_at = 11;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.created_at_);
    }

  }
  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  // int32 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_user_id());
  }

  // .palm.auth.v1.UserLogsResponse.Item.Level level = 4;
  if (this->_internal_level() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_level());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserLogsResponse_Item::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UserLogsResponse_Item::MergeImpl
};
const ::google::protobuf::Message::ClassData*UserLogsResponse_Item::GetClassData() const { return &_class_data_; }


void UserLogsResponse_Item::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserLogsResponse_Item*>(&to_msg);
  auto& from = static_cast<const UserLogsResponse_Item&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.UserLogsResponse.Item)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_resource()->::palm::rbac::v1::ResourcesResponse_Item::MergeFrom(
          from._internal_resource());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_created_at()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_created_at());
    }
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserLogsResponse_Item::CopyFrom(const UserLogsResponse_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.UserLogsResponse.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserLogsResponse_Item::IsInitialized() const {
  return true;
}

void UserLogsResponse_Item::InternalSwap(UserLogsResponse_Item* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, lhs_arena,
                                       &other->_impl_.ip_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, lhs_arena,
                                       &other->_impl_.message_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserLogsResponse_Item, _impl_.level_)
      + sizeof(UserLogsResponse_Item::_impl_.level_)
      - PROTOBUF_FIELD_OFFSET(UserLogsResponse_Item, _impl_.resource_)>(
          reinterpret_cast<char*>(&_impl_.resource_),
          reinterpret_cast<char*>(&other->_impl_.resource_));
}

::google::protobuf::Metadata UserLogsResponse_Item::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[11]);
}
// ===================================================================

class UserLogsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<UserLogsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserLogsResponse, _impl_._has_bits_);
  static const ::palm::nut::v1::Pagination& pagination(const UserLogsResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::nut::v1::Pagination& UserLogsResponse::_Internal::pagination(const UserLogsResponse* msg) {
  return *msg->_impl_.pagination_;
}
void UserLogsResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
UserLogsResponse::UserLogsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.UserLogsResponse)
}
UserLogsResponse::UserLogsResponse(const UserLogsResponse& from) : ::google::protobuf::Message() {
  UserLogsResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.items_){from._impl_.items_},
      decltype(_impl_.pagination_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::palm::nut::v1::Pagination(*from._impl_.pagination_);
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.UserLogsResponse)
}
inline void UserLogsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.items_){arena},
      decltype(_impl_.pagination_){nullptr},
  };
}
UserLogsResponse::~UserLogsResponse() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.UserLogsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserLogsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}
void UserLogsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UserLogsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.UserLogsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_items()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserLogsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 2, 0, 2> UserLogsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserLogsResponse, _impl_._has_bits_),
    0, // no _extensions_
    11, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966270,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UserLogsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .palm.nut.v1.Pagination pagination = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UserLogsResponse, _impl_.pagination_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .palm.auth.v1.UserLogsResponse.Item items = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 1, PROTOBUF_FIELD_OFFSET(UserLogsResponse, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .palm.nut.v1.Pagination pagination = 1;
    {PROTOBUF_FIELD_OFFSET(UserLogsResponse, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .palm.auth.v1.UserLogsResponse.Item items = 11;
    {PROTOBUF_FIELD_OFFSET(UserLogsResponse, _impl_.items_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::nut::v1::Pagination>()},
    {::_pbi::TcParser::GetTable<::palm::auth::v1::UserLogsResponse_Item>()},
  }}, {{
  }},
};

::uint8_t* UserLogsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.UserLogsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.nut.v1.Pagination pagination = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  // repeated .palm.auth.v1.UserLogsResponse.Item items = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.UserLogsResponse)
  return target;
}

::size_t UserLogsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.UserLogsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.auth.v1.UserLogsResponse.Item items = 11;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_internal_items()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .palm.nut.v1.Pagination pagination = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserLogsResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UserLogsResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*UserLogsResponse::GetClassData() const { return &_class_data_; }


void UserLogsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserLogsResponse*>(&to_msg);
  auto& from = static_cast<const UserLogsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.UserLogsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(from._internal_items());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::palm::nut::v1::Pagination::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserLogsResponse::CopyFrom(const UserLogsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.UserLogsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserLogsResponse::IsInitialized() const {
  return true;
}

void UserLogsResponse::InternalSwap(UserLogsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata UserLogsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[12]);
}
// ===================================================================

class UserChangePasswordRequest::_Internal {
 public:
};

UserChangePasswordRequest::UserChangePasswordRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.UserChangePasswordRequest)
}
UserChangePasswordRequest::UserChangePasswordRequest(const UserChangePasswordRequest& from) : ::google::protobuf::Message() {
  UserChangePasswordRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.current_password_){},
      decltype(_impl_.new_password_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.current_password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.current_password_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_current_password().empty()) {
    _this->_impl_.current_password_.Set(from._internal_current_password(), _this->GetArenaForAllocation());
  }
  _impl_.new_password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.new_password_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_new_password().empty()) {
    _this->_impl_.new_password_.Set(from._internal_new_password(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.UserChangePasswordRequest)
}
inline void UserChangePasswordRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.current_password_){},
      decltype(_impl_.new_password_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.current_password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.current_password_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.new_password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.new_password_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
UserChangePasswordRequest::~UserChangePasswordRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.UserChangePasswordRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserChangePasswordRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.current_password_.Destroy();
  _impl_.new_password_.Destroy();
}
void UserChangePasswordRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UserChangePasswordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.UserChangePasswordRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.current_password_.ClearToEmpty();
  _impl_.new_password_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserChangePasswordRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 75, 2> UserChangePasswordRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserChangePasswordRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string new_password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UserChangePasswordRequest, _impl_.new_password_)}},
    // string current_password = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserChangePasswordRequest, _impl_.current_password_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string current_password = 1;
    {PROTOBUF_FIELD_OFFSET(UserChangePasswordRequest, _impl_.current_password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string new_password = 2;
    {PROTOBUF_FIELD_OFFSET(UserChangePasswordRequest, _impl_.new_password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\20\14\0\0\0\0\0"
    "palm.auth.v1.UserChangePasswordRequest"
    "current_password"
    "new_password"
  }},
};

::uint8_t* UserChangePasswordRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.UserChangePasswordRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string current_password = 1;
  if (!this->_internal_current_password().empty()) {
    const std::string& _s = this->_internal_current_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserChangePasswordRequest.current_password");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string new_password = 2;
  if (!this->_internal_new_password().empty()) {
    const std::string& _s = this->_internal_new_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserChangePasswordRequest.new_password");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.UserChangePasswordRequest)
  return target;
}

::size_t UserChangePasswordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.UserChangePasswordRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string current_password = 1;
  if (!this->_internal_current_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_current_password());
  }

  // string new_password = 2;
  if (!this->_internal_new_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_new_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserChangePasswordRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UserChangePasswordRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*UserChangePasswordRequest::GetClassData() const { return &_class_data_; }


void UserChangePasswordRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserChangePasswordRequest*>(&to_msg);
  auto& from = static_cast<const UserChangePasswordRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.UserChangePasswordRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_current_password().empty()) {
    _this->_internal_set_current_password(from._internal_current_password());
  }
  if (!from._internal_new_password().empty()) {
    _this->_internal_set_new_password(from._internal_new_password());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserChangePasswordRequest::CopyFrom(const UserChangePasswordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.UserChangePasswordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserChangePasswordRequest::IsInitialized() const {
  return true;
}

void UserChangePasswordRequest::InternalSwap(UserChangePasswordRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.current_password_, lhs_arena,
                                       &other->_impl_.current_password_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_password_, lhs_arena,
                                       &other->_impl_.new_password_, rhs_arena);
}

::google::protobuf::Metadata UserChangePasswordRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[13]);
}
// ===================================================================

class UserIndexResponse_Item::_Internal {
 public:
  using HasBits = decltype(std::declval<UserIndexResponse_Item>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& updated_at(const UserIndexResponse_Item* msg);
  static void set_has_updated_at(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::google::protobuf::Timestamp& last_sign_in_at(const UserIndexResponse_Item* msg);
  static void set_has_last_sign_in_at(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_last_sign_in_ip(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& current_sign_in_at(const UserIndexResponse_Item* msg);
  static void set_has_current_sign_in_at(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_current_sign_in_ip(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::google::protobuf::Timestamp& confirmed_at(const UserIndexResponse_Item* msg);
  static void set_has_confirmed_at(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::google::protobuf::Timestamp& locked_at(const UserIndexResponse_Item* msg);
  static void set_has_locked_at(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::google::protobuf::Timestamp& deleted_at(const UserIndexResponse_Item* msg);
  static void set_has_deleted_at(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

const ::google::protobuf::Timestamp& UserIndexResponse_Item::_Internal::updated_at(const UserIndexResponse_Item* msg) {
  return *msg->_impl_.updated_at_;
}
const ::google::protobuf::Timestamp& UserIndexResponse_Item::_Internal::last_sign_in_at(const UserIndexResponse_Item* msg) {
  return *msg->_impl_.last_sign_in_at_;
}
const ::google::protobuf::Timestamp& UserIndexResponse_Item::_Internal::current_sign_in_at(const UserIndexResponse_Item* msg) {
  return *msg->_impl_.current_sign_in_at_;
}
const ::google::protobuf::Timestamp& UserIndexResponse_Item::_Internal::confirmed_at(const UserIndexResponse_Item* msg) {
  return *msg->_impl_.confirmed_at_;
}
const ::google::protobuf::Timestamp& UserIndexResponse_Item::_Internal::locked_at(const UserIndexResponse_Item* msg) {
  return *msg->_impl_.locked_at_;
}
const ::google::protobuf::Timestamp& UserIndexResponse_Item::_Internal::deleted_at(const UserIndexResponse_Item* msg) {
  return *msg->_impl_.deleted_at_;
}
void UserIndexResponse_Item::clear_updated_at() {
  if (_impl_.updated_at_ != nullptr) _impl_.updated_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void UserIndexResponse_Item::clear_last_sign_in_at() {
  if (_impl_.last_sign_in_at_ != nullptr) _impl_.last_sign_in_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void UserIndexResponse_Item::clear_current_sign_in_at() {
  if (_impl_.current_sign_in_at_ != nullptr) _impl_.current_sign_in_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void UserIndexResponse_Item::clear_confirmed_at() {
  if (_impl_.confirmed_at_ != nullptr) _impl_.confirmed_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void UserIndexResponse_Item::clear_locked_at() {
  if (_impl_.locked_at_ != nullptr) _impl_.locked_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void UserIndexResponse_Item::clear_deleted_at() {
  if (_impl_.deleted_at_ != nullptr) _impl_.deleted_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
UserIndexResponse_Item::UserIndexResponse_Item(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.UserIndexResponse.Item)
}
UserIndexResponse_Item::UserIndexResponse_Item(const UserIndexResponse_Item& from) : ::google::protobuf::Message() {
  UserIndexResponse_Item* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.email_){},
      decltype(_impl_.nickname_){},
      decltype(_impl_.real_name_){},
      decltype(_impl_.last_sign_in_ip_){},
      decltype(_impl_.current_sign_in_ip_){},
      decltype(_impl_.lang_){},
      decltype(_impl_.timezone_){},
      decltype(_impl_.avatar_){},
      decltype(_impl_.updated_at_){nullptr},
      decltype(_impl_.last_sign_in_at_){nullptr},
      decltype(_impl_.current_sign_in_at_){nullptr},
      decltype(_impl_.confirmed_at_){nullptr},
      decltype(_impl_.locked_at_){nullptr},
      decltype(_impl_.deleted_at_){nullptr},
      decltype(_impl_.id_){},
      decltype(_impl_.sign_in_count_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.email_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), _this->GetArenaForAllocation());
  }
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), _this->GetArenaForAllocation());
  }
  _impl_.real_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.real_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_real_name().empty()) {
    _this->_impl_.real_name_.Set(from._internal_real_name(), _this->GetArenaForAllocation());
  }
  _impl_.last_sign_in_ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_sign_in_ip_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.last_sign_in_ip_.Set(from._internal_last_sign_in_ip(), _this->GetArenaForAllocation());
  }
  _impl_.current_sign_in_ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.current_sign_in_ip_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.current_sign_in_ip_.Set(from._internal_current_sign_in_ip(), _this->GetArenaForAllocation());
  }
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lang().empty()) {
    _this->_impl_.lang_.Set(from._internal_lang(), _this->GetArenaForAllocation());
  }
  _impl_.timezone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.timezone_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_timezone().empty()) {
    _this->_impl_.timezone_.Set(from._internal_timezone(), _this->GetArenaForAllocation());
  }
  _impl_.avatar_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.avatar_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_avatar().empty()) {
    _this->_impl_.avatar_.Set(from._internal_avatar(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.updated_at_ = new ::google::protobuf::Timestamp(*from._impl_.updated_at_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.last_sign_in_at_ = new ::google::protobuf::Timestamp(*from._impl_.last_sign_in_at_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000010u) != 0) {
    _this->_impl_.current_sign_in_at_ = new ::google::protobuf::Timestamp(*from._impl_.current_sign_in_at_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000020u) != 0) {
    _this->_impl_.confirmed_at_ = new ::google::protobuf::Timestamp(*from._impl_.confirmed_at_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000040u) != 0) {
    _this->_impl_.locked_at_ = new ::google::protobuf::Timestamp(*from._impl_.locked_at_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000080u) != 0) {
    _this->_impl_.deleted_at_ = new ::google::protobuf::Timestamp(*from._impl_.deleted_at_);
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.sign_in_count_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.sign_in_count_));

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.UserIndexResponse.Item)
}
inline void UserIndexResponse_Item::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.email_){},
      decltype(_impl_.nickname_){},
      decltype(_impl_.real_name_){},
      decltype(_impl_.last_sign_in_ip_){},
      decltype(_impl_.current_sign_in_ip_){},
      decltype(_impl_.lang_){},
      decltype(_impl_.timezone_){},
      decltype(_impl_.avatar_){},
      decltype(_impl_.updated_at_){nullptr},
      decltype(_impl_.last_sign_in_at_){nullptr},
      decltype(_impl_.current_sign_in_at_){nullptr},
      decltype(_impl_.confirmed_at_){nullptr},
      decltype(_impl_.locked_at_){nullptr},
      decltype(_impl_.deleted_at_){nullptr},
      decltype(_impl_.id_){0},
      decltype(_impl_.sign_in_count_){0},
  };
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.email_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.real_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.real_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.last_sign_in_ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_sign_in_ip_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.current_sign_in_ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.current_sign_in_ip_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.timezone_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.timezone_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avatar_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.avatar_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
UserIndexResponse_Item::~UserIndexResponse_Item() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.UserIndexResponse.Item)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserIndexResponse_Item::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.email_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.real_name_.Destroy();
  _impl_.last_sign_in_ip_.Destroy();
  _impl_.current_sign_in_ip_.Destroy();
  _impl_.lang_.Destroy();
  _impl_.timezone_.Destroy();
  _impl_.avatar_.Destroy();
  if (this != internal_default_instance()) delete _impl_.updated_at_;
  if (this != internal_default_instance()) delete _impl_.last_sign_in_at_;
  if (this != internal_default_instance()) delete _impl_.current_sign_in_at_;
  if (this != internal_default_instance()) delete _impl_.confirmed_at_;
  if (this != internal_default_instance()) delete _impl_.locked_at_;
  if (this != internal_default_instance()) delete _impl_.deleted_at_;
}
void UserIndexResponse_Item::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UserIndexResponse_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.UserIndexResponse.Item)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.email_.ClearToEmpty();
  _impl_.nickname_.ClearToEmpty();
  _impl_.real_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.last_sign_in_ip_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.current_sign_in_ip_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.lang_.ClearToEmpty();
  _impl_.timezone_.ClearToEmpty();
  _impl_.avatar_.ClearToEmpty();
  if (cached_has_bits & 0x000000fcu) {
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.updated_at_ != nullptr);
      _impl_.updated_at_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.last_sign_in_at_ != nullptr);
      _impl_.last_sign_in_at_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.current_sign_in_at_ != nullptr);
      _impl_.current_sign_in_at_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.confirmed_at_ != nullptr);
      _impl_.confirmed_at_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.locked_at_ != nullptr);
      _impl_.locked_at_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.deleted_at_ != nullptr);
      _impl_.deleted_at_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sign_in_count_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.sign_in_count_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserIndexResponse_Item::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 16, 6, 133, 2> UserIndexResponse_Item::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_._has_bits_),
    0, // no _extensions_
    29, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    3817587440,  // skipmap
    offsetof(decltype(_table_), field_entries),
    16,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UserIndexResponse_Item_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserIndexResponse_Item, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.id_)}},
    // string email = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.email_)}},
    // string nickname = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.nickname_)}},
    // string real_name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.real_name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp updated_at = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 2, 0, PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.updated_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .google.protobuf.Timestamp last_sign_in_at = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 3, 1, PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.last_sign_in_at_)}},
    // optional string last_sign_in_ip = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 0, 0, PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.last_sign_in_ip_)}},
    // optional .google.protobuf.Timestamp current_sign_in_at = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 4, 2, PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.current_sign_in_at_)}},
    // optional string current_sign_in_ip = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 1, 0, PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.current_sign_in_ip_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // int32 sign_in_count = 19;
    {::_pbi::TcParser::FastV32S2,
     {408, 63, 0, PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.sign_in_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string lang = 21;
    {::_pbi::TcParser::FastUS2,
     {426, 63, 0, PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.lang_)}},
    // string timezone = 22;
    {::_pbi::TcParser::FastUS2,
     {434, 63, 0, PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.timezone_)}},
    // string avatar = 23;
    {::_pbi::TcParser::FastUS2,
     {442, 63, 0, PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.avatar_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .google.protobuf.Timestamp confirmed_at = 27;
    {::_pbi::TcParser::FastMtS2,
     {474, 5, 3, PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.confirmed_at_)}},
    // optional .google.protobuf.Timestamp locked_at = 28;
    {::_pbi::TcParser::FastMtS2,
     {482, 6, 4, PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.locked_at_)}},
    // optional .google.protobuf.Timestamp deleted_at = 29;
    {::_pbi::TcParser::FastMtS2,
     {490, 7, 5, PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.deleted_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string email = 2;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.email_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string nickname = 3;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.nickname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string real_name = 4;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.real_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp updated_at = 9;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.updated_at_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .google.protobuf.Timestamp last_sign_in_at = 11;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.last_sign_in_at_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string last_sign_in_ip = 12;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.last_sign_in_ip_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .google.protobuf.Timestamp current_sign_in_at = 13;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.current_sign_in_at_), _Internal::kHasBitsOffset + 4, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string current_sign_in_ip = 14;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.current_sign_in_ip_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 sign_in_count = 19;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.sign_in_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string lang = 21;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.lang_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timezone = 22;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.timezone_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string avatar = 23;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.avatar_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .google.protobuf.Timestamp confirmed_at = 27;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.confirmed_at_), _Internal::kHasBitsOffset + 5, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .google.protobuf.Timestamp locked_at = 28;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.locked_at_), _Internal::kHasBitsOffset + 6, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .google.protobuf.Timestamp deleted_at = 29;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.deleted_at_), _Internal::kHasBitsOffset + 7, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\43\0\5\10\11\0\0\17\0\22\0\4\10\6\0\0\0\0\0\0\0\0\0\0"
    "palm.auth.v1.UserIndexResponse.Item"
    "email"
    "nickname"
    "real_name"
    "last_sign_in_ip"
    "current_sign_in_ip"
    "lang"
    "timezone"
    "avatar"
  }},
};

::uint8_t* UserIndexResponse_Item::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.UserIndexResponse.Item)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string email = 2;
  if (!this->_internal_email().empty()) {
    const std::string& _s = this->_internal_email();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserIndexResponse.Item.email");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string nickname = 3;
  if (!this->_internal_nickname().empty()) {
    const std::string& _s = this->_internal_nickname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserIndexResponse.Item.nickname");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string real_name = 4;
  if (!this->_internal_real_name().empty()) {
    const std::string& _s = this->_internal_real_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserIndexResponse.Item.real_name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp updated_at = 9;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::updated_at(this),
        _Internal::updated_at(this).GetCachedSize(), target, stream);
  }

  // optional .google.protobuf.Timestamp last_sign_in_at = 11;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::last_sign_in_at(this),
        _Internal::last_sign_in_at(this).GetCachedSize(), target, stream);
  }

  // optional string last_sign_in_ip = 12;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_last_sign_in_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserIndexResponse.Item.last_sign_in_ip");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // optional .google.protobuf.Timestamp current_sign_in_at = 13;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::current_sign_in_at(this),
        _Internal::current_sign_in_at(this).GetCachedSize(), target, stream);
  }

  // optional string current_sign_in_ip = 14;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_current_sign_in_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserIndexResponse.Item.current_sign_in_ip");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // int32 sign_in_count = 19;
  if (this->_internal_sign_in_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        19, this->_internal_sign_in_count(), target);
  }

  // string lang = 21;
  if (!this->_internal_lang().empty()) {
    const std::string& _s = this->_internal_lang();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserIndexResponse.Item.lang");
    target = stream->WriteStringMaybeAliased(21, _s, target);
  }

  // string timezone = 22;
  if (!this->_internal_timezone().empty()) {
    const std::string& _s = this->_internal_timezone();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserIndexResponse.Item.timezone");
    target = stream->WriteStringMaybeAliased(22, _s, target);
  }

  // string avatar = 23;
  if (!this->_internal_avatar().empty()) {
    const std::string& _s = this->_internal_avatar();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.UserIndexResponse.Item.avatar");
    target = stream->WriteStringMaybeAliased(23, _s, target);
  }

  // optional .google.protobuf.Timestamp confirmed_at = 27;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(27, _Internal::confirmed_at(this),
        _Internal::confirmed_at(this).GetCachedSize(), target, stream);
  }

  // optional .google.protobuf.Timestamp locked_at = 28;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(28, _Internal::locked_at(this),
        _Internal::locked_at(this).GetCachedSize(), target, stream);
  }

  // optional .google.protobuf.Timestamp deleted_at = 29;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(29, _Internal::deleted_at(this),
        _Internal::deleted_at(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.UserIndexResponse.Item)
  return target;
}

::size_t UserIndexResponse_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.UserIndexResponse.Item)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string email = 2;
  if (!this->_internal_email().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_email());
  }

  // string nickname = 3;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_nickname());
  }

  // string real_name = 4;
  if (!this->_internal_real_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_real_name());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string last_sign_in_ip = 12;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_last_sign_in_ip());
    }

    // optional string current_sign_in_ip = 14;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_current_sign_in_ip());
    }

  }
  // string lang = 21;
  if (!this->_internal_lang().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_lang());
  }

  // string timezone = 22;
  if (!this->_internal_timezone().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_timezone());
  }

  // string avatar = 23;
  if (!this->_internal_avatar().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_avatar());
  }

  if (cached_has_bits & 0x000000fcu) {
    // .google.protobuf.Timestamp updated_at = 9;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.updated_at_);
    }

    // optional .google.protobuf.Timestamp last_sign_in_at = 11;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.last_sign_in_at_);
    }

    // optional .google.protobuf.Timestamp current_sign_in_at = 13;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.current_sign_in_at_);
    }

    // optional .google.protobuf.Timestamp confirmed_at = 27;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.confirmed_at_);
    }

    // optional .google.protobuf.Timestamp locked_at = 28;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.locked_at_);
    }

    // optional .google.protobuf.Timestamp deleted_at = 29;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.deleted_at_);
    }

  }
  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  // int32 sign_in_count = 19;
  if (this->_internal_sign_in_count() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_sign_in_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserIndexResponse_Item::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UserIndexResponse_Item::MergeImpl
};
const ::google::protobuf::Message::ClassData*UserIndexResponse_Item::GetClassData() const { return &_class_data_; }


void UserIndexResponse_Item::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserIndexResponse_Item*>(&to_msg);
  auto& from = static_cast<const UserIndexResponse_Item&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.UserIndexResponse.Item)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_real_name().empty()) {
    _this->_internal_set_real_name(from._internal_real_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_last_sign_in_ip(from._internal_last_sign_in_ip());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_current_sign_in_ip(from._internal_current_sign_in_ip());
    }
  }
  if (!from._internal_lang().empty()) {
    _this->_internal_set_lang(from._internal_lang());
  }
  if (!from._internal_timezone().empty()) {
    _this->_internal_set_timezone(from._internal_timezone());
  }
  if (!from._internal_avatar().empty()) {
    _this->_internal_set_avatar(from._internal_avatar());
  }
  if (cached_has_bits & 0x000000fcu) {
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_updated_at()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_updated_at());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_last_sign_in_at()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_last_sign_in_at());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_current_sign_in_at()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_current_sign_in_at());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_confirmed_at()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_confirmed_at());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_locked_at()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_locked_at());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_deleted_at()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_deleted_at());
    }
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_sign_in_count() != 0) {
    _this->_internal_set_sign_in_count(from._internal_sign_in_count());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserIndexResponse_Item::CopyFrom(const UserIndexResponse_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.UserIndexResponse.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserIndexResponse_Item::IsInitialized() const {
  return true;
}

void UserIndexResponse_Item::InternalSwap(UserIndexResponse_Item* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, lhs_arena,
                                       &other->_impl_.email_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, lhs_arena,
                                       &other->_impl_.nickname_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.real_name_, lhs_arena,
                                       &other->_impl_.real_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_sign_in_ip_, lhs_arena,
                                       &other->_impl_.last_sign_in_ip_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.current_sign_in_ip_, lhs_arena,
                                       &other->_impl_.current_sign_in_ip_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lang_, lhs_arena,
                                       &other->_impl_.lang_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timezone_, lhs_arena,
                                       &other->_impl_.timezone_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.avatar_, lhs_arena,
                                       &other->_impl_.avatar_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.sign_in_count_)
      + sizeof(UserIndexResponse_Item::_impl_.sign_in_count_)
      - PROTOBUF_FIELD_OFFSET(UserIndexResponse_Item, _impl_.updated_at_)>(
          reinterpret_cast<char*>(&_impl_.updated_at_),
          reinterpret_cast<char*>(&other->_impl_.updated_at_));
}

::google::protobuf::Metadata UserIndexResponse_Item::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[14]);
}
// ===================================================================

class UserIndexResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<UserIndexResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserIndexResponse, _impl_._has_bits_);
  static const ::palm::nut::v1::Pagination& pagination(const UserIndexResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::nut::v1::Pagination& UserIndexResponse::_Internal::pagination(const UserIndexResponse* msg) {
  return *msg->_impl_.pagination_;
}
void UserIndexResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
UserIndexResponse::UserIndexResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.UserIndexResponse)
}
UserIndexResponse::UserIndexResponse(const UserIndexResponse& from) : ::google::protobuf::Message() {
  UserIndexResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.items_){from._impl_.items_},
      decltype(_impl_.pagination_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::palm::nut::v1::Pagination(*from._impl_.pagination_);
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.UserIndexResponse)
}
inline void UserIndexResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.items_){arena},
      decltype(_impl_.pagination_){nullptr},
  };
}
UserIndexResponse::~UserIndexResponse() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.UserIndexResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserIndexResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}
void UserIndexResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UserIndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.UserIndexResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_items()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserIndexResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 2, 0, 2> UserIndexResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserIndexResponse, _impl_._has_bits_),
    0, // no _extensions_
    11, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966270,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UserIndexResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .palm.nut.v1.Pagination pagination = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UserIndexResponse, _impl_.pagination_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .palm.auth.v1.UserIndexResponse.Item items = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 1, PROTOBUF_FIELD_OFFSET(UserIndexResponse, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .palm.nut.v1.Pagination pagination = 1;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .palm.auth.v1.UserIndexResponse.Item items = 11;
    {PROTOBUF_FIELD_OFFSET(UserIndexResponse, _impl_.items_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::nut::v1::Pagination>()},
    {::_pbi::TcParser::GetTable<::palm::auth::v1::UserIndexResponse_Item>()},
  }}, {{
  }},
};

::uint8_t* UserIndexResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.UserIndexResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.nut.v1.Pagination pagination = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  // repeated .palm.auth.v1.UserIndexResponse.Item items = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.UserIndexResponse)
  return target;
}

::size_t UserIndexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.UserIndexResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.auth.v1.UserIndexResponse.Item items = 11;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_internal_items()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .palm.nut.v1.Pagination pagination = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserIndexResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UserIndexResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*UserIndexResponse::GetClassData() const { return &_class_data_; }


void UserIndexResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserIndexResponse*>(&to_msg);
  auto& from = static_cast<const UserIndexResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.UserIndexResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(from._internal_items());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::palm::nut::v1::Pagination::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserIndexResponse::CopyFrom(const UserIndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.UserIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserIndexResponse::IsInitialized() const {
  return true;
}

void UserIndexResponse::InternalSwap(UserIndexResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata UserIndexResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[15]);
}
// ===================================================================

class SignInByGoogleRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SignInByGoogleRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SignInByGoogleRequest, _impl_._has_bits_);
  static const ::google::protobuf::Duration& ttl(const SignInByGoogleRequest* msg);
  static void set_has_ttl(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Duration& SignInByGoogleRequest::_Internal::ttl(const SignInByGoogleRequest* msg) {
  return *msg->_impl_.ttl_;
}
void SignInByGoogleRequest::clear_ttl() {
  if (_impl_.ttl_ != nullptr) _impl_.ttl_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SignInByGoogleRequest::SignInByGoogleRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.SignInByGoogleRequest)
}
SignInByGoogleRequest::SignInByGoogleRequest(const SignInByGoogleRequest& from) : ::google::protobuf::Message() {
  SignInByGoogleRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.scopes_){from._impl_.scopes_},
      decltype(_impl_.code_){},
      decltype(_impl_.state_){},
      decltype(_impl_.redirect_uri_){},
      decltype(_impl_.nonce_){},
      decltype(_impl_.ttl_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    _this->_impl_.code_.Set(from._internal_code(), _this->GetArenaForAllocation());
  }
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.state_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_state().empty()) {
    _this->_impl_.state_.Set(from._internal_state(), _this->GetArenaForAllocation());
  }
  _impl_.redirect_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.redirect_uri_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_redirect_uri().empty()) {
    _this->_impl_.redirect_uri_.Set(from._internal_redirect_uri(), _this->GetArenaForAllocation());
  }
  _impl_.nonce_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nonce_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nonce().empty()) {
    _this->_impl_.nonce_.Set(from._internal_nonce(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.ttl_ = new ::google::protobuf::Duration(*from._impl_.ttl_);
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.SignInByGoogleRequest)
}
inline void SignInByGoogleRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.scopes_){arena},
      decltype(_impl_.code_){},
      decltype(_impl_.state_){},
      decltype(_impl_.redirect_uri_){},
      decltype(_impl_.nonce_){},
      decltype(_impl_.ttl_){nullptr},
  };
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.state_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.redirect_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.redirect_uri_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nonce_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nonce_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SignInByGoogleRequest::~SignInByGoogleRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.SignInByGoogleRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SignInByGoogleRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_scopes()->~RepeatedPtrField();
  _impl_.code_.Destroy();
  _impl_.state_.Destroy();
  _impl_.redirect_uri_.Destroy();
  _impl_.nonce_.Destroy();
  if (this != internal_default_instance()) delete _impl_.ttl_;
}
void SignInByGoogleRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SignInByGoogleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.SignInByGoogleRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_scopes()->Clear();
  _impl_.code_.ClearToEmpty();
  _impl_.state_.ClearToEmpty();
  _impl_.redirect_uri_.ClearToEmpty();
  _impl_.nonce_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ttl_ != nullptr);
    _impl_.ttl_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SignInByGoogleRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 1, 75, 2> SignInByGoogleRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SignInByGoogleRequest, _impl_._has_bits_),
    0, // no _extensions_
    11, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966000,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SignInByGoogleRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string redirect_uri = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SignInByGoogleRequest, _impl_.redirect_uri_)}},
    // repeated string scopes = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SignInByGoogleRequest, _impl_.scopes_)}},
    // string code = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SignInByGoogleRequest, _impl_.code_)}},
    // string state = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SignInByGoogleRequest, _impl_.state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string scopes = 1;
    {PROTOBUF_FIELD_OFFSET(SignInByGoogleRequest, _impl_.scopes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string code = 2;
    {PROTOBUF_FIELD_OFFSET(SignInByGoogleRequest, _impl_.code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string state = 3;
    {PROTOBUF_FIELD_OFFSET(SignInByGoogleRequest, _impl_.state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string redirect_uri = 4;
    {PROTOBUF_FIELD_OFFSET(SignInByGoogleRequest, _impl_.redirect_uri_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string nonce = 9;
    {PROTOBUF_FIELD_OFFSET(SignInByGoogleRequest, _impl_.nonce_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Duration ttl = 11;
    {PROTOBUF_FIELD_OFFSET(SignInByGoogleRequest, _impl_.ttl_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }}, {{
    "\42\6\4\5\14\5\0\0"
    "palm.auth.v1.SignInByGoogleRequest"
    "scopes"
    "code"
    "state"
    "redirect_uri"
    "nonce"
  }},
};

::uint8_t* SignInByGoogleRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.SignInByGoogleRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string scopes = 1;
  for (int i = 0, n = this->_internal_scopes_size(); i < n; ++i) {
    const auto& s = this->_internal_scopes().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.SignInByGoogleRequest.scopes");
    target = stream->WriteString(1, s, target);
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.SignInByGoogleRequest.code");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    const std::string& _s = this->_internal_state();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.SignInByGoogleRequest.state");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string redirect_uri = 4;
  if (!this->_internal_redirect_uri().empty()) {
    const std::string& _s = this->_internal_redirect_uri();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.SignInByGoogleRequest.redirect_uri");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string nonce = 9;
  if (!this->_internal_nonce().empty()) {
    const std::string& _s = this->_internal_nonce();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.SignInByGoogleRequest.nonce");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Duration ttl = 11;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::ttl(this),
        _Internal::ttl(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.SignInByGoogleRequest)
  return target;
}

::size_t SignInByGoogleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.SignInByGoogleRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string scopes = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_scopes().size());
  for (int i = 0, n = _internal_scopes().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_scopes().Get(i));
  }
  // string code = 2;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code());
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_state());
  }

  // string redirect_uri = 4;
  if (!this->_internal_redirect_uri().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_redirect_uri());
  }

  // string nonce = 9;
  if (!this->_internal_nonce().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_nonce());
  }

  // .google.protobuf.Duration ttl = 11;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.ttl_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SignInByGoogleRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SignInByGoogleRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*SignInByGoogleRequest::GetClassData() const { return &_class_data_; }


void SignInByGoogleRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SignInByGoogleRequest*>(&to_msg);
  auto& from = static_cast<const SignInByGoogleRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.SignInByGoogleRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_scopes()->MergeFrom(from._internal_scopes());
  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (!from._internal_redirect_uri().empty()) {
    _this->_internal_set_redirect_uri(from._internal_redirect_uri());
  }
  if (!from._internal_nonce().empty()) {
    _this->_internal_set_nonce(from._internal_nonce());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_ttl()->::google::protobuf::Duration::MergeFrom(
        from._internal_ttl());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SignInByGoogleRequest::CopyFrom(const SignInByGoogleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.SignInByGoogleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SignInByGoogleRequest::IsInitialized() const {
  return true;
}

void SignInByGoogleRequest::InternalSwap(SignInByGoogleRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.scopes_.InternalSwap(&other->_impl_.scopes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, lhs_arena,
                                       &other->_impl_.code_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, lhs_arena,
                                       &other->_impl_.state_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.redirect_uri_, lhs_arena,
                                       &other->_impl_.redirect_uri_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nonce_, lhs_arena,
                                       &other->_impl_.nonce_, rhs_arena);
  swap(_impl_.ttl_, other->_impl_.ttl_);
}

::google::protobuf::Metadata SignInByGoogleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[16]);
}
// ===================================================================

class GoogleSignInUrlRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GoogleSignInUrlRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GoogleSignInUrlRequest, _impl_._has_bits_);
  static const ::palm::auth::v1::Oauth2State& state(const GoogleSignInUrlRequest* msg);
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::auth::v1::Oauth2State& GoogleSignInUrlRequest::_Internal::state(const GoogleSignInUrlRequest* msg) {
  return *msg->_impl_.state_;
}
GoogleSignInUrlRequest::GoogleSignInUrlRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.GoogleSignInUrlRequest)
}
GoogleSignInUrlRequest::GoogleSignInUrlRequest(const GoogleSignInUrlRequest& from) : ::google::protobuf::Message() {
  GoogleSignInUrlRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.redirect_uri_){},
      decltype(_impl_.state_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.redirect_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.redirect_uri_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_redirect_uri().empty()) {
    _this->_impl_.redirect_uri_.Set(from._internal_redirect_uri(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.state_ = new ::palm::auth::v1::Oauth2State(*from._impl_.state_);
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.GoogleSignInUrlRequest)
}
inline void GoogleSignInUrlRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.redirect_uri_){},
      decltype(_impl_.state_){nullptr},
  };
  _impl_.redirect_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.redirect_uri_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
GoogleSignInUrlRequest::~GoogleSignInUrlRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.GoogleSignInUrlRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GoogleSignInUrlRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.redirect_uri_.Destroy();
  if (this != internal_default_instance()) delete _impl_.state_;
}
void GoogleSignInUrlRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GoogleSignInUrlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.GoogleSignInUrlRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.redirect_uri_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.state_ != nullptr);
    _impl_.state_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GoogleSignInUrlRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 56, 2> GoogleSignInUrlRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GoogleSignInUrlRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GoogleSignInUrlRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .palm.auth.v1.Oauth2State state = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GoogleSignInUrlRequest, _impl_.state_)}},
    // string redirect_uri = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GoogleSignInUrlRequest, _impl_.redirect_uri_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string redirect_uri = 1;
    {PROTOBUF_FIELD_OFFSET(GoogleSignInUrlRequest, _impl_.redirect_uri_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .palm.auth.v1.Oauth2State state = 2;
    {PROTOBUF_FIELD_OFFSET(GoogleSignInUrlRequest, _impl_.state_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::auth::v1::Oauth2State>()},
  }}, {{
    "\43\14\0\0\0\0\0\0"
    "palm.auth.v1.GoogleSignInUrlRequest"
    "redirect_uri"
  }},
};

::uint8_t* GoogleSignInUrlRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.GoogleSignInUrlRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string redirect_uri = 1;
  if (!this->_internal_redirect_uri().empty()) {
    const std::string& _s = this->_internal_redirect_uri();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.GoogleSignInUrlRequest.redirect_uri");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.auth.v1.Oauth2State state = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::state(this),
        _Internal::state(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.GoogleSignInUrlRequest)
  return target;
}

::size_t GoogleSignInUrlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.GoogleSignInUrlRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string redirect_uri = 1;
  if (!this->_internal_redirect_uri().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_redirect_uri());
  }

  // .palm.auth.v1.Oauth2State state = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.state_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GoogleSignInUrlRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GoogleSignInUrlRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*GoogleSignInUrlRequest::GetClassData() const { return &_class_data_; }


void GoogleSignInUrlRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GoogleSignInUrlRequest*>(&to_msg);
  auto& from = static_cast<const GoogleSignInUrlRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.GoogleSignInUrlRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_redirect_uri().empty()) {
    _this->_internal_set_redirect_uri(from._internal_redirect_uri());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_state()->::palm::auth::v1::Oauth2State::MergeFrom(
        from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GoogleSignInUrlRequest::CopyFrom(const GoogleSignInUrlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.GoogleSignInUrlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GoogleSignInUrlRequest::IsInitialized() const {
  return true;
}

void GoogleSignInUrlRequest::InternalSwap(GoogleSignInUrlRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.redirect_uri_, lhs_arena,
                                       &other->_impl_.redirect_uri_, rhs_arena);
  swap(_impl_.state_, other->_impl_.state_);
}

::google::protobuf::Metadata GoogleSignInUrlRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[17]);
}
// ===================================================================

class GoogleSignInUrlResponse::_Internal {
 public:
};

GoogleSignInUrlResponse::GoogleSignInUrlResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.GoogleSignInUrlResponse)
}
GoogleSignInUrlResponse::GoogleSignInUrlResponse(const GoogleSignInUrlResponse& from) : ::google::protobuf::Message() {
  GoogleSignInUrlResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.url_){},
      decltype(_impl_.nonce_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    _this->_impl_.url_.Set(from._internal_url(), _this->GetArenaForAllocation());
  }
  _impl_.nonce_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nonce_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nonce().empty()) {
    _this->_impl_.nonce_.Set(from._internal_nonce(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.GoogleSignInUrlResponse)
}
inline void GoogleSignInUrlResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.url_){},
      decltype(_impl_.nonce_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nonce_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nonce_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
GoogleSignInUrlResponse::~GoogleSignInUrlResponse() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.GoogleSignInUrlResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GoogleSignInUrlResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.url_.Destroy();
  _impl_.nonce_.Destroy();
}
void GoogleSignInUrlResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GoogleSignInUrlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.GoogleSignInUrlResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  _impl_.nonce_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GoogleSignInUrlResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 53, 2> GoogleSignInUrlResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GoogleSignInUrlResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string nonce = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GoogleSignInUrlResponse, _impl_.nonce_)}},
    // string url = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GoogleSignInUrlResponse, _impl_.url_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string url = 1;
    {PROTOBUF_FIELD_OFFSET(GoogleSignInUrlResponse, _impl_.url_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string nonce = 2;
    {PROTOBUF_FIELD_OFFSET(GoogleSignInUrlResponse, _impl_.nonce_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\3\5\0\0\0\0\0"
    "palm.auth.v1.GoogleSignInUrlResponse"
    "url"
    "nonce"
  }},
};

::uint8_t* GoogleSignInUrlResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.GoogleSignInUrlResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    const std::string& _s = this->_internal_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.GoogleSignInUrlResponse.url");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string nonce = 2;
  if (!this->_internal_nonce().empty()) {
    const std::string& _s = this->_internal_nonce();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.GoogleSignInUrlResponse.nonce");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.GoogleSignInUrlResponse)
  return target;
}

::size_t GoogleSignInUrlResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.GoogleSignInUrlResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_url());
  }

  // string nonce = 2;
  if (!this->_internal_nonce().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_nonce());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GoogleSignInUrlResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GoogleSignInUrlResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*GoogleSignInUrlResponse::GetClassData() const { return &_class_data_; }


void GoogleSignInUrlResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GoogleSignInUrlResponse*>(&to_msg);
  auto& from = static_cast<const GoogleSignInUrlResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.GoogleSignInUrlResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  if (!from._internal_nonce().empty()) {
    _this->_internal_set_nonce(from._internal_nonce());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GoogleSignInUrlResponse::CopyFrom(const GoogleSignInUrlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.GoogleSignInUrlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GoogleSignInUrlResponse::IsInitialized() const {
  return true;
}

void GoogleSignInUrlResponse::InternalSwap(GoogleSignInUrlResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, lhs_arena,
                                       &other->_impl_.url_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nonce_, lhs_arena,
                                       &other->_impl_.nonce_, rhs_arena);
}

::google::protobuf::Metadata GoogleSignInUrlResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[18]);
}
// ===================================================================

class WechatUserBindByIdRequest::_Internal {
 public:
};

WechatUserBindByIdRequest::WechatUserBindByIdRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.WechatUserBindByIdRequest)
}
WechatUserBindByIdRequest::WechatUserBindByIdRequest(const WechatUserBindByIdRequest& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.WechatUserBindByIdRequest)
}
inline void WechatUserBindByIdRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){0},
      decltype(_impl_.wechat_user_id_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
WechatUserBindByIdRequest::~WechatUserBindByIdRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.WechatUserBindByIdRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatUserBindByIdRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void WechatUserBindByIdRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WechatUserBindByIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.WechatUserBindByIdRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.user_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.wechat_user_id_) -
      reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.wechat_user_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatUserBindByIdRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> WechatUserBindByIdRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WechatUserBindByIdRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 wechat_user_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WechatUserBindByIdRequest, _impl_.wechat_user_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WechatUserBindByIdRequest, _impl_.wechat_user_id_)}},
    // int32 user_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WechatUserBindByIdRequest, _impl_.user_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WechatUserBindByIdRequest, _impl_.user_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 user_id = 1;
    {PROTOBUF_FIELD_OFFSET(WechatUserBindByIdRequest, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 wechat_user_id = 2;
    {PROTOBUF_FIELD_OFFSET(WechatUserBindByIdRequest, _impl_.wechat_user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* WechatUserBindByIdRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.WechatUserBindByIdRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_user_id(), target);
  }

  // int32 wechat_user_id = 2;
  if (this->_internal_wechat_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_wechat_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.WechatUserBindByIdRequest)
  return target;
}

::size_t WechatUserBindByIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.WechatUserBindByIdRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_user_id());
  }

  // int32 wechat_user_id = 2;
  if (this->_internal_wechat_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_wechat_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatUserBindByIdRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WechatUserBindByIdRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*WechatUserBindByIdRequest::GetClassData() const { return &_class_data_; }


void WechatUserBindByIdRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatUserBindByIdRequest*>(&to_msg);
  auto& from = static_cast<const WechatUserBindByIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.WechatUserBindByIdRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_wechat_user_id() != 0) {
    _this->_internal_set_wechat_user_id(from._internal_wechat_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatUserBindByIdRequest::CopyFrom(const WechatUserBindByIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.WechatUserBindByIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatUserBindByIdRequest::IsInitialized() const {
  return true;
}

void WechatUserBindByIdRequest::InternalSwap(WechatUserBindByIdRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WechatUserBindByIdRequest, _impl_.wechat_user_id_)
      + sizeof(WechatUserBindByIdRequest::_impl_.wechat_user_id_)
      - PROTOBUF_FIELD_OFFSET(WechatUserBindByIdRequest, _impl_.user_id_)>(
          reinterpret_cast<char*>(&_impl_.user_id_),
          reinterpret_cast<char*>(&other->_impl_.user_id_));
}

::google::protobuf::Metadata WechatUserBindByIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[19]);
}
// ===================================================================

class WechatUserBindByAccountRequest::_Internal {
 public:
};

WechatUserBindByAccountRequest::WechatUserBindByAccountRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.WechatUserBindByAccountRequest)
}
WechatUserBindByAccountRequest::WechatUserBindByAccountRequest(const WechatUserBindByAccountRequest& from) : ::google::protobuf::Message() {
  WechatUserBindByAccountRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){},
      decltype(_impl_.password_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.password_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.WechatUserBindByAccountRequest)
}
inline void WechatUserBindByAccountRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.nickname_){},
      decltype(_impl_.password_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.password_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
WechatUserBindByAccountRequest::~WechatUserBindByAccountRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.WechatUserBindByAccountRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatUserBindByAccountRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.password_.Destroy();
}
void WechatUserBindByAccountRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WechatUserBindByAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.WechatUserBindByAccountRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nickname_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatUserBindByAccountRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 68, 2> WechatUserBindByAccountRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WechatUserBindByAccountRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WechatUserBindByAccountRequest, _impl_.password_)}},
    // string nickname = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WechatUserBindByAccountRequest, _impl_.nickname_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string nickname = 1;
    {PROTOBUF_FIELD_OFFSET(WechatUserBindByAccountRequest, _impl_.nickname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(WechatUserBindByAccountRequest, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\10\10\0\0\0\0\0"
    "palm.auth.v1.WechatUserBindByAccountRequest"
    "nickname"
    "password"
  }},
};

::uint8_t* WechatUserBindByAccountRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.WechatUserBindByAccountRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string nickname = 1;
  if (!this->_internal_nickname().empty()) {
    const std::string& _s = this->_internal_nickname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatUserBindByAccountRequest.nickname");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatUserBindByAccountRequest.password");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.WechatUserBindByAccountRequest)
  return target;
}

::size_t WechatUserBindByAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.WechatUserBindByAccountRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 1;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_nickname());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatUserBindByAccountRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WechatUserBindByAccountRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*WechatUserBindByAccountRequest::GetClassData() const { return &_class_data_; }


void WechatUserBindByAccountRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatUserBindByAccountRequest*>(&to_msg);
  auto& from = static_cast<const WechatUserBindByAccountRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.WechatUserBindByAccountRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatUserBindByAccountRequest::CopyFrom(const WechatUserBindByAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.WechatUserBindByAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatUserBindByAccountRequest::IsInitialized() const {
  return true;
}

void WechatUserBindByAccountRequest::InternalSwap(WechatUserBindByAccountRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, lhs_arena,
                                       &other->_impl_.nickname_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, lhs_arena,
                                       &other->_impl_.password_, rhs_arena);
}

::google::protobuf::Metadata WechatUserBindByAccountRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[20]);
}
// ===================================================================

class WechatUserQueryByOpenIdRequest::_Internal {
 public:
};

WechatUserQueryByOpenIdRequest::WechatUserQueryByOpenIdRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.WechatUserQueryByOpenIdRequest)
}
WechatUserQueryByOpenIdRequest::WechatUserQueryByOpenIdRequest(const WechatUserQueryByOpenIdRequest& from) : ::google::protobuf::Message() {
  WechatUserQueryByOpenIdRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.app_id_){},
      decltype(_impl_.open_id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    _this->_impl_.app_id_.Set(from._internal_app_id(), _this->GetArenaForAllocation());
  }
  _impl_.open_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_open_id().empty()) {
    _this->_impl_.open_id_.Set(from._internal_open_id(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.WechatUserQueryByOpenIdRequest)
}
inline void WechatUserQueryByOpenIdRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.app_id_){},
      decltype(_impl_.open_id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.open_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
WechatUserQueryByOpenIdRequest::~WechatUserQueryByOpenIdRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.WechatUserQueryByOpenIdRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatUserQueryByOpenIdRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.app_id_.Destroy();
  _impl_.open_id_.Destroy();
}
void WechatUserQueryByOpenIdRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WechatUserQueryByOpenIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.WechatUserQueryByOpenIdRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.app_id_.ClearToEmpty();
  _impl_.open_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatUserQueryByOpenIdRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 65, 2> WechatUserQueryByOpenIdRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WechatUserQueryByOpenIdRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string open_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WechatUserQueryByOpenIdRequest, _impl_.open_id_)}},
    // string app_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WechatUserQueryByOpenIdRequest, _impl_.app_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string app_id = 1;
    {PROTOBUF_FIELD_OFFSET(WechatUserQueryByOpenIdRequest, _impl_.app_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string open_id = 2;
    {PROTOBUF_FIELD_OFFSET(WechatUserQueryByOpenIdRequest, _impl_.open_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\6\7\0\0\0\0\0"
    "palm.auth.v1.WechatUserQueryByOpenIdRequest"
    "app_id"
    "open_id"
  }},
};

::uint8_t* WechatUserQueryByOpenIdRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.WechatUserQueryByOpenIdRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatUserQueryByOpenIdRequest.app_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string open_id = 2;
  if (!this->_internal_open_id().empty()) {
    const std::string& _s = this->_internal_open_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatUserQueryByOpenIdRequest.open_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.WechatUserQueryByOpenIdRequest)
  return target;
}

::size_t WechatUserQueryByOpenIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.WechatUserQueryByOpenIdRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // string open_id = 2;
  if (!this->_internal_open_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_open_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatUserQueryByOpenIdRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WechatUserQueryByOpenIdRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*WechatUserQueryByOpenIdRequest::GetClassData() const { return &_class_data_; }


void WechatUserQueryByOpenIdRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatUserQueryByOpenIdRequest*>(&to_msg);
  auto& from = static_cast<const WechatUserQueryByOpenIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.WechatUserQueryByOpenIdRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_open_id().empty()) {
    _this->_internal_set_open_id(from._internal_open_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatUserQueryByOpenIdRequest::CopyFrom(const WechatUserQueryByOpenIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.WechatUserQueryByOpenIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatUserQueryByOpenIdRequest::IsInitialized() const {
  return true;
}

void WechatUserQueryByOpenIdRequest::InternalSwap(WechatUserQueryByOpenIdRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, lhs_arena,
                                       &other->_impl_.app_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.open_id_, lhs_arena,
                                       &other->_impl_.open_id_, rhs_arena);
}

::google::protobuf::Metadata WechatUserQueryByOpenIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[21]);
}
// ===================================================================

class WechatUserQueryByUnionIdRequest::_Internal {
 public:
};

WechatUserQueryByUnionIdRequest::WechatUserQueryByUnionIdRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.WechatUserQueryByUnionIdRequest)
}
WechatUserQueryByUnionIdRequest::WechatUserQueryByUnionIdRequest(const WechatUserQueryByUnionIdRequest& from) : ::google::protobuf::Message() {
  WechatUserQueryByUnionIdRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.union_id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.union_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.union_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_union_id().empty()) {
    _this->_impl_.union_id_.Set(from._internal_union_id(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.WechatUserQueryByUnionIdRequest)
}
inline void WechatUserQueryByUnionIdRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.union_id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.union_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.union_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
WechatUserQueryByUnionIdRequest::~WechatUserQueryByUnionIdRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.WechatUserQueryByUnionIdRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatUserQueryByUnionIdRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.union_id_.Destroy();
}
void WechatUserQueryByUnionIdRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WechatUserQueryByUnionIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.WechatUserQueryByUnionIdRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.union_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatUserQueryByUnionIdRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 61, 2> WechatUserQueryByUnionIdRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WechatUserQueryByUnionIdRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string union_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WechatUserQueryByUnionIdRequest, _impl_.union_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string union_id = 1;
    {PROTOBUF_FIELD_OFFSET(WechatUserQueryByUnionIdRequest, _impl_.union_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\10\0\0\0\0\0\0"
    "palm.auth.v1.WechatUserQueryByUnionIdRequest"
    "union_id"
  }},
};

::uint8_t* WechatUserQueryByUnionIdRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.WechatUserQueryByUnionIdRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string union_id = 1;
  if (!this->_internal_union_id().empty()) {
    const std::string& _s = this->_internal_union_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatUserQueryByUnionIdRequest.union_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.WechatUserQueryByUnionIdRequest)
  return target;
}

::size_t WechatUserQueryByUnionIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.WechatUserQueryByUnionIdRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string union_id = 1;
  if (!this->_internal_union_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_union_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatUserQueryByUnionIdRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WechatUserQueryByUnionIdRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*WechatUserQueryByUnionIdRequest::GetClassData() const { return &_class_data_; }


void WechatUserQueryByUnionIdRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatUserQueryByUnionIdRequest*>(&to_msg);
  auto& from = static_cast<const WechatUserQueryByUnionIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.WechatUserQueryByUnionIdRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_union_id().empty()) {
    _this->_internal_set_union_id(from._internal_union_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatUserQueryByUnionIdRequest::CopyFrom(const WechatUserQueryByUnionIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.WechatUserQueryByUnionIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatUserQueryByUnionIdRequest::IsInitialized() const {
  return true;
}

void WechatUserQueryByUnionIdRequest::InternalSwap(WechatUserQueryByUnionIdRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.union_id_, lhs_arena,
                                       &other->_impl_.union_id_, rhs_arena);
}

::google::protobuf::Metadata WechatUserQueryByUnionIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[22]);
}
// ===================================================================

class WechatAllMiniProgramUserResponse_Item::_Internal {
 public:
  using HasBits = decltype(std::declval<WechatAllMiniProgramUserResponse_Item>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse_Item, _impl_._has_bits_);
  static void set_has_nickname(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_avatar_url(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

WechatAllMiniProgramUserResponse_Item::WechatAllMiniProgramUserResponse_Item(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.WechatAllMiniProgramUserResponse.Item)
}
WechatAllMiniProgramUserResponse_Item::WechatAllMiniProgramUserResponse_Item(const WechatAllMiniProgramUserResponse_Item& from) : ::google::protobuf::Message() {
  WechatAllMiniProgramUserResponse_Item* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.union_id_){},
      decltype(_impl_.app_id_){},
      decltype(_impl_.open_id_){},
      decltype(_impl_.nickname_){},
      decltype(_impl_.avatar_url_){},
      decltype(_impl_.id_){},
      decltype(_impl_.user_id_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.union_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.union_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_union_id().empty()) {
    _this->_impl_.union_id_.Set(from._internal_union_id(), _this->GetArenaForAllocation());
  }
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    _this->_impl_.app_id_.Set(from._internal_app_id(), _this->GetArenaForAllocation());
  }
  _impl_.open_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_open_id().empty()) {
    _this->_impl_.open_id_.Set(from._internal_open_id(), _this->GetArenaForAllocation());
  }
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), _this->GetArenaForAllocation());
  }
  _impl_.avatar_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.avatar_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.avatar_url_.Set(from._internal_avatar_url(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.user_id_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.user_id_));

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.WechatAllMiniProgramUserResponse.Item)
}
inline void WechatAllMiniProgramUserResponse_Item::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.union_id_){},
      decltype(_impl_.app_id_){},
      decltype(_impl_.open_id_){},
      decltype(_impl_.nickname_){},
      decltype(_impl_.avatar_url_){},
      decltype(_impl_.id_){0},
      decltype(_impl_.user_id_){0},
  };
  _impl_.union_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.union_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.open_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avatar_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.avatar_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
WechatAllMiniProgramUserResponse_Item::~WechatAllMiniProgramUserResponse_Item() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.WechatAllMiniProgramUserResponse.Item)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatAllMiniProgramUserResponse_Item::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.union_id_.Destroy();
  _impl_.app_id_.Destroy();
  _impl_.open_id_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.avatar_url_.Destroy();
}
void WechatAllMiniProgramUserResponse_Item::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WechatAllMiniProgramUserResponse_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.WechatAllMiniProgramUserResponse.Item)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.union_id_.ClearToEmpty();
  _impl_.app_id_.ClearToEmpty();
  _impl_.open_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.nickname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.avatar_url_.ClearNonDefaultToEmpty();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.user_id_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.user_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatAllMiniProgramUserResponse_Item::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 98, 2> WechatAllMiniProgramUserResponse_Item::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse_Item, _impl_._has_bits_),
    0, // no _extensions_
    12, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294964192,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WechatAllMiniProgramUserResponse_Item_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WechatAllMiniProgramUserResponse_Item, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse_Item, _impl_.id_)}},
    // int32 user_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WechatAllMiniProgramUserResponse_Item, _impl_.user_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse_Item, _impl_.user_id_)}},
    // string union_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse_Item, _impl_.union_id_)}},
    // string app_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse_Item, _impl_.app_id_)}},
    // string open_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse_Item, _impl_.open_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse_Item, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 user_id = 2;
    {PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse_Item, _impl_.user_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string union_id = 3;
    {PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse_Item, _impl_.union_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string app_id = 4;
    {PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse_Item, _impl_.app_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string open_id = 5;
    {PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse_Item, _impl_.open_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string nickname = 11;
    {PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse_Item, _impl_.nickname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string avatar_url = 12;
    {PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse_Item, _impl_.avatar_url_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\62\0\0\10\6\7\10\12"
    "palm.auth.v1.WechatAllMiniProgramUserResponse.Item"
    "union_id"
    "app_id"
    "open_id"
    "nickname"
    "avatar_url"
  }},
};

::uint8_t* WechatAllMiniProgramUserResponse_Item::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.WechatAllMiniProgramUserResponse.Item)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // int32 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_user_id(), target);
  }

  // string union_id = 3;
  if (!this->_internal_union_id().empty()) {
    const std::string& _s = this->_internal_union_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatAllMiniProgramUserResponse.Item.union_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string app_id = 4;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatAllMiniProgramUserResponse.Item.app_id");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string open_id = 5;
  if (!this->_internal_open_id().empty()) {
    const std::string& _s = this->_internal_open_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatAllMiniProgramUserResponse.Item.open_id");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string nickname = 11;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_nickname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatAllMiniProgramUserResponse.Item.nickname");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // optional string avatar_url = 12;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_avatar_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatAllMiniProgramUserResponse.Item.avatar_url");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.WechatAllMiniProgramUserResponse.Item)
  return target;
}

::size_t WechatAllMiniProgramUserResponse_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.WechatAllMiniProgramUserResponse.Item)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string union_id = 3;
  if (!this->_internal_union_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_union_id());
  }

  // string app_id = 4;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // string open_id = 5;
  if (!this->_internal_open_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_open_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string nickname = 11;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_nickname());
    }

    // optional string avatar_url = 12;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_avatar_url());
    }

  }
  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  // int32 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatAllMiniProgramUserResponse_Item::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WechatAllMiniProgramUserResponse_Item::MergeImpl
};
const ::google::protobuf::Message::ClassData*WechatAllMiniProgramUserResponse_Item::GetClassData() const { return &_class_data_; }


void WechatAllMiniProgramUserResponse_Item::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatAllMiniProgramUserResponse_Item*>(&to_msg);
  auto& from = static_cast<const WechatAllMiniProgramUserResponse_Item&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.WechatAllMiniProgramUserResponse.Item)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_union_id().empty()) {
    _this->_internal_set_union_id(from._internal_union_id());
  }
  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_open_id().empty()) {
    _this->_internal_set_open_id(from._internal_open_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_nickname(from._internal_nickname());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_avatar_url(from._internal_avatar_url());
    }
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatAllMiniProgramUserResponse_Item::CopyFrom(const WechatAllMiniProgramUserResponse_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.WechatAllMiniProgramUserResponse.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatAllMiniProgramUserResponse_Item::IsInitialized() const {
  return true;
}

void WechatAllMiniProgramUserResponse_Item::InternalSwap(WechatAllMiniProgramUserResponse_Item* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.union_id_, lhs_arena,
                                       &other->_impl_.union_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, lhs_arena,
                                       &other->_impl_.app_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.open_id_, lhs_arena,
                                       &other->_impl_.open_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, lhs_arena,
                                       &other->_impl_.nickname_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.avatar_url_, lhs_arena,
                                       &other->_impl_.avatar_url_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse_Item, _impl_.user_id_)
      + sizeof(WechatAllMiniProgramUserResponse_Item::_impl_.user_id_)
      - PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse_Item, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata WechatAllMiniProgramUserResponse_Item::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[23]);
}
// ===================================================================

class WechatAllMiniProgramUserResponse::_Internal {
 public:
};

WechatAllMiniProgramUserResponse::WechatAllMiniProgramUserResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.WechatAllMiniProgramUserResponse)
}
WechatAllMiniProgramUserResponse::WechatAllMiniProgramUserResponse(const WechatAllMiniProgramUserResponse& from) : ::google::protobuf::Message() {
  WechatAllMiniProgramUserResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.WechatAllMiniProgramUserResponse)
}
inline void WechatAllMiniProgramUserResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
WechatAllMiniProgramUserResponse::~WechatAllMiniProgramUserResponse() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.WechatAllMiniProgramUserResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatAllMiniProgramUserResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}
void WechatAllMiniProgramUserResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WechatAllMiniProgramUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.WechatAllMiniProgramUserResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_items()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatAllMiniProgramUserResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> WechatAllMiniProgramUserResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_WechatAllMiniProgramUserResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .palm.auth.v1.WechatAllMiniProgramUserResponse.Item items = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .palm.auth.v1.WechatAllMiniProgramUserResponse.Item items = 1;
    {PROTOBUF_FIELD_OFFSET(WechatAllMiniProgramUserResponse, _impl_.items_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::auth::v1::WechatAllMiniProgramUserResponse_Item>()},
  }}, {{
  }},
};

::uint8_t* WechatAllMiniProgramUserResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.WechatAllMiniProgramUserResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .palm.auth.v1.WechatAllMiniProgramUserResponse.Item items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.WechatAllMiniProgramUserResponse)
  return target;
}

::size_t WechatAllMiniProgramUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.WechatAllMiniProgramUserResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.auth.v1.WechatAllMiniProgramUserResponse.Item items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_internal_items()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatAllMiniProgramUserResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WechatAllMiniProgramUserResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*WechatAllMiniProgramUserResponse::GetClassData() const { return &_class_data_; }


void WechatAllMiniProgramUserResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatAllMiniProgramUserResponse*>(&to_msg);
  auto& from = static_cast<const WechatAllMiniProgramUserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.WechatAllMiniProgramUserResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(from._internal_items());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatAllMiniProgramUserResponse::CopyFrom(const WechatAllMiniProgramUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.WechatAllMiniProgramUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatAllMiniProgramUserResponse::IsInitialized() const {
  return true;
}

void WechatAllMiniProgramUserResponse::InternalSwap(WechatAllMiniProgramUserResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::google::protobuf::Metadata WechatAllMiniProgramUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[24]);
}
// ===================================================================

class WechatAllOauth2UserResponse_Item::_Internal {
 public:
  using HasBits = decltype(std::declval<WechatAllOauth2UserResponse_Item>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_._has_bits_);
  static void set_has_head_img_url(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

WechatAllOauth2UserResponse_Item::WechatAllOauth2UserResponse_Item(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.WechatAllOauth2UserResponse.Item)
}
WechatAllOauth2UserResponse_Item::WechatAllOauth2UserResponse_Item(const WechatAllOauth2UserResponse_Item& from) : ::google::protobuf::Message() {
  WechatAllOauth2UserResponse_Item* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.privilege_){from._impl_.privilege_},
      decltype(_impl_.union_id_){},
      decltype(_impl_.app_id_){},
      decltype(_impl_.open_id_){},
      decltype(_impl_.nickname_){},
      decltype(_impl_.city_){},
      decltype(_impl_.province_){},
      decltype(_impl_.country_){},
      decltype(_impl_.head_img_url_){},
      decltype(_impl_.lang_){},
      decltype(_impl_.id_){},
      decltype(_impl_.user_id_){},
      decltype(_impl_.sex_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.union_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.union_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_union_id().empty()) {
    _this->_impl_.union_id_.Set(from._internal_union_id(), _this->GetArenaForAllocation());
  }
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    _this->_impl_.app_id_.Set(from._internal_app_id(), _this->GetArenaForAllocation());
  }
  _impl_.open_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_open_id().empty()) {
    _this->_impl_.open_id_.Set(from._internal_open_id(), _this->GetArenaForAllocation());
  }
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), _this->GetArenaForAllocation());
  }
  _impl_.city_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.city_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_city().empty()) {
    _this->_impl_.city_.Set(from._internal_city(), _this->GetArenaForAllocation());
  }
  _impl_.province_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.province_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_province().empty()) {
    _this->_impl_.province_.Set(from._internal_province(), _this->GetArenaForAllocation());
  }
  _impl_.country_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.country_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_country().empty()) {
    _this->_impl_.country_.Set(from._internal_country(), _this->GetArenaForAllocation());
  }
  _impl_.head_img_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.head_img_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.head_img_url_.Set(from._internal_head_img_url(), _this->GetArenaForAllocation());
  }
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lang().empty()) {
    _this->_impl_.lang_.Set(from._internal_lang(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.sex_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.sex_));

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.WechatAllOauth2UserResponse.Item)
}
inline void WechatAllOauth2UserResponse_Item::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.privilege_){arena},
      decltype(_impl_.union_id_){},
      decltype(_impl_.app_id_){},
      decltype(_impl_.open_id_){},
      decltype(_impl_.nickname_){},
      decltype(_impl_.city_){},
      decltype(_impl_.province_){},
      decltype(_impl_.country_){},
      decltype(_impl_.head_img_url_){},
      decltype(_impl_.lang_){},
      decltype(_impl_.id_){0},
      decltype(_impl_.user_id_){0},
      decltype(_impl_.sex_){0},
  };
  _impl_.union_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.union_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.open_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.city_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.city_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.province_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.province_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.country_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.country_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.head_img_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.head_img_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
WechatAllOauth2UserResponse_Item::~WechatAllOauth2UserResponse_Item() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.WechatAllOauth2UserResponse.Item)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatAllOauth2UserResponse_Item::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_privilege()->~RepeatedPtrField();
  _impl_.union_id_.Destroy();
  _impl_.app_id_.Destroy();
  _impl_.open_id_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.city_.Destroy();
  _impl_.province_.Destroy();
  _impl_.country_.Destroy();
  _impl_.head_img_url_.Destroy();
  _impl_.lang_.Destroy();
}
void WechatAllOauth2UserResponse_Item::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WechatAllOauth2UserResponse_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.WechatAllOauth2UserResponse.Item)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_privilege()->Clear();
  _impl_.union_id_.ClearToEmpty();
  _impl_.app_id_.ClearToEmpty();
  _impl_.open_id_.ClearToEmpty();
  _impl_.nickname_.ClearToEmpty();
  _impl_.city_.ClearToEmpty();
  _impl_.province_.ClearToEmpty();
  _impl_.country_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.head_img_url_.ClearNonDefaultToEmpty();
  }
  _impl_.lang_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sex_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.sex_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatAllOauth2UserResponse_Item::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 0, 135, 2> WechatAllOauth2UserResponse_Item::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_._has_bits_),
    0, // no _extensions_
    18, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294706144,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WechatAllOauth2UserResponse_Item_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string head_img_url = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 0, 0, PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.head_img_url_)}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WechatAllOauth2UserResponse_Item, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.id_)}},
    // int32 user_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WechatAllOauth2UserResponse_Item, _impl_.user_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.user_id_)}},
    // string union_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.union_id_)}},
    // string app_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.app_id_)}},
    // string open_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.open_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string nickname = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.nickname_)}},
    // int32 sex = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WechatAllOauth2UserResponse_Item, _impl_.sex_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.sex_)}},
    // string city = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.city_)}},
    // string province = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.province_)}},
    // string country = 15;
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.country_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 user_id = 2;
    {PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.user_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string union_id = 3;
    {PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.union_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string app_id = 4;
    {PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.app_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string open_id = 5;
    {PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.open_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string nickname = 11;
    {PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.nickname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 sex = 12;
    {PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.sex_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string city = 13;
    {PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.city_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string province = 14;
    {PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.province_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string country = 15;
    {PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.country_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string head_img_url = 16;
    {PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.head_img_url_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string privilege = 17;
    {PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.privilege_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string lang = 18;
    {PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.lang_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\0\0\10\6\7\10\0\4\10\7\14\11\4\0\0"
    "palm.auth.v1.WechatAllOauth2UserResponse.Item"
    "union_id"
    "app_id"
    "open_id"
    "nickname"
    "city"
    "province"
    "country"
    "head_img_url"
    "privilege"
    "lang"
  }},
};

::uint8_t* WechatAllOauth2UserResponse_Item::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.WechatAllOauth2UserResponse.Item)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // int32 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_user_id(), target);
  }

  // string union_id = 3;
  if (!this->_internal_union_id().empty()) {
    const std::string& _s = this->_internal_union_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatAllOauth2UserResponse.Item.union_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string app_id = 4;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatAllOauth2UserResponse.Item.app_id");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string open_id = 5;
  if (!this->_internal_open_id().empty()) {
    const std::string& _s = this->_internal_open_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatAllOauth2UserResponse.Item.open_id");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string nickname = 11;
  if (!this->_internal_nickname().empty()) {
    const std::string& _s = this->_internal_nickname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatAllOauth2UserResponse.Item.nickname");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // int32 sex = 12;
  if (this->_internal_sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<12>(
            stream, this->_internal_sex(), target);
  }

  // string city = 13;
  if (!this->_internal_city().empty()) {
    const std::string& _s = this->_internal_city();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatAllOauth2UserResponse.Item.city");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // string province = 14;
  if (!this->_internal_province().empty()) {
    const std::string& _s = this->_internal_province();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatAllOauth2UserResponse.Item.province");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // string country = 15;
  if (!this->_internal_country().empty()) {
    const std::string& _s = this->_internal_country();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatAllOauth2UserResponse.Item.country");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string head_img_url = 16;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_head_img_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatAllOauth2UserResponse.Item.head_img_url");
    target = stream->WriteStringMaybeAliased(16, _s, target);
  }

  // repeated string privilege = 17;
  for (int i = 0, n = this->_internal_privilege_size(); i < n; ++i) {
    const auto& s = this->_internal_privilege().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatAllOauth2UserResponse.Item.privilege");
    target = stream->WriteString(17, s, target);
  }

  // string lang = 18;
  if (!this->_internal_lang().empty()) {
    const std::string& _s = this->_internal_lang();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatAllOauth2UserResponse.Item.lang");
    target = stream->WriteStringMaybeAliased(18, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.WechatAllOauth2UserResponse.Item)
  return target;
}

::size_t WechatAllOauth2UserResponse_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.WechatAllOauth2UserResponse.Item)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string privilege = 17;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_privilege().size());
  for (int i = 0, n = _internal_privilege().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_privilege().Get(i));
  }
  // string union_id = 3;
  if (!this->_internal_union_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_union_id());
  }

  // string app_id = 4;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // string open_id = 5;
  if (!this->_internal_open_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_open_id());
  }

  // string nickname = 11;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_nickname());
  }

  // string city = 13;
  if (!this->_internal_city().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_city());
  }

  // string province = 14;
  if (!this->_internal_province().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_province());
  }

  // string country = 15;
  if (!this->_internal_country().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_country());
  }

  // optional string head_img_url = 16;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_head_img_url());
  }

  // string lang = 18;
  if (!this->_internal_lang().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_lang());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  // int32 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_user_id());
  }

  // int32 sex = 12;
  if (this->_internal_sex() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_sex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatAllOauth2UserResponse_Item::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WechatAllOauth2UserResponse_Item::MergeImpl
};
const ::google::protobuf::Message::ClassData*WechatAllOauth2UserResponse_Item::GetClassData() const { return &_class_data_; }


void WechatAllOauth2UserResponse_Item::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatAllOauth2UserResponse_Item*>(&to_msg);
  auto& from = static_cast<const WechatAllOauth2UserResponse_Item&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.WechatAllOauth2UserResponse.Item)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_privilege()->MergeFrom(from._internal_privilege());
  if (!from._internal_union_id().empty()) {
    _this->_internal_set_union_id(from._internal_union_id());
  }
  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_open_id().empty()) {
    _this->_internal_set_open_id(from._internal_open_id());
  }
  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_city().empty()) {
    _this->_internal_set_city(from._internal_city());
  }
  if (!from._internal_province().empty()) {
    _this->_internal_set_province(from._internal_province());
  }
  if (!from._internal_country().empty()) {
    _this->_internal_set_country(from._internal_country());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_head_img_url(from._internal_head_img_url());
  }
  if (!from._internal_lang().empty()) {
    _this->_internal_set_lang(from._internal_lang());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_sex() != 0) {
    _this->_internal_set_sex(from._internal_sex());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatAllOauth2UserResponse_Item::CopyFrom(const WechatAllOauth2UserResponse_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.WechatAllOauth2UserResponse.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatAllOauth2UserResponse_Item::IsInitialized() const {
  return true;
}

void WechatAllOauth2UserResponse_Item::InternalSwap(WechatAllOauth2UserResponse_Item* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.privilege_.InternalSwap(&other->_impl_.privilege_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.union_id_, lhs_arena,
                                       &other->_impl_.union_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, lhs_arena,
                                       &other->_impl_.app_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.open_id_, lhs_arena,
                                       &other->_impl_.open_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, lhs_arena,
                                       &other->_impl_.nickname_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.city_, lhs_arena,
                                       &other->_impl_.city_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.province_, lhs_arena,
                                       &other->_impl_.province_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.country_, lhs_arena,
                                       &other->_impl_.country_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.head_img_url_, lhs_arena,
                                       &other->_impl_.head_img_url_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lang_, lhs_arena,
                                       &other->_impl_.lang_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.sex_)
      + sizeof(WechatAllOauth2UserResponse_Item::_impl_.sex_)
      - PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse_Item, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata WechatAllOauth2UserResponse_Item::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[25]);
}
// ===================================================================

class WechatAllOauth2UserResponse::_Internal {
 public:
};

WechatAllOauth2UserResponse::WechatAllOauth2UserResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.WechatAllOauth2UserResponse)
}
WechatAllOauth2UserResponse::WechatAllOauth2UserResponse(const WechatAllOauth2UserResponse& from) : ::google::protobuf::Message() {
  WechatAllOauth2UserResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.WechatAllOauth2UserResponse)
}
inline void WechatAllOauth2UserResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
WechatAllOauth2UserResponse::~WechatAllOauth2UserResponse() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.WechatAllOauth2UserResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatAllOauth2UserResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}
void WechatAllOauth2UserResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WechatAllOauth2UserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.WechatAllOauth2UserResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_items()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatAllOauth2UserResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> WechatAllOauth2UserResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_WechatAllOauth2UserResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .palm.auth.v1.WechatAllOauth2UserResponse.Item items = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .palm.auth.v1.WechatAllOauth2UserResponse.Item items = 1;
    {PROTOBUF_FIELD_OFFSET(WechatAllOauth2UserResponse, _impl_.items_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::auth::v1::WechatAllOauth2UserResponse_Item>()},
  }}, {{
  }},
};

::uint8_t* WechatAllOauth2UserResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.WechatAllOauth2UserResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .palm.auth.v1.WechatAllOauth2UserResponse.Item items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.WechatAllOauth2UserResponse)
  return target;
}

::size_t WechatAllOauth2UserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.WechatAllOauth2UserResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.auth.v1.WechatAllOauth2UserResponse.Item items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_internal_items()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatAllOauth2UserResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WechatAllOauth2UserResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*WechatAllOauth2UserResponse::GetClassData() const { return &_class_data_; }


void WechatAllOauth2UserResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatAllOauth2UserResponse*>(&to_msg);
  auto& from = static_cast<const WechatAllOauth2UserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.WechatAllOauth2UserResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(from._internal_items());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatAllOauth2UserResponse::CopyFrom(const WechatAllOauth2UserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.WechatAllOauth2UserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatAllOauth2UserResponse::IsInitialized() const {
  return true;
}

void WechatAllOauth2UserResponse::InternalSwap(WechatAllOauth2UserResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::google::protobuf::Metadata WechatAllOauth2UserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[26]);
}
// ===================================================================

class SignInByWechatOauth2Request::_Internal {
 public:
  using HasBits = decltype(std::declval<SignInByWechatOauth2Request>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SignInByWechatOauth2Request, _impl_._has_bits_);
  static const ::google::protobuf::Duration& ttl(const SignInByWechatOauth2Request* msg);
  static void set_has_ttl(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Duration& SignInByWechatOauth2Request::_Internal::ttl(const SignInByWechatOauth2Request* msg) {
  return *msg->_impl_.ttl_;
}
void SignInByWechatOauth2Request::clear_ttl() {
  if (_impl_.ttl_ != nullptr) _impl_.ttl_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SignInByWechatOauth2Request::SignInByWechatOauth2Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.SignInByWechatOauth2Request)
}
SignInByWechatOauth2Request::SignInByWechatOauth2Request(const SignInByWechatOauth2Request& from) : ::google::protobuf::Message() {
  SignInByWechatOauth2Request* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.state_){},
      decltype(_impl_.code_){},
      decltype(_impl_.app_id_){},
      decltype(_impl_.ttl_){nullptr},
      decltype(_impl_.language_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.state_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_state().empty()) {
    _this->_impl_.state_.Set(from._internal_state(), _this->GetArenaForAllocation());
  }
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    _this->_impl_.code_.Set(from._internal_code(), _this->GetArenaForAllocation());
  }
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    _this->_impl_.app_id_.Set(from._internal_app_id(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.ttl_ = new ::google::protobuf::Duration(*from._impl_.ttl_);
  }
  _this->_impl_.language_ = from._impl_.language_;

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.SignInByWechatOauth2Request)
}
inline void SignInByWechatOauth2Request::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.state_){},
      decltype(_impl_.code_){},
      decltype(_impl_.app_id_){},
      decltype(_impl_.ttl_){nullptr},
      decltype(_impl_.language_){0},
  };
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.state_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SignInByWechatOauth2Request::~SignInByWechatOauth2Request() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.SignInByWechatOauth2Request)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SignInByWechatOauth2Request::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.state_.Destroy();
  _impl_.code_.Destroy();
  _impl_.app_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.ttl_;
}
void SignInByWechatOauth2Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SignInByWechatOauth2Request::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.SignInByWechatOauth2Request)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.state_.ClearToEmpty();
  _impl_.code_.ClearToEmpty();
  _impl_.app_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ttl_ != nullptr);
    _impl_.ttl_->Clear();
  }
  _impl_.language_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SignInByWechatOauth2Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 1, 64, 2> SignInByWechatOauth2Request::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SignInByWechatOauth2Request, _impl_._has_bits_),
    0, // no _extensions_
    11, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966136,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SignInByWechatOauth2Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SignInByWechatOauth2Request, _impl_.language_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(SignInByWechatOauth2Request, _impl_.language_)}},
    // string state = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SignInByWechatOauth2Request, _impl_.state_)}},
    // string code = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SignInByWechatOauth2Request, _impl_.code_)}},
    // string app_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SignInByWechatOauth2Request, _impl_.app_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string state = 1;
    {PROTOBUF_FIELD_OFFSET(SignInByWechatOauth2Request, _impl_.state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string code = 2;
    {PROTOBUF_FIELD_OFFSET(SignInByWechatOauth2Request, _impl_.code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string app_id = 3;
    {PROTOBUF_FIELD_OFFSET(SignInByWechatOauth2Request, _impl_.app_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 8;
    {PROTOBUF_FIELD_OFFSET(SignInByWechatOauth2Request, _impl_.language_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .google.protobuf.Duration ttl = 11;
    {PROTOBUF_FIELD_OFFSET(SignInByWechatOauth2Request, _impl_.ttl_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }}, {{
    "\50\5\4\6\0\0\0\0"
    "palm.auth.v1.SignInByWechatOauth2Request"
    "state"
    "code"
    "app_id"
  }},
};

::uint8_t* SignInByWechatOauth2Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.SignInByWechatOauth2Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string state = 1;
  if (!this->_internal_state().empty()) {
    const std::string& _s = this->_internal_state();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.SignInByWechatOauth2Request.state");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.SignInByWechatOauth2Request.code");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string app_id = 3;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.SignInByWechatOauth2Request.app_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 8;
  if (this->_internal_language() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        8, this->_internal_language(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Duration ttl = 11;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::ttl(this),
        _Internal::ttl(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.SignInByWechatOauth2Request)
  return target;
}

::size_t SignInByWechatOauth2Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.SignInByWechatOauth2Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string state = 1;
  if (!this->_internal_state().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_state());
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code());
  }

  // string app_id = 3;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // .google.protobuf.Duration ttl = 11;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.ttl_);
  }

  // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 8;
  if (this->_internal_language() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_language());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SignInByWechatOauth2Request::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SignInByWechatOauth2Request::MergeImpl
};
const ::google::protobuf::Message::ClassData*SignInByWechatOauth2Request::GetClassData() const { return &_class_data_; }


void SignInByWechatOauth2Request::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SignInByWechatOauth2Request*>(&to_msg);
  auto& from = static_cast<const SignInByWechatOauth2Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.SignInByWechatOauth2Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_ttl()->::google::protobuf::Duration::MergeFrom(
        from._internal_ttl());
  }
  if (from._internal_language() != 0) {
    _this->_internal_set_language(from._internal_language());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SignInByWechatOauth2Request::CopyFrom(const SignInByWechatOauth2Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.SignInByWechatOauth2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SignInByWechatOauth2Request::IsInitialized() const {
  return true;
}

void SignInByWechatOauth2Request::InternalSwap(SignInByWechatOauth2Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, lhs_arena,
                                       &other->_impl_.state_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, lhs_arena,
                                       &other->_impl_.code_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, lhs_arena,
                                       &other->_impl_.app_id_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SignInByWechatOauth2Request, _impl_.language_)
      + sizeof(SignInByWechatOauth2Request::_impl_.language_)
      - PROTOBUF_FIELD_OFFSET(SignInByWechatOauth2Request, _impl_.ttl_)>(
          reinterpret_cast<char*>(&_impl_.ttl_),
          reinterpret_cast<char*>(&other->_impl_.ttl_));
}

::google::protobuf::Metadata SignInByWechatOauth2Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[27]);
}
// ===================================================================

class WechatOauth2SignInStateResponse::_Internal {
 public:
};

WechatOauth2SignInStateResponse::WechatOauth2SignInStateResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.WechatOauth2SignInStateResponse)
}
WechatOauth2SignInStateResponse::WechatOauth2SignInStateResponse(const WechatOauth2SignInStateResponse& from) : ::google::protobuf::Message() {
  WechatOauth2SignInStateResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.state_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.state_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_state().empty()) {
    _this->_impl_.state_.Set(from._internal_state(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.WechatOauth2SignInStateResponse)
}
inline void WechatOauth2SignInStateResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.state_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.state_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
WechatOauth2SignInStateResponse::~WechatOauth2SignInStateResponse() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.WechatOauth2SignInStateResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatOauth2SignInStateResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.state_.Destroy();
}
void WechatOauth2SignInStateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WechatOauth2SignInStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.WechatOauth2SignInStateResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.state_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatOauth2SignInStateResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 58, 2> WechatOauth2SignInStateResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WechatOauth2SignInStateResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string state = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2SignInStateResponse, _impl_.state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string state = 1;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2SignInStateResponse, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\5\0\0\0\0\0\0"
    "palm.auth.v1.WechatOauth2SignInStateResponse"
    "state"
  }},
};

::uint8_t* WechatOauth2SignInStateResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.WechatOauth2SignInStateResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string state = 1;
  if (!this->_internal_state().empty()) {
    const std::string& _s = this->_internal_state();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatOauth2SignInStateResponse.state");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.WechatOauth2SignInStateResponse)
  return target;
}

::size_t WechatOauth2SignInStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.WechatOauth2SignInStateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string state = 1;
  if (!this->_internal_state().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatOauth2SignInStateResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WechatOauth2SignInStateResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*WechatOauth2SignInStateResponse::GetClassData() const { return &_class_data_; }


void WechatOauth2SignInStateResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatOauth2SignInStateResponse*>(&to_msg);
  auto& from = static_cast<const WechatOauth2SignInStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.WechatOauth2SignInStateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatOauth2SignInStateResponse::CopyFrom(const WechatOauth2SignInStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.WechatOauth2SignInStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatOauth2SignInStateResponse::IsInitialized() const {
  return true;
}

void WechatOauth2SignInStateResponse::InternalSwap(WechatOauth2SignInStateResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, lhs_arena,
                                       &other->_impl_.state_, rhs_arena);
}

::google::protobuf::Metadata WechatOauth2SignInStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[28]);
}
// ===================================================================

class WechatOauth2SignInUrlRequest::_Internal {
 public:
};

WechatOauth2SignInUrlRequest::WechatOauth2SignInUrlRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.WechatOauth2SignInUrlRequest)
}
WechatOauth2SignInUrlRequest::WechatOauth2SignInUrlRequest(const WechatOauth2SignInUrlRequest& from) : ::google::protobuf::Message() {
  WechatOauth2SignInUrlRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.app_id_){},
      decltype(_impl_.redirect_uri_){},
      decltype(_impl_.language_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    _this->_impl_.app_id_.Set(from._internal_app_id(), _this->GetArenaForAllocation());
  }
  _impl_.redirect_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.redirect_uri_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_redirect_uri().empty()) {
    _this->_impl_.redirect_uri_.Set(from._internal_redirect_uri(), _this->GetArenaForAllocation());
  }
  _this->_impl_.language_ = from._impl_.language_;

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.WechatOauth2SignInUrlRequest)
}
inline void WechatOauth2SignInUrlRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.app_id_){},
      decltype(_impl_.redirect_uri_){},
      decltype(_impl_.language_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.redirect_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.redirect_uri_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
WechatOauth2SignInUrlRequest::~WechatOauth2SignInUrlRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.WechatOauth2SignInUrlRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatOauth2SignInUrlRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.app_id_.Destroy();
  _impl_.redirect_uri_.Destroy();
}
void WechatOauth2SignInUrlRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WechatOauth2SignInUrlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.WechatOauth2SignInUrlRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.app_id_.ClearToEmpty();
  _impl_.redirect_uri_.ClearToEmpty();
  _impl_.language_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatOauth2SignInUrlRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 68, 2> WechatOauth2SignInUrlRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WechatOauth2SignInUrlRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string app_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2SignInUrlRequest, _impl_.app_id_)}},
    // string redirect_uri = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2SignInUrlRequest, _impl_.redirect_uri_)}},
    // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WechatOauth2SignInUrlRequest, _impl_.language_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2SignInUrlRequest, _impl_.language_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string app_id = 1;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2SignInUrlRequest, _impl_.app_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string redirect_uri = 2;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2SignInUrlRequest, _impl_.redirect_uri_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 3;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2SignInUrlRequest, _impl_.language_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\51\6\14\0\0\0\0\0"
    "palm.auth.v1.WechatOauth2SignInUrlRequest"
    "app_id"
    "redirect_uri"
  }},
};

::uint8_t* WechatOauth2SignInUrlRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.WechatOauth2SignInUrlRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatOauth2SignInUrlRequest.app_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string redirect_uri = 2;
  if (!this->_internal_redirect_uri().empty()) {
    const std::string& _s = this->_internal_redirect_uri();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatOauth2SignInUrlRequest.redirect_uri");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 3;
  if (this->_internal_language() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_language(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.WechatOauth2SignInUrlRequest)
  return target;
}

::size_t WechatOauth2SignInUrlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.WechatOauth2SignInUrlRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // string redirect_uri = 2;
  if (!this->_internal_redirect_uri().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_redirect_uri());
  }

  // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 3;
  if (this->_internal_language() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_language());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatOauth2SignInUrlRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WechatOauth2SignInUrlRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*WechatOauth2SignInUrlRequest::GetClassData() const { return &_class_data_; }


void WechatOauth2SignInUrlRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatOauth2SignInUrlRequest*>(&to_msg);
  auto& from = static_cast<const WechatOauth2SignInUrlRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.WechatOauth2SignInUrlRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_redirect_uri().empty()) {
    _this->_internal_set_redirect_uri(from._internal_redirect_uri());
  }
  if (from._internal_language() != 0) {
    _this->_internal_set_language(from._internal_language());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatOauth2SignInUrlRequest::CopyFrom(const WechatOauth2SignInUrlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.WechatOauth2SignInUrlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatOauth2SignInUrlRequest::IsInitialized() const {
  return true;
}

void WechatOauth2SignInUrlRequest::InternalSwap(WechatOauth2SignInUrlRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, lhs_arena,
                                       &other->_impl_.app_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.redirect_uri_, lhs_arena,
                                       &other->_impl_.redirect_uri_, rhs_arena);
  swap(_impl_.language_, other->_impl_.language_);
}

::google::protobuf::Metadata WechatOauth2SignInUrlRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[29]);
}
// ===================================================================

class WechatMiniProgramUser::_Internal {
 public:
  using HasBits = decltype(std::declval<WechatMiniProgramUser>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WechatMiniProgramUser, _impl_._has_bits_);
  static void set_has_nickname(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_avatar_url(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

WechatMiniProgramUser::WechatMiniProgramUser(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.WechatMiniProgramUser)
}
WechatMiniProgramUser::WechatMiniProgramUser(const WechatMiniProgramUser& from) : ::google::protobuf::Message() {
  WechatMiniProgramUser* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.app_id_){},
      decltype(_impl_.open_id_){},
      decltype(_impl_.union_id_){},
      decltype(_impl_.nickname_){},
      decltype(_impl_.avatar_url_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    _this->_impl_.app_id_.Set(from._internal_app_id(), _this->GetArenaForAllocation());
  }
  _impl_.open_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_open_id().empty()) {
    _this->_impl_.open_id_.Set(from._internal_open_id(), _this->GetArenaForAllocation());
  }
  _impl_.union_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.union_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_union_id().empty()) {
    _this->_impl_.union_id_.Set(from._internal_union_id(), _this->GetArenaForAllocation());
  }
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), _this->GetArenaForAllocation());
  }
  _impl_.avatar_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.avatar_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.avatar_url_.Set(from._internal_avatar_url(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.WechatMiniProgramUser)
}
inline void WechatMiniProgramUser::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.app_id_){},
      decltype(_impl_.open_id_){},
      decltype(_impl_.union_id_){},
      decltype(_impl_.nickname_){},
      decltype(_impl_.avatar_url_){},
  };
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.open_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.union_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.union_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avatar_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.avatar_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
WechatMiniProgramUser::~WechatMiniProgramUser() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.WechatMiniProgramUser)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatMiniProgramUser::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.app_id_.Destroy();
  _impl_.open_id_.Destroy();
  _impl_.union_id_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.avatar_url_.Destroy();
}
void WechatMiniProgramUser::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WechatMiniProgramUser::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.WechatMiniProgramUser)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.app_id_.ClearToEmpty();
  _impl_.open_id_.ClearToEmpty();
  _impl_.union_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.nickname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.avatar_url_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatMiniProgramUser::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 0, 82, 2> WechatMiniProgramUser::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WechatMiniProgramUser, _impl_._has_bits_),
    0, // no _extensions_
    22, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4291814399,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WechatMiniProgramUser_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string open_id = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(WechatMiniProgramUser, _impl_.open_id_)}},
    // string union_id = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(WechatMiniProgramUser, _impl_.union_id_)}},
    // optional string avatar_url = 22;
    {::_pbi::TcParser::FastUS2,
     {434, 1, 0, PROTOBUF_FIELD_OFFSET(WechatMiniProgramUser, _impl_.avatar_url_)}},
    // string app_id = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(WechatMiniProgramUser, _impl_.app_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string app_id = 11;
    {PROTOBUF_FIELD_OFFSET(WechatMiniProgramUser, _impl_.app_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string open_id = 12;
    {PROTOBUF_FIELD_OFFSET(WechatMiniProgramUser, _impl_.open_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string union_id = 13;
    {PROTOBUF_FIELD_OFFSET(WechatMiniProgramUser, _impl_.union_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string nickname = 21;
    {PROTOBUF_FIELD_OFFSET(WechatMiniProgramUser, _impl_.nickname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string avatar_url = 22;
    {PROTOBUF_FIELD_OFFSET(WechatMiniProgramUser, _impl_.avatar_url_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\6\7\10\10\12\0\0"
    "palm.auth.v1.WechatMiniProgramUser"
    "app_id"
    "open_id"
    "union_id"
    "nickname"
    "avatar_url"
  }},
};

::uint8_t* WechatMiniProgramUser::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.WechatMiniProgramUser)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string app_id = 11;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatMiniProgramUser.app_id");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // string open_id = 12;
  if (!this->_internal_open_id().empty()) {
    const std::string& _s = this->_internal_open_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatMiniProgramUser.open_id");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // string union_id = 13;
  if (!this->_internal_union_id().empty()) {
    const std::string& _s = this->_internal_union_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatMiniProgramUser.union_id");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string nickname = 21;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_nickname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatMiniProgramUser.nickname");
    target = stream->WriteStringMaybeAliased(21, _s, target);
  }

  // optional string avatar_url = 22;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_avatar_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.WechatMiniProgramUser.avatar_url");
    target = stream->WriteStringMaybeAliased(22, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.WechatMiniProgramUser)
  return target;
}

::size_t WechatMiniProgramUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.WechatMiniProgramUser)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 11;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // string open_id = 12;
  if (!this->_internal_open_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_open_id());
  }

  // string union_id = 13;
  if (!this->_internal_union_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_union_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string nickname = 21;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_nickname());
    }

    // optional string avatar_url = 22;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_avatar_url());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatMiniProgramUser::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WechatMiniProgramUser::MergeImpl
};
const ::google::protobuf::Message::ClassData*WechatMiniProgramUser::GetClassData() const { return &_class_data_; }


void WechatMiniProgramUser::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatMiniProgramUser*>(&to_msg);
  auto& from = static_cast<const WechatMiniProgramUser&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.WechatMiniProgramUser)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_open_id().empty()) {
    _this->_internal_set_open_id(from._internal_open_id());
  }
  if (!from._internal_union_id().empty()) {
    _this->_internal_set_union_id(from._internal_union_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_nickname(from._internal_nickname());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_avatar_url(from._internal_avatar_url());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatMiniProgramUser::CopyFrom(const WechatMiniProgramUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.WechatMiniProgramUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatMiniProgramUser::IsInitialized() const {
  return true;
}

void WechatMiniProgramUser::InternalSwap(WechatMiniProgramUser* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, lhs_arena,
                                       &other->_impl_.app_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.open_id_, lhs_arena,
                                       &other->_impl_.open_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.union_id_, lhs_arena,
                                       &other->_impl_.union_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, lhs_arena,
                                       &other->_impl_.nickname_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.avatar_url_, lhs_arena,
                                       &other->_impl_.avatar_url_, rhs_arena);
}

::google::protobuf::Metadata WechatMiniProgramUser::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[30]);
}
// ===================================================================

class AttachmentShowRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<AttachmentShowRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AttachmentShowRequest, _impl_._has_bits_);
  static const ::google::protobuf::Duration& ttl(const AttachmentShowRequest* msg);
  static void set_has_ttl(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Duration& AttachmentShowRequest::_Internal::ttl(const AttachmentShowRequest* msg) {
  return *msg->_impl_.ttl_;
}
void AttachmentShowRequest::clear_ttl() {
  if (_impl_.ttl_ != nullptr) _impl_.ttl_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
AttachmentShowRequest::AttachmentShowRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.AttachmentShowRequest)
}
AttachmentShowRequest::AttachmentShowRequest(const AttachmentShowRequest& from) : ::google::protobuf::Message() {
  AttachmentShowRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ttl_){nullptr},
      decltype(_impl_.id_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.ttl_ = new ::google::protobuf::Duration(*from._impl_.ttl_);
  }
  _this->_impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.AttachmentShowRequest)
}
inline void AttachmentShowRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ttl_){nullptr},
      decltype(_impl_.id_){0},
  };
}
AttachmentShowRequest::~AttachmentShowRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.AttachmentShowRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AttachmentShowRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.ttl_;
}
void AttachmentShowRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AttachmentShowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.AttachmentShowRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ttl_ != nullptr);
    _impl_.ttl_->Clear();
  }
  _impl_.id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AttachmentShowRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> AttachmentShowRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AttachmentShowRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AttachmentShowRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Duration ttl = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(AttachmentShowRequest, _impl_.ttl_)}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AttachmentShowRequest, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AttachmentShowRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(AttachmentShowRequest, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .google.protobuf.Duration ttl = 2;
    {PROTOBUF_FIELD_OFFSET(AttachmentShowRequest, _impl_.ttl_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }}, {{
  }},
};

::uint8_t* AttachmentShowRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.AttachmentShowRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Duration ttl = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::ttl(this),
        _Internal::ttl(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.AttachmentShowRequest)
  return target;
}

::size_t AttachmentShowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.AttachmentShowRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Duration ttl = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.ttl_);
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AttachmentShowRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AttachmentShowRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*AttachmentShowRequest::GetClassData() const { return &_class_data_; }


void AttachmentShowRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AttachmentShowRequest*>(&to_msg);
  auto& from = static_cast<const AttachmentShowRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.AttachmentShowRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_ttl()->::google::protobuf::Duration::MergeFrom(
        from._internal_ttl());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AttachmentShowRequest::CopyFrom(const AttachmentShowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.AttachmentShowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AttachmentShowRequest::IsInitialized() const {
  return true;
}

void AttachmentShowRequest::InternalSwap(AttachmentShowRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AttachmentShowRequest, _impl_.id_)
      + sizeof(AttachmentShowRequest::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(AttachmentShowRequest, _impl_.ttl_)>(
          reinterpret_cast<char*>(&_impl_.ttl_),
          reinterpret_cast<char*>(&other->_impl_.ttl_));
}

::google::protobuf::Metadata AttachmentShowRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[31]);
}
// ===================================================================

class AttachmentShowResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<AttachmentShowResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AttachmentShowResponse, _impl_._has_bits_);
  static const ::palm::auth::v1::AttachmentIndexResponse_Item& item(const AttachmentShowResponse* msg);
  static void set_has_item(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::auth::v1::AttachmentIndexResponse_Item& AttachmentShowResponse::_Internal::item(const AttachmentShowResponse* msg) {
  return *msg->_impl_.item_;
}
AttachmentShowResponse::AttachmentShowResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.AttachmentShowResponse)
}
AttachmentShowResponse::AttachmentShowResponse(const AttachmentShowResponse& from) : ::google::protobuf::Message() {
  AttachmentShowResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.url_){},
      decltype(_impl_.item_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    _this->_impl_.url_.Set(from._internal_url(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.item_ = new ::palm::auth::v1::AttachmentIndexResponse_Item(*from._impl_.item_);
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.AttachmentShowResponse)
}
inline void AttachmentShowResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.url_){},
      decltype(_impl_.item_){nullptr},
  };
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
AttachmentShowResponse::~AttachmentShowResponse() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.AttachmentShowResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AttachmentShowResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.url_.Destroy();
  if (this != internal_default_instance()) delete _impl_.item_;
}
void AttachmentShowResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AttachmentShowResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.AttachmentShowResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.item_ != nullptr);
    _impl_.item_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AttachmentShowResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 47, 2> AttachmentShowResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AttachmentShowResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AttachmentShowResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string url = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AttachmentShowResponse, _impl_.url_)}},
    // .palm.auth.v1.AttachmentIndexResponse.Item item = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AttachmentShowResponse, _impl_.item_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .palm.auth.v1.AttachmentIndexResponse.Item item = 1;
    {PROTOBUF_FIELD_OFFSET(AttachmentShowResponse, _impl_.item_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string url = 2;
    {PROTOBUF_FIELD_OFFSET(AttachmentShowResponse, _impl_.url_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::auth::v1::AttachmentIndexResponse_Item>()},
  }}, {{
    "\43\0\3\0\0\0\0\0"
    "palm.auth.v1.AttachmentShowResponse"
    "url"
  }},
};

::uint8_t* AttachmentShowResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.AttachmentShowResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.auth.v1.AttachmentIndexResponse.Item item = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  // string url = 2;
  if (!this->_internal_url().empty()) {
    const std::string& _s = this->_internal_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.AttachmentShowResponse.url");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.AttachmentShowResponse)
  return target;
}

::size_t AttachmentShowResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.AttachmentShowResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 2;
  if (!this->_internal_url().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_url());
  }

  // .palm.auth.v1.AttachmentIndexResponse.Item item = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AttachmentShowResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AttachmentShowResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*AttachmentShowResponse::GetClassData() const { return &_class_data_; }


void AttachmentShowResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AttachmentShowResponse*>(&to_msg);
  auto& from = static_cast<const AttachmentShowResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.AttachmentShowResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_item()->::palm::auth::v1::AttachmentIndexResponse_Item::MergeFrom(
        from._internal_item());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AttachmentShowResponse::CopyFrom(const AttachmentShowResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.AttachmentShowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AttachmentShowResponse::IsInitialized() const {
  return true;
}

void AttachmentShowResponse::InternalSwap(AttachmentShowResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, lhs_arena,
                                       &other->_impl_.url_, rhs_arena);
  swap(_impl_.item_, other->_impl_.item_);
}

::google::protobuf::Metadata AttachmentShowResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[32]);
}
// ===================================================================

class AttachmentIndexResponse_Item::_Internal {
 public:
  using HasBits = decltype(std::declval<AttachmentIndexResponse_Item>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& updated_at(const AttachmentIndexResponse_Item* msg);
  static void set_has_updated_at(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& AttachmentIndexResponse_Item::_Internal::updated_at(const AttachmentIndexResponse_Item* msg) {
  return *msg->_impl_.updated_at_;
}
void AttachmentIndexResponse_Item::clear_updated_at() {
  if (_impl_.updated_at_ != nullptr) _impl_.updated_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
AttachmentIndexResponse_Item::AttachmentIndexResponse_Item(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.AttachmentIndexResponse.Item)
}
AttachmentIndexResponse_Item::AttachmentIndexResponse_Item(const AttachmentIndexResponse_Item& from) : ::google::protobuf::Message() {
  AttachmentIndexResponse_Item* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.bucket_){},
      decltype(_impl_.name_){},
      decltype(_impl_.title_){},
      decltype(_impl_.content_type_){},
      decltype(_impl_.updated_at_){nullptr},
      decltype(_impl_.id_){},
      decltype(_impl_.status_){},
      decltype(_impl_.size_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.bucket_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.bucket_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bucket().empty()) {
    _this->_impl_.bucket_.Set(from._internal_bucket(), _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), _this->GetArenaForAllocation());
  }
  _impl_.content_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.content_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content_type().empty()) {
    _this->_impl_.content_type_.Set(from._internal_content_type(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.updated_at_ = new ::google::protobuf::Timestamp(*from._impl_.updated_at_);
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.size_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.size_));

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.AttachmentIndexResponse.Item)
}
inline void AttachmentIndexResponse_Item::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.bucket_){},
      decltype(_impl_.name_){},
      decltype(_impl_.title_){},
      decltype(_impl_.content_type_){},
      decltype(_impl_.updated_at_){nullptr},
      decltype(_impl_.id_){0},
      decltype(_impl_.status_){0},
      decltype(_impl_.size_){::int64_t{0}},
  };
  _impl_.bucket_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.bucket_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.content_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.content_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
AttachmentIndexResponse_Item::~AttachmentIndexResponse_Item() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.AttachmentIndexResponse.Item)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AttachmentIndexResponse_Item::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bucket_.Destroy();
  _impl_.name_.Destroy();
  _impl_.title_.Destroy();
  _impl_.content_type_.Destroy();
  if (this != internal_default_instance()) delete _impl_.updated_at_;
}
void AttachmentIndexResponse_Item::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AttachmentIndexResponse_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.AttachmentIndexResponse.Item)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bucket_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.title_.ClearToEmpty();
  _impl_.content_type_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.updated_at_ != nullptr);
    _impl_.updated_at_->Clear();
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.size_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.size_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AttachmentIndexResponse_Item::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 1, 85, 2> AttachmentIndexResponse_Item::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966144,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AttachmentIndexResponse_Item_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AttachmentIndexResponse_Item, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.id_)}},
    // string bucket = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.bucket_)}},
    // string name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.name_)}},
    // string title = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.title_)}},
    // int64 size = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AttachmentIndexResponse_Item, _impl_.size_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.size_)}},
    // string content_type = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.content_type_)}},
    // .palm.nut.v1.MediaContent.Status status = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AttachmentIndexResponse_Item, _impl_.status_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.status_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp updated_at = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 0, 0, PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.updated_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string bucket = 2;
    {PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.bucket_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 3;
    {PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string title = 4;
    {PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.title_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 size = 5;
    {PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string content_type = 6;
    {PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.content_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .palm.nut.v1.MediaContent.Status status = 7;
    {PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .google.protobuf.Timestamp updated_at = 11;
    {PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.updated_at_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\51\0\6\4\5\0\14\0\0\0\0\0\0\0\0\0"
    "palm.auth.v1.AttachmentIndexResponse.Item"
    "bucket"
    "name"
    "title"
    "content_type"
  }},
};

::uint8_t* AttachmentIndexResponse_Item::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.AttachmentIndexResponse.Item)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string bucket = 2;
  if (!this->_internal_bucket().empty()) {
    const std::string& _s = this->_internal_bucket();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.AttachmentIndexResponse.Item.bucket");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.AttachmentIndexResponse.Item.name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string title = 4;
  if (!this->_internal_title().empty()) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.AttachmentIndexResponse.Item.title");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int64 size = 5;
  if (this->_internal_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_size(), target);
  }

  // string content_type = 6;
  if (!this->_internal_content_type().empty()) {
    const std::string& _s = this->_internal_content_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.AttachmentIndexResponse.Item.content_type");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // .palm.nut.v1.MediaContent.Status status = 7;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        7, this->_internal_status(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp updated_at = 11;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::updated_at(this),
        _Internal::updated_at(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.AttachmentIndexResponse.Item)
  return target;
}

::size_t AttachmentIndexResponse_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.AttachmentIndexResponse.Item)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string bucket = 2;
  if (!this->_internal_bucket().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_bucket());
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string title = 4;
  if (!this->_internal_title().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_title());
  }

  // string content_type = 6;
  if (!this->_internal_content_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_content_type());
  }

  // .google.protobuf.Timestamp updated_at = 11;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.updated_at_);
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  // .palm.nut.v1.MediaContent.Status status = 7;
  if (this->_internal_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  // int64 size = 5;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AttachmentIndexResponse_Item::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AttachmentIndexResponse_Item::MergeImpl
};
const ::google::protobuf::Message::ClassData*AttachmentIndexResponse_Item::GetClassData() const { return &_class_data_; }


void AttachmentIndexResponse_Item::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AttachmentIndexResponse_Item*>(&to_msg);
  auto& from = static_cast<const AttachmentIndexResponse_Item&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.AttachmentIndexResponse.Item)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bucket().empty()) {
    _this->_internal_set_bucket(from._internal_bucket());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_content_type().empty()) {
    _this->_internal_set_content_type(from._internal_content_type());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_updated_at()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_updated_at());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_size() != 0) {
    _this->_internal_set_size(from._internal_size());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AttachmentIndexResponse_Item::CopyFrom(const AttachmentIndexResponse_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.AttachmentIndexResponse.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AttachmentIndexResponse_Item::IsInitialized() const {
  return true;
}

void AttachmentIndexResponse_Item::InternalSwap(AttachmentIndexResponse_Item* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bucket_, lhs_arena,
                                       &other->_impl_.bucket_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, lhs_arena,
                                       &other->_impl_.title_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_type_, lhs_arena,
                                       &other->_impl_.content_type_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.size_)
      + sizeof(AttachmentIndexResponse_Item::_impl_.size_)
      - PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse_Item, _impl_.updated_at_)>(
          reinterpret_cast<char*>(&_impl_.updated_at_),
          reinterpret_cast<char*>(&other->_impl_.updated_at_));
}

::google::protobuf::Metadata AttachmentIndexResponse_Item::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[33]);
}
// ===================================================================

class AttachmentIndexResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<AttachmentIndexResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse, _impl_._has_bits_);
  static const ::palm::nut::v1::Pagination& pagination(const AttachmentIndexResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::nut::v1::Pagination& AttachmentIndexResponse::_Internal::pagination(const AttachmentIndexResponse* msg) {
  return *msg->_impl_.pagination_;
}
void AttachmentIndexResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
AttachmentIndexResponse::AttachmentIndexResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.AttachmentIndexResponse)
}
AttachmentIndexResponse::AttachmentIndexResponse(const AttachmentIndexResponse& from) : ::google::protobuf::Message() {
  AttachmentIndexResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.items_){from._impl_.items_},
      decltype(_impl_.pagination_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::palm::nut::v1::Pagination(*from._impl_.pagination_);
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.AttachmentIndexResponse)
}
inline void AttachmentIndexResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.items_){arena},
      decltype(_impl_.pagination_){nullptr},
  };
}
AttachmentIndexResponse::~AttachmentIndexResponse() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.AttachmentIndexResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AttachmentIndexResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}
void AttachmentIndexResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AttachmentIndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.AttachmentIndexResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_items()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AttachmentIndexResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 2, 0, 2> AttachmentIndexResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse, _impl_._has_bits_),
    0, // no _extensions_
    11, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966270,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AttachmentIndexResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .palm.nut.v1.Pagination pagination = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse, _impl_.pagination_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .palm.auth.v1.AttachmentIndexResponse.Item items = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 1, PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .palm.nut.v1.Pagination pagination = 1;
    {PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .palm.auth.v1.AttachmentIndexResponse.Item items = 11;
    {PROTOBUF_FIELD_OFFSET(AttachmentIndexResponse, _impl_.items_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::nut::v1::Pagination>()},
    {::_pbi::TcParser::GetTable<::palm::auth::v1::AttachmentIndexResponse_Item>()},
  }}, {{
  }},
};

::uint8_t* AttachmentIndexResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.AttachmentIndexResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.nut.v1.Pagination pagination = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  // repeated .palm.auth.v1.AttachmentIndexResponse.Item items = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.AttachmentIndexResponse)
  return target;
}

::size_t AttachmentIndexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.AttachmentIndexResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.auth.v1.AttachmentIndexResponse.Item items = 11;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_internal_items()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .palm.nut.v1.Pagination pagination = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AttachmentIndexResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AttachmentIndexResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*AttachmentIndexResponse::GetClassData() const { return &_class_data_; }


void AttachmentIndexResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AttachmentIndexResponse*>(&to_msg);
  auto& from = static_cast<const AttachmentIndexResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.AttachmentIndexResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(from._internal_items());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::palm::nut::v1::Pagination::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AttachmentIndexResponse::CopyFrom(const AttachmentIndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.AttachmentIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AttachmentIndexResponse::IsInitialized() const {
  return true;
}

void AttachmentIndexResponse::InternalSwap(AttachmentIndexResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata AttachmentIndexResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[34]);
}
// ===================================================================

class LocaleByLangRequest::_Internal {
 public:
};

LocaleByLangRequest::LocaleByLangRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.LocaleByLangRequest)
}
LocaleByLangRequest::LocaleByLangRequest(const LocaleByLangRequest& from) : ::google::protobuf::Message() {
  LocaleByLangRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.lang_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lang().empty()) {
    _this->_impl_.lang_.Set(from._internal_lang(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.LocaleByLangRequest)
}
inline void LocaleByLangRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.lang_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
LocaleByLangRequest::~LocaleByLangRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.LocaleByLangRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LocaleByLangRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.lang_.Destroy();
}
void LocaleByLangRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void LocaleByLangRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.LocaleByLangRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lang_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LocaleByLangRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 45, 2> LocaleByLangRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LocaleByLangRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string lang = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LocaleByLangRequest, _impl_.lang_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string lang = 1;
    {PROTOBUF_FIELD_OFFSET(LocaleByLangRequest, _impl_.lang_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\4\0\0\0\0\0\0"
    "palm.auth.v1.LocaleByLangRequest"
    "lang"
  }},
};

::uint8_t* LocaleByLangRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.LocaleByLangRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string lang = 1;
  if (!this->_internal_lang().empty()) {
    const std::string& _s = this->_internal_lang();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.LocaleByLangRequest.lang");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.LocaleByLangRequest)
  return target;
}

::size_t LocaleByLangRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.LocaleByLangRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string lang = 1;
  if (!this->_internal_lang().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_lang());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LocaleByLangRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    LocaleByLangRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*LocaleByLangRequest::GetClassData() const { return &_class_data_; }


void LocaleByLangRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LocaleByLangRequest*>(&to_msg);
  auto& from = static_cast<const LocaleByLangRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.LocaleByLangRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_lang().empty()) {
    _this->_internal_set_lang(from._internal_lang());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocaleByLangRequest::CopyFrom(const LocaleByLangRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.LocaleByLangRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LocaleByLangRequest::IsInitialized() const {
  return true;
}

void LocaleByLangRequest::InternalSwap(LocaleByLangRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lang_, lhs_arena,
                                       &other->_impl_.lang_, rhs_arena);
}

::google::protobuf::Metadata LocaleByLangRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[35]);
}
// ===================================================================

class LocaleListResponse::_Internal {
 public:
};

LocaleListResponse::LocaleListResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.LocaleListResponse)
}
LocaleListResponse::LocaleListResponse(const LocaleListResponse& from) : ::google::protobuf::Message() {
  LocaleListResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.LocaleListResponse)
}
inline void LocaleListResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
LocaleListResponse::~LocaleListResponse() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.LocaleListResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LocaleListResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}
void LocaleListResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void LocaleListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.LocaleListResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_items()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LocaleListResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> LocaleListResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LocaleListResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .palm.auth.v1.LocaleIndexResponse.Item items = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LocaleListResponse, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .palm.auth.v1.LocaleIndexResponse.Item items = 1;
    {PROTOBUF_FIELD_OFFSET(LocaleListResponse, _impl_.items_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::auth::v1::LocaleIndexResponse_Item>()},
  }}, {{
  }},
};

::uint8_t* LocaleListResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.LocaleListResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .palm.auth.v1.LocaleIndexResponse.Item items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.LocaleListResponse)
  return target;
}

::size_t LocaleListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.LocaleListResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.auth.v1.LocaleIndexResponse.Item items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_internal_items()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LocaleListResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    LocaleListResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*LocaleListResponse::GetClassData() const { return &_class_data_; }


void LocaleListResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LocaleListResponse*>(&to_msg);
  auto& from = static_cast<const LocaleListResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.LocaleListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(from._internal_items());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocaleListResponse::CopyFrom(const LocaleListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.LocaleListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LocaleListResponse::IsInitialized() const {
  return true;
}

void LocaleListResponse::InternalSwap(LocaleListResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::google::protobuf::Metadata LocaleListResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[36]);
}
// ===================================================================

class LocaleIndexResponse_Item::_Internal {
 public:
  using HasBits = decltype(std::declval<LocaleIndexResponse_Item>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(LocaleIndexResponse_Item, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& updated_at(const LocaleIndexResponse_Item* msg);
  static void set_has_updated_at(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& LocaleIndexResponse_Item::_Internal::updated_at(const LocaleIndexResponse_Item* msg) {
  return *msg->_impl_.updated_at_;
}
void LocaleIndexResponse_Item::clear_updated_at() {
  if (_impl_.updated_at_ != nullptr) _impl_.updated_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
LocaleIndexResponse_Item::LocaleIndexResponse_Item(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.LocaleIndexResponse.Item)
}
LocaleIndexResponse_Item::LocaleIndexResponse_Item(const LocaleIndexResponse_Item& from) : ::google::protobuf::Message() {
  LocaleIndexResponse_Item* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.lang_){},
      decltype(_impl_.code_){},
      decltype(_impl_.message_){},
      decltype(_impl_.updated_at_){nullptr},
      decltype(_impl_.id_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lang().empty()) {
    _this->_impl_.lang_.Set(from._internal_lang(), _this->GetArenaForAllocation());
  }
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    _this->_impl_.code_.Set(from._internal_code(), _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.updated_at_ = new ::google::protobuf::Timestamp(*from._impl_.updated_at_);
  }
  _this->_impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.LocaleIndexResponse.Item)
}
inline void LocaleIndexResponse_Item::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.lang_){},
      decltype(_impl_.code_){},
      decltype(_impl_.message_){},
      decltype(_impl_.updated_at_){nullptr},
      decltype(_impl_.id_){0},
  };
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
LocaleIndexResponse_Item::~LocaleIndexResponse_Item() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.LocaleIndexResponse.Item)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LocaleIndexResponse_Item::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.lang_.Destroy();
  _impl_.code_.Destroy();
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.updated_at_;
}
void LocaleIndexResponse_Item::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void LocaleIndexResponse_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.LocaleIndexResponse.Item)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lang_.ClearToEmpty();
  _impl_.code_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.updated_at_ != nullptr);
    _impl_.updated_at_->Clear();
  }
  _impl_.id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LocaleIndexResponse_Item::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 1, 61, 2> LocaleIndexResponse_Item::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LocaleIndexResponse_Item, _impl_._has_bits_),
    0, // no _extensions_
    9, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967024,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LocaleIndexResponse_Item_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string message = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(LocaleIndexResponse_Item, _impl_.message_)}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LocaleIndexResponse_Item, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LocaleIndexResponse_Item, _impl_.id_)}},
    // string lang = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LocaleIndexResponse_Item, _impl_.lang_)}},
    // string code = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(LocaleIndexResponse_Item, _impl_.code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(LocaleIndexResponse_Item, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string lang = 2;
    {PROTOBUF_FIELD_OFFSET(LocaleIndexResponse_Item, _impl_.lang_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string code = 3;
    {PROTOBUF_FIELD_OFFSET(LocaleIndexResponse_Item, _impl_.code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 4;
    {PROTOBUF_FIELD_OFFSET(LocaleIndexResponse_Item, _impl_.message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp updated_at = 9;
    {PROTOBUF_FIELD_OFFSET(LocaleIndexResponse_Item, _impl_.updated_at_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\45\0\4\4\7\0\0\0"
    "palm.auth.v1.LocaleIndexResponse.Item"
    "lang"
    "code"
    "message"
  }},
};

::uint8_t* LocaleIndexResponse_Item::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.LocaleIndexResponse.Item)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string lang = 2;
  if (!this->_internal_lang().empty()) {
    const std::string& _s = this->_internal_lang();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.LocaleIndexResponse.Item.lang");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string code = 3;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.LocaleIndexResponse.Item.code");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string message = 4;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.LocaleIndexResponse.Item.message");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp updated_at = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::updated_at(this),
        _Internal::updated_at(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.LocaleIndexResponse.Item)
  return target;
}

::size_t LocaleIndexResponse_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.LocaleIndexResponse.Item)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string lang = 2;
  if (!this->_internal_lang().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_lang());
  }

  // string code = 3;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code());
  }

  // string message = 4;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // .google.protobuf.Timestamp updated_at = 9;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.updated_at_);
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LocaleIndexResponse_Item::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    LocaleIndexResponse_Item::MergeImpl
};
const ::google::protobuf::Message::ClassData*LocaleIndexResponse_Item::GetClassData() const { return &_class_data_; }


void LocaleIndexResponse_Item::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LocaleIndexResponse_Item*>(&to_msg);
  auto& from = static_cast<const LocaleIndexResponse_Item&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.LocaleIndexResponse.Item)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_lang().empty()) {
    _this->_internal_set_lang(from._internal_lang());
  }
  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_updated_at()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_updated_at());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocaleIndexResponse_Item::CopyFrom(const LocaleIndexResponse_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.LocaleIndexResponse.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LocaleIndexResponse_Item::IsInitialized() const {
  return true;
}

void LocaleIndexResponse_Item::InternalSwap(LocaleIndexResponse_Item* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lang_, lhs_arena,
                                       &other->_impl_.lang_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, lhs_arena,
                                       &other->_impl_.code_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, lhs_arena,
                                       &other->_impl_.message_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocaleIndexResponse_Item, _impl_.id_)
      + sizeof(LocaleIndexResponse_Item::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(LocaleIndexResponse_Item, _impl_.updated_at_)>(
          reinterpret_cast<char*>(&_impl_.updated_at_),
          reinterpret_cast<char*>(&other->_impl_.updated_at_));
}

::google::protobuf::Metadata LocaleIndexResponse_Item::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[37]);
}
// ===================================================================

class LocaleIndexResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<LocaleIndexResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(LocaleIndexResponse, _impl_._has_bits_);
  static const ::palm::nut::v1::Pagination& pagination(const LocaleIndexResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::nut::v1::Pagination& LocaleIndexResponse::_Internal::pagination(const LocaleIndexResponse* msg) {
  return *msg->_impl_.pagination_;
}
void LocaleIndexResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
LocaleIndexResponse::LocaleIndexResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.LocaleIndexResponse)
}
LocaleIndexResponse::LocaleIndexResponse(const LocaleIndexResponse& from) : ::google::protobuf::Message() {
  LocaleIndexResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.items_){from._impl_.items_},
      decltype(_impl_.pagination_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::palm::nut::v1::Pagination(*from._impl_.pagination_);
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.LocaleIndexResponse)
}
inline void LocaleIndexResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.items_){arena},
      decltype(_impl_.pagination_){nullptr},
  };
}
LocaleIndexResponse::~LocaleIndexResponse() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.LocaleIndexResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LocaleIndexResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}
void LocaleIndexResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void LocaleIndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.LocaleIndexResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_items()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LocaleIndexResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> LocaleIndexResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LocaleIndexResponse, _impl_._has_bits_),
    0, // no _extensions_
    9, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967038,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LocaleIndexResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .palm.auth.v1.LocaleIndexResponse.Item items = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LocaleIndexResponse, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .palm.auth.v1.LocaleIndexResponse.Item items = 1;
    {PROTOBUF_FIELD_OFFSET(LocaleIndexResponse, _impl_.items_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .palm.nut.v1.Pagination pagination = 9;
    {PROTOBUF_FIELD_OFFSET(LocaleIndexResponse, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::auth::v1::LocaleIndexResponse_Item>()},
    {::_pbi::TcParser::GetTable<::palm::nut::v1::Pagination>()},
  }}, {{
  }},
};

::uint8_t* LocaleIndexResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.LocaleIndexResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .palm.auth.v1.LocaleIndexResponse.Item items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.nut.v1.Pagination pagination = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.LocaleIndexResponse)
  return target;
}

::size_t LocaleIndexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.LocaleIndexResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.auth.v1.LocaleIndexResponse.Item items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_internal_items()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .palm.nut.v1.Pagination pagination = 9;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LocaleIndexResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    LocaleIndexResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*LocaleIndexResponse::GetClassData() const { return &_class_data_; }


void LocaleIndexResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LocaleIndexResponse*>(&to_msg);
  auto& from = static_cast<const LocaleIndexResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.LocaleIndexResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(from._internal_items());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::palm::nut::v1::Pagination::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocaleIndexResponse::CopyFrom(const LocaleIndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.LocaleIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LocaleIndexResponse::IsInitialized() const {
  return true;
}

void LocaleIndexResponse::InternalSwap(LocaleIndexResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata LocaleIndexResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[38]);
}
// ===================================================================

class LocaleByCodeRequest::_Internal {
 public:
};

LocaleByCodeRequest::LocaleByCodeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.LocaleByCodeRequest)
}
LocaleByCodeRequest::LocaleByCodeRequest(const LocaleByCodeRequest& from) : ::google::protobuf::Message() {
  LocaleByCodeRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.code_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    _this->_impl_.code_.Set(from._internal_code(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.LocaleByCodeRequest)
}
inline void LocaleByCodeRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.code_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
LocaleByCodeRequest::~LocaleByCodeRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.LocaleByCodeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LocaleByCodeRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.code_.Destroy();
}
void LocaleByCodeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void LocaleByCodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.LocaleByCodeRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.code_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LocaleByCodeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 45, 2> LocaleByCodeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LocaleByCodeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string code = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LocaleByCodeRequest, _impl_.code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string code = 1;
    {PROTOBUF_FIELD_OFFSET(LocaleByCodeRequest, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\4\0\0\0\0\0\0"
    "palm.auth.v1.LocaleByCodeRequest"
    "code"
  }},
};

::uint8_t* LocaleByCodeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.LocaleByCodeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string code = 1;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.LocaleByCodeRequest.code");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.LocaleByCodeRequest)
  return target;
}

::size_t LocaleByCodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.LocaleByCodeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string code = 1;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LocaleByCodeRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    LocaleByCodeRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*LocaleByCodeRequest::GetClassData() const { return &_class_data_; }


void LocaleByCodeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LocaleByCodeRequest*>(&to_msg);
  auto& from = static_cast<const LocaleByCodeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.LocaleByCodeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocaleByCodeRequest::CopyFrom(const LocaleByCodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.LocaleByCodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LocaleByCodeRequest::IsInitialized() const {
  return true;
}

void LocaleByCodeRequest::InternalSwap(LocaleByCodeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, lhs_arena,
                                       &other->_impl_.code_, rhs_arena);
}

::google::protobuf::Metadata LocaleByCodeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[39]);
}
// ===================================================================

class LocaleByLangAndCodeRequest::_Internal {
 public:
};

LocaleByLangAndCodeRequest::LocaleByLangAndCodeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.LocaleByLangAndCodeRequest)
}
LocaleByLangAndCodeRequest::LocaleByLangAndCodeRequest(const LocaleByLangAndCodeRequest& from) : ::google::protobuf::Message() {
  LocaleByLangAndCodeRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.lang_){},
      decltype(_impl_.code_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lang().empty()) {
    _this->_impl_.lang_.Set(from._internal_lang(), _this->GetArenaForAllocation());
  }
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    _this->_impl_.code_.Set(from._internal_code(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.LocaleByLangAndCodeRequest)
}
inline void LocaleByLangAndCodeRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.lang_){},
      decltype(_impl_.code_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
LocaleByLangAndCodeRequest::~LocaleByLangAndCodeRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.LocaleByLangAndCodeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LocaleByLangAndCodeRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.lang_.Destroy();
  _impl_.code_.Destroy();
}
void LocaleByLangAndCodeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void LocaleByLangAndCodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.LocaleByLangAndCodeRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lang_.ClearToEmpty();
  _impl_.code_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LocaleByLangAndCodeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 56, 2> LocaleByLangAndCodeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LocaleByLangAndCodeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string code = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LocaleByLangAndCodeRequest, _impl_.code_)}},
    // string lang = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LocaleByLangAndCodeRequest, _impl_.lang_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string lang = 1;
    {PROTOBUF_FIELD_OFFSET(LocaleByLangAndCodeRequest, _impl_.lang_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string code = 2;
    {PROTOBUF_FIELD_OFFSET(LocaleByLangAndCodeRequest, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\4\4\0\0\0\0\0"
    "palm.auth.v1.LocaleByLangAndCodeRequest"
    "lang"
    "code"
  }},
};

::uint8_t* LocaleByLangAndCodeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.LocaleByLangAndCodeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string lang = 1;
  if (!this->_internal_lang().empty()) {
    const std::string& _s = this->_internal_lang();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.LocaleByLangAndCodeRequest.lang");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.LocaleByLangAndCodeRequest.code");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.LocaleByLangAndCodeRequest)
  return target;
}

::size_t LocaleByLangAndCodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.LocaleByLangAndCodeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string lang = 1;
  if (!this->_internal_lang().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_lang());
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LocaleByLangAndCodeRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    LocaleByLangAndCodeRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*LocaleByLangAndCodeRequest::GetClassData() const { return &_class_data_; }


void LocaleByLangAndCodeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LocaleByLangAndCodeRequest*>(&to_msg);
  auto& from = static_cast<const LocaleByLangAndCodeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.LocaleByLangAndCodeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_lang().empty()) {
    _this->_internal_set_lang(from._internal_lang());
  }
  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocaleByLangAndCodeRequest::CopyFrom(const LocaleByLangAndCodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.LocaleByLangAndCodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LocaleByLangAndCodeRequest::IsInitialized() const {
  return true;
}

void LocaleByLangAndCodeRequest::InternalSwap(LocaleByLangAndCodeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lang_, lhs_arena,
                                       &other->_impl_.lang_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, lhs_arena,
                                       &other->_impl_.code_, rhs_arena);
}

::google::protobuf::Metadata LocaleByLangAndCodeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[40]);
}
// ===================================================================

class LocaleCreateRequest::_Internal {
 public:
};

LocaleCreateRequest::LocaleCreateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.LocaleCreateRequest)
}
LocaleCreateRequest::LocaleCreateRequest(const LocaleCreateRequest& from) : ::google::protobuf::Message() {
  LocaleCreateRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.lang_){},
      decltype(_impl_.code_){},
      decltype(_impl_.message_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lang().empty()) {
    _this->_impl_.lang_.Set(from._internal_lang(), _this->GetArenaForAllocation());
  }
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    _this->_impl_.code_.Set(from._internal_code(), _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.LocaleCreateRequest)
}
inline void LocaleCreateRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.lang_){},
      decltype(_impl_.code_){},
      decltype(_impl_.message_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
LocaleCreateRequest::~LocaleCreateRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.LocaleCreateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LocaleCreateRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.lang_.Destroy();
  _impl_.code_.Destroy();
  _impl_.message_.Destroy();
}
void LocaleCreateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void LocaleCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.LocaleCreateRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lang_.ClearToEmpty();
  _impl_.code_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LocaleCreateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 56, 2> LocaleCreateRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LocaleCreateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string lang = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LocaleCreateRequest, _impl_.lang_)}},
    // string code = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LocaleCreateRequest, _impl_.code_)}},
    // string message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(LocaleCreateRequest, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string lang = 1;
    {PROTOBUF_FIELD_OFFSET(LocaleCreateRequest, _impl_.lang_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string code = 2;
    {PROTOBUF_FIELD_OFFSET(LocaleCreateRequest, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 3;
    {PROTOBUF_FIELD_OFFSET(LocaleCreateRequest, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\4\4\7\0\0\0\0"
    "palm.auth.v1.LocaleCreateRequest"
    "lang"
    "code"
    "message"
  }},
};

::uint8_t* LocaleCreateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.LocaleCreateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string lang = 1;
  if (!this->_internal_lang().empty()) {
    const std::string& _s = this->_internal_lang();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.LocaleCreateRequest.lang");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.LocaleCreateRequest.code");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.LocaleCreateRequest.message");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.LocaleCreateRequest)
  return target;
}

::size_t LocaleCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.LocaleCreateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string lang = 1;
  if (!this->_internal_lang().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_lang());
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code());
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LocaleCreateRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    LocaleCreateRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*LocaleCreateRequest::GetClassData() const { return &_class_data_; }


void LocaleCreateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LocaleCreateRequest*>(&to_msg);
  auto& from = static_cast<const LocaleCreateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.LocaleCreateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_lang().empty()) {
    _this->_internal_set_lang(from._internal_lang());
  }
  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocaleCreateRequest::CopyFrom(const LocaleCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.LocaleCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LocaleCreateRequest::IsInitialized() const {
  return true;
}

void LocaleCreateRequest::InternalSwap(LocaleCreateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lang_, lhs_arena,
                                       &other->_impl_.lang_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, lhs_arena,
                                       &other->_impl_.code_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, lhs_arena,
                                       &other->_impl_.message_, rhs_arena);
}

::google::protobuf::Metadata LocaleCreateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[41]);
}
// ===================================================================

class LocaleUpdateRequest::_Internal {
 public:
};

LocaleUpdateRequest::LocaleUpdateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.auth.v1.LocaleUpdateRequest)
}
LocaleUpdateRequest::LocaleUpdateRequest(const LocaleUpdateRequest& from) : ::google::protobuf::Message() {
  LocaleUpdateRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){},
      decltype(_impl_.id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), _this->GetArenaForAllocation());
  }
  _this->_impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:palm.auth.v1.LocaleUpdateRequest)
}
inline void LocaleUpdateRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){},
      decltype(_impl_.id_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
LocaleUpdateRequest::~LocaleUpdateRequest() {
  // @@protoc_insertion_point(destructor:palm.auth.v1.LocaleUpdateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LocaleUpdateRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}
void LocaleUpdateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void LocaleUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.auth.v1.LocaleUpdateRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LocaleUpdateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 48, 2> LocaleUpdateRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LocaleUpdateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LocaleUpdateRequest, _impl_.message_)}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LocaleUpdateRequest, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LocaleUpdateRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(LocaleUpdateRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(LocaleUpdateRequest, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\0\7\0\0\0\0\0"
    "palm.auth.v1.LocaleUpdateRequest"
    "message"
  }},
};

::uint8_t* LocaleUpdateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.auth.v1.LocaleUpdateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.auth.v1.LocaleUpdateRequest.message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.auth.v1.LocaleUpdateRequest)
  return target;
}

::size_t LocaleUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.auth.v1.LocaleUpdateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LocaleUpdateRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    LocaleUpdateRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*LocaleUpdateRequest::GetClassData() const { return &_class_data_; }


void LocaleUpdateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LocaleUpdateRequest*>(&to_msg);
  auto& from = static_cast<const LocaleUpdateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.auth.v1.LocaleUpdateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocaleUpdateRequest::CopyFrom(const LocaleUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.auth.v1.LocaleUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LocaleUpdateRequest::IsInitialized() const {
  return true;
}

void LocaleUpdateRequest::InternalSwap(LocaleUpdateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, lhs_arena,
                                       &other->_impl_.message_, rhs_arena);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata LocaleUpdateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_auth_2eproto_getter, &descriptor_table_auth_2eproto_once,
      file_level_metadata_auth_2eproto[42]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace auth
}  // namespace palm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
