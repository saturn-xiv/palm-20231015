// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: lemon.proto
#ifndef GRPC_lemon_2eproto__INCLUDED
#define GRPC_lemon_2eproto__INCLUDED

#include "lemon.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace palm {
namespace lemon {
namespace v1 {

class Site final {
 public:
  static constexpr char const* service_full_name() {
    return "palm.lemon.v1.Site";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status Layout(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteLayoutRequest& request, ::palm::lemon::v1::SiteLayoutResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteLayoutResponse>> AsyncLayout(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteLayoutResponse>>(AsyncLayoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteLayoutResponse>> PrepareAsyncLayout(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteLayoutResponse>>(PrepareAsyncLayoutRaw(context, request, cq));
    }
    virtual ::grpc::Status Rss(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::palm::lemon::v1::SiteRssResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteRssResponse>> AsyncRss(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteRssResponse>>(AsyncRssRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteRssResponse>> PrepareAsyncRss(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteRssResponse>>(PrepareAsyncRssRaw(context, request, cq));
    }
    virtual ::grpc::Status Sitemap(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::lemon::v1::SiteSitemapResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteSitemapResponse>> AsyncSitemap(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteSitemapResponse>>(AsyncSitemapRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteSitemapResponse>> PrepareAsyncSitemap(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteSitemapResponse>>(PrepareAsyncSitemapRaw(context, request, cq));
    }
    virtual ::grpc::Status ShowPage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteShowPageRequest& request, ::palm::lemon::v1::SiteShowPageResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteShowPageResponse>> AsyncShowPage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteShowPageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteShowPageResponse>>(AsyncShowPageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteShowPageResponse>> PrepareAsyncShowPage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteShowPageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteShowPageResponse>>(PrepareAsyncShowPageRaw(context, request, cq));
    }
    virtual ::grpc::Status HomePage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteHomePageRequest& request, ::palm::lemon::v1::SiteHomePageResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteHomePageResponse>> AsyncHomePage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteHomePageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteHomePageResponse>>(AsyncHomePageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteHomePageResponse>> PrepareAsyncHomePage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteHomePageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteHomePageResponse>>(PrepareAsyncHomePageRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void Layout(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteLayoutRequest* request, ::palm::lemon::v1::SiteLayoutResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Layout(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteLayoutRequest* request, ::palm::lemon::v1::SiteLayoutResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Rss(::grpc::ClientContext* context, const ::google::protobuf::Duration* request, ::palm::lemon::v1::SiteRssResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Rss(::grpc::ClientContext* context, const ::google::protobuf::Duration* request, ::palm::lemon::v1::SiteRssResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Sitemap(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::lemon::v1::SiteSitemapResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Sitemap(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::lemon::v1::SiteSitemapResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ShowPage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteShowPageRequest* request, ::palm::lemon::v1::SiteShowPageResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ShowPage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteShowPageRequest* request, ::palm::lemon::v1::SiteShowPageResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void HomePage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteHomePageRequest* request, ::palm::lemon::v1::SiteHomePageResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void HomePage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteHomePageRequest* request, ::palm::lemon::v1::SiteHomePageResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteLayoutResponse>* AsyncLayoutRaw(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteLayoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteLayoutResponse>* PrepareAsyncLayoutRaw(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteLayoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteRssResponse>* AsyncRssRaw(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteRssResponse>* PrepareAsyncRssRaw(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteSitemapResponse>* AsyncSitemapRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteSitemapResponse>* PrepareAsyncSitemapRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteShowPageResponse>* AsyncShowPageRaw(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteShowPageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteShowPageResponse>* PrepareAsyncShowPageRaw(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteShowPageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteHomePageResponse>* AsyncHomePageRaw(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteHomePageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::lemon::v1::SiteHomePageResponse>* PrepareAsyncHomePageRaw(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteHomePageRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Layout(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteLayoutRequest& request, ::palm::lemon::v1::SiteLayoutResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteLayoutResponse>> AsyncLayout(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteLayoutResponse>>(AsyncLayoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteLayoutResponse>> PrepareAsyncLayout(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteLayoutResponse>>(PrepareAsyncLayoutRaw(context, request, cq));
    }
    ::grpc::Status Rss(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::palm::lemon::v1::SiteRssResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteRssResponse>> AsyncRss(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteRssResponse>>(AsyncRssRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteRssResponse>> PrepareAsyncRss(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteRssResponse>>(PrepareAsyncRssRaw(context, request, cq));
    }
    ::grpc::Status Sitemap(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::lemon::v1::SiteSitemapResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteSitemapResponse>> AsyncSitemap(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteSitemapResponse>>(AsyncSitemapRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteSitemapResponse>> PrepareAsyncSitemap(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteSitemapResponse>>(PrepareAsyncSitemapRaw(context, request, cq));
    }
    ::grpc::Status ShowPage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteShowPageRequest& request, ::palm::lemon::v1::SiteShowPageResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteShowPageResponse>> AsyncShowPage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteShowPageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteShowPageResponse>>(AsyncShowPageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteShowPageResponse>> PrepareAsyncShowPage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteShowPageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteShowPageResponse>>(PrepareAsyncShowPageRaw(context, request, cq));
    }
    ::grpc::Status HomePage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteHomePageRequest& request, ::palm::lemon::v1::SiteHomePageResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteHomePageResponse>> AsyncHomePage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteHomePageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteHomePageResponse>>(AsyncHomePageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteHomePageResponse>> PrepareAsyncHomePage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteHomePageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteHomePageResponse>>(PrepareAsyncHomePageRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Layout(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteLayoutRequest* request, ::palm::lemon::v1::SiteLayoutResponse* response, std::function<void(::grpc::Status)>) override;
      void Layout(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteLayoutRequest* request, ::palm::lemon::v1::SiteLayoutResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Rss(::grpc::ClientContext* context, const ::google::protobuf::Duration* request, ::palm::lemon::v1::SiteRssResponse* response, std::function<void(::grpc::Status)>) override;
      void Rss(::grpc::ClientContext* context, const ::google::protobuf::Duration* request, ::palm::lemon::v1::SiteRssResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Sitemap(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::lemon::v1::SiteSitemapResponse* response, std::function<void(::grpc::Status)>) override;
      void Sitemap(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::lemon::v1::SiteSitemapResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ShowPage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteShowPageRequest* request, ::palm::lemon::v1::SiteShowPageResponse* response, std::function<void(::grpc::Status)>) override;
      void ShowPage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteShowPageRequest* request, ::palm::lemon::v1::SiteShowPageResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void HomePage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteHomePageRequest* request, ::palm::lemon::v1::SiteHomePageResponse* response, std::function<void(::grpc::Status)>) override;
      void HomePage(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteHomePageRequest* request, ::palm::lemon::v1::SiteHomePageResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteLayoutResponse>* AsyncLayoutRaw(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteLayoutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteLayoutResponse>* PrepareAsyncLayoutRaw(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteLayoutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteRssResponse>* AsyncRssRaw(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteRssResponse>* PrepareAsyncRssRaw(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteSitemapResponse>* AsyncSitemapRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteSitemapResponse>* PrepareAsyncSitemapRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteShowPageResponse>* AsyncShowPageRaw(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteShowPageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteShowPageResponse>* PrepareAsyncShowPageRaw(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteShowPageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteHomePageResponse>* AsyncHomePageRaw(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteHomePageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::lemon::v1::SiteHomePageResponse>* PrepareAsyncHomePageRaw(::grpc::ClientContext* context, const ::palm::lemon::v1::SiteHomePageRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Layout_;
    const ::grpc::internal::RpcMethod rpcmethod_Rss_;
    const ::grpc::internal::RpcMethod rpcmethod_Sitemap_;
    const ::grpc::internal::RpcMethod rpcmethod_ShowPage_;
    const ::grpc::internal::RpcMethod rpcmethod_HomePage_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status Layout(::grpc::ServerContext* context, const ::palm::lemon::v1::SiteLayoutRequest* request, ::palm::lemon::v1::SiteLayoutResponse* response);
    virtual ::grpc::Status Rss(::grpc::ServerContext* context, const ::google::protobuf::Duration* request, ::palm::lemon::v1::SiteRssResponse* response);
    virtual ::grpc::Status Sitemap(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::palm::lemon::v1::SiteSitemapResponse* response);
    virtual ::grpc::Status ShowPage(::grpc::ServerContext* context, const ::palm::lemon::v1::SiteShowPageRequest* request, ::palm::lemon::v1::SiteShowPageResponse* response);
    virtual ::grpc::Status HomePage(::grpc::ServerContext* context, const ::palm::lemon::v1::SiteHomePageRequest* request, ::palm::lemon::v1::SiteHomePageResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Layout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Layout() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Layout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Layout(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteLayoutRequest* /*request*/, ::palm::lemon::v1::SiteLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLayout(::grpc::ServerContext* context, ::palm::lemon::v1::SiteLayoutRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::lemon::v1::SiteLayoutResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Rss : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Rss() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_Rss() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Rss(::grpc::ServerContext* /*context*/, const ::google::protobuf::Duration* /*request*/, ::palm::lemon::v1::SiteRssResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRss(::grpc::ServerContext* context, ::google::protobuf::Duration* request, ::grpc::ServerAsyncResponseWriter< ::palm::lemon::v1::SiteRssResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Sitemap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Sitemap() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_Sitemap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Sitemap(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::lemon::v1::SiteSitemapResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSitemap(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::palm::lemon::v1::SiteSitemapResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ShowPage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ShowPage() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ShowPage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowPage(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteShowPageRequest* /*request*/, ::palm::lemon::v1::SiteShowPageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShowPage(::grpc::ServerContext* context, ::palm::lemon::v1::SiteShowPageRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::lemon::v1::SiteShowPageResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_HomePage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_HomePage() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_HomePage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HomePage(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteHomePageRequest* /*request*/, ::palm::lemon::v1::SiteHomePageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHomePage(::grpc::ServerContext* context, ::palm::lemon::v1::SiteHomePageRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::lemon::v1::SiteHomePageResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Layout<WithAsyncMethod_Rss<WithAsyncMethod_Sitemap<WithAsyncMethod_ShowPage<WithAsyncMethod_HomePage<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Layout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Layout() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::lemon::v1::SiteLayoutRequest, ::palm::lemon::v1::SiteLayoutResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::lemon::v1::SiteLayoutRequest* request, ::palm::lemon::v1::SiteLayoutResponse* response) { return this->Layout(context, request, response); }));}
    void SetMessageAllocatorFor_Layout(
        ::grpc::MessageAllocator< ::palm::lemon::v1::SiteLayoutRequest, ::palm::lemon::v1::SiteLayoutResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::lemon::v1::SiteLayoutRequest, ::palm::lemon::v1::SiteLayoutResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Layout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Layout(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteLayoutRequest* /*request*/, ::palm::lemon::v1::SiteLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Layout(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::lemon::v1::SiteLayoutRequest* /*request*/, ::palm::lemon::v1::SiteLayoutResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Rss : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Rss() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Duration, ::palm::lemon::v1::SiteRssResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Duration* request, ::palm::lemon::v1::SiteRssResponse* response) { return this->Rss(context, request, response); }));}
    void SetMessageAllocatorFor_Rss(
        ::grpc::MessageAllocator< ::google::protobuf::Duration, ::palm::lemon::v1::SiteRssResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Duration, ::palm::lemon::v1::SiteRssResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Rss() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Rss(::grpc::ServerContext* /*context*/, const ::google::protobuf::Duration* /*request*/, ::palm::lemon::v1::SiteRssResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Rss(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Duration* /*request*/, ::palm::lemon::v1::SiteRssResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Sitemap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Sitemap() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::lemon::v1::SiteSitemapResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::palm::lemon::v1::SiteSitemapResponse* response) { return this->Sitemap(context, request, response); }));}
    void SetMessageAllocatorFor_Sitemap(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::palm::lemon::v1::SiteSitemapResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::lemon::v1::SiteSitemapResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Sitemap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Sitemap(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::lemon::v1::SiteSitemapResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Sitemap(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::lemon::v1::SiteSitemapResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ShowPage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ShowPage() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::lemon::v1::SiteShowPageRequest, ::palm::lemon::v1::SiteShowPageResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::lemon::v1::SiteShowPageRequest* request, ::palm::lemon::v1::SiteShowPageResponse* response) { return this->ShowPage(context, request, response); }));}
    void SetMessageAllocatorFor_ShowPage(
        ::grpc::MessageAllocator< ::palm::lemon::v1::SiteShowPageRequest, ::palm::lemon::v1::SiteShowPageResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::lemon::v1::SiteShowPageRequest, ::palm::lemon::v1::SiteShowPageResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ShowPage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowPage(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteShowPageRequest* /*request*/, ::palm::lemon::v1::SiteShowPageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ShowPage(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::lemon::v1::SiteShowPageRequest* /*request*/, ::palm::lemon::v1::SiteShowPageResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_HomePage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_HomePage() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::lemon::v1::SiteHomePageRequest, ::palm::lemon::v1::SiteHomePageResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::lemon::v1::SiteHomePageRequest* request, ::palm::lemon::v1::SiteHomePageResponse* response) { return this->HomePage(context, request, response); }));}
    void SetMessageAllocatorFor_HomePage(
        ::grpc::MessageAllocator< ::palm::lemon::v1::SiteHomePageRequest, ::palm::lemon::v1::SiteHomePageResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::lemon::v1::SiteHomePageRequest, ::palm::lemon::v1::SiteHomePageResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_HomePage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HomePage(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteHomePageRequest* /*request*/, ::palm::lemon::v1::SiteHomePageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* HomePage(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::lemon::v1::SiteHomePageRequest* /*request*/, ::palm::lemon::v1::SiteHomePageResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Layout<WithCallbackMethod_Rss<WithCallbackMethod_Sitemap<WithCallbackMethod_ShowPage<WithCallbackMethod_HomePage<Service > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Layout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Layout() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Layout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Layout(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteLayoutRequest* /*request*/, ::palm::lemon::v1::SiteLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Rss : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Rss() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_Rss() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Rss(::grpc::ServerContext* /*context*/, const ::google::protobuf::Duration* /*request*/, ::palm::lemon::v1::SiteRssResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Sitemap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Sitemap() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_Sitemap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Sitemap(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::lemon::v1::SiteSitemapResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ShowPage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ShowPage() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ShowPage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowPage(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteShowPageRequest* /*request*/, ::palm::lemon::v1::SiteShowPageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_HomePage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_HomePage() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_HomePage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HomePage(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteHomePageRequest* /*request*/, ::palm::lemon::v1::SiteHomePageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Layout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Layout() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Layout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Layout(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteLayoutRequest* /*request*/, ::palm::lemon::v1::SiteLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLayout(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Rss : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Rss() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_Rss() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Rss(::grpc::ServerContext* /*context*/, const ::google::protobuf::Duration* /*request*/, ::palm::lemon::v1::SiteRssResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRss(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Sitemap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Sitemap() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_Sitemap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Sitemap(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::lemon::v1::SiteSitemapResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSitemap(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ShowPage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ShowPage() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ShowPage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowPage(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteShowPageRequest* /*request*/, ::palm::lemon::v1::SiteShowPageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShowPage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_HomePage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_HomePage() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_HomePage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HomePage(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteHomePageRequest* /*request*/, ::palm::lemon::v1::SiteHomePageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHomePage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Layout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Layout() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Layout(context, request, response); }));
    }
    ~WithRawCallbackMethod_Layout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Layout(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteLayoutRequest* /*request*/, ::palm::lemon::v1::SiteLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Layout(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Rss : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Rss() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Rss(context, request, response); }));
    }
    ~WithRawCallbackMethod_Rss() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Rss(::grpc::ServerContext* /*context*/, const ::google::protobuf::Duration* /*request*/, ::palm::lemon::v1::SiteRssResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Rss(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Sitemap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Sitemap() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Sitemap(context, request, response); }));
    }
    ~WithRawCallbackMethod_Sitemap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Sitemap(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::lemon::v1::SiteSitemapResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Sitemap(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ShowPage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ShowPage() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ShowPage(context, request, response); }));
    }
    ~WithRawCallbackMethod_ShowPage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowPage(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteShowPageRequest* /*request*/, ::palm::lemon::v1::SiteShowPageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ShowPage(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_HomePage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_HomePage() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->HomePage(context, request, response); }));
    }
    ~WithRawCallbackMethod_HomePage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HomePage(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteHomePageRequest* /*request*/, ::palm::lemon::v1::SiteHomePageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* HomePage(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Layout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Layout() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::lemon::v1::SiteLayoutRequest, ::palm::lemon::v1::SiteLayoutResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::lemon::v1::SiteLayoutRequest, ::palm::lemon::v1::SiteLayoutResponse>* streamer) {
                       return this->StreamedLayout(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Layout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Layout(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteLayoutRequest* /*request*/, ::palm::lemon::v1::SiteLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLayout(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::lemon::v1::SiteLayoutRequest,::palm::lemon::v1::SiteLayoutResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Rss : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Rss() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Duration, ::palm::lemon::v1::SiteRssResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Duration, ::palm::lemon::v1::SiteRssResponse>* streamer) {
                       return this->StreamedRss(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Rss() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Rss(::grpc::ServerContext* /*context*/, const ::google::protobuf::Duration* /*request*/, ::palm::lemon::v1::SiteRssResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRss(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Duration,::palm::lemon::v1::SiteRssResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Sitemap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Sitemap() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::palm::lemon::v1::SiteSitemapResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::palm::lemon::v1::SiteSitemapResponse>* streamer) {
                       return this->StreamedSitemap(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Sitemap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Sitemap(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::lemon::v1::SiteSitemapResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSitemap(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::palm::lemon::v1::SiteSitemapResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ShowPage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ShowPage() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::lemon::v1::SiteShowPageRequest, ::palm::lemon::v1::SiteShowPageResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::lemon::v1::SiteShowPageRequest, ::palm::lemon::v1::SiteShowPageResponse>* streamer) {
                       return this->StreamedShowPage(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ShowPage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ShowPage(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteShowPageRequest* /*request*/, ::palm::lemon::v1::SiteShowPageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedShowPage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::lemon::v1::SiteShowPageRequest,::palm::lemon::v1::SiteShowPageResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_HomePage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_HomePage() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::lemon::v1::SiteHomePageRequest, ::palm::lemon::v1::SiteHomePageResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::lemon::v1::SiteHomePageRequest, ::palm::lemon::v1::SiteHomePageResponse>* streamer) {
                       return this->StreamedHomePage(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_HomePage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status HomePage(::grpc::ServerContext* /*context*/, const ::palm::lemon::v1::SiteHomePageRequest* /*request*/, ::palm::lemon::v1::SiteHomePageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedHomePage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::lemon::v1::SiteHomePageRequest,::palm::lemon::v1::SiteHomePageResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Layout<WithStreamedUnaryMethod_Rss<WithStreamedUnaryMethod_Sitemap<WithStreamedUnaryMethod_ShowPage<WithStreamedUnaryMethod_HomePage<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_Layout<WithStreamedUnaryMethod_Rss<WithStreamedUnaryMethod_Sitemap<WithStreamedUnaryMethod_ShowPage<WithStreamedUnaryMethod_HomePage<Service > > > > > StreamedService;
};

}  // namespace v1
}  // namespace lemon
}  // namespace palm


#endif  // GRPC_lemon_2eproto__INCLUDED
