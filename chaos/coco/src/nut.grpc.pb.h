// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: nut.proto
#ifndef GRPC_nut_2eproto__INCLUDED
#define GRPC_nut_2eproto__INCLUDED

#include "nut.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace palm {
namespace plugins {
namespace nut {
namespace v1 {

class Locale final {
 public:
  static constexpr char const* service_full_name() {
    return "palm.plugins.nut.v1.Locale";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status Set(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleSetRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSet(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSet(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetRaw(context, request, cq));
    }
    virtual ::grpc::Status Get(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleGetRequest& request, ::palm::plugins::nut::v1::LocaleIndexResponse_Item* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::LocaleIndexResponse_Item>> AsyncGet(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::LocaleIndexResponse_Item>>(AsyncGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::LocaleIndexResponse_Item>> PrepareAsyncGet(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::LocaleIndexResponse_Item>>(PrepareAsyncGetRaw(context, request, cq));
    }
    virtual ::grpc::Status Index(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::palm::plugins::nut::v1::LocaleIndexResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::LocaleIndexResponse>> AsyncIndex(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::LocaleIndexResponse>>(AsyncIndexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::LocaleIndexResponse>> PrepareAsyncIndex(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::LocaleIndexResponse>>(PrepareAsyncIndexRaw(context, request, cq));
    }
    virtual ::grpc::Status Destroy(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDestroy(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDestroy(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDestroyRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void Set(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleSetRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Set(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleSetRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Get(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleGetRequest* request, ::palm::plugins::nut::v1::LocaleIndexResponse_Item* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Get(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleGetRequest* request, ::palm::plugins::nut::v1::LocaleIndexResponse_Item* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Index(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager* request, ::palm::plugins::nut::v1::LocaleIndexResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Index(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager* request, ::palm::plugins::nut::v1::LocaleIndexResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Destroy(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Destroy(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::LocaleIndexResponse_Item>* AsyncGetRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleGetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::LocaleIndexResponse_Item>* PrepareAsyncGetRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleGetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::LocaleIndexResponse>* AsyncIndexRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::LocaleIndexResponse>* PrepareAsyncIndexRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDestroyRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDestroyRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Set(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleSetRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSet(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSet(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetRaw(context, request, cq));
    }
    ::grpc::Status Get(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleGetRequest& request, ::palm::plugins::nut::v1::LocaleIndexResponse_Item* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::LocaleIndexResponse_Item>> AsyncGet(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::LocaleIndexResponse_Item>>(AsyncGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::LocaleIndexResponse_Item>> PrepareAsyncGet(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::LocaleIndexResponse_Item>>(PrepareAsyncGetRaw(context, request, cq));
    }
    ::grpc::Status Index(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::palm::plugins::nut::v1::LocaleIndexResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::LocaleIndexResponse>> AsyncIndex(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::LocaleIndexResponse>>(AsyncIndexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::LocaleIndexResponse>> PrepareAsyncIndex(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::LocaleIndexResponse>>(PrepareAsyncIndexRaw(context, request, cq));
    }
    ::grpc::Status Destroy(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDestroy(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDestroy(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDestroyRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Set(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleSetRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Set(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleSetRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Get(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleGetRequest* request, ::palm::plugins::nut::v1::LocaleIndexResponse_Item* response, std::function<void(::grpc::Status)>) override;
      void Get(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleGetRequest* request, ::palm::plugins::nut::v1::LocaleIndexResponse_Item* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Index(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager* request, ::palm::plugins::nut::v1::LocaleIndexResponse* response, std::function<void(::grpc::Status)>) override;
      void Index(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager* request, ::palm::plugins::nut::v1::LocaleIndexResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Destroy(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Destroy(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::LocaleIndexResponse_Item>* AsyncGetRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleGetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::LocaleIndexResponse_Item>* PrepareAsyncGetRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::LocaleGetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::LocaleIndexResponse>* AsyncIndexRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::LocaleIndexResponse>* PrepareAsyncIndexRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDestroyRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDestroyRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Set_;
    const ::grpc::internal::RpcMethod rpcmethod_Get_;
    const ::grpc::internal::RpcMethod rpcmethod_Index_;
    const ::grpc::internal::RpcMethod rpcmethod_Destroy_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status Set(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::LocaleSetRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status Get(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::LocaleGetRequest* request, ::palm::plugins::nut::v1::LocaleIndexResponse_Item* response);
    virtual ::grpc::Status Index(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::Pager* request, ::palm::plugins::nut::v1::LocaleIndexResponse* response);
    virtual ::grpc::Status Destroy(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::IdRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Set() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::LocaleSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSet(::grpc::ServerContext* context, ::palm::plugins::nut::v1::LocaleSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Get() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::LocaleGetRequest* /*request*/, ::palm::plugins::nut::v1::LocaleIndexResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGet(::grpc::ServerContext* context, ::palm::plugins::nut::v1::LocaleGetRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::plugins::nut::v1::LocaleIndexResponse_Item>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Index : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Index() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_Index() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Index(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::Pager* /*request*/, ::palm::plugins::nut::v1::LocaleIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIndex(::grpc::ServerContext* context, ::palm::plugins::nut::v1::Pager* request, ::grpc::ServerAsyncResponseWriter< ::palm::plugins::nut::v1::LocaleIndexResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Destroy() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::IdRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDestroy(::grpc::ServerContext* context, ::palm::plugins::nut::v1::IdRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Set<WithAsyncMethod_Get<WithAsyncMethod_Index<WithAsyncMethod_Destroy<Service > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Set() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::LocaleSetRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::LocaleSetRequest* request, ::google::protobuf::Empty* response) { return this->Set(context, request, response); }));}
    void SetMessageAllocatorFor_Set(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::LocaleSetRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::LocaleSetRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::LocaleSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Set(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::LocaleSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Get() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::LocaleGetRequest, ::palm::plugins::nut::v1::LocaleIndexResponse_Item>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::LocaleGetRequest* request, ::palm::plugins::nut::v1::LocaleIndexResponse_Item* response) { return this->Get(context, request, response); }));}
    void SetMessageAllocatorFor_Get(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::LocaleGetRequest, ::palm::plugins::nut::v1::LocaleIndexResponse_Item>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::LocaleGetRequest, ::palm::plugins::nut::v1::LocaleIndexResponse_Item>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::LocaleGetRequest* /*request*/, ::palm::plugins::nut::v1::LocaleIndexResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Get(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::LocaleGetRequest* /*request*/, ::palm::plugins::nut::v1::LocaleIndexResponse_Item* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Index : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Index() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::Pager, ::palm::plugins::nut::v1::LocaleIndexResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::Pager* request, ::palm::plugins::nut::v1::LocaleIndexResponse* response) { return this->Index(context, request, response); }));}
    void SetMessageAllocatorFor_Index(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::Pager, ::palm::plugins::nut::v1::LocaleIndexResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::Pager, ::palm::plugins::nut::v1::LocaleIndexResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Index() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Index(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::Pager* /*request*/, ::palm::plugins::nut::v1::LocaleIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Index(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::Pager* /*request*/, ::palm::plugins::nut::v1::LocaleIndexResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Destroy() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::IdRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::IdRequest* request, ::google::protobuf::Empty* response) { return this->Destroy(context, request, response); }));}
    void SetMessageAllocatorFor_Destroy(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::IdRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::IdRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::IdRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::IdRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Set<WithCallbackMethod_Get<WithCallbackMethod_Index<WithCallbackMethod_Destroy<Service > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Set() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::LocaleSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Get() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::LocaleGetRequest* /*request*/, ::palm::plugins::nut::v1::LocaleIndexResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Index : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Index() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_Index() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Index(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::Pager* /*request*/, ::palm::plugins::nut::v1::LocaleIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Destroy() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::IdRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Set() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::LocaleSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Get() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::LocaleGetRequest* /*request*/, ::palm::plugins::nut::v1::LocaleIndexResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Index : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Index() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_Index() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Index(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::Pager* /*request*/, ::palm::plugins::nut::v1::LocaleIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIndex(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Destroy() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::IdRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDestroy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Set() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Set(context, request, response); }));
    }
    ~WithRawCallbackMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::LocaleSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Set(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Get() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Get(context, request, response); }));
    }
    ~WithRawCallbackMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::LocaleGetRequest* /*request*/, ::palm::plugins::nut::v1::LocaleIndexResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Get(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Index : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Index() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Index(context, request, response); }));
    }
    ~WithRawCallbackMethod_Index() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Index(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::Pager* /*request*/, ::palm::plugins::nut::v1::LocaleIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Index(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Destroy() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Destroy(context, request, response); }));
    }
    ~WithRawCallbackMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::IdRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Set() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::LocaleSetRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::LocaleSetRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSet(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::LocaleSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::LocaleSetRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Get() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::LocaleGetRequest, ::palm::plugins::nut::v1::LocaleIndexResponse_Item>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::LocaleGetRequest, ::palm::plugins::nut::v1::LocaleIndexResponse_Item>* streamer) {
                       return this->StreamedGet(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::LocaleGetRequest* /*request*/, ::palm::plugins::nut::v1::LocaleIndexResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::LocaleGetRequest,::palm::plugins::nut::v1::LocaleIndexResponse_Item>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Index : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Index() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::Pager, ::palm::plugins::nut::v1::LocaleIndexResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::Pager, ::palm::plugins::nut::v1::LocaleIndexResponse>* streamer) {
                       return this->StreamedIndex(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Index() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Index(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::Pager* /*request*/, ::palm::plugins::nut::v1::LocaleIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIndex(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::Pager,::palm::plugins::nut::v1::LocaleIndexResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Destroy() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::IdRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::IdRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDestroy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::IdRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDestroy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::IdRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Set<WithStreamedUnaryMethod_Get<WithStreamedUnaryMethod_Index<WithStreamedUnaryMethod_Destroy<Service > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_Set<WithStreamedUnaryMethod_Get<WithStreamedUnaryMethod_Index<WithStreamedUnaryMethod_Destroy<Service > > > > StreamedService;
};

// ----------------------------------------------------------------------------
//
class Site final {
 public:
  static constexpr char const* service_full_name() {
    return "palm.plugins.nut.v1.Site";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status ClearCache(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncClearCache(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncClearCacheRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncClearCache(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncClearCacheRaw(context, request, cq));
    }
    virtual ::grpc::Status Layout(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::plugins::nut::v1::SiteLayoutResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteLayoutResponse>> AsyncLayout(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteLayoutResponse>>(AsyncLayoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteLayoutResponse>> PrepareAsyncLayout(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteLayoutResponse>>(PrepareAsyncLayoutRaw(context, request, cq));
    }
    virtual ::grpc::Status SetAuthor(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetAuthor(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetAuthorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetAuthor(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetAuthorRaw(context, request, cq));
    }
    virtual ::grpc::Status SetCopyright(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetCopyright(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetCopyrightRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetCopyright(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetCopyrightRaw(context, request, cq));
    }
    virtual ::grpc::Status SetKeywords(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetKeywords(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetKeywordsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetKeywords(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetKeywordsRaw(context, request, cq));
    }
    virtual ::grpc::Status SetInfo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetInfoRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetInfo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetInfo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status SetLogo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetLogoRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetLogo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetLogoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetLogoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetLogo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetLogoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetLogoRaw(context, request, cq));
    }
    virtual ::grpc::Status SetAws(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::AwsProfile& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetAws(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::AwsProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetAwsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetAws(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::AwsProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetAwsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAws(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::plugins::nut::v1::AwsProfile* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::AwsProfile>> AsyncGetAws(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::AwsProfile>>(AsyncGetAwsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::AwsProfile>> PrepareAsyncGetAws(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::AwsProfile>>(PrepareAsyncGetAwsRaw(context, request, cq));
    }
    virtual ::grpc::Status TestAwsS3(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::plugins::nut::v1::SiteAwsS3TestResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteAwsS3TestResponse>> AsyncTestAwsS3(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteAwsS3TestResponse>>(AsyncTestAwsS3Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteAwsS3TestResponse>> PrepareAsyncTestAwsS3(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteAwsS3TestResponse>>(PrepareAsyncTestAwsS3Raw(context, request, cq));
    }
    virtual ::grpc::Status SetSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SmtpProfile& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SmtpProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetSmtpRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SmtpProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetSmtpRaw(context, request, cq));
    }
    virtual ::grpc::Status GetSmtp(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::plugins::nut::v1::SmtpProfile* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SmtpProfile>> AsyncGetSmtp(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SmtpProfile>>(AsyncGetSmtpRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SmtpProfile>> PrepareAsyncGetSmtp(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SmtpProfile>>(PrepareAsyncGetSmtpRaw(context, request, cq));
    }
    virtual ::grpc::Status TestSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSmtpTestRequst& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncTestSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSmtpTestRequst& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncTestSmtpRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncTestSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSmtpTestRequst& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncTestSmtpRaw(context, request, cq));
    }
    virtual ::grpc::Status SetBing(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BingProfile& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetBing(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BingProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetBingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetBing(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BingProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetBingRaw(context, request, cq));
    }
    virtual ::grpc::Status GetBing(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::plugins::nut::v1::BingProfile* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::BingProfile>> AsyncGetBing(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::BingProfile>>(AsyncGetBingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::BingProfile>> PrepareAsyncGetBing(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::BingProfile>>(PrepareAsyncGetBingRaw(context, request, cq));
    }
    virtual ::grpc::Status SetGoogle(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::GoogleProfile& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetGoogle(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::GoogleProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetGoogleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetGoogle(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::GoogleProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetGoogleRaw(context, request, cq));
    }
    virtual ::grpc::Status GetGoogle(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::plugins::nut::v1::GoogleProfile* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::GoogleProfile>> AsyncGetGoogle(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::GoogleProfile>>(AsyncGetGoogleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::GoogleProfile>> PrepareAsyncGetGoogle(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::GoogleProfile>>(PrepareAsyncGetGoogleRaw(context, request, cq));
    }
    virtual ::grpc::Status SetBaidu(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BaiduProfile& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetBaidu(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BaiduProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetBaiduRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetBaidu(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BaiduProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetBaiduRaw(context, request, cq));
    }
    virtual ::grpc::Status GetBaidu(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::plugins::nut::v1::BaiduProfile* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::BaiduProfile>> AsyncGetBaidu(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::BaiduProfile>>(AsyncGetBaiduRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::BaiduProfile>> PrepareAsyncGetBaidu(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::BaiduProfile>>(PrepareAsyncGetBaiduRaw(context, request, cq));
    }
    virtual ::grpc::Status Status(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::plugins::nut::v1::SiteStatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteStatusResponse>> AsyncStatus(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteStatusResponse>>(AsyncStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteStatusResponse>> PrepareAsyncStatus(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteStatusResponse>>(PrepareAsyncStatusRaw(context, request, cq));
    }
    virtual ::grpc::Status NewLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncNewLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncNewLeaveWordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncNewLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncNewLeaveWordRaw(context, request, cq));
    }
    virtual ::grpc::Status IndexLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>> AsyncIndexLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>>(AsyncIndexLeaveWordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>> PrepareAsyncIndexLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>>(PrepareAsyncIndexLeaveWordRaw(context, request, cq));
    }
    virtual ::grpc::Status DestroyLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDestroyLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDestroyLeaveWordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDestroyLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDestroyLeaveWordRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void ClearCache(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ClearCache(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Layout(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteLayoutResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Layout(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteLayoutResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetAuthor(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetAuthor(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetCopyright(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetCopyright(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetKeywords(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetKeywords(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetInfo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetInfoRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetInfo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetInfoRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetLogo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetLogoRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetLogo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetLogoRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetAws(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::AwsProfile* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetAws(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::AwsProfile* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAws(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::AwsProfile* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAws(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::AwsProfile* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void TestAwsS3(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteAwsS3TestResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void TestAwsS3(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteAwsS3TestResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SmtpProfile* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SmtpProfile* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetSmtp(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SmtpProfile* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSmtp(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SmtpProfile* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void TestSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSmtpTestRequst* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void TestSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSmtpTestRequst* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetBing(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BingProfile* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetBing(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BingProfile* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetBing(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::BingProfile* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetBing(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::BingProfile* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetGoogle(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::GoogleProfile* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetGoogle(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::GoogleProfile* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetGoogle(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::GoogleProfile* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetGoogle(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::GoogleProfile* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetBaidu(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BaiduProfile* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetBaidu(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BaiduProfile* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetBaidu(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::BaiduProfile* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetBaidu(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::BaiduProfile* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Status(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteStatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Status(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void NewLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void NewLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void IndexLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager* request, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IndexLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager* request, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DestroyLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DestroyLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncClearCacheRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncClearCacheRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteLayoutResponse>* AsyncLayoutRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteLayoutResponse>* PrepareAsyncLayoutRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetAuthorRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetAuthorRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetCopyrightRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetCopyrightRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetKeywordsRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetKeywordsRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetInfoRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetInfoRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetLogoRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetLogoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetLogoRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetLogoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetAwsRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::AwsProfile& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetAwsRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::AwsProfile& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::AwsProfile>* AsyncGetAwsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::AwsProfile>* PrepareAsyncGetAwsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteAwsS3TestResponse>* AsyncTestAwsS3Raw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteAwsS3TestResponse>* PrepareAsyncTestAwsS3Raw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetSmtpRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SmtpProfile& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetSmtpRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SmtpProfile& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SmtpProfile>* AsyncGetSmtpRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SmtpProfile>* PrepareAsyncGetSmtpRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncTestSmtpRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSmtpTestRequst& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncTestSmtpRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSmtpTestRequst& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetBingRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BingProfile& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetBingRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BingProfile& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::BingProfile>* AsyncGetBingRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::BingProfile>* PrepareAsyncGetBingRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetGoogleRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::GoogleProfile& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetGoogleRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::GoogleProfile& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::GoogleProfile>* AsyncGetGoogleRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::GoogleProfile>* PrepareAsyncGetGoogleRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetBaiduRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BaiduProfile& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetBaiduRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BaiduProfile& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::BaiduProfile>* AsyncGetBaiduRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::BaiduProfile>* PrepareAsyncGetBaiduRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteStatusResponse>* AsyncStatusRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteStatusResponse>* PrepareAsyncStatusRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncNewLeaveWordRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncNewLeaveWordRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>* AsyncIndexLeaveWordRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>* PrepareAsyncIndexLeaveWordRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDestroyLeaveWordRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDestroyLeaveWordRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status ClearCache(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncClearCache(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncClearCacheRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncClearCache(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncClearCacheRaw(context, request, cq));
    }
    ::grpc::Status Layout(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::plugins::nut::v1::SiteLayoutResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteLayoutResponse>> AsyncLayout(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteLayoutResponse>>(AsyncLayoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteLayoutResponse>> PrepareAsyncLayout(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteLayoutResponse>>(PrepareAsyncLayoutRaw(context, request, cq));
    }
    ::grpc::Status SetAuthor(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetAuthor(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetAuthorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetAuthor(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetAuthorRaw(context, request, cq));
    }
    ::grpc::Status SetCopyright(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetCopyright(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetCopyrightRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetCopyright(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetCopyrightRaw(context, request, cq));
    }
    ::grpc::Status SetKeywords(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetKeywords(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetKeywordsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetKeywords(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetKeywordsRaw(context, request, cq));
    }
    ::grpc::Status SetInfo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetInfoRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetInfo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetInfo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetInfoRaw(context, request, cq));
    }
    ::grpc::Status SetLogo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetLogoRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetLogo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetLogoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetLogoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetLogo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetLogoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetLogoRaw(context, request, cq));
    }
    ::grpc::Status SetAws(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::AwsProfile& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetAws(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::AwsProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetAwsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetAws(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::AwsProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetAwsRaw(context, request, cq));
    }
    ::grpc::Status GetAws(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::plugins::nut::v1::AwsProfile* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::AwsProfile>> AsyncGetAws(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::AwsProfile>>(AsyncGetAwsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::AwsProfile>> PrepareAsyncGetAws(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::AwsProfile>>(PrepareAsyncGetAwsRaw(context, request, cq));
    }
    ::grpc::Status TestAwsS3(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::plugins::nut::v1::SiteAwsS3TestResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteAwsS3TestResponse>> AsyncTestAwsS3(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteAwsS3TestResponse>>(AsyncTestAwsS3Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteAwsS3TestResponse>> PrepareAsyncTestAwsS3(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteAwsS3TestResponse>>(PrepareAsyncTestAwsS3Raw(context, request, cq));
    }
    ::grpc::Status SetSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SmtpProfile& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SmtpProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetSmtpRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SmtpProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetSmtpRaw(context, request, cq));
    }
    ::grpc::Status GetSmtp(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::plugins::nut::v1::SmtpProfile* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SmtpProfile>> AsyncGetSmtp(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SmtpProfile>>(AsyncGetSmtpRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SmtpProfile>> PrepareAsyncGetSmtp(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SmtpProfile>>(PrepareAsyncGetSmtpRaw(context, request, cq));
    }
    ::grpc::Status TestSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSmtpTestRequst& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncTestSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSmtpTestRequst& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncTestSmtpRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncTestSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSmtpTestRequst& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncTestSmtpRaw(context, request, cq));
    }
    ::grpc::Status SetBing(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BingProfile& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetBing(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BingProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetBingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetBing(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BingProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetBingRaw(context, request, cq));
    }
    ::grpc::Status GetBing(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::plugins::nut::v1::BingProfile* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::BingProfile>> AsyncGetBing(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::BingProfile>>(AsyncGetBingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::BingProfile>> PrepareAsyncGetBing(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::BingProfile>>(PrepareAsyncGetBingRaw(context, request, cq));
    }
    ::grpc::Status SetGoogle(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::GoogleProfile& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetGoogle(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::GoogleProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetGoogleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetGoogle(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::GoogleProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetGoogleRaw(context, request, cq));
    }
    ::grpc::Status GetGoogle(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::plugins::nut::v1::GoogleProfile* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::GoogleProfile>> AsyncGetGoogle(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::GoogleProfile>>(AsyncGetGoogleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::GoogleProfile>> PrepareAsyncGetGoogle(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::GoogleProfile>>(PrepareAsyncGetGoogleRaw(context, request, cq));
    }
    ::grpc::Status SetBaidu(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BaiduProfile& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetBaidu(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BaiduProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetBaiduRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetBaidu(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BaiduProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetBaiduRaw(context, request, cq));
    }
    ::grpc::Status GetBaidu(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::plugins::nut::v1::BaiduProfile* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::BaiduProfile>> AsyncGetBaidu(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::BaiduProfile>>(AsyncGetBaiduRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::BaiduProfile>> PrepareAsyncGetBaidu(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::BaiduProfile>>(PrepareAsyncGetBaiduRaw(context, request, cq));
    }
    ::grpc::Status Status(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::plugins::nut::v1::SiteStatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteStatusResponse>> AsyncStatus(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteStatusResponse>>(AsyncStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteStatusResponse>> PrepareAsyncStatus(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteStatusResponse>>(PrepareAsyncStatusRaw(context, request, cq));
    }
    ::grpc::Status NewLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncNewLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncNewLeaveWordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncNewLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncNewLeaveWordRaw(context, request, cq));
    }
    ::grpc::Status IndexLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>> AsyncIndexLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>>(AsyncIndexLeaveWordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>> PrepareAsyncIndexLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>>(PrepareAsyncIndexLeaveWordRaw(context, request, cq));
    }
    ::grpc::Status DestroyLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDestroyLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDestroyLeaveWordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDestroyLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDestroyLeaveWordRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void ClearCache(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ClearCache(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Layout(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteLayoutResponse* response, std::function<void(::grpc::Status)>) override;
      void Layout(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteLayoutResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetAuthor(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetAuthor(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetCopyright(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetCopyright(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetKeywords(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetKeywords(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetInfo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetInfoRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetInfo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetInfoRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetLogo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetLogoRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetLogo(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetLogoRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetAws(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::AwsProfile* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetAws(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::AwsProfile* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAws(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::AwsProfile* response, std::function<void(::grpc::Status)>) override;
      void GetAws(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::AwsProfile* response, ::grpc::ClientUnaryReactor* reactor) override;
      void TestAwsS3(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteAwsS3TestResponse* response, std::function<void(::grpc::Status)>) override;
      void TestAwsS3(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteAwsS3TestResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SmtpProfile* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SmtpProfile* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSmtp(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SmtpProfile* response, std::function<void(::grpc::Status)>) override;
      void GetSmtp(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SmtpProfile* response, ::grpc::ClientUnaryReactor* reactor) override;
      void TestSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSmtpTestRequst* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void TestSmtp(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSmtpTestRequst* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetBing(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BingProfile* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetBing(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BingProfile* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetBing(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::BingProfile* response, std::function<void(::grpc::Status)>) override;
      void GetBing(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::BingProfile* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetGoogle(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::GoogleProfile* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetGoogle(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::GoogleProfile* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetGoogle(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::GoogleProfile* response, std::function<void(::grpc::Status)>) override;
      void GetGoogle(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::GoogleProfile* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetBaidu(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BaiduProfile* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetBaidu(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BaiduProfile* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetBaidu(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::BaiduProfile* response, std::function<void(::grpc::Status)>) override;
      void GetBaidu(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::BaiduProfile* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Status(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteStatusResponse* response, std::function<void(::grpc::Status)>) override;
      void Status(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void NewLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void NewLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IndexLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager* request, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse* response, std::function<void(::grpc::Status)>) override;
      void IndexLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager* request, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DestroyLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DestroyLeaveWord(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncClearCacheRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncClearCacheRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteLayoutResponse>* AsyncLayoutRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteLayoutResponse>* PrepareAsyncLayoutRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetAuthorRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetAuthorRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetCopyrightRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetCopyrightRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetKeywordsRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetKeywordsRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetInfoRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetInfoRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetLogoRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetLogoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetLogoRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSetLogoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetAwsRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::AwsProfile& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetAwsRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::AwsProfile& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::AwsProfile>* AsyncGetAwsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::AwsProfile>* PrepareAsyncGetAwsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteAwsS3TestResponse>* AsyncTestAwsS3Raw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteAwsS3TestResponse>* PrepareAsyncTestAwsS3Raw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetSmtpRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SmtpProfile& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetSmtpRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SmtpProfile& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SmtpProfile>* AsyncGetSmtpRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SmtpProfile>* PrepareAsyncGetSmtpRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncTestSmtpRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSmtpTestRequst& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncTestSmtpRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteSmtpTestRequst& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetBingRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BingProfile& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetBingRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BingProfile& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::BingProfile>* AsyncGetBingRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::BingProfile>* PrepareAsyncGetBingRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetGoogleRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::GoogleProfile& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetGoogleRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::GoogleProfile& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::GoogleProfile>* AsyncGetGoogleRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::GoogleProfile>* PrepareAsyncGetGoogleRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetBaiduRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BaiduProfile& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetBaiduRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::BaiduProfile& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::BaiduProfile>* AsyncGetBaiduRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::BaiduProfile>* PrepareAsyncGetBaiduRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteStatusResponse>* AsyncStatusRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteStatusResponse>* PrepareAsyncStatusRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncNewLeaveWordRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncNewLeaveWordRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>* AsyncIndexLeaveWordRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>* PrepareAsyncIndexLeaveWordRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::Pager& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDestroyLeaveWordRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDestroyLeaveWordRaw(::grpc::ClientContext* context, const ::palm::plugins::nut::v1::IdRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ClearCache_;
    const ::grpc::internal::RpcMethod rpcmethod_Layout_;
    const ::grpc::internal::RpcMethod rpcmethod_SetAuthor_;
    const ::grpc::internal::RpcMethod rpcmethod_SetCopyright_;
    const ::grpc::internal::RpcMethod rpcmethod_SetKeywords_;
    const ::grpc::internal::RpcMethod rpcmethod_SetInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_SetLogo_;
    const ::grpc::internal::RpcMethod rpcmethod_SetAws_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAws_;
    const ::grpc::internal::RpcMethod rpcmethod_TestAwsS3_;
    const ::grpc::internal::RpcMethod rpcmethod_SetSmtp_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSmtp_;
    const ::grpc::internal::RpcMethod rpcmethod_TestSmtp_;
    const ::grpc::internal::RpcMethod rpcmethod_SetBing_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBing_;
    const ::grpc::internal::RpcMethod rpcmethod_SetGoogle_;
    const ::grpc::internal::RpcMethod rpcmethod_GetGoogle_;
    const ::grpc::internal::RpcMethod rpcmethod_SetBaidu_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBaidu_;
    const ::grpc::internal::RpcMethod rpcmethod_Status_;
    const ::grpc::internal::RpcMethod rpcmethod_NewLeaveWord_;
    const ::grpc::internal::RpcMethod rpcmethod_IndexLeaveWord_;
    const ::grpc::internal::RpcMethod rpcmethod_DestroyLeaveWord_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status ClearCache(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status Layout(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteLayoutResponse* response);
    virtual ::grpc::Status SetAuthor(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SetCopyright(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SetKeywords(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SetInfo(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::SiteSetInfoRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SetLogo(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::SiteSetLogoRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SetAws(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::AwsProfile* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetAws(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::AwsProfile* response);
    virtual ::grpc::Status TestAwsS3(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteAwsS3TestResponse* response);
    virtual ::grpc::Status SetSmtp(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::SmtpProfile* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetSmtp(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SmtpProfile* response);
    virtual ::grpc::Status TestSmtp(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::SiteSmtpTestRequst* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SetBing(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::BingProfile* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetBing(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::BingProfile* response);
    virtual ::grpc::Status SetGoogle(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::GoogleProfile* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetGoogle(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::GoogleProfile* response);
    virtual ::grpc::Status SetBaidu(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::BaiduProfile* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetBaidu(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::BaiduProfile* response);
    virtual ::grpc::Status Status(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteStatusResponse* response);
    virtual ::grpc::Status NewLeaveWord(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status IndexLeaveWord(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::Pager* request, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse* response);
    virtual ::grpc::Status DestroyLeaveWord(::grpc::ServerContext* context, const ::palm::plugins::nut::v1::IdRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ClearCache : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ClearCache() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ClearCache() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearCache(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClearCache(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Layout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Layout() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_Layout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Layout(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLayout(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::palm::plugins::nut::v1::SiteLayoutResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetAuthor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetAuthor() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_SetAuthor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAuthor(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetAuthor(::grpc::ServerContext* context, ::palm::plugins::nut::v1::SiteLayoutResponse_Author* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetCopyright : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetCopyright() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SetCopyright() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCopyright(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCopyright(::grpc::ServerContext* context, ::palm::plugins::nut::v1::SiteSetCopyrightRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetKeywords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetKeywords() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_SetKeywords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetKeywords(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetKeywords(::grpc::ServerContext* context, ::palm::plugins::nut::v1::SiteSetKeywordsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetInfo() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_SetInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetInfo(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetInfoRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetInfo(::grpc::ServerContext* context, ::palm::plugins::nut::v1::SiteSetInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetLogo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetLogo() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_SetLogo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetLogo(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetLogoRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetLogo(::grpc::ServerContext* context, ::palm::plugins::nut::v1::SiteSetLogoRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetAws : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetAws() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_SetAws() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAws(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::AwsProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetAws(::grpc::ServerContext* context, ::palm::plugins::nut::v1::AwsProfile* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAws : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAws() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetAws() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAws(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::AwsProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAws(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::palm::plugins::nut::v1::AwsProfile>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_TestAwsS3 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_TestAwsS3() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_TestAwsS3() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestAwsS3(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteAwsS3TestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTestAwsS3(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::palm::plugins::nut::v1::SiteAwsS3TestResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetSmtp() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_SetSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSmtp(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SmtpProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetSmtp(::grpc::ServerContext* context, ::palm::plugins::nut::v1::SmtpProfile* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSmtp() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_GetSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSmtp(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SmtpProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSmtp(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::palm::plugins::nut::v1::SmtpProfile>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_TestSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_TestSmtp() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_TestSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestSmtp(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSmtpTestRequst* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTestSmtp(::grpc::ServerContext* context, ::palm::plugins::nut::v1::SiteSmtpTestRequst* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetBing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetBing() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_SetBing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBing(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::BingProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBing(::grpc::ServerContext* context, ::palm::plugins::nut::v1::BingProfile* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBing() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_GetBing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBing(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::BingProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBing(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::palm::plugins::nut::v1::BingProfile>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetGoogle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetGoogle() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_SetGoogle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetGoogle(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::GoogleProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetGoogle(::grpc::ServerContext* context, ::palm::plugins::nut::v1::GoogleProfile* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetGoogle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetGoogle() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_GetGoogle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGoogle(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::GoogleProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGoogle(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::palm::plugins::nut::v1::GoogleProfile>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetBaidu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetBaidu() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_SetBaidu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBaidu(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::BaiduProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBaidu(::grpc::ServerContext* context, ::palm::plugins::nut::v1::BaiduProfile* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBaidu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBaidu() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_GetBaidu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBaidu(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::BaiduProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBaidu(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::palm::plugins::nut::v1::BaiduProfile>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Status : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Status() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_Status() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Status(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStatus(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::palm::plugins::nut::v1::SiteStatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_NewLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_NewLeaveWord() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_NewLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestNewLeaveWord(::grpc::ServerContext* context, ::palm::plugins::nut::v1::SiteNewLeaveWordRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IndexLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IndexLeaveWord() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_IndexLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IndexLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::Pager* /*request*/, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIndexLeaveWord(::grpc::ServerContext* context, ::palm::plugins::nut::v1::Pager* request, ::grpc::ServerAsyncResponseWriter< ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DestroyLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DestroyLeaveWord() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_DestroyLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DestroyLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::IdRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDestroyLeaveWord(::grpc::ServerContext* context, ::palm::plugins::nut::v1::IdRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ClearCache<WithAsyncMethod_Layout<WithAsyncMethod_SetAuthor<WithAsyncMethod_SetCopyright<WithAsyncMethod_SetKeywords<WithAsyncMethod_SetInfo<WithAsyncMethod_SetLogo<WithAsyncMethod_SetAws<WithAsyncMethod_GetAws<WithAsyncMethod_TestAwsS3<WithAsyncMethod_SetSmtp<WithAsyncMethod_GetSmtp<WithAsyncMethod_TestSmtp<WithAsyncMethod_SetBing<WithAsyncMethod_GetBing<WithAsyncMethod_SetGoogle<WithAsyncMethod_GetGoogle<WithAsyncMethod_SetBaidu<WithAsyncMethod_GetBaidu<WithAsyncMethod_Status<WithAsyncMethod_NewLeaveWord<WithAsyncMethod_IndexLeaveWord<WithAsyncMethod_DestroyLeaveWord<Service > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_ClearCache : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ClearCache() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->ClearCache(context, request, response); }));}
    void SetMessageAllocatorFor_ClearCache(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ClearCache() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearCache(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ClearCache(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Layout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Layout() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::plugins::nut::v1::SiteLayoutResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteLayoutResponse* response) { return this->Layout(context, request, response); }));}
    void SetMessageAllocatorFor_Layout(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::palm::plugins::nut::v1::SiteLayoutResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::plugins::nut::v1::SiteLayoutResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Layout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Layout(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Layout(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteLayoutResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetAuthor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetAuthor() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::SiteLayoutResponse_Author, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author* request, ::google::protobuf::Empty* response) { return this->SetAuthor(context, request, response); }));}
    void SetMessageAllocatorFor_SetAuthor(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::SiteLayoutResponse_Author, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::SiteLayoutResponse_Author, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetAuthor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAuthor(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetAuthor(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetCopyright : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetCopyright() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::SiteSetCopyrightRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest* request, ::google::protobuf::Empty* response) { return this->SetCopyright(context, request, response); }));}
    void SetMessageAllocatorFor_SetCopyright(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::SiteSetCopyrightRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::SiteSetCopyrightRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetCopyright() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCopyright(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetCopyright(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetKeywords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetKeywords() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::SiteSetKeywordsRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest* request, ::google::protobuf::Empty* response) { return this->SetKeywords(context, request, response); }));}
    void SetMessageAllocatorFor_SetKeywords(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::SiteSetKeywordsRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::SiteSetKeywordsRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetKeywords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetKeywords(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetKeywords(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetInfo() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::SiteSetInfoRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::SiteSetInfoRequest* request, ::google::protobuf::Empty* response) { return this->SetInfo(context, request, response); }));}
    void SetMessageAllocatorFor_SetInfo(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::SiteSetInfoRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::SiteSetInfoRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetInfo(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetInfoRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetInfoRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetLogo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetLogo() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::SiteSetLogoRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::SiteSetLogoRequest* request, ::google::protobuf::Empty* response) { return this->SetLogo(context, request, response); }));}
    void SetMessageAllocatorFor_SetLogo(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::SiteSetLogoRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::SiteSetLogoRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetLogo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetLogo(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetLogoRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetLogo(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetLogoRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetAws : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetAws() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::AwsProfile, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::AwsProfile* request, ::google::protobuf::Empty* response) { return this->SetAws(context, request, response); }));}
    void SetMessageAllocatorFor_SetAws(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::AwsProfile, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::AwsProfile, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetAws() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAws(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::AwsProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetAws(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::AwsProfile* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAws : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAws() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::plugins::nut::v1::AwsProfile>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::AwsProfile* response) { return this->GetAws(context, request, response); }));}
    void SetMessageAllocatorFor_GetAws(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::palm::plugins::nut::v1::AwsProfile>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::plugins::nut::v1::AwsProfile>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAws() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAws(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::AwsProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAws(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::AwsProfile* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_TestAwsS3 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_TestAwsS3() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::plugins::nut::v1::SiteAwsS3TestResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteAwsS3TestResponse* response) { return this->TestAwsS3(context, request, response); }));}
    void SetMessageAllocatorFor_TestAwsS3(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::palm::plugins::nut::v1::SiteAwsS3TestResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::plugins::nut::v1::SiteAwsS3TestResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_TestAwsS3() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestAwsS3(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteAwsS3TestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TestAwsS3(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteAwsS3TestResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetSmtp() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::SmtpProfile, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::SmtpProfile* request, ::google::protobuf::Empty* response) { return this->SetSmtp(context, request, response); }));}
    void SetMessageAllocatorFor_SetSmtp(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::SmtpProfile, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::SmtpProfile, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSmtp(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SmtpProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetSmtp(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::SmtpProfile* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSmtp() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::plugins::nut::v1::SmtpProfile>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SmtpProfile* response) { return this->GetSmtp(context, request, response); }));}
    void SetMessageAllocatorFor_GetSmtp(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::palm::plugins::nut::v1::SmtpProfile>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::plugins::nut::v1::SmtpProfile>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSmtp(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SmtpProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSmtp(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SmtpProfile* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_TestSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_TestSmtp() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::SiteSmtpTestRequst, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::SiteSmtpTestRequst* request, ::google::protobuf::Empty* response) { return this->TestSmtp(context, request, response); }));}
    void SetMessageAllocatorFor_TestSmtp(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::SiteSmtpTestRequst, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::SiteSmtpTestRequst, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_TestSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestSmtp(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSmtpTestRequst* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TestSmtp(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSmtpTestRequst* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetBing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetBing() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::BingProfile, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::BingProfile* request, ::google::protobuf::Empty* response) { return this->SetBing(context, request, response); }));}
    void SetMessageAllocatorFor_SetBing(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::BingProfile, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::BingProfile, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetBing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBing(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::BingProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBing(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::BingProfile* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetBing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetBing() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::plugins::nut::v1::BingProfile>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::BingProfile* response) { return this->GetBing(context, request, response); }));}
    void SetMessageAllocatorFor_GetBing(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::palm::plugins::nut::v1::BingProfile>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::plugins::nut::v1::BingProfile>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetBing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBing(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::BingProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBing(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::BingProfile* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetGoogle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetGoogle() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::GoogleProfile, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::GoogleProfile* request, ::google::protobuf::Empty* response) { return this->SetGoogle(context, request, response); }));}
    void SetMessageAllocatorFor_SetGoogle(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::GoogleProfile, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::GoogleProfile, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetGoogle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetGoogle(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::GoogleProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetGoogle(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::GoogleProfile* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetGoogle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetGoogle() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::plugins::nut::v1::GoogleProfile>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::GoogleProfile* response) { return this->GetGoogle(context, request, response); }));}
    void SetMessageAllocatorFor_GetGoogle(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::palm::plugins::nut::v1::GoogleProfile>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::plugins::nut::v1::GoogleProfile>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetGoogle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGoogle(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::GoogleProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetGoogle(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::GoogleProfile* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetBaidu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetBaidu() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::BaiduProfile, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::BaiduProfile* request, ::google::protobuf::Empty* response) { return this->SetBaidu(context, request, response); }));}
    void SetMessageAllocatorFor_SetBaidu(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::BaiduProfile, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::BaiduProfile, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetBaidu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBaidu(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::BaiduProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBaidu(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::BaiduProfile* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetBaidu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetBaidu() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::plugins::nut::v1::BaiduProfile>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::BaiduProfile* response) { return this->GetBaidu(context, request, response); }));}
    void SetMessageAllocatorFor_GetBaidu(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::palm::plugins::nut::v1::BaiduProfile>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::plugins::nut::v1::BaiduProfile>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetBaidu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBaidu(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::BaiduProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBaidu(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::BaiduProfile* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Status : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Status() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::plugins::nut::v1::SiteStatusResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::palm::plugins::nut::v1::SiteStatusResponse* response) { return this->Status(context, request, response); }));}
    void SetMessageAllocatorFor_Status(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::palm::plugins::nut::v1::SiteStatusResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::plugins::nut::v1::SiteStatusResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Status() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Status(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Status(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteStatusResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_NewLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_NewLeaveWord() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::SiteNewLeaveWordRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest* request, ::google::protobuf::Empty* response) { return this->NewLeaveWord(context, request, response); }));}
    void SetMessageAllocatorFor_NewLeaveWord(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::SiteNewLeaveWordRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::SiteNewLeaveWordRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_NewLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* NewLeaveWord(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IndexLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IndexLeaveWord() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::Pager, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::Pager* request, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse* response) { return this->IndexLeaveWord(context, request, response); }));}
    void SetMessageAllocatorFor_IndexLeaveWord(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::Pager, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::Pager, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IndexLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IndexLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::Pager* /*request*/, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IndexLeaveWord(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::Pager* /*request*/, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DestroyLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DestroyLeaveWord() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::IdRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::plugins::nut::v1::IdRequest* request, ::google::protobuf::Empty* response) { return this->DestroyLeaveWord(context, request, response); }));}
    void SetMessageAllocatorFor_DestroyLeaveWord(
        ::grpc::MessageAllocator< ::palm::plugins::nut::v1::IdRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::plugins::nut::v1::IdRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DestroyLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DestroyLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::IdRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DestroyLeaveWord(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::plugins::nut::v1::IdRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_ClearCache<WithCallbackMethod_Layout<WithCallbackMethod_SetAuthor<WithCallbackMethod_SetCopyright<WithCallbackMethod_SetKeywords<WithCallbackMethod_SetInfo<WithCallbackMethod_SetLogo<WithCallbackMethod_SetAws<WithCallbackMethod_GetAws<WithCallbackMethod_TestAwsS3<WithCallbackMethod_SetSmtp<WithCallbackMethod_GetSmtp<WithCallbackMethod_TestSmtp<WithCallbackMethod_SetBing<WithCallbackMethod_GetBing<WithCallbackMethod_SetGoogle<WithCallbackMethod_GetGoogle<WithCallbackMethod_SetBaidu<WithCallbackMethod_GetBaidu<WithCallbackMethod_Status<WithCallbackMethod_NewLeaveWord<WithCallbackMethod_IndexLeaveWord<WithCallbackMethod_DestroyLeaveWord<Service > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_ClearCache : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ClearCache() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ClearCache() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearCache(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Layout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Layout() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_Layout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Layout(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetAuthor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetAuthor() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_SetAuthor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAuthor(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetCopyright : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetCopyright() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SetCopyright() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCopyright(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetKeywords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetKeywords() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_SetKeywords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetKeywords(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetInfo() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_SetInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetInfo(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetInfoRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetLogo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetLogo() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_SetLogo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetLogo(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetLogoRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetAws : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetAws() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_SetAws() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAws(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::AwsProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAws : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAws() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetAws() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAws(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::AwsProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_TestAwsS3 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_TestAwsS3() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_TestAwsS3() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestAwsS3(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteAwsS3TestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetSmtp() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_SetSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSmtp(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SmtpProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSmtp() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_GetSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSmtp(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SmtpProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_TestSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_TestSmtp() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_TestSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestSmtp(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSmtpTestRequst* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetBing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetBing() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_SetBing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBing(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::BingProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBing() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_GetBing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBing(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::BingProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetGoogle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetGoogle() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_SetGoogle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetGoogle(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::GoogleProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetGoogle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetGoogle() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_GetGoogle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGoogle(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::GoogleProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetBaidu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetBaidu() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_SetBaidu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBaidu(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::BaiduProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBaidu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBaidu() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_GetBaidu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBaidu(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::BaiduProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Status : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Status() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_Status() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Status(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_NewLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_NewLeaveWord() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_NewLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IndexLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IndexLeaveWord() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_IndexLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IndexLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::Pager* /*request*/, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DestroyLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DestroyLeaveWord() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_DestroyLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DestroyLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::IdRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_ClearCache : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ClearCache() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_ClearCache() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearCache(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClearCache(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Layout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Layout() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_Layout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Layout(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLayout(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetAuthor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetAuthor() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_SetAuthor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAuthor(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetAuthor(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetCopyright : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetCopyright() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_SetCopyright() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCopyright(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCopyright(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetKeywords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetKeywords() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_SetKeywords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetKeywords(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetKeywords(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetInfo() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_SetInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetInfo(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetInfoRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetLogo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetLogo() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_SetLogo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetLogo(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetLogoRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetLogo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetAws : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetAws() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_SetAws() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAws(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::AwsProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetAws(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAws : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAws() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetAws() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAws(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::AwsProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAws(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_TestAwsS3 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_TestAwsS3() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_TestAwsS3() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestAwsS3(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteAwsS3TestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTestAwsS3(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetSmtp() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_SetSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSmtp(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SmtpProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetSmtp(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSmtp() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_GetSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSmtp(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SmtpProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSmtp(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_TestSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_TestSmtp() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_TestSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestSmtp(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSmtpTestRequst* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTestSmtp(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetBing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetBing() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_SetBing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBing(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::BingProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBing(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBing() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_GetBing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBing(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::BingProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBing(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetGoogle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetGoogle() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_SetGoogle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetGoogle(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::GoogleProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetGoogle(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetGoogle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetGoogle() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_GetGoogle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGoogle(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::GoogleProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGoogle(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetBaidu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetBaidu() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_SetBaidu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBaidu(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::BaiduProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBaidu(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBaidu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBaidu() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_GetBaidu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBaidu(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::BaiduProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBaidu(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Status : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Status() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_Status() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Status(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_NewLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_NewLeaveWord() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_NewLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestNewLeaveWord(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IndexLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IndexLeaveWord() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_IndexLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IndexLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::Pager* /*request*/, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIndexLeaveWord(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DestroyLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DestroyLeaveWord() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_DestroyLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DestroyLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::IdRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDestroyLeaveWord(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ClearCache : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ClearCache() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ClearCache(context, request, response); }));
    }
    ~WithRawCallbackMethod_ClearCache() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearCache(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ClearCache(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Layout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Layout() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Layout(context, request, response); }));
    }
    ~WithRawCallbackMethod_Layout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Layout(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Layout(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetAuthor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetAuthor() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetAuthor(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetAuthor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAuthor(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetAuthor(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetCopyright : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetCopyright() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetCopyright(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetCopyright() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCopyright(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetCopyright(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetKeywords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetKeywords() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetKeywords(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetKeywords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetKeywords(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetKeywords(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetInfo() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetInfo(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetInfoRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetLogo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetLogo() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetLogo(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetLogo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetLogo(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetLogoRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetLogo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetAws : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetAws() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetAws(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetAws() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAws(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::AwsProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetAws(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAws : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAws() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAws(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAws() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAws(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::AwsProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAws(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_TestAwsS3 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_TestAwsS3() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->TestAwsS3(context, request, response); }));
    }
    ~WithRawCallbackMethod_TestAwsS3() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestAwsS3(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteAwsS3TestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TestAwsS3(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetSmtp() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetSmtp(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSmtp(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SmtpProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetSmtp(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSmtp() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSmtp(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSmtp(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SmtpProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSmtp(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_TestSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_TestSmtp() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->TestSmtp(context, request, response); }));
    }
    ~WithRawCallbackMethod_TestSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestSmtp(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSmtpTestRequst* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TestSmtp(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetBing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetBing() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetBing(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetBing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBing(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::BingProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBing(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetBing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetBing() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBing(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetBing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBing(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::BingProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBing(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetGoogle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetGoogle() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetGoogle(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetGoogle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetGoogle(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::GoogleProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetGoogle(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetGoogle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetGoogle() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetGoogle(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetGoogle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGoogle(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::GoogleProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetGoogle(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetBaidu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetBaidu() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetBaidu(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetBaidu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBaidu(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::BaiduProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBaidu(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetBaidu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetBaidu() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBaidu(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetBaidu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBaidu(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::BaiduProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBaidu(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Status : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Status() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Status(context, request, response); }));
    }
    ~WithRawCallbackMethod_Status() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Status(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Status(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_NewLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_NewLeaveWord() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->NewLeaveWord(context, request, response); }));
    }
    ~WithRawCallbackMethod_NewLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* NewLeaveWord(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IndexLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IndexLeaveWord() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IndexLeaveWord(context, request, response); }));
    }
    ~WithRawCallbackMethod_IndexLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IndexLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::Pager* /*request*/, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IndexLeaveWord(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DestroyLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DestroyLeaveWord() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DestroyLeaveWord(context, request, response); }));
    }
    ~WithRawCallbackMethod_DestroyLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DestroyLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::IdRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DestroyLeaveWord(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ClearCache : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ClearCache() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedClearCache(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ClearCache() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ClearCache(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedClearCache(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Layout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Layout() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::palm::plugins::nut::v1::SiteLayoutResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::palm::plugins::nut::v1::SiteLayoutResponse>* streamer) {
                       return this->StreamedLayout(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Layout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Layout(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLayout(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::palm::plugins::nut::v1::SiteLayoutResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetAuthor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetAuthor() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::SiteLayoutResponse_Author, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::SiteLayoutResponse_Author, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetAuthor(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetAuthor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetAuthor(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteLayoutResponse_Author* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetAuthor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::SiteLayoutResponse_Author,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetCopyright : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetCopyright() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::SiteSetCopyrightRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::SiteSetCopyrightRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetCopyright(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetCopyright() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetCopyright(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetCopyrightRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetCopyright(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::SiteSetCopyrightRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetKeywords : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetKeywords() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::SiteSetKeywordsRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::SiteSetKeywordsRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetKeywords(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetKeywords() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetKeywords(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetKeywordsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetKeywords(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::SiteSetKeywordsRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetInfo() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::SiteSetInfoRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::SiteSetInfoRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetInfo(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetInfoRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::SiteSetInfoRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetLogo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetLogo() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::SiteSetLogoRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::SiteSetLogoRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetLogo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetLogo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetLogo(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSetLogoRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetLogo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::SiteSetLogoRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetAws : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetAws() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::AwsProfile, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::AwsProfile, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetAws(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetAws() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetAws(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::AwsProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetAws(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::AwsProfile,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAws : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAws() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::palm::plugins::nut::v1::AwsProfile>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::palm::plugins::nut::v1::AwsProfile>* streamer) {
                       return this->StreamedGetAws(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAws() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAws(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::AwsProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAws(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::palm::plugins::nut::v1::AwsProfile>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_TestAwsS3 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_TestAwsS3() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::palm::plugins::nut::v1::SiteAwsS3TestResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::palm::plugins::nut::v1::SiteAwsS3TestResponse>* streamer) {
                       return this->StreamedTestAwsS3(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_TestAwsS3() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status TestAwsS3(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteAwsS3TestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTestAwsS3(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::palm::plugins::nut::v1::SiteAwsS3TestResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetSmtp() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::SmtpProfile, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::SmtpProfile, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetSmtp(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetSmtp(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SmtpProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetSmtp(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::SmtpProfile,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSmtp() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::palm::plugins::nut::v1::SmtpProfile>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::palm::plugins::nut::v1::SmtpProfile>* streamer) {
                       return this->StreamedGetSmtp(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSmtp(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SmtpProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSmtp(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::palm::plugins::nut::v1::SmtpProfile>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_TestSmtp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_TestSmtp() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::SiteSmtpTestRequst, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::SiteSmtpTestRequst, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedTestSmtp(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_TestSmtp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status TestSmtp(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteSmtpTestRequst* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTestSmtp(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::SiteSmtpTestRequst,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetBing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetBing() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::BingProfile, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::BingProfile, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetBing(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetBing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetBing(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::BingProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetBing(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::BingProfile,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBing() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::palm::plugins::nut::v1::BingProfile>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::palm::plugins::nut::v1::BingProfile>* streamer) {
                       return this->StreamedGetBing(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBing(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::BingProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBing(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::palm::plugins::nut::v1::BingProfile>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetGoogle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetGoogle() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::GoogleProfile, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::GoogleProfile, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetGoogle(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetGoogle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetGoogle(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::GoogleProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetGoogle(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::GoogleProfile,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetGoogle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetGoogle() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::palm::plugins::nut::v1::GoogleProfile>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::palm::plugins::nut::v1::GoogleProfile>* streamer) {
                       return this->StreamedGetGoogle(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetGoogle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetGoogle(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::GoogleProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetGoogle(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::palm::plugins::nut::v1::GoogleProfile>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetBaidu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetBaidu() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::BaiduProfile, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::BaiduProfile, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetBaidu(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetBaidu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetBaidu(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::BaiduProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetBaidu(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::BaiduProfile,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBaidu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBaidu() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::palm::plugins::nut::v1::BaiduProfile>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::palm::plugins::nut::v1::BaiduProfile>* streamer) {
                       return this->StreamedGetBaidu(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBaidu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBaidu(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::BaiduProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBaidu(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::palm::plugins::nut::v1::BaiduProfile>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Status : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Status() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::palm::plugins::nut::v1::SiteStatusResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::palm::plugins::nut::v1::SiteStatusResponse>* streamer) {
                       return this->StreamedStatus(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Status() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Status(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::plugins::nut::v1::SiteStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::palm::plugins::nut::v1::SiteStatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_NewLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_NewLeaveWord() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::SiteNewLeaveWordRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::SiteNewLeaveWordRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedNewLeaveWord(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_NewLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status NewLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::SiteNewLeaveWordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedNewLeaveWord(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::SiteNewLeaveWordRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IndexLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IndexLeaveWord() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::Pager, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::Pager, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>* streamer) {
                       return this->StreamedIndexLeaveWord(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IndexLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IndexLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::Pager* /*request*/, ::palm::plugins::nut::v1::SiteIndexLeaveWordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIndexLeaveWord(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::Pager,::palm::plugins::nut::v1::SiteIndexLeaveWordResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DestroyLeaveWord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DestroyLeaveWord() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::plugins::nut::v1::IdRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::plugins::nut::v1::IdRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDestroyLeaveWord(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DestroyLeaveWord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DestroyLeaveWord(::grpc::ServerContext* /*context*/, const ::palm::plugins::nut::v1::IdRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDestroyLeaveWord(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::plugins::nut::v1::IdRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ClearCache<WithStreamedUnaryMethod_Layout<WithStreamedUnaryMethod_SetAuthor<WithStreamedUnaryMethod_SetCopyright<WithStreamedUnaryMethod_SetKeywords<WithStreamedUnaryMethod_SetInfo<WithStreamedUnaryMethod_SetLogo<WithStreamedUnaryMethod_SetAws<WithStreamedUnaryMethod_GetAws<WithStreamedUnaryMethod_TestAwsS3<WithStreamedUnaryMethod_SetSmtp<WithStreamedUnaryMethod_GetSmtp<WithStreamedUnaryMethod_TestSmtp<WithStreamedUnaryMethod_SetBing<WithStreamedUnaryMethod_GetBing<WithStreamedUnaryMethod_SetGoogle<WithStreamedUnaryMethod_GetGoogle<WithStreamedUnaryMethod_SetBaidu<WithStreamedUnaryMethod_GetBaidu<WithStreamedUnaryMethod_Status<WithStreamedUnaryMethod_NewLeaveWord<WithStreamedUnaryMethod_IndexLeaveWord<WithStreamedUnaryMethod_DestroyLeaveWord<Service > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ClearCache<WithStreamedUnaryMethod_Layout<WithStreamedUnaryMethod_SetAuthor<WithStreamedUnaryMethod_SetCopyright<WithStreamedUnaryMethod_SetKeywords<WithStreamedUnaryMethod_SetInfo<WithStreamedUnaryMethod_SetLogo<WithStreamedUnaryMethod_SetAws<WithStreamedUnaryMethod_GetAws<WithStreamedUnaryMethod_TestAwsS3<WithStreamedUnaryMethod_SetSmtp<WithStreamedUnaryMethod_GetSmtp<WithStreamedUnaryMethod_TestSmtp<WithStreamedUnaryMethod_SetBing<WithStreamedUnaryMethod_GetBing<WithStreamedUnaryMethod_SetGoogle<WithStreamedUnaryMethod_GetGoogle<WithStreamedUnaryMethod_SetBaidu<WithStreamedUnaryMethod_GetBaidu<WithStreamedUnaryMethod_Status<WithStreamedUnaryMethod_NewLeaveWord<WithStreamedUnaryMethod_IndexLeaveWord<WithStreamedUnaryMethod_DestroyLeaveWord<Service > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace nut
}  // namespace plugins
}  // namespace palm


#endif  // GRPC_nut_2eproto__INCLUDED
