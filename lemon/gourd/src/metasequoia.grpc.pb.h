// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: metasequoia.proto
#ifndef GRPC_metasequoia_2eproto__INCLUDED
#define GRPC_metasequoia_2eproto__INCLUDED

#include "metasequoia.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace palm {
namespace metasequoia {
namespace v1 {

class User final {
 public:
  static constexpr char const* service_full_name() {
    return "palm.metasequoia.v1.User";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status SignInByPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignInByPasswordRequest& request, ::palm::metasequoia::v1::UserSignInResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserSignInResponse>> AsyncSignInByPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignInByPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserSignInResponse>>(AsyncSignInByPasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserSignInResponse>> PrepareAsyncSignInByPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignInByPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserSignInResponse>>(PrepareAsyncSignInByPasswordRaw(context, request, cq));
    }
    virtual ::grpc::Status SignUpByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignUpByEmailRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSignUpByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignUpByEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSignUpByEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSignUpByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignUpByEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSignUpByEmailRaw(context, request, cq));
    }
    virtual ::grpc::Status ConfirmByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncConfirmByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncConfirmByEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncConfirmByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncConfirmByEmailRaw(context, request, cq));
    }
    virtual ::grpc::Status ConfirmByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncConfirmByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncConfirmByTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncConfirmByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncConfirmByTokenRaw(context, request, cq));
    }
    virtual ::grpc::Status UnlockByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncUnlockByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncUnlockByEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncUnlockByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncUnlockByEmailRaw(context, request, cq));
    }
    virtual ::grpc::Status UnlockByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncUnlockByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncUnlockByTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncUnlockByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncUnlockByTokenRaw(context, request, cq));
    }
    virtual ::grpc::Status ForgotPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncForgotPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncForgotPasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncForgotPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncForgotPasswordRaw(context, request, cq));
    }
    virtual ::grpc::Status ResetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserResetPasswordRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncResetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserResetPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncResetPasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncResetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserResetPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncResetPasswordRaw(context, request, cq));
    }
    virtual ::grpc::Status Refresh(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::palm::metasequoia::v1::UserSignInResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserSignInResponse>> AsyncRefresh(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserSignInResponse>>(AsyncRefreshRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserSignInResponse>> PrepareAsyncRefresh(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserSignInResponse>>(PrepareAsyncRefreshRaw(context, request, cq));
    }
    virtual ::grpc::Status Logs(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserLogsRequest& request, ::palm::metasequoia::v1::UserLogsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserLogsResponse>> AsyncLogs(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserLogsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserLogsResponse>>(AsyncLogsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserLogsResponse>> PrepareAsyncLogs(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserLogsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserLogsResponse>>(PrepareAsyncLogsRaw(context, request, cq));
    }
    virtual ::grpc::Status SetProfile(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserProfile& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetProfile(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetProfile(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetProfileRaw(context, request, cq));
    }
    virtual ::grpc::Status GetProfile(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::metasequoia::v1::UserProfile* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserProfile>> AsyncGetProfile(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserProfile>>(AsyncGetProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserProfile>> PrepareAsyncGetProfile(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserProfile>>(PrepareAsyncGetProfileRaw(context, request, cq));
    }
    virtual ::grpc::Status ChangePassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserChangePasswordRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncChangePassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserChangePasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncChangePasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncChangePassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserChangePasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncChangePasswordRaw(context, request, cq));
    }
    virtual ::grpc::Status SignOut(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSignOut(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSignOutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSignOut(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSignOutRaw(context, request, cq));
    }
    virtual ::grpc::Status Index(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::metasequoia::v1::UserIndexResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserIndexResponse>> AsyncIndex(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserIndexResponse>>(AsyncIndexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserIndexResponse>> PrepareAsyncIndex(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserIndexResponse>>(PrepareAsyncIndexRaw(context, request, cq));
    }
    virtual ::grpc::Status Show(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::palm::metasequoia::v1::UserIndexResponse_Item* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserIndexResponse_Item>> AsyncShow(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserIndexResponse_Item>>(AsyncShowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserIndexResponse_Item>> PrepareAsyncShow(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserIndexResponse_Item>>(PrepareAsyncShowRaw(context, request, cq));
    }
    virtual ::grpc::Status Disable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDisable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDisableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDisable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDisableRaw(context, request, cq));
    }
    virtual ::grpc::Status Enable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncEnable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncEnableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncEnable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncEnableRaw(context, request, cq));
    }
    virtual ::grpc::Status Lock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncLock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncLockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncLock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncLockRaw(context, request, cq));
    }
    virtual ::grpc::Status Unlock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncUnlock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncUnlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncUnlock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncUnlockRaw(context, request, cq));
    }
    virtual ::grpc::Status Confirm(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncConfirm(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncConfirmRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncConfirm(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncConfirmRaw(context, request, cq));
    }
    virtual ::grpc::Status Delete(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDelete(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDelete(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteRaw(context, request, cq));
    }
    virtual ::grpc::Status SetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSetPasswordRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSetPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetPasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSetPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetPasswordRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void SignInByPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignInByPasswordRequest* request, ::palm::metasequoia::v1::UserSignInResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SignInByPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignInByPasswordRequest* request, ::palm::metasequoia::v1::UserSignInResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SignUpByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignUpByEmailRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SignUpByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignUpByEmailRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ConfirmByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ConfirmByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ConfirmByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ConfirmByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UnlockByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UnlockByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UnlockByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UnlockByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ForgotPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ForgotPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ResetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserResetPasswordRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ResetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserResetPasswordRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Refresh(::grpc::ClientContext* context, const ::google::protobuf::Duration* request, ::palm::metasequoia::v1::UserSignInResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Refresh(::grpc::ClientContext* context, const ::google::protobuf::Duration* request, ::palm::metasequoia::v1::UserSignInResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Logs(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserLogsRequest* request, ::palm::metasequoia::v1::UserLogsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Logs(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserLogsRequest* request, ::palm::metasequoia::v1::UserLogsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetProfile(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserProfile* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetProfile(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserProfile* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetProfile(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::UserProfile* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetProfile(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::UserProfile* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ChangePassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserChangePasswordRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ChangePassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserChangePasswordRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SignOut(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SignOut(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Index(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::UserIndexResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Index(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::UserIndexResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Show(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::UserIndexResponse_Item* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Show(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::UserIndexResponse_Item* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Disable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Disable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Enable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Enable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Lock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Lock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Unlock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Unlock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Confirm(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Confirm(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Delete(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Delete(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSetPasswordRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSetPasswordRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserSignInResponse>* AsyncSignInByPasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignInByPasswordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserSignInResponse>* PrepareAsyncSignInByPasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignInByPasswordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSignUpByEmailRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignUpByEmailRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSignUpByEmailRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignUpByEmailRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncConfirmByEmailRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncConfirmByEmailRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncConfirmByTokenRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncConfirmByTokenRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncUnlockByEmailRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncUnlockByEmailRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncUnlockByTokenRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncUnlockByTokenRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncForgotPasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncForgotPasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncResetPasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserResetPasswordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncResetPasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserResetPasswordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserSignInResponse>* AsyncRefreshRaw(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserSignInResponse>* PrepareAsyncRefreshRaw(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserLogsResponse>* AsyncLogsRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserLogsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserLogsResponse>* PrepareAsyncLogsRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserLogsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetProfileRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserProfile& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetProfileRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserProfile& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserProfile>* AsyncGetProfileRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserProfile>* PrepareAsyncGetProfileRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncChangePasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserChangePasswordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncChangePasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserChangePasswordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSignOutRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSignOutRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserIndexResponse>* AsyncIndexRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserIndexResponse>* PrepareAsyncIndexRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserIndexResponse_Item>* AsyncShowRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::UserIndexResponse_Item>* PrepareAsyncShowRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDisableRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDisableRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncEnableRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncEnableRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncLockRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncLockRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncUnlockRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncUnlockRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncConfirmRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncConfirmRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetPasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSetPasswordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetPasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSetPasswordRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status SignInByPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignInByPasswordRequest& request, ::palm::metasequoia::v1::UserSignInResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserSignInResponse>> AsyncSignInByPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignInByPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserSignInResponse>>(AsyncSignInByPasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserSignInResponse>> PrepareAsyncSignInByPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignInByPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserSignInResponse>>(PrepareAsyncSignInByPasswordRaw(context, request, cq));
    }
    ::grpc::Status SignUpByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignUpByEmailRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSignUpByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignUpByEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSignUpByEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSignUpByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignUpByEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSignUpByEmailRaw(context, request, cq));
    }
    ::grpc::Status ConfirmByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncConfirmByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncConfirmByEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncConfirmByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncConfirmByEmailRaw(context, request, cq));
    }
    ::grpc::Status ConfirmByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncConfirmByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncConfirmByTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncConfirmByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncConfirmByTokenRaw(context, request, cq));
    }
    ::grpc::Status UnlockByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncUnlockByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncUnlockByEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncUnlockByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncUnlockByEmailRaw(context, request, cq));
    }
    ::grpc::Status UnlockByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncUnlockByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncUnlockByTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncUnlockByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncUnlockByTokenRaw(context, request, cq));
    }
    ::grpc::Status ForgotPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncForgotPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncForgotPasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncForgotPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncForgotPasswordRaw(context, request, cq));
    }
    ::grpc::Status ResetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserResetPasswordRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncResetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserResetPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncResetPasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncResetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserResetPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncResetPasswordRaw(context, request, cq));
    }
    ::grpc::Status Refresh(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::palm::metasequoia::v1::UserSignInResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserSignInResponse>> AsyncRefresh(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserSignInResponse>>(AsyncRefreshRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserSignInResponse>> PrepareAsyncRefresh(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserSignInResponse>>(PrepareAsyncRefreshRaw(context, request, cq));
    }
    ::grpc::Status Logs(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserLogsRequest& request, ::palm::metasequoia::v1::UserLogsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserLogsResponse>> AsyncLogs(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserLogsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserLogsResponse>>(AsyncLogsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserLogsResponse>> PrepareAsyncLogs(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserLogsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserLogsResponse>>(PrepareAsyncLogsRaw(context, request, cq));
    }
    ::grpc::Status SetProfile(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserProfile& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetProfile(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetProfile(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserProfile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetProfileRaw(context, request, cq));
    }
    ::grpc::Status GetProfile(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::metasequoia::v1::UserProfile* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserProfile>> AsyncGetProfile(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserProfile>>(AsyncGetProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserProfile>> PrepareAsyncGetProfile(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserProfile>>(PrepareAsyncGetProfileRaw(context, request, cq));
    }
    ::grpc::Status ChangePassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserChangePasswordRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncChangePassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserChangePasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncChangePasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncChangePassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserChangePasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncChangePasswordRaw(context, request, cq));
    }
    ::grpc::Status SignOut(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSignOut(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSignOutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSignOut(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSignOutRaw(context, request, cq));
    }
    ::grpc::Status Index(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::metasequoia::v1::UserIndexResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserIndexResponse>> AsyncIndex(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserIndexResponse>>(AsyncIndexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserIndexResponse>> PrepareAsyncIndex(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserIndexResponse>>(PrepareAsyncIndexRaw(context, request, cq));
    }
    ::grpc::Status Show(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::palm::metasequoia::v1::UserIndexResponse_Item* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserIndexResponse_Item>> AsyncShow(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserIndexResponse_Item>>(AsyncShowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserIndexResponse_Item>> PrepareAsyncShow(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserIndexResponse_Item>>(PrepareAsyncShowRaw(context, request, cq));
    }
    ::grpc::Status Disable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDisable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDisableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDisable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDisableRaw(context, request, cq));
    }
    ::grpc::Status Enable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncEnable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncEnableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncEnable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncEnableRaw(context, request, cq));
    }
    ::grpc::Status Lock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncLock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncLockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncLock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncLockRaw(context, request, cq));
    }
    ::grpc::Status Unlock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncUnlock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncUnlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncUnlock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncUnlockRaw(context, request, cq));
    }
    ::grpc::Status Confirm(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncConfirm(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncConfirmRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncConfirm(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncConfirmRaw(context, request, cq));
    }
    ::grpc::Status Delete(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDelete(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDelete(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteRaw(context, request, cq));
    }
    ::grpc::Status SetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSetPasswordRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSetPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetPasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSetPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetPasswordRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void SignInByPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignInByPasswordRequest* request, ::palm::metasequoia::v1::UserSignInResponse* response, std::function<void(::grpc::Status)>) override;
      void SignInByPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignInByPasswordRequest* request, ::palm::metasequoia::v1::UserSignInResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SignUpByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignUpByEmailRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SignUpByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignUpByEmailRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ConfirmByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ConfirmByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ConfirmByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ConfirmByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UnlockByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void UnlockByEmail(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UnlockByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void UnlockByToken(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ForgotPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ForgotPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ResetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserResetPasswordRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ResetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserResetPasswordRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Refresh(::grpc::ClientContext* context, const ::google::protobuf::Duration* request, ::palm::metasequoia::v1::UserSignInResponse* response, std::function<void(::grpc::Status)>) override;
      void Refresh(::grpc::ClientContext* context, const ::google::protobuf::Duration* request, ::palm::metasequoia::v1::UserSignInResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Logs(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserLogsRequest* request, ::palm::metasequoia::v1::UserLogsResponse* response, std::function<void(::grpc::Status)>) override;
      void Logs(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserLogsRequest* request, ::palm::metasequoia::v1::UserLogsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetProfile(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserProfile* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetProfile(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserProfile* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetProfile(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::UserProfile* response, std::function<void(::grpc::Status)>) override;
      void GetProfile(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::UserProfile* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ChangePassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserChangePasswordRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ChangePassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserChangePasswordRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SignOut(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SignOut(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Index(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::UserIndexResponse* response, std::function<void(::grpc::Status)>) override;
      void Index(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::UserIndexResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Show(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::UserIndexResponse_Item* response, std::function<void(::grpc::Status)>) override;
      void Show(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::UserIndexResponse_Item* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Disable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Disable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Enable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Enable(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Lock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Lock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Unlock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Unlock(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Confirm(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Confirm(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Delete(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Delete(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSetPasswordRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetPassword(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSetPasswordRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserSignInResponse>* AsyncSignInByPasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignInByPasswordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserSignInResponse>* PrepareAsyncSignInByPasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignInByPasswordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSignUpByEmailRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignUpByEmailRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSignUpByEmailRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSignUpByEmailRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncConfirmByEmailRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncConfirmByEmailRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncConfirmByTokenRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncConfirmByTokenRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncUnlockByEmailRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncUnlockByEmailRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncUnlockByTokenRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncUnlockByTokenRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncForgotPasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncForgotPasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncResetPasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserResetPasswordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncResetPasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserResetPasswordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserSignInResponse>* AsyncRefreshRaw(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserSignInResponse>* PrepareAsyncRefreshRaw(::grpc::ClientContext* context, const ::google::protobuf::Duration& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserLogsResponse>* AsyncLogsRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserLogsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserLogsResponse>* PrepareAsyncLogsRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserLogsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetProfileRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserProfile& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetProfileRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserProfile& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserProfile>* AsyncGetProfileRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserProfile>* PrepareAsyncGetProfileRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncChangePasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserChangePasswordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncChangePasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserChangePasswordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSignOutRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSignOutRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserIndexResponse>* AsyncIndexRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserIndexResponse>* PrepareAsyncIndexRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserIndexResponse_Item>* AsyncShowRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::UserIndexResponse_Item>* PrepareAsyncShowRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDisableRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDisableRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncEnableRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncEnableRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncLockRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncLockRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncUnlockRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncUnlockRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncConfirmRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncConfirmRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetPasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSetPasswordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetPasswordRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserSetPasswordRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SignInByPassword_;
    const ::grpc::internal::RpcMethod rpcmethod_SignUpByEmail_;
    const ::grpc::internal::RpcMethod rpcmethod_ConfirmByEmail_;
    const ::grpc::internal::RpcMethod rpcmethod_ConfirmByToken_;
    const ::grpc::internal::RpcMethod rpcmethod_UnlockByEmail_;
    const ::grpc::internal::RpcMethod rpcmethod_UnlockByToken_;
    const ::grpc::internal::RpcMethod rpcmethod_ForgotPassword_;
    const ::grpc::internal::RpcMethod rpcmethod_ResetPassword_;
    const ::grpc::internal::RpcMethod rpcmethod_Refresh_;
    const ::grpc::internal::RpcMethod rpcmethod_Logs_;
    const ::grpc::internal::RpcMethod rpcmethod_SetProfile_;
    const ::grpc::internal::RpcMethod rpcmethod_GetProfile_;
    const ::grpc::internal::RpcMethod rpcmethod_ChangePassword_;
    const ::grpc::internal::RpcMethod rpcmethod_SignOut_;
    const ::grpc::internal::RpcMethod rpcmethod_Index_;
    const ::grpc::internal::RpcMethod rpcmethod_Show_;
    const ::grpc::internal::RpcMethod rpcmethod_Disable_;
    const ::grpc::internal::RpcMethod rpcmethod_Enable_;
    const ::grpc::internal::RpcMethod rpcmethod_Lock_;
    const ::grpc::internal::RpcMethod rpcmethod_Unlock_;
    const ::grpc::internal::RpcMethod rpcmethod_Confirm_;
    const ::grpc::internal::RpcMethod rpcmethod_Delete_;
    const ::grpc::internal::RpcMethod rpcmethod_SetPassword_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status SignInByPassword(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserSignInByPasswordRequest* request, ::palm::metasequoia::v1::UserSignInResponse* response);
    virtual ::grpc::Status SignUpByEmail(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserSignUpByEmailRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status ConfirmByEmail(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status ConfirmByToken(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserTokenRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status UnlockByEmail(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status UnlockByToken(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserTokenRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status ForgotPassword(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status ResetPassword(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserResetPasswordRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status Refresh(::grpc::ServerContext* context, const ::google::protobuf::Duration* request, ::palm::metasequoia::v1::UserSignInResponse* response);
    virtual ::grpc::Status Logs(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserLogsRequest* request, ::palm::metasequoia::v1::UserLogsResponse* response);
    virtual ::grpc::Status SetProfile(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserProfile* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetProfile(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::UserProfile* response);
    virtual ::grpc::Status ChangePassword(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserChangePasswordRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SignOut(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status Index(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::UserIndexResponse* response);
    virtual ::grpc::Status Show(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::UserIndexResponse_Item* response);
    virtual ::grpc::Status Disable(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status Enable(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status Lock(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status Unlock(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status Confirm(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status Delete(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SetPassword(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserSetPasswordRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_SignInByPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SignInByPassword() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SignInByPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SignInByPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSignInByPasswordRequest* /*request*/, ::palm::metasequoia::v1::UserSignInResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSignInByPassword(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserSignInByPasswordRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::metasequoia::v1::UserSignInResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SignUpByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SignUpByEmail() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SignUpByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SignUpByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSignUpByEmailRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSignUpByEmail(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserSignUpByEmailRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ConfirmByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ConfirmByEmail() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ConfirmByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfirmByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConfirmByEmail(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserQueryRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ConfirmByToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ConfirmByToken() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ConfirmByToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfirmByToken(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserTokenRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConfirmByToken(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UnlockByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UnlockByEmail() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_UnlockByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnlockByEmail(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserQueryRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UnlockByToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UnlockByToken() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_UnlockByToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockByToken(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserTokenRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnlockByToken(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ForgotPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ForgotPassword() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_ForgotPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ForgotPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestForgotPassword(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserQueryRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ResetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ResetPassword() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ResetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserResetPasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResetPassword(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserResetPasswordRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Refresh : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Refresh() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_Refresh() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Refresh(::grpc::ServerContext* /*context*/, const ::google::protobuf::Duration* /*request*/, ::palm::metasequoia::v1::UserSignInResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRefresh(::grpc::ServerContext* context, ::google::protobuf::Duration* request, ::grpc::ServerAsyncResponseWriter< ::palm::metasequoia::v1::UserSignInResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Logs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Logs() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_Logs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Logs(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserLogsRequest* /*request*/, ::palm::metasequoia::v1::UserLogsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogs(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserLogsRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::metasequoia::v1::UserLogsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetProfile() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_SetProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetProfile(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetProfile(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserProfile* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetProfile() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_GetProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProfile(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::UserProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProfile(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::palm::metasequoia::v1::UserProfile>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ChangePassword() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserChangePasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestChangePassword(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserChangePasswordRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SignOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SignOut() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_SignOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SignOut(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSignOut(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Index : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Index() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_Index() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Index(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::UserIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIndex(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::palm::metasequoia::v1::UserIndexResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Show : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Show() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_Show() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Show(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::UserIndexResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShow(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserQueryRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::metasequoia::v1::UserIndexResponse_Item>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Disable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Disable() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_Disable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Disable(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDisable(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserQueryRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Enable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Enable() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_Enable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Enable(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEnable(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserQueryRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Lock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Lock() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_Lock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Lock(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLock(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserQueryRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Unlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Unlock() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_Unlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Unlock(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnlock(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserQueryRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Confirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Confirm() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_Confirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Confirm(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConfirm(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserQueryRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Delete() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelete(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserQueryRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetPassword() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_SetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSetPasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetPassword(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserSetPasswordRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SignInByPassword<WithAsyncMethod_SignUpByEmail<WithAsyncMethod_ConfirmByEmail<WithAsyncMethod_ConfirmByToken<WithAsyncMethod_UnlockByEmail<WithAsyncMethod_UnlockByToken<WithAsyncMethod_ForgotPassword<WithAsyncMethod_ResetPassword<WithAsyncMethod_Refresh<WithAsyncMethod_Logs<WithAsyncMethod_SetProfile<WithAsyncMethod_GetProfile<WithAsyncMethod_ChangePassword<WithAsyncMethod_SignOut<WithAsyncMethod_Index<WithAsyncMethod_Show<WithAsyncMethod_Disable<WithAsyncMethod_Enable<WithAsyncMethod_Lock<WithAsyncMethod_Unlock<WithAsyncMethod_Confirm<WithAsyncMethod_Delete<WithAsyncMethod_SetPassword<Service > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_SignInByPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SignInByPassword() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserSignInByPasswordRequest, ::palm::metasequoia::v1::UserSignInResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserSignInByPasswordRequest* request, ::palm::metasequoia::v1::UserSignInResponse* response) { return this->SignInByPassword(context, request, response); }));}
    void SetMessageAllocatorFor_SignInByPassword(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserSignInByPasswordRequest, ::palm::metasequoia::v1::UserSignInResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserSignInByPasswordRequest, ::palm::metasequoia::v1::UserSignInResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SignInByPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SignInByPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSignInByPasswordRequest* /*request*/, ::palm::metasequoia::v1::UserSignInResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SignInByPassword(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserSignInByPasswordRequest* /*request*/, ::palm::metasequoia::v1::UserSignInResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SignUpByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SignUpByEmail() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserSignUpByEmailRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserSignUpByEmailRequest* request, ::google::protobuf::Empty* response) { return this->SignUpByEmail(context, request, response); }));}
    void SetMessageAllocatorFor_SignUpByEmail(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserSignUpByEmailRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserSignUpByEmailRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SignUpByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SignUpByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSignUpByEmailRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SignUpByEmail(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserSignUpByEmailRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ConfirmByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ConfirmByEmail() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response) { return this->ConfirmByEmail(context, request, response); }));}
    void SetMessageAllocatorFor_ConfirmByEmail(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ConfirmByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfirmByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ConfirmByEmail(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ConfirmByToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ConfirmByToken() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserTokenRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserTokenRequest* request, ::google::protobuf::Empty* response) { return this->ConfirmByToken(context, request, response); }));}
    void SetMessageAllocatorFor_ConfirmByToken(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserTokenRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserTokenRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ConfirmByToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfirmByToken(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserTokenRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ConfirmByToken(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserTokenRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UnlockByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UnlockByEmail() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response) { return this->UnlockByEmail(context, request, response); }));}
    void SetMessageAllocatorFor_UnlockByEmail(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UnlockByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UnlockByEmail(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UnlockByToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UnlockByToken() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserTokenRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserTokenRequest* request, ::google::protobuf::Empty* response) { return this->UnlockByToken(context, request, response); }));}
    void SetMessageAllocatorFor_UnlockByToken(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserTokenRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserTokenRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UnlockByToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockByToken(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserTokenRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UnlockByToken(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserTokenRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ForgotPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ForgotPassword() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response) { return this->ForgotPassword(context, request, response); }));}
    void SetMessageAllocatorFor_ForgotPassword(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ForgotPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ForgotPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ForgotPassword(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ResetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ResetPassword() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserResetPasswordRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserResetPasswordRequest* request, ::google::protobuf::Empty* response) { return this->ResetPassword(context, request, response); }));}
    void SetMessageAllocatorFor_ResetPassword(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserResetPasswordRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserResetPasswordRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ResetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserResetPasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ResetPassword(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserResetPasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Refresh : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Refresh() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Duration, ::palm::metasequoia::v1::UserSignInResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Duration* request, ::palm::metasequoia::v1::UserSignInResponse* response) { return this->Refresh(context, request, response); }));}
    void SetMessageAllocatorFor_Refresh(
        ::grpc::MessageAllocator< ::google::protobuf::Duration, ::palm::metasequoia::v1::UserSignInResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Duration, ::palm::metasequoia::v1::UserSignInResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Refresh() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Refresh(::grpc::ServerContext* /*context*/, const ::google::protobuf::Duration* /*request*/, ::palm::metasequoia::v1::UserSignInResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Refresh(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Duration* /*request*/, ::palm::metasequoia::v1::UserSignInResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Logs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Logs() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserLogsRequest, ::palm::metasequoia::v1::UserLogsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserLogsRequest* request, ::palm::metasequoia::v1::UserLogsResponse* response) { return this->Logs(context, request, response); }));}
    void SetMessageAllocatorFor_Logs(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserLogsRequest, ::palm::metasequoia::v1::UserLogsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserLogsRequest, ::palm::metasequoia::v1::UserLogsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Logs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Logs(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserLogsRequest* /*request*/, ::palm::metasequoia::v1::UserLogsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Logs(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserLogsRequest* /*request*/, ::palm::metasequoia::v1::UserLogsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetProfile() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserProfile, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserProfile* request, ::google::protobuf::Empty* response) { return this->SetProfile(context, request, response); }));}
    void SetMessageAllocatorFor_SetProfile(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserProfile, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserProfile, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetProfile(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserProfile* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetProfile() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::metasequoia::v1::UserProfile>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::UserProfile* response) { return this->GetProfile(context, request, response); }));}
    void SetMessageAllocatorFor_GetProfile(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::palm::metasequoia::v1::UserProfile>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::metasequoia::v1::UserProfile>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProfile(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::UserProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::UserProfile* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ChangePassword() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserChangePasswordRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserChangePasswordRequest* request, ::google::protobuf::Empty* response) { return this->ChangePassword(context, request, response); }));}
    void SetMessageAllocatorFor_ChangePassword(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserChangePasswordRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserChangePasswordRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserChangePasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ChangePassword(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserChangePasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SignOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SignOut() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->SignOut(context, request, response); }));}
    void SetMessageAllocatorFor_SignOut(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SignOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SignOut(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SignOut(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Index : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Index() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::metasequoia::v1::UserIndexResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::UserIndexResponse* response) { return this->Index(context, request, response); }));}
    void SetMessageAllocatorFor_Index(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::palm::metasequoia::v1::UserIndexResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::metasequoia::v1::UserIndexResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Index() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Index(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::UserIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Index(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::UserIndexResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Show : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Show() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::UserIndexResponse_Item>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::UserIndexResponse_Item* response) { return this->Show(context, request, response); }));}
    void SetMessageAllocatorFor_Show(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::UserIndexResponse_Item>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::UserIndexResponse_Item>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Show() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Show(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::UserIndexResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Show(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::UserIndexResponse_Item* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Disable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Disable() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response) { return this->Disable(context, request, response); }));}
    void SetMessageAllocatorFor_Disable(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Disable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Disable(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Disable(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Enable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Enable() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response) { return this->Enable(context, request, response); }));}
    void SetMessageAllocatorFor_Enable(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Enable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Enable(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Enable(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Lock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Lock() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response) { return this->Lock(context, request, response); }));}
    void SetMessageAllocatorFor_Lock(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Lock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Lock(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Lock(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Unlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Unlock() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response) { return this->Unlock(context, request, response); }));}
    void SetMessageAllocatorFor_Unlock(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Unlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Unlock(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Unlock(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Confirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Confirm() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response) { return this->Confirm(context, request, response); }));}
    void SetMessageAllocatorFor_Confirm(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Confirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Confirm(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Confirm(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Delete() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::google::protobuf::Empty* response) { return this->Delete(context, request, response); }));}
    void SetMessageAllocatorFor_Delete(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Delete(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetPassword() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserSetPasswordRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserSetPasswordRequest* request, ::google::protobuf::Empty* response) { return this->SetPassword(context, request, response); }));}
    void SetMessageAllocatorFor_SetPassword(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserSetPasswordRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserSetPasswordRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSetPasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetPassword(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserSetPasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_SignInByPassword<WithCallbackMethod_SignUpByEmail<WithCallbackMethod_ConfirmByEmail<WithCallbackMethod_ConfirmByToken<WithCallbackMethod_UnlockByEmail<WithCallbackMethod_UnlockByToken<WithCallbackMethod_ForgotPassword<WithCallbackMethod_ResetPassword<WithCallbackMethod_Refresh<WithCallbackMethod_Logs<WithCallbackMethod_SetProfile<WithCallbackMethod_GetProfile<WithCallbackMethod_ChangePassword<WithCallbackMethod_SignOut<WithCallbackMethod_Index<WithCallbackMethod_Show<WithCallbackMethod_Disable<WithCallbackMethod_Enable<WithCallbackMethod_Lock<WithCallbackMethod_Unlock<WithCallbackMethod_Confirm<WithCallbackMethod_Delete<WithCallbackMethod_SetPassword<Service > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_SignInByPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SignInByPassword() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SignInByPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SignInByPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSignInByPasswordRequest* /*request*/, ::palm::metasequoia::v1::UserSignInResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SignUpByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SignUpByEmail() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SignUpByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SignUpByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSignUpByEmailRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ConfirmByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ConfirmByEmail() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ConfirmByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfirmByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ConfirmByToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ConfirmByToken() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ConfirmByToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfirmByToken(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserTokenRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UnlockByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UnlockByEmail() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_UnlockByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UnlockByToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UnlockByToken() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_UnlockByToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockByToken(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserTokenRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ForgotPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ForgotPassword() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_ForgotPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ForgotPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ResetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ResetPassword() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ResetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserResetPasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Refresh : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Refresh() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_Refresh() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Refresh(::grpc::ServerContext* /*context*/, const ::google::protobuf::Duration* /*request*/, ::palm::metasequoia::v1::UserSignInResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Logs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Logs() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_Logs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Logs(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserLogsRequest* /*request*/, ::palm::metasequoia::v1::UserLogsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetProfile() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_SetProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetProfile(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetProfile() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_GetProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProfile(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::UserProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ChangePassword() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserChangePasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SignOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SignOut() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_SignOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SignOut(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Index : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Index() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_Index() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Index(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::UserIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Show : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Show() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_Show() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Show(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::UserIndexResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Disable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Disable() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_Disable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Disable(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Enable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Enable() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_Enable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Enable(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Lock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Lock() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_Lock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Lock(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Unlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Unlock() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_Unlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Unlock(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Confirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Confirm() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_Confirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Confirm(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Delete() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetPassword() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_SetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSetPasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_SignInByPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SignInByPassword() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_SignInByPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SignInByPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSignInByPasswordRequest* /*request*/, ::palm::metasequoia::v1::UserSignInResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSignInByPassword(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SignUpByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SignUpByEmail() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_SignUpByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SignUpByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSignUpByEmailRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSignUpByEmail(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ConfirmByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ConfirmByEmail() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ConfirmByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfirmByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConfirmByEmail(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ConfirmByToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ConfirmByToken() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ConfirmByToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfirmByToken(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserTokenRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConfirmByToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UnlockByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UnlockByEmail() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_UnlockByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnlockByEmail(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UnlockByToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UnlockByToken() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_UnlockByToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockByToken(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserTokenRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnlockByToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ForgotPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ForgotPassword() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_ForgotPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ForgotPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestForgotPassword(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ResetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ResetPassword() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_ResetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserResetPasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResetPassword(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Refresh : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Refresh() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_Refresh() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Refresh(::grpc::ServerContext* /*context*/, const ::google::protobuf::Duration* /*request*/, ::palm::metasequoia::v1::UserSignInResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRefresh(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Logs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Logs() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_Logs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Logs(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserLogsRequest* /*request*/, ::palm::metasequoia::v1::UserLogsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetProfile() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_SetProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetProfile(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetProfile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetProfile() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_GetProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProfile(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::UserProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProfile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ChangePassword() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserChangePasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestChangePassword(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SignOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SignOut() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_SignOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SignOut(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSignOut(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Index : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Index() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_Index() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Index(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::UserIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIndex(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Show : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Show() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_Show() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Show(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::UserIndexResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Disable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Disable() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_Disable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Disable(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDisable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Enable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Enable() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_Enable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Enable(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEnable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Lock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Lock() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_Lock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Lock(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLock(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Unlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Unlock() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_Unlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Unlock(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnlock(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Confirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Confirm() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_Confirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Confirm(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConfirm(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Delete() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelete(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetPassword() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_SetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSetPasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetPassword(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SignInByPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SignInByPassword() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SignInByPassword(context, request, response); }));
    }
    ~WithRawCallbackMethod_SignInByPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SignInByPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSignInByPasswordRequest* /*request*/, ::palm::metasequoia::v1::UserSignInResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SignInByPassword(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SignUpByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SignUpByEmail() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SignUpByEmail(context, request, response); }));
    }
    ~WithRawCallbackMethod_SignUpByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SignUpByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSignUpByEmailRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SignUpByEmail(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ConfirmByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ConfirmByEmail() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ConfirmByEmail(context, request, response); }));
    }
    ~WithRawCallbackMethod_ConfirmByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfirmByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ConfirmByEmail(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ConfirmByToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ConfirmByToken() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ConfirmByToken(context, request, response); }));
    }
    ~WithRawCallbackMethod_ConfirmByToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfirmByToken(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserTokenRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ConfirmByToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UnlockByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UnlockByEmail() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UnlockByEmail(context, request, response); }));
    }
    ~WithRawCallbackMethod_UnlockByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UnlockByEmail(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UnlockByToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UnlockByToken() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UnlockByToken(context, request, response); }));
    }
    ~WithRawCallbackMethod_UnlockByToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockByToken(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserTokenRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UnlockByToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ForgotPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ForgotPassword() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ForgotPassword(context, request, response); }));
    }
    ~WithRawCallbackMethod_ForgotPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ForgotPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ForgotPassword(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ResetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ResetPassword() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ResetPassword(context, request, response); }));
    }
    ~WithRawCallbackMethod_ResetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserResetPasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ResetPassword(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Refresh : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Refresh() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Refresh(context, request, response); }));
    }
    ~WithRawCallbackMethod_Refresh() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Refresh(::grpc::ServerContext* /*context*/, const ::google::protobuf::Duration* /*request*/, ::palm::metasequoia::v1::UserSignInResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Refresh(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Logs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Logs() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Logs(context, request, response); }));
    }
    ~WithRawCallbackMethod_Logs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Logs(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserLogsRequest* /*request*/, ::palm::metasequoia::v1::UserLogsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Logs(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetProfile() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetProfile(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetProfile(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetProfile() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetProfile(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProfile(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::UserProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ChangePassword() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ChangePassword(context, request, response); }));
    }
    ~WithRawCallbackMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserChangePasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ChangePassword(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SignOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SignOut() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SignOut(context, request, response); }));
    }
    ~WithRawCallbackMethod_SignOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SignOut(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SignOut(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Index : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Index() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Index(context, request, response); }));
    }
    ~WithRawCallbackMethod_Index() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Index(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::UserIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Index(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Show : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Show() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Show(context, request, response); }));
    }
    ~WithRawCallbackMethod_Show() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Show(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::UserIndexResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Show(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Disable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Disable() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Disable(context, request, response); }));
    }
    ~WithRawCallbackMethod_Disable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Disable(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Disable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Enable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Enable() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Enable(context, request, response); }));
    }
    ~WithRawCallbackMethod_Enable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Enable(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Enable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Lock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Lock() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Lock(context, request, response); }));
    }
    ~WithRawCallbackMethod_Lock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Lock(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Lock(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Unlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Unlock() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Unlock(context, request, response); }));
    }
    ~WithRawCallbackMethod_Unlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Unlock(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Unlock(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Confirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Confirm() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Confirm(context, request, response); }));
    }
    ~WithRawCallbackMethod_Confirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Confirm(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Confirm(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Delete() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Delete(context, request, response); }));
    }
    ~WithRawCallbackMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Delete(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetPassword() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetPassword(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSetPasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetPassword(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SignInByPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SignInByPassword() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserSignInByPasswordRequest, ::palm::metasequoia::v1::UserSignInResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserSignInByPasswordRequest, ::palm::metasequoia::v1::UserSignInResponse>* streamer) {
                       return this->StreamedSignInByPassword(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SignInByPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SignInByPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSignInByPasswordRequest* /*request*/, ::palm::metasequoia::v1::UserSignInResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSignInByPassword(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserSignInByPasswordRequest,::palm::metasequoia::v1::UserSignInResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SignUpByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SignUpByEmail() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserSignUpByEmailRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserSignUpByEmailRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSignUpByEmail(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SignUpByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SignUpByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSignUpByEmailRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSignUpByEmail(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserSignUpByEmailRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ConfirmByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ConfirmByEmail() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedConfirmByEmail(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ConfirmByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ConfirmByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedConfirmByEmail(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserQueryRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ConfirmByToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ConfirmByToken() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserTokenRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserTokenRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedConfirmByToken(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ConfirmByToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ConfirmByToken(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserTokenRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedConfirmByToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserTokenRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UnlockByEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UnlockByEmail() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedUnlockByEmail(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UnlockByEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UnlockByEmail(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUnlockByEmail(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserQueryRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UnlockByToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UnlockByToken() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserTokenRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserTokenRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedUnlockByToken(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UnlockByToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UnlockByToken(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserTokenRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUnlockByToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserTokenRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ForgotPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ForgotPassword() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedForgotPassword(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ForgotPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ForgotPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedForgotPassword(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserQueryRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ResetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ResetPassword() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserResetPasswordRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserResetPasswordRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedResetPassword(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ResetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ResetPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserResetPasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedResetPassword(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserResetPasswordRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Refresh : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Refresh() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Duration, ::palm::metasequoia::v1::UserSignInResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Duration, ::palm::metasequoia::v1::UserSignInResponse>* streamer) {
                       return this->StreamedRefresh(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Refresh() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Refresh(::grpc::ServerContext* /*context*/, const ::google::protobuf::Duration* /*request*/, ::palm::metasequoia::v1::UserSignInResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRefresh(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Duration,::palm::metasequoia::v1::UserSignInResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Logs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Logs() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserLogsRequest, ::palm::metasequoia::v1::UserLogsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserLogsRequest, ::palm::metasequoia::v1::UserLogsResponse>* streamer) {
                       return this->StreamedLogs(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Logs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Logs(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserLogsRequest* /*request*/, ::palm::metasequoia::v1::UserLogsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLogs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserLogsRequest,::palm::metasequoia::v1::UserLogsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetProfile() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserProfile, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserProfile, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetProfile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetProfile(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserProfile* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetProfile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserProfile,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetProfile() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::palm::metasequoia::v1::UserProfile>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::palm::metasequoia::v1::UserProfile>* streamer) {
                       return this->StreamedGetProfile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetProfile(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::UserProfile* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetProfile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::palm::metasequoia::v1::UserProfile>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ChangePassword() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserChangePasswordRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserChangePasswordRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedChangePassword(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserChangePasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedChangePassword(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserChangePasswordRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SignOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SignOut() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSignOut(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SignOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SignOut(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSignOut(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Index : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Index() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::palm::metasequoia::v1::UserIndexResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::palm::metasequoia::v1::UserIndexResponse>* streamer) {
                       return this->StreamedIndex(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Index() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Index(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::UserIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIndex(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::palm::metasequoia::v1::UserIndexResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Show : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Show() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::UserIndexResponse_Item>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::UserIndexResponse_Item>* streamer) {
                       return this->StreamedShow(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Show() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Show(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::UserIndexResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedShow(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserQueryRequest,::palm::metasequoia::v1::UserIndexResponse_Item>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Disable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Disable() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDisable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Disable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Disable(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDisable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserQueryRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Enable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Enable() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedEnable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Enable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Enable(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEnable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserQueryRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Lock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Lock() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedLock(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Lock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Lock(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLock(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserQueryRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Unlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Unlock() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedUnlock(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Unlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Unlock(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUnlock(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserQueryRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Confirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Confirm() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedConfirm(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Confirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Confirm(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedConfirm(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserQueryRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Delete() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserQueryRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDelete(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDelete(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserQueryRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetPassword() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserSetPasswordRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserSetPasswordRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetPassword(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetPassword(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserSetPasswordRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetPassword(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserSetPasswordRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SignInByPassword<WithStreamedUnaryMethod_SignUpByEmail<WithStreamedUnaryMethod_ConfirmByEmail<WithStreamedUnaryMethod_ConfirmByToken<WithStreamedUnaryMethod_UnlockByEmail<WithStreamedUnaryMethod_UnlockByToken<WithStreamedUnaryMethod_ForgotPassword<WithStreamedUnaryMethod_ResetPassword<WithStreamedUnaryMethod_Refresh<WithStreamedUnaryMethod_Logs<WithStreamedUnaryMethod_SetProfile<WithStreamedUnaryMethod_GetProfile<WithStreamedUnaryMethod_ChangePassword<WithStreamedUnaryMethod_SignOut<WithStreamedUnaryMethod_Index<WithStreamedUnaryMethod_Show<WithStreamedUnaryMethod_Disable<WithStreamedUnaryMethod_Enable<WithStreamedUnaryMethod_Lock<WithStreamedUnaryMethod_Unlock<WithStreamedUnaryMethod_Confirm<WithStreamedUnaryMethod_Delete<WithStreamedUnaryMethod_SetPassword<Service > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_SignInByPassword<WithStreamedUnaryMethod_SignUpByEmail<WithStreamedUnaryMethod_ConfirmByEmail<WithStreamedUnaryMethod_ConfirmByToken<WithStreamedUnaryMethod_UnlockByEmail<WithStreamedUnaryMethod_UnlockByToken<WithStreamedUnaryMethod_ForgotPassword<WithStreamedUnaryMethod_ResetPassword<WithStreamedUnaryMethod_Refresh<WithStreamedUnaryMethod_Logs<WithStreamedUnaryMethod_SetProfile<WithStreamedUnaryMethod_GetProfile<WithStreamedUnaryMethod_ChangePassword<WithStreamedUnaryMethod_SignOut<WithStreamedUnaryMethod_Index<WithStreamedUnaryMethod_Show<WithStreamedUnaryMethod_Disable<WithStreamedUnaryMethod_Enable<WithStreamedUnaryMethod_Lock<WithStreamedUnaryMethod_Unlock<WithStreamedUnaryMethod_Confirm<WithStreamedUnaryMethod_Delete<WithStreamedUnaryMethod_SetPassword<Service > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

class Rbac final {
 public:
  static constexpr char const* service_full_name() {
    return "palm.metasequoia.v1.Rbac";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status Can(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacCanRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncCan(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacCanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncCanRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncCan(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacCanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncCanRaw(context, request, cq));
    }
    virtual ::grpc::Status Has(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacHasRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncHas(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacHasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncHasRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncHas(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacHasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncHasRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::palm::metasequoia::v1::RbacRolesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacRolesResponse>> AsyncGetRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacRolesResponse>>(AsyncGetRolesForUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacRolesResponse>> PrepareAsyncGetRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacRolesResponse>>(PrepareAsyncGetRolesForUserRaw(context, request, cq));
    }
    virtual ::grpc::Status GetImplicitRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::palm::metasequoia::v1::RbacRolesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacRolesResponse>> AsyncGetImplicitRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacRolesResponse>>(AsyncGetImplicitRolesForUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacRolesResponse>> PrepareAsyncGetImplicitRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacRolesResponse>>(PrepareAsyncGetImplicitRolesForUserRaw(context, request, cq));
    }
    virtual ::grpc::Status AddRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncAddRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncAddRolesForUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncAddRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncAddRolesForUserRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteRolesForUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteRolesForUserRaw(context, request, cq));
    }
    virtual ::grpc::Status AddPermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncAddPermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncAddPermissionsForRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncAddPermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncAddPermissionsForRoleRaw(context, request, cq));
    }
    virtual ::grpc::Status DeletePermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeletePermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeletePermissionsForRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeletePermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeletePermissionsForRoleRaw(context, request, cq));
    }
    virtual ::grpc::Status GetPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::palm::metasequoia::v1::RbacPermissionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacPermissionsResponse>> AsyncGetPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacPermissionsResponse>>(AsyncGetPermissionsForUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacPermissionsResponse>> PrepareAsyncGetPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacPermissionsResponse>>(PrepareAsyncGetPermissionsForUserRaw(context, request, cq));
    }
    virtual ::grpc::Status GetImplicitPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::palm::metasequoia::v1::RbacPermissionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacPermissionsResponse>> AsyncGetImplicitPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacPermissionsResponse>>(AsyncGetImplicitPermissionsForUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacPermissionsResponse>> PrepareAsyncGetImplicitPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacPermissionsResponse>>(PrepareAsyncGetImplicitPermissionsForUserRaw(context, request, cq));
    }
    virtual ::grpc::Status AddPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncAddPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncAddPermissionsForUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncAddPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncAddPermissionsForUserRaw(context, request, cq));
    }
    virtual ::grpc::Status DeletePermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeletePermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeletePermissionsForUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeletePermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeletePermissionsForUserRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void Can(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacCanRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Can(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacCanRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Has(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacHasRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Has(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacHasRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacRolesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacRolesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetImplicitRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacRolesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetImplicitRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacRolesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void AddRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void AddPermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddPermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeletePermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeletePermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacPermissionsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacPermissionsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetImplicitPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacPermissionsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetImplicitPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacPermissionsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void AddPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeletePermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeletePermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncCanRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacCanRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncCanRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacCanRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncHasRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacHasRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncHasRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacHasRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacRolesResponse>* AsyncGetRolesForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacRolesResponse>* PrepareAsyncGetRolesForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacRolesResponse>* AsyncGetImplicitRolesForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacRolesResponse>* PrepareAsyncGetImplicitRolesForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncAddRolesForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncAddRolesForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteRolesForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteRolesForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncAddPermissionsForRoleRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncAddPermissionsForRoleRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeletePermissionsForRoleRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeletePermissionsForRoleRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacPermissionsResponse>* AsyncGetPermissionsForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacPermissionsResponse>* PrepareAsyncGetPermissionsForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacPermissionsResponse>* AsyncGetImplicitPermissionsForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::RbacPermissionsResponse>* PrepareAsyncGetImplicitPermissionsForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncAddPermissionsForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncAddPermissionsForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeletePermissionsForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeletePermissionsForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Can(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacCanRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncCan(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacCanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncCanRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncCan(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacCanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncCanRaw(context, request, cq));
    }
    ::grpc::Status Has(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacHasRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncHas(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacHasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncHasRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncHas(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacHasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncHasRaw(context, request, cq));
    }
    ::grpc::Status GetRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::palm::metasequoia::v1::RbacRolesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacRolesResponse>> AsyncGetRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacRolesResponse>>(AsyncGetRolesForUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacRolesResponse>> PrepareAsyncGetRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacRolesResponse>>(PrepareAsyncGetRolesForUserRaw(context, request, cq));
    }
    ::grpc::Status GetImplicitRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::palm::metasequoia::v1::RbacRolesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacRolesResponse>> AsyncGetImplicitRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacRolesResponse>>(AsyncGetImplicitRolesForUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacRolesResponse>> PrepareAsyncGetImplicitRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacRolesResponse>>(PrepareAsyncGetImplicitRolesForUserRaw(context, request, cq));
    }
    ::grpc::Status AddRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncAddRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncAddRolesForUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncAddRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncAddRolesForUserRaw(context, request, cq));
    }
    ::grpc::Status DeleteRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteRolesForUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteRolesForUserRaw(context, request, cq));
    }
    ::grpc::Status AddPermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncAddPermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncAddPermissionsForRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncAddPermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncAddPermissionsForRoleRaw(context, request, cq));
    }
    ::grpc::Status DeletePermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeletePermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeletePermissionsForRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeletePermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeletePermissionsForRoleRaw(context, request, cq));
    }
    ::grpc::Status GetPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::palm::metasequoia::v1::RbacPermissionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacPermissionsResponse>> AsyncGetPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacPermissionsResponse>>(AsyncGetPermissionsForUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacPermissionsResponse>> PrepareAsyncGetPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacPermissionsResponse>>(PrepareAsyncGetPermissionsForUserRaw(context, request, cq));
    }
    ::grpc::Status GetImplicitPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::palm::metasequoia::v1::RbacPermissionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacPermissionsResponse>> AsyncGetImplicitPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacPermissionsResponse>>(AsyncGetImplicitPermissionsForUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacPermissionsResponse>> PrepareAsyncGetImplicitPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacPermissionsResponse>>(PrepareAsyncGetImplicitPermissionsForUserRaw(context, request, cq));
    }
    ::grpc::Status AddPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncAddPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncAddPermissionsForUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncAddPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncAddPermissionsForUserRaw(context, request, cq));
    }
    ::grpc::Status DeletePermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeletePermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeletePermissionsForUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeletePermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeletePermissionsForUserRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Can(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacCanRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Can(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacCanRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Has(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacHasRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Has(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacHasRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacRolesResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacRolesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetImplicitRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacRolesResponse* response, std::function<void(::grpc::Status)>) override;
      void GetImplicitRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacRolesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void AddRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteRolesForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddPermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void AddPermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeletePermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeletePermissionsForRole(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacPermissionsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacPermissionsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetImplicitPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacPermissionsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetImplicitPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacPermissionsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void AddPermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeletePermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeletePermissionsForUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncCanRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacCanRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncCanRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacCanRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncHasRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacHasRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncHasRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacHasRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacRolesResponse>* AsyncGetRolesForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacRolesResponse>* PrepareAsyncGetRolesForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacRolesResponse>* AsyncGetImplicitRolesForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacRolesResponse>* PrepareAsyncGetImplicitRolesForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncAddRolesForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncAddRolesForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteRolesForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteRolesForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncAddPermissionsForRoleRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncAddPermissionsForRoleRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeletePermissionsForRoleRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeletePermissionsForRoleRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacPermissionsResponse>* AsyncGetPermissionsForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacPermissionsResponse>* PrepareAsyncGetPermissionsForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacPermissionsResponse>* AsyncGetImplicitPermissionsForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::RbacPermissionsResponse>* PrepareAsyncGetImplicitPermissionsForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::UserQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncAddPermissionsForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncAddPermissionsForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeletePermissionsForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeletePermissionsForUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Can_;
    const ::grpc::internal::RpcMethod rpcmethod_Has_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRolesForUser_;
    const ::grpc::internal::RpcMethod rpcmethod_GetImplicitRolesForUser_;
    const ::grpc::internal::RpcMethod rpcmethod_AddRolesForUser_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteRolesForUser_;
    const ::grpc::internal::RpcMethod rpcmethod_AddPermissionsForRole_;
    const ::grpc::internal::RpcMethod rpcmethod_DeletePermissionsForRole_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPermissionsForUser_;
    const ::grpc::internal::RpcMethod rpcmethod_GetImplicitPermissionsForUser_;
    const ::grpc::internal::RpcMethod rpcmethod_AddPermissionsForUser_;
    const ::grpc::internal::RpcMethod rpcmethod_DeletePermissionsForUser_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status Can(::grpc::ServerContext* context, const ::palm::metasequoia::v1::RbacCanRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status Has(::grpc::ServerContext* context, const ::palm::metasequoia::v1::RbacHasRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetRolesForUser(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacRolesResponse* response);
    virtual ::grpc::Status GetImplicitRolesForUser(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacRolesResponse* response);
    virtual ::grpc::Status AddRolesForUser(::grpc::ServerContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status DeleteRolesForUser(::grpc::ServerContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status AddPermissionsForRole(::grpc::ServerContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status DeletePermissionsForRole(::grpc::ServerContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetPermissionsForUser(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacPermissionsResponse* response);
    virtual ::grpc::Status GetImplicitPermissionsForUser(::grpc::ServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacPermissionsResponse* response);
    virtual ::grpc::Status AddPermissionsForUser(::grpc::ServerContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status DeletePermissionsForUser(::grpc::ServerContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Can : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Can() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Can() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Can(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacCanRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCan(::grpc::ServerContext* context, ::palm::metasequoia::v1::RbacCanRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Has : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Has() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_Has() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Has(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacHasRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHas(::grpc::ServerContext* context, ::palm::metasequoia::v1::RbacHasRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRolesForUser() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacRolesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRolesForUser(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserQueryRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::metasequoia::v1::RbacRolesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetImplicitRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetImplicitRolesForUser() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetImplicitRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetImplicitRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacRolesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetImplicitRolesForUser(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserQueryRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::metasequoia::v1::RbacRolesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddRolesForUser() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_AddRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacRolesForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddRolesForUser(::grpc::ServerContext* context, ::palm::metasequoia::v1::RbacRolesForUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteRolesForUser() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacRolesForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRolesForUser(::grpc::ServerContext* context, ::palm::metasequoia::v1::RbacRolesForUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddPermissionsForRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddPermissionsForRole() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_AddPermissionsForRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPermissionsForRole(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddPermissionsForRole(::grpc::ServerContext* context, ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeletePermissionsForRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeletePermissionsForRole() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_DeletePermissionsForRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermissionsForRole(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeletePermissionsForRole(::grpc::ServerContext* context, ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPermissionsForUser() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPermissionsForUser(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserQueryRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::metasequoia::v1::RbacPermissionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetImplicitPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetImplicitPermissionsForUser() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_GetImplicitPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetImplicitPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetImplicitPermissionsForUser(::grpc::ServerContext* context, ::palm::metasequoia::v1::UserQueryRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::metasequoia::v1::RbacPermissionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddPermissionsForUser() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_AddPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddPermissionsForUser(::grpc::ServerContext* context, ::palm::metasequoia::v1::RbacPermissionsForUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeletePermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeletePermissionsForUser() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_DeletePermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeletePermissionsForUser(::grpc::ServerContext* context, ::palm::metasequoia::v1::RbacPermissionsForUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Can<WithAsyncMethod_Has<WithAsyncMethod_GetRolesForUser<WithAsyncMethod_GetImplicitRolesForUser<WithAsyncMethod_AddRolesForUser<WithAsyncMethod_DeleteRolesForUser<WithAsyncMethod_AddPermissionsForRole<WithAsyncMethod_DeletePermissionsForRole<WithAsyncMethod_GetPermissionsForUser<WithAsyncMethod_GetImplicitPermissionsForUser<WithAsyncMethod_AddPermissionsForUser<WithAsyncMethod_DeletePermissionsForUser<Service > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Can : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Can() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::RbacCanRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::RbacCanRequest* request, ::google::protobuf::Empty* response) { return this->Can(context, request, response); }));}
    void SetMessageAllocatorFor_Can(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::RbacCanRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::RbacCanRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Can() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Can(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacCanRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Can(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::RbacCanRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Has : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Has() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::RbacHasRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::RbacHasRequest* request, ::google::protobuf::Empty* response) { return this->Has(context, request, response); }));}
    void SetMessageAllocatorFor_Has(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::RbacHasRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::RbacHasRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Has() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Has(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacHasRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Has(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::RbacHasRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRolesForUser() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacRolesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacRolesResponse* response) { return this->GetRolesForUser(context, request, response); }));}
    void SetMessageAllocatorFor_GetRolesForUser(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacRolesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacRolesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacRolesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRolesForUser(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacRolesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetImplicitRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetImplicitRolesForUser() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacRolesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacRolesResponse* response) { return this->GetImplicitRolesForUser(context, request, response); }));}
    void SetMessageAllocatorFor_GetImplicitRolesForUser(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacRolesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacRolesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetImplicitRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetImplicitRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacRolesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetImplicitRolesForUser(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacRolesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddRolesForUser() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::RbacRolesForUserRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest* request, ::google::protobuf::Empty* response) { return this->AddRolesForUser(context, request, response); }));}
    void SetMessageAllocatorFor_AddRolesForUser(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::RbacRolesForUserRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::RbacRolesForUserRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacRolesForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddRolesForUser(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::RbacRolesForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteRolesForUser() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::RbacRolesForUserRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::RbacRolesForUserRequest* request, ::google::protobuf::Empty* response) { return this->DeleteRolesForUser(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteRolesForUser(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::RbacRolesForUserRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::RbacRolesForUserRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacRolesForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteRolesForUser(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::RbacRolesForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddPermissionsForRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddPermissionsForRole() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::RbacPermissionsForRoleRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* request, ::google::protobuf::Empty* response) { return this->AddPermissionsForRole(context, request, response); }));}
    void SetMessageAllocatorFor_AddPermissionsForRole(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::RbacPermissionsForRoleRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::RbacPermissionsForRoleRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddPermissionsForRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPermissionsForRole(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddPermissionsForRole(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeletePermissionsForRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeletePermissionsForRole() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::RbacPermissionsForRoleRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* request, ::google::protobuf::Empty* response) { return this->DeletePermissionsForRole(context, request, response); }));}
    void SetMessageAllocatorFor_DeletePermissionsForRole(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::RbacPermissionsForRoleRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::RbacPermissionsForRoleRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeletePermissionsForRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermissionsForRole(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeletePermissionsForRole(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPermissionsForUser() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacPermissionsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacPermissionsResponse* response) { return this->GetPermissionsForUser(context, request, response); }));}
    void SetMessageAllocatorFor_GetPermissionsForUser(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacPermissionsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacPermissionsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPermissionsForUser(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacPermissionsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetImplicitPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetImplicitPermissionsForUser() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacPermissionsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::UserQueryRequest* request, ::palm::metasequoia::v1::RbacPermissionsResponse* response) { return this->GetImplicitPermissionsForUser(context, request, response); }));}
    void SetMessageAllocatorFor_GetImplicitPermissionsForUser(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacPermissionsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacPermissionsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetImplicitPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetImplicitPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetImplicitPermissionsForUser(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacPermissionsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddPermissionsForUser() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::RbacPermissionsForUserRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* request, ::google::protobuf::Empty* response) { return this->AddPermissionsForUser(context, request, response); }));}
    void SetMessageAllocatorFor_AddPermissionsForUser(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::RbacPermissionsForUserRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::RbacPermissionsForUserRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddPermissionsForUser(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeletePermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeletePermissionsForUser() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::RbacPermissionsForUserRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* request, ::google::protobuf::Empty* response) { return this->DeletePermissionsForUser(context, request, response); }));}
    void SetMessageAllocatorFor_DeletePermissionsForUser(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::RbacPermissionsForUserRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::RbacPermissionsForUserRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeletePermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeletePermissionsForUser(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Can<WithCallbackMethod_Has<WithCallbackMethod_GetRolesForUser<WithCallbackMethod_GetImplicitRolesForUser<WithCallbackMethod_AddRolesForUser<WithCallbackMethod_DeleteRolesForUser<WithCallbackMethod_AddPermissionsForRole<WithCallbackMethod_DeletePermissionsForRole<WithCallbackMethod_GetPermissionsForUser<WithCallbackMethod_GetImplicitPermissionsForUser<WithCallbackMethod_AddPermissionsForUser<WithCallbackMethod_DeletePermissionsForUser<Service > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Can : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Can() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Can() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Can(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacCanRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Has : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Has() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_Has() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Has(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacHasRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRolesForUser() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacRolesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetImplicitRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetImplicitRolesForUser() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetImplicitRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetImplicitRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacRolesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddRolesForUser() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_AddRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacRolesForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteRolesForUser() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacRolesForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddPermissionsForRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddPermissionsForRole() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_AddPermissionsForRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPermissionsForRole(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeletePermissionsForRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeletePermissionsForRole() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_DeletePermissionsForRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermissionsForRole(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPermissionsForUser() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetImplicitPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetImplicitPermissionsForUser() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_GetImplicitPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetImplicitPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddPermissionsForUser() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_AddPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeletePermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeletePermissionsForUser() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_DeletePermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Can : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Can() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Can() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Can(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacCanRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCan(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Has : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Has() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_Has() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Has(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacHasRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHas(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRolesForUser() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacRolesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRolesForUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetImplicitRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetImplicitRolesForUser() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetImplicitRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetImplicitRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacRolesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetImplicitRolesForUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddRolesForUser() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_AddRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacRolesForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddRolesForUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteRolesForUser() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeleteRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacRolesForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRolesForUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddPermissionsForRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddPermissionsForRole() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_AddPermissionsForRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPermissionsForRole(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddPermissionsForRole(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeletePermissionsForRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeletePermissionsForRole() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_DeletePermissionsForRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermissionsForRole(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeletePermissionsForRole(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPermissionsForUser() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPermissionsForUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetImplicitPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetImplicitPermissionsForUser() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_GetImplicitPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetImplicitPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetImplicitPermissionsForUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddPermissionsForUser() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_AddPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddPermissionsForUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeletePermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeletePermissionsForUser() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_DeletePermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeletePermissionsForUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Can : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Can() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Can(context, request, response); }));
    }
    ~WithRawCallbackMethod_Can() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Can(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacCanRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Can(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Has : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Has() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Has(context, request, response); }));
    }
    ~WithRawCallbackMethod_Has() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Has(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacHasRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Has(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRolesForUser() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRolesForUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacRolesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRolesForUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetImplicitRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetImplicitRolesForUser() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetImplicitRolesForUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetImplicitRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetImplicitRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacRolesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetImplicitRolesForUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddRolesForUser() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddRolesForUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacRolesForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddRolesForUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteRolesForUser() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteRolesForUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacRolesForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteRolesForUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddPermissionsForRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddPermissionsForRole() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddPermissionsForRole(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddPermissionsForRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPermissionsForRole(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddPermissionsForRole(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeletePermissionsForRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeletePermissionsForRole() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeletePermissionsForRole(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeletePermissionsForRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermissionsForRole(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeletePermissionsForRole(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPermissionsForUser() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPermissionsForUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPermissionsForUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetImplicitPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetImplicitPermissionsForUser() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetImplicitPermissionsForUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetImplicitPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetImplicitPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetImplicitPermissionsForUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddPermissionsForUser() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddPermissionsForUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddPermissionsForUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeletePermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeletePermissionsForUser() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeletePermissionsForUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeletePermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeletePermissionsForUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Can : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Can() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::RbacCanRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::RbacCanRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedCan(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Can() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Can(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacCanRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCan(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::RbacCanRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Has : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Has() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::RbacHasRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::RbacHasRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedHas(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Has() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Has(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacHasRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedHas(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::RbacHasRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRolesForUser() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacRolesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacRolesResponse>* streamer) {
                       return this->StreamedGetRolesForUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacRolesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRolesForUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserQueryRequest,::palm::metasequoia::v1::RbacRolesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetImplicitRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetImplicitRolesForUser() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacRolesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacRolesResponse>* streamer) {
                       return this->StreamedGetImplicitRolesForUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetImplicitRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetImplicitRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacRolesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetImplicitRolesForUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserQueryRequest,::palm::metasequoia::v1::RbacRolesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddRolesForUser() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::RbacRolesForUserRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::RbacRolesForUserRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedAddRolesForUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacRolesForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddRolesForUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::RbacRolesForUserRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteRolesForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteRolesForUser() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::RbacRolesForUserRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::RbacRolesForUserRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteRolesForUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteRolesForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteRolesForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacRolesForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteRolesForUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::RbacRolesForUserRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddPermissionsForRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddPermissionsForRole() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::RbacPermissionsForRoleRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::RbacPermissionsForRoleRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedAddPermissionsForRole(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddPermissionsForRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddPermissionsForRole(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddPermissionsForRole(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::RbacPermissionsForRoleRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeletePermissionsForRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeletePermissionsForRole() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::RbacPermissionsForRoleRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::RbacPermissionsForRoleRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeletePermissionsForRole(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeletePermissionsForRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeletePermissionsForRole(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForRoleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeletePermissionsForRole(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::RbacPermissionsForRoleRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPermissionsForUser() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacPermissionsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacPermissionsResponse>* streamer) {
                       return this->StreamedGetPermissionsForUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPermissionsForUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserQueryRequest,::palm::metasequoia::v1::RbacPermissionsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetImplicitPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetImplicitPermissionsForUser() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacPermissionsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::UserQueryRequest, ::palm::metasequoia::v1::RbacPermissionsResponse>* streamer) {
                       return this->StreamedGetImplicitPermissionsForUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetImplicitPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetImplicitPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::UserQueryRequest* /*request*/, ::palm::metasequoia::v1::RbacPermissionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetImplicitPermissionsForUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::UserQueryRequest,::palm::metasequoia::v1::RbacPermissionsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddPermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddPermissionsForUser() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::RbacPermissionsForUserRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::RbacPermissionsForUserRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedAddPermissionsForUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddPermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddPermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddPermissionsForUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::RbacPermissionsForUserRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeletePermissionsForUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeletePermissionsForUser() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::RbacPermissionsForUserRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::RbacPermissionsForUserRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeletePermissionsForUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeletePermissionsForUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeletePermissionsForUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::RbacPermissionsForUserRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeletePermissionsForUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::RbacPermissionsForUserRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Can<WithStreamedUnaryMethod_Has<WithStreamedUnaryMethod_GetRolesForUser<WithStreamedUnaryMethod_GetImplicitRolesForUser<WithStreamedUnaryMethod_AddRolesForUser<WithStreamedUnaryMethod_DeleteRolesForUser<WithStreamedUnaryMethod_AddPermissionsForRole<WithStreamedUnaryMethod_DeletePermissionsForRole<WithStreamedUnaryMethod_GetPermissionsForUser<WithStreamedUnaryMethod_GetImplicitPermissionsForUser<WithStreamedUnaryMethod_AddPermissionsForUser<WithStreamedUnaryMethod_DeletePermissionsForUser<Service > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_Can<WithStreamedUnaryMethod_Has<WithStreamedUnaryMethod_GetRolesForUser<WithStreamedUnaryMethod_GetImplicitRolesForUser<WithStreamedUnaryMethod_AddRolesForUser<WithStreamedUnaryMethod_DeleteRolesForUser<WithStreamedUnaryMethod_AddPermissionsForRole<WithStreamedUnaryMethod_DeletePermissionsForRole<WithStreamedUnaryMethod_GetPermissionsForUser<WithStreamedUnaryMethod_GetImplicitPermissionsForUser<WithStreamedUnaryMethod_AddPermissionsForUser<WithStreamedUnaryMethod_DeletePermissionsForUser<Service > > > > > > > > > > > > StreamedService;
};

// ----------------------------------------------------------------------------
//
class Setting final {
 public:
  static constexpr char const* service_full_name() {
    return "palm.metasequoia.v1.Setting";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status Set(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingSetRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSet(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSet(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetRaw(context, request, cq));
    }
    virtual ::grpc::Status Get(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingGetRequest& request, ::palm::metasequoia::v1::SettingsResponse_Item* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse_Item>> AsyncGet(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse_Item>>(AsyncGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse_Item>> PrepareAsyncGet(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse_Item>>(PrepareAsyncGetRaw(context, request, cq));
    }
    virtual ::grpc::Status ByUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingByUserRequest& request, ::palm::metasequoia::v1::SettingsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>> AsyncByUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingByUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>>(AsyncByUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>> PrepareAsyncByUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingByUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>>(PrepareAsyncByUserRaw(context, request, cq));
    }
    virtual ::grpc::Status My(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::metasequoia::v1::SettingsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>> AsyncMy(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>>(AsyncMyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>> PrepareAsyncMy(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>>(PrepareAsyncMyRaw(context, request, cq));
    }
    virtual ::grpc::Status Global(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::metasequoia::v1::SettingsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>> AsyncGlobal(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>>(AsyncGlobalRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>> PrepareAsyncGlobal(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>>(PrepareAsyncGlobalRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void Set(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingSetRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Set(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingSetRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Get(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingGetRequest* request, ::palm::metasequoia::v1::SettingsResponse_Item* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Get(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingGetRequest* request, ::palm::metasequoia::v1::SettingsResponse_Item* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ByUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingByUserRequest* request, ::palm::metasequoia::v1::SettingsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ByUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingByUserRequest* request, ::palm::metasequoia::v1::SettingsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void My(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::SettingsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void My(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::SettingsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Global(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::SettingsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Global(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::SettingsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse_Item>* AsyncGetRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingGetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse_Item>* PrepareAsyncGetRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingGetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>* AsyncByUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingByUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>* PrepareAsyncByUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingByUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>* AsyncMyRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>* PrepareAsyncMyRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>* AsyncGlobalRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::SettingsResponse>* PrepareAsyncGlobalRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Set(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingSetRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSet(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSet(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetRaw(context, request, cq));
    }
    ::grpc::Status Get(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingGetRequest& request, ::palm::metasequoia::v1::SettingsResponse_Item* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse_Item>> AsyncGet(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse_Item>>(AsyncGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse_Item>> PrepareAsyncGet(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse_Item>>(PrepareAsyncGetRaw(context, request, cq));
    }
    ::grpc::Status ByUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingByUserRequest& request, ::palm::metasequoia::v1::SettingsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>> AsyncByUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingByUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>>(AsyncByUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>> PrepareAsyncByUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingByUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>>(PrepareAsyncByUserRaw(context, request, cq));
    }
    ::grpc::Status My(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::metasequoia::v1::SettingsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>> AsyncMy(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>>(AsyncMyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>> PrepareAsyncMy(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>>(PrepareAsyncMyRaw(context, request, cq));
    }
    ::grpc::Status Global(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::palm::metasequoia::v1::SettingsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>> AsyncGlobal(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>>(AsyncGlobalRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>> PrepareAsyncGlobal(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>>(PrepareAsyncGlobalRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Set(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingSetRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Set(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingSetRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Get(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingGetRequest* request, ::palm::metasequoia::v1::SettingsResponse_Item* response, std::function<void(::grpc::Status)>) override;
      void Get(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingGetRequest* request, ::palm::metasequoia::v1::SettingsResponse_Item* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ByUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingByUserRequest* request, ::palm::metasequoia::v1::SettingsResponse* response, std::function<void(::grpc::Status)>) override;
      void ByUser(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingByUserRequest* request, ::palm::metasequoia::v1::SettingsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void My(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::SettingsResponse* response, std::function<void(::grpc::Status)>) override;
      void My(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::SettingsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Global(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::SettingsResponse* response, std::function<void(::grpc::Status)>) override;
      void Global(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::SettingsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse_Item>* AsyncGetRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingGetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse_Item>* PrepareAsyncGetRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingGetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>* AsyncByUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingByUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>* PrepareAsyncByUserRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::SettingByUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>* AsyncMyRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>* PrepareAsyncMyRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>* AsyncGlobalRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::SettingsResponse>* PrepareAsyncGlobalRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Set_;
    const ::grpc::internal::RpcMethod rpcmethod_Get_;
    const ::grpc::internal::RpcMethod rpcmethod_ByUser_;
    const ::grpc::internal::RpcMethod rpcmethod_My_;
    const ::grpc::internal::RpcMethod rpcmethod_Global_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status Set(::grpc::ServerContext* context, const ::palm::metasequoia::v1::SettingSetRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status Get(::grpc::ServerContext* context, const ::palm::metasequoia::v1::SettingGetRequest* request, ::palm::metasequoia::v1::SettingsResponse_Item* response);
    virtual ::grpc::Status ByUser(::grpc::ServerContext* context, const ::palm::metasequoia::v1::SettingByUserRequest* request, ::palm::metasequoia::v1::SettingsResponse* response);
    virtual ::grpc::Status My(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::SettingsResponse* response);
    virtual ::grpc::Status Global(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::SettingsResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Set() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSet(::grpc::ServerContext* context, ::palm::metasequoia::v1::SettingSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Get() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingGetRequest* /*request*/, ::palm::metasequoia::v1::SettingsResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGet(::grpc::ServerContext* context, ::palm::metasequoia::v1::SettingGetRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::metasequoia::v1::SettingsResponse_Item>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ByUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ByUser() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ByUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ByUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingByUserRequest* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestByUser(::grpc::ServerContext* context, ::palm::metasequoia::v1::SettingByUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::metasequoia::v1::SettingsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_My : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_My() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_My() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status My(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMy(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::palm::metasequoia::v1::SettingsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Global : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Global() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_Global() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Global(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGlobal(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::palm::metasequoia::v1::SettingsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Set<WithAsyncMethod_Get<WithAsyncMethod_ByUser<WithAsyncMethod_My<WithAsyncMethod_Global<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Set() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::SettingSetRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::SettingSetRequest* request, ::google::protobuf::Empty* response) { return this->Set(context, request, response); }));}
    void SetMessageAllocatorFor_Set(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::SettingSetRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::SettingSetRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Set(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::SettingSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Get() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::SettingGetRequest, ::palm::metasequoia::v1::SettingsResponse_Item>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::SettingGetRequest* request, ::palm::metasequoia::v1::SettingsResponse_Item* response) { return this->Get(context, request, response); }));}
    void SetMessageAllocatorFor_Get(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::SettingGetRequest, ::palm::metasequoia::v1::SettingsResponse_Item>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::SettingGetRequest, ::palm::metasequoia::v1::SettingsResponse_Item>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingGetRequest* /*request*/, ::palm::metasequoia::v1::SettingsResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Get(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::SettingGetRequest* /*request*/, ::palm::metasequoia::v1::SettingsResponse_Item* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ByUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ByUser() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::SettingByUserRequest, ::palm::metasequoia::v1::SettingsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::SettingByUserRequest* request, ::palm::metasequoia::v1::SettingsResponse* response) { return this->ByUser(context, request, response); }));}
    void SetMessageAllocatorFor_ByUser(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::SettingByUserRequest, ::palm::metasequoia::v1::SettingsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::SettingByUserRequest, ::palm::metasequoia::v1::SettingsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ByUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ByUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingByUserRequest* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ByUser(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::SettingByUserRequest* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_My : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_My() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::metasequoia::v1::SettingsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::SettingsResponse* response) { return this->My(context, request, response); }));}
    void SetMessageAllocatorFor_My(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::palm::metasequoia::v1::SettingsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::metasequoia::v1::SettingsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_My() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status My(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* My(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Global : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Global() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::metasequoia::v1::SettingsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::palm::metasequoia::v1::SettingsResponse* response) { return this->Global(context, request, response); }));}
    void SetMessageAllocatorFor_Global(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::palm::metasequoia::v1::SettingsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::palm::metasequoia::v1::SettingsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Global() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Global(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Global(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Set<WithCallbackMethod_Get<WithCallbackMethod_ByUser<WithCallbackMethod_My<WithCallbackMethod_Global<Service > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Set() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Get() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingGetRequest* /*request*/, ::palm::metasequoia::v1::SettingsResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ByUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ByUser() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ByUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ByUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingByUserRequest* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_My : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_My() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_My() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status My(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Global : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Global() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_Global() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Global(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Set() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Get() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingGetRequest* /*request*/, ::palm::metasequoia::v1::SettingsResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ByUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ByUser() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ByUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ByUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingByUserRequest* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestByUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_My : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_My() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_My() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status My(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Global : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Global() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_Global() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Global(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGlobal(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Set() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Set(context, request, response); }));
    }
    ~WithRawCallbackMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Set(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Get() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Get(context, request, response); }));
    }
    ~WithRawCallbackMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingGetRequest* /*request*/, ::palm::metasequoia::v1::SettingsResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Get(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ByUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ByUser() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ByUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_ByUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ByUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingByUserRequest* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ByUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_My : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_My() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->My(context, request, response); }));
    }
    ~WithRawCallbackMethod_My() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status My(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* My(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Global : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Global() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Global(context, request, response); }));
    }
    ~WithRawCallbackMethod_Global() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Global(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Global(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Set() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::SettingSetRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::SettingSetRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSet(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::SettingSetRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Get() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::SettingGetRequest, ::palm::metasequoia::v1::SettingsResponse_Item>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::SettingGetRequest, ::palm::metasequoia::v1::SettingsResponse_Item>* streamer) {
                       return this->StreamedGet(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingGetRequest* /*request*/, ::palm::metasequoia::v1::SettingsResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::SettingGetRequest,::palm::metasequoia::v1::SettingsResponse_Item>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ByUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ByUser() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::SettingByUserRequest, ::palm::metasequoia::v1::SettingsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::SettingByUserRequest, ::palm::metasequoia::v1::SettingsResponse>* streamer) {
                       return this->StreamedByUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ByUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ByUser(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::SettingByUserRequest* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedByUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::SettingByUserRequest,::palm::metasequoia::v1::SettingsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_My : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_My() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::palm::metasequoia::v1::SettingsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::palm::metasequoia::v1::SettingsResponse>* streamer) {
                       return this->StreamedMy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_My() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status My(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::palm::metasequoia::v1::SettingsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Global : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Global() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::palm::metasequoia::v1::SettingsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::palm::metasequoia::v1::SettingsResponse>* streamer) {
                       return this->StreamedGlobal(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Global() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Global(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::palm::metasequoia::v1::SettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGlobal(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::palm::metasequoia::v1::SettingsResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Set<WithStreamedUnaryMethod_Get<WithStreamedUnaryMethod_ByUser<WithStreamedUnaryMethod_My<WithStreamedUnaryMethod_Global<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_Set<WithStreamedUnaryMethod_Get<WithStreamedUnaryMethod_ByUser<WithStreamedUnaryMethod_My<WithStreamedUnaryMethod_Global<Service > > > > > StreamedService;
};

class Locale final {
 public:
  static constexpr char const* service_full_name() {
    return "palm.metasequoia.v1.Locale";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status Set(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleSetRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSet(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSet(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetRaw(context, request, cq));
    }
    virtual ::grpc::Status Get(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleGetRequest& request, ::palm::metasequoia::v1::LocalesResponse_Item* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::LocalesResponse_Item>> AsyncGet(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::LocalesResponse_Item>>(AsyncGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::LocalesResponse_Item>> PrepareAsyncGet(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::LocalesResponse_Item>>(PrepareAsyncGetRaw(context, request, cq));
    }
    virtual ::grpc::Status ByLang(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleByLangRequest& request, ::palm::metasequoia::v1::LocalesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::LocalesResponse>> AsyncByLang(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleByLangRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::LocalesResponse>>(AsyncByLangRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::LocalesResponse>> PrepareAsyncByLang(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleByLangRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::LocalesResponse>>(PrepareAsyncByLangRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void Set(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleSetRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Set(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleSetRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Get(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleGetRequest* request, ::palm::metasequoia::v1::LocalesResponse_Item* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Get(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleGetRequest* request, ::palm::metasequoia::v1::LocalesResponse_Item* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ByLang(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleByLangRequest* request, ::palm::metasequoia::v1::LocalesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ByLang(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleByLangRequest* request, ::palm::metasequoia::v1::LocalesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::LocalesResponse_Item>* AsyncGetRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleGetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::LocalesResponse_Item>* PrepareAsyncGetRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleGetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::LocalesResponse>* AsyncByLangRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleByLangRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::metasequoia::v1::LocalesResponse>* PrepareAsyncByLangRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleByLangRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Set(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleSetRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSet(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSet(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetRaw(context, request, cq));
    }
    ::grpc::Status Get(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleGetRequest& request, ::palm::metasequoia::v1::LocalesResponse_Item* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::LocalesResponse_Item>> AsyncGet(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::LocalesResponse_Item>>(AsyncGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::LocalesResponse_Item>> PrepareAsyncGet(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::LocalesResponse_Item>>(PrepareAsyncGetRaw(context, request, cq));
    }
    ::grpc::Status ByLang(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleByLangRequest& request, ::palm::metasequoia::v1::LocalesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::LocalesResponse>> AsyncByLang(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleByLangRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::LocalesResponse>>(AsyncByLangRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::LocalesResponse>> PrepareAsyncByLang(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleByLangRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::LocalesResponse>>(PrepareAsyncByLangRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Set(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleSetRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Set(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleSetRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Get(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleGetRequest* request, ::palm::metasequoia::v1::LocalesResponse_Item* response, std::function<void(::grpc::Status)>) override;
      void Get(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleGetRequest* request, ::palm::metasequoia::v1::LocalesResponse_Item* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ByLang(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleByLangRequest* request, ::palm::metasequoia::v1::LocalesResponse* response, std::function<void(::grpc::Status)>) override;
      void ByLang(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleByLangRequest* request, ::palm::metasequoia::v1::LocalesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::LocalesResponse_Item>* AsyncGetRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleGetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::LocalesResponse_Item>* PrepareAsyncGetRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleGetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::LocalesResponse>* AsyncByLangRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleByLangRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::metasequoia::v1::LocalesResponse>* PrepareAsyncByLangRaw(::grpc::ClientContext* context, const ::palm::metasequoia::v1::LocaleByLangRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Set_;
    const ::grpc::internal::RpcMethod rpcmethod_Get_;
    const ::grpc::internal::RpcMethod rpcmethod_ByLang_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status Set(::grpc::ServerContext* context, const ::palm::metasequoia::v1::LocaleSetRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status Get(::grpc::ServerContext* context, const ::palm::metasequoia::v1::LocaleGetRequest* request, ::palm::metasequoia::v1::LocalesResponse_Item* response);
    virtual ::grpc::Status ByLang(::grpc::ServerContext* context, const ::palm::metasequoia::v1::LocaleByLangRequest* request, ::palm::metasequoia::v1::LocalesResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Set() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSet(::grpc::ServerContext* context, ::palm::metasequoia::v1::LocaleSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Get() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleGetRequest* /*request*/, ::palm::metasequoia::v1::LocalesResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGet(::grpc::ServerContext* context, ::palm::metasequoia::v1::LocaleGetRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::metasequoia::v1::LocalesResponse_Item>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ByLang : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ByLang() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ByLang() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ByLang(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleByLangRequest* /*request*/, ::palm::metasequoia::v1::LocalesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestByLang(::grpc::ServerContext* context, ::palm::metasequoia::v1::LocaleByLangRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::metasequoia::v1::LocalesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Set<WithAsyncMethod_Get<WithAsyncMethod_ByLang<Service > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Set() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::LocaleSetRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::LocaleSetRequest* request, ::google::protobuf::Empty* response) { return this->Set(context, request, response); }));}
    void SetMessageAllocatorFor_Set(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::LocaleSetRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::LocaleSetRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Set(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Get() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::LocaleGetRequest, ::palm::metasequoia::v1::LocalesResponse_Item>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::LocaleGetRequest* request, ::palm::metasequoia::v1::LocalesResponse_Item* response) { return this->Get(context, request, response); }));}
    void SetMessageAllocatorFor_Get(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::LocaleGetRequest, ::palm::metasequoia::v1::LocalesResponse_Item>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::LocaleGetRequest, ::palm::metasequoia::v1::LocalesResponse_Item>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleGetRequest* /*request*/, ::palm::metasequoia::v1::LocalesResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Get(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleGetRequest* /*request*/, ::palm::metasequoia::v1::LocalesResponse_Item* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ByLang : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ByLang() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::LocaleByLangRequest, ::palm::metasequoia::v1::LocalesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::metasequoia::v1::LocaleByLangRequest* request, ::palm::metasequoia::v1::LocalesResponse* response) { return this->ByLang(context, request, response); }));}
    void SetMessageAllocatorFor_ByLang(
        ::grpc::MessageAllocator< ::palm::metasequoia::v1::LocaleByLangRequest, ::palm::metasequoia::v1::LocalesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::metasequoia::v1::LocaleByLangRequest, ::palm::metasequoia::v1::LocalesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ByLang() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ByLang(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleByLangRequest* /*request*/, ::palm::metasequoia::v1::LocalesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ByLang(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleByLangRequest* /*request*/, ::palm::metasequoia::v1::LocalesResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Set<WithCallbackMethod_Get<WithCallbackMethod_ByLang<Service > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Set() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Get() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleGetRequest* /*request*/, ::palm::metasequoia::v1::LocalesResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ByLang : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ByLang() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ByLang() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ByLang(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleByLangRequest* /*request*/, ::palm::metasequoia::v1::LocalesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Set() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Get() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleGetRequest* /*request*/, ::palm::metasequoia::v1::LocalesResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ByLang : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ByLang() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ByLang() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ByLang(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleByLangRequest* /*request*/, ::palm::metasequoia::v1::LocalesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestByLang(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Set() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Set(context, request, response); }));
    }
    ~WithRawCallbackMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Set(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Get() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Get(context, request, response); }));
    }
    ~WithRawCallbackMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleGetRequest* /*request*/, ::palm::metasequoia::v1::LocalesResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Get(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ByLang : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ByLang() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ByLang(context, request, response); }));
    }
    ~WithRawCallbackMethod_ByLang() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ByLang(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleByLangRequest* /*request*/, ::palm::metasequoia::v1::LocalesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ByLang(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Set : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Set() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::LocaleSetRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::LocaleSetRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSet(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Set() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Set(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleSetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::LocaleSetRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Get() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::LocaleGetRequest, ::palm::metasequoia::v1::LocalesResponse_Item>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::LocaleGetRequest, ::palm::metasequoia::v1::LocalesResponse_Item>* streamer) {
                       return this->StreamedGet(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleGetRequest* /*request*/, ::palm::metasequoia::v1::LocalesResponse_Item* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::LocaleGetRequest,::palm::metasequoia::v1::LocalesResponse_Item>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ByLang : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ByLang() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::metasequoia::v1::LocaleByLangRequest, ::palm::metasequoia::v1::LocalesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::metasequoia::v1::LocaleByLangRequest, ::palm::metasequoia::v1::LocalesResponse>* streamer) {
                       return this->StreamedByLang(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ByLang() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ByLang(::grpc::ServerContext* /*context*/, const ::palm::metasequoia::v1::LocaleByLangRequest* /*request*/, ::palm::metasequoia::v1::LocalesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedByLang(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::metasequoia::v1::LocaleByLangRequest,::palm::metasequoia::v1::LocalesResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Set<WithStreamedUnaryMethod_Get<WithStreamedUnaryMethod_ByLang<Service > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_Set<WithStreamedUnaryMethod_Get<WithStreamedUnaryMethod_ByLang<Service > > > StreamedService;
};

}  // namespace v1
}  // namespace metasequoia
}  // namespace palm


#endif  // GRPC_metasequoia_2eproto__INCLUDED
