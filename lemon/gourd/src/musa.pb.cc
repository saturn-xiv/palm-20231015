// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: musa.proto

#include "musa.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace palm {
namespace musa {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR WechatPayPrepayRequest_Amount::WechatPayPrepayRequest_Amount(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.total_)*/ 0

  , /*decltype(_impl_.currency_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayPrepayRequest_AmountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayPrepayRequest_AmountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayPrepayRequest_AmountDefaultTypeInternal() {}
  union {
    WechatPayPrepayRequest_Amount _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayPrepayRequest_AmountDefaultTypeInternal _WechatPayPrepayRequest_Amount_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayPrepayRequest::WechatPayPrepayRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.app_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.payer_open_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.description_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.notify_host_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.amount_)*/nullptr} {}
struct WechatPayPrepayRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayPrepayRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayPrepayRequestDefaultTypeInternal() {}
  union {
    WechatPayPrepayRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayPrepayRequestDefaultTypeInternal _WechatPayPrepayRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayCloseOrderRequest::WechatPayCloseOrderRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.out_trade_no_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.reason_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayCloseOrderRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayCloseOrderRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayCloseOrderRequestDefaultTypeInternal() {}
  union {
    WechatPayCloseOrderRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayCloseOrderRequestDefaultTypeInternal _WechatPayCloseOrderRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayNativeQrCodeUrlResponse::WechatPayNativeQrCodeUrlResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.url_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.out_trade_no_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayNativeQrCodeUrlResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayNativeQrCodeUrlResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayNativeQrCodeUrlResponseDefaultTypeInternal() {}
  union {
    WechatPayNativeQrCodeUrlResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayNativeQrCodeUrlResponseDefaultTypeInternal _WechatPayNativeQrCodeUrlResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayTradeResponse::WechatPayTradeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.trade_state_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.trade_state_desc_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayTradeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayTradeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayTradeResponseDefaultTypeInternal() {}
  union {
    WechatPayTradeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayTradeResponseDefaultTypeInternal _WechatPayTradeResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayQueryOrderByIdRequest::WechatPayQueryOrderByIdRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.transaction_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayQueryOrderByIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayQueryOrderByIdRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayQueryOrderByIdRequestDefaultTypeInternal() {}
  union {
    WechatPayQueryOrderByIdRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayQueryOrderByIdRequestDefaultTypeInternal _WechatPayQueryOrderByIdRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayQueryOrderByOutTradeNoRequest::WechatPayQueryOrderByOutTradeNoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.out_trade_no_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayQueryOrderByOutTradeNoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayQueryOrderByOutTradeNoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayQueryOrderByOutTradeNoRequestDefaultTypeInternal() {}
  union {
    WechatPayQueryOrderByOutTradeNoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayQueryOrderByOutTradeNoRequestDefaultTypeInternal _WechatPayQueryOrderByOutTradeNoRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayJsapiPrepayIdResponse::WechatPayJsapiPrepayIdResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.app_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.time_stamp_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.nonce_str_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.package_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.sign_type_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.pay_sign_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.out_trade_no_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayJsapiPrepayIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayJsapiPrepayIdResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayJsapiPrepayIdResponseDefaultTypeInternal() {}
  union {
    WechatPayJsapiPrepayIdResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayJsapiPrepayIdResponseDefaultTypeInternal _WechatPayJsapiPrepayIdResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayBillDate::WechatPayBillDate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.year_)*/ 0

  , /*decltype(_impl_.month_)*/ 0

  , /*decltype(_impl_.day_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayBillDateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayBillDateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayBillDateDefaultTypeInternal() {}
  union {
    WechatPayBillDate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayBillDateDefaultTypeInternal _WechatPayBillDate_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayBillResponse::WechatPayBillResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.content_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayBillResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayBillResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayBillResponseDefaultTypeInternal() {}
  union {
    WechatPayBillResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayBillResponseDefaultTypeInternal _WechatPayBillResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayTradeBillRequest::WechatPayTradeBillRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.bill_date_)*/nullptr
  , /*decltype(_impl_.bill_type_)*/ 0
} {}
struct WechatPayTradeBillRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayTradeBillRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayTradeBillRequestDefaultTypeInternal() {}
  union {
    WechatPayTradeBillRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayTradeBillRequestDefaultTypeInternal _WechatPayTradeBillRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayFundFlowBillRequest::WechatPayFundFlowBillRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.bill_date_)*/nullptr
  , /*decltype(_impl_.account_type_)*/ 0
} {}
struct WechatPayFundFlowBillRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayFundFlowBillRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayFundFlowBillRequestDefaultTypeInternal() {}
  union {
    WechatPayFundFlowBillRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayFundFlowBillRequestDefaultTypeInternal _WechatPayFundFlowBillRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayCreateRefundRequest_Amount::WechatPayCreateRefundRequest_Amount(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.total_)*/ 0

  , /*decltype(_impl_.refund_)*/ 0

  , /*decltype(_impl_.currency_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayCreateRefundRequest_AmountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayCreateRefundRequest_AmountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayCreateRefundRequest_AmountDefaultTypeInternal() {}
  union {
    WechatPayCreateRefundRequest_Amount _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayCreateRefundRequest_AmountDefaultTypeInternal _WechatPayCreateRefundRequest_Amount_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayCreateRefundRequest::WechatPayCreateRefundRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.out_trade_no_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.reason_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.notify_host_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.amount_)*/nullptr} {}
struct WechatPayCreateRefundRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayCreateRefundRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayCreateRefundRequestDefaultTypeInternal() {}
  union {
    WechatPayCreateRefundRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayCreateRefundRequestDefaultTypeInternal _WechatPayCreateRefundRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayQueryRefundRequest::WechatPayQueryRefundRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.out_refund_no_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayQueryRefundRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayQueryRefundRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayQueryRefundRequestDefaultTypeInternal() {}
  union {
    WechatPayQueryRefundRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayQueryRefundRequestDefaultTypeInternal _WechatPayQueryRefundRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayRefundResponse::WechatPayRefundResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.out_refund_no_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.channel_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.status_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.user_received_account_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.create_time_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayRefundResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayRefundResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayRefundResponseDefaultTypeInternal() {}
  union {
    WechatPayRefundResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayRefundResponseDefaultTypeInternal _WechatPayRefundResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayCreateTransferRequest_Batch::WechatPayCreateTransferRequest_Batch(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.remark_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayCreateTransferRequest_BatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayCreateTransferRequest_BatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayCreateTransferRequest_BatchDefaultTypeInternal() {}
  union {
    WechatPayCreateTransferRequest_Batch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayCreateTransferRequest_BatchDefaultTypeInternal _WechatPayCreateTransferRequest_Batch_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayCreateTransferRequest_Detail::WechatPayCreateTransferRequest_Detail(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.open_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.username_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.remark_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.amount_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayCreateTransferRequest_DetailDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayCreateTransferRequest_DetailDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayCreateTransferRequest_DetailDefaultTypeInternal() {}
  union {
    WechatPayCreateTransferRequest_Detail _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayCreateTransferRequest_DetailDefaultTypeInternal _WechatPayCreateTransferRequest_Detail_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayCreateTransferRequest::WechatPayCreateTransferRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.details_)*/{}
  , /*decltype(_impl_.app_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.scene_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.batch_)*/nullptr} {}
struct WechatPayCreateTransferRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayCreateTransferRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayCreateTransferRequestDefaultTypeInternal() {}
  union {
    WechatPayCreateTransferRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayCreateTransferRequestDefaultTypeInternal _WechatPayCreateTransferRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayCreateTransferResponse_Detail::WechatPayCreateTransferResponse_Detail(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.open_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.out_detail_no_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayCreateTransferResponse_DetailDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayCreateTransferResponse_DetailDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayCreateTransferResponse_DetailDefaultTypeInternal() {}
  union {
    WechatPayCreateTransferResponse_Detail _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayCreateTransferResponse_DetailDefaultTypeInternal _WechatPayCreateTransferResponse_Detail_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayCreateTransferResponse::WechatPayCreateTransferResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.details_)*/{}
  , /*decltype(_impl_.out_batch_no_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayCreateTransferResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayCreateTransferResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayCreateTransferResponseDefaultTypeInternal() {}
  union {
    WechatPayCreateTransferResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayCreateTransferResponseDefaultTypeInternal _WechatPayCreateTransferResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayQueryTransferRequest::WechatPayQueryTransferRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.out_batch_no_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.offset_)*/ 0

  , /*decltype(_impl_.limit_)*/ 0

  , /*decltype(_impl_.detail_status_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayQueryTransferRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayQueryTransferRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayQueryTransferRequestDefaultTypeInternal() {}
  union {
    WechatPayQueryTransferRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayQueryTransferRequestDefaultTypeInternal _WechatPayQueryTransferRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayQueryTransferResponse_Detail::WechatPayQueryTransferResponse_Detail(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.out_detail_no_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.status_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WechatPayQueryTransferResponse_DetailDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayQueryTransferResponse_DetailDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayQueryTransferResponse_DetailDefaultTypeInternal() {}
  union {
    WechatPayQueryTransferResponse_Detail _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayQueryTransferResponse_DetailDefaultTypeInternal _WechatPayQueryTransferResponse_Detail_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayQueryTransferResponse_Batch::WechatPayQueryTransferResponse_Batch(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.status_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.type_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.close_reason_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }
} {}
struct WechatPayQueryTransferResponse_BatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayQueryTransferResponse_BatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayQueryTransferResponse_BatchDefaultTypeInternal() {}
  union {
    WechatPayQueryTransferResponse_Batch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayQueryTransferResponse_BatchDefaultTypeInternal _WechatPayQueryTransferResponse_Batch_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR WechatPayQueryTransferResponse::WechatPayQueryTransferResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.details_)*/{}
  , /*decltype(_impl_.batch_)*/nullptr} {}
struct WechatPayQueryTransferResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatPayQueryTransferResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatPayQueryTransferResponseDefaultTypeInternal() {}
  union {
    WechatPayQueryTransferResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatPayQueryTransferResponseDefaultTypeInternal _WechatPayQueryTransferResponse_default_instance_;
}  // namespace v1
}  // namespace musa
}  // namespace palm
static ::_pb::Metadata file_level_metadata_musa_2eproto[25];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_musa_2eproto[6];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_musa_2eproto = nullptr;
const ::uint32_t TableStruct_musa_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayPrepayRequest_Amount, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayPrepayRequest_Amount, _impl_.total_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayPrepayRequest_Amount, _impl_.currency_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayPrepayRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayPrepayRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayPrepayRequest, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayPrepayRequest, _impl_.payer_open_id_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayPrepayRequest, _impl_.amount_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayPrepayRequest, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayPrepayRequest, _impl_.notify_host_),
    ~0u,
    0,
    1,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCloseOrderRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCloseOrderRequest, _impl_.out_trade_no_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCloseOrderRequest, _impl_.reason_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayNativeQrCodeUrlResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayNativeQrCodeUrlResponse, _impl_.url_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayNativeQrCodeUrlResponse, _impl_.out_trade_no_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayTradeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayTradeResponse, _impl_.trade_state_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayTradeResponse, _impl_.trade_state_desc_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryOrderByIdRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryOrderByIdRequest, _impl_.transaction_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryOrderByOutTradeNoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryOrderByOutTradeNoRequest, _impl_.out_trade_no_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayJsapiPrepayIdResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayJsapiPrepayIdResponse, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayJsapiPrepayIdResponse, _impl_.time_stamp_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayJsapiPrepayIdResponse, _impl_.nonce_str_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayJsapiPrepayIdResponse, _impl_.package_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayJsapiPrepayIdResponse, _impl_.sign_type_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayJsapiPrepayIdResponse, _impl_.pay_sign_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayJsapiPrepayIdResponse, _impl_.out_trade_no_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayBillDate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayBillDate, _impl_.year_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayBillDate, _impl_.month_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayBillDate, _impl_.day_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayBillResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayBillResponse, _impl_.content_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayTradeBillRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayTradeBillRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayTradeBillRequest, _impl_.bill_date_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayTradeBillRequest, _impl_.bill_type_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayFundFlowBillRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayFundFlowBillRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayFundFlowBillRequest, _impl_.bill_date_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayFundFlowBillRequest, _impl_.account_type_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateRefundRequest_Amount, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateRefundRequest_Amount, _impl_.total_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateRefundRequest_Amount, _impl_.refund_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateRefundRequest_Amount, _impl_.currency_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateRefundRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateRefundRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateRefundRequest, _impl_.out_trade_no_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateRefundRequest, _impl_.reason_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateRefundRequest, _impl_.amount_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateRefundRequest, _impl_.notify_host_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryRefundRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryRefundRequest, _impl_.out_refund_no_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayRefundResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayRefundResponse, _impl_.out_refund_no_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayRefundResponse, _impl_.channel_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayRefundResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayRefundResponse, _impl_.user_received_account_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayRefundResponse, _impl_.create_time_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferRequest_Batch, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferRequest_Batch, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferRequest_Batch, _impl_.remark_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferRequest_Detail, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferRequest_Detail, _impl_.open_id_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferRequest_Detail, _impl_.username_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferRequest_Detail, _impl_.amount_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferRequest_Detail, _impl_.remark_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferRequest, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferRequest, _impl_.batch_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferRequest, _impl_.details_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferRequest, _impl_.scene_id_),
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferResponse_Detail, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferResponse_Detail, _impl_.open_id_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferResponse_Detail, _impl_.out_detail_no_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferResponse, _impl_.out_batch_no_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayCreateTransferResponse, _impl_.details_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryTransferRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryTransferRequest, _impl_.out_batch_no_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryTransferRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryTransferRequest, _impl_.limit_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryTransferRequest, _impl_.detail_status_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryTransferResponse_Detail, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryTransferResponse_Detail, _impl_.out_detail_no_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryTransferResponse_Detail, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryTransferResponse_Batch, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryTransferResponse_Batch, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryTransferResponse_Batch, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryTransferResponse_Batch, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryTransferResponse_Batch, _impl_.close_reason_),
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryTransferResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryTransferResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryTransferResponse, _impl_.batch_),
    PROTOBUF_FIELD_OFFSET(::palm::musa::v1::WechatPayQueryTransferResponse, _impl_.details_),
    0,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::palm::musa::v1::WechatPayPrepayRequest_Amount)},
        { 10, 23, -1, sizeof(::palm::musa::v1::WechatPayPrepayRequest)},
        { 28, -1, -1, sizeof(::palm::musa::v1::WechatPayCloseOrderRequest)},
        { 38, -1, -1, sizeof(::palm::musa::v1::WechatPayNativeQrCodeUrlResponse)},
        { 48, -1, -1, sizeof(::palm::musa::v1::WechatPayTradeResponse)},
        { 58, -1, -1, sizeof(::palm::musa::v1::WechatPayQueryOrderByIdRequest)},
        { 67, -1, -1, sizeof(::palm::musa::v1::WechatPayQueryOrderByOutTradeNoRequest)},
        { 76, -1, -1, sizeof(::palm::musa::v1::WechatPayJsapiPrepayIdResponse)},
        { 91, -1, -1, sizeof(::palm::musa::v1::WechatPayBillDate)},
        { 102, -1, -1, sizeof(::palm::musa::v1::WechatPayBillResponse)},
        { 111, 121, -1, sizeof(::palm::musa::v1::WechatPayTradeBillRequest)},
        { 123, 133, -1, sizeof(::palm::musa::v1::WechatPayFundFlowBillRequest)},
        { 135, -1, -1, sizeof(::palm::musa::v1::WechatPayCreateRefundRequest_Amount)},
        { 146, 158, -1, sizeof(::palm::musa::v1::WechatPayCreateRefundRequest)},
        { 162, -1, -1, sizeof(::palm::musa::v1::WechatPayQueryRefundRequest)},
        { 171, -1, -1, sizeof(::palm::musa::v1::WechatPayRefundResponse)},
        { 184, -1, -1, sizeof(::palm::musa::v1::WechatPayCreateTransferRequest_Batch)},
        { 194, -1, -1, sizeof(::palm::musa::v1::WechatPayCreateTransferRequest_Detail)},
        { 206, 218, -1, sizeof(::palm::musa::v1::WechatPayCreateTransferRequest)},
        { 222, -1, -1, sizeof(::palm::musa::v1::WechatPayCreateTransferResponse_Detail)},
        { 232, -1, -1, sizeof(::palm::musa::v1::WechatPayCreateTransferResponse)},
        { 242, -1, -1, sizeof(::palm::musa::v1::WechatPayQueryTransferRequest)},
        { 254, -1, -1, sizeof(::palm::musa::v1::WechatPayQueryTransferResponse_Detail)},
        { 264, 275, -1, sizeof(::palm::musa::v1::WechatPayQueryTransferResponse_Batch)},
        { 278, 288, -1, sizeof(::palm::musa::v1::WechatPayQueryTransferResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::palm::musa::v1::_WechatPayPrepayRequest_Amount_default_instance_._instance,
    &::palm::musa::v1::_WechatPayPrepayRequest_default_instance_._instance,
    &::palm::musa::v1::_WechatPayCloseOrderRequest_default_instance_._instance,
    &::palm::musa::v1::_WechatPayNativeQrCodeUrlResponse_default_instance_._instance,
    &::palm::musa::v1::_WechatPayTradeResponse_default_instance_._instance,
    &::palm::musa::v1::_WechatPayQueryOrderByIdRequest_default_instance_._instance,
    &::palm::musa::v1::_WechatPayQueryOrderByOutTradeNoRequest_default_instance_._instance,
    &::palm::musa::v1::_WechatPayJsapiPrepayIdResponse_default_instance_._instance,
    &::palm::musa::v1::_WechatPayBillDate_default_instance_._instance,
    &::palm::musa::v1::_WechatPayBillResponse_default_instance_._instance,
    &::palm::musa::v1::_WechatPayTradeBillRequest_default_instance_._instance,
    &::palm::musa::v1::_WechatPayFundFlowBillRequest_default_instance_._instance,
    &::palm::musa::v1::_WechatPayCreateRefundRequest_Amount_default_instance_._instance,
    &::palm::musa::v1::_WechatPayCreateRefundRequest_default_instance_._instance,
    &::palm::musa::v1::_WechatPayQueryRefundRequest_default_instance_._instance,
    &::palm::musa::v1::_WechatPayRefundResponse_default_instance_._instance,
    &::palm::musa::v1::_WechatPayCreateTransferRequest_Batch_default_instance_._instance,
    &::palm::musa::v1::_WechatPayCreateTransferRequest_Detail_default_instance_._instance,
    &::palm::musa::v1::_WechatPayCreateTransferRequest_default_instance_._instance,
    &::palm::musa::v1::_WechatPayCreateTransferResponse_Detail_default_instance_._instance,
    &::palm::musa::v1::_WechatPayCreateTransferResponse_default_instance_._instance,
    &::palm::musa::v1::_WechatPayQueryTransferRequest_default_instance_._instance,
    &::palm::musa::v1::_WechatPayQueryTransferResponse_Detail_default_instance_._instance,
    &::palm::musa::v1::_WechatPayQueryTransferResponse_Batch_default_instance_._instance,
    &::palm::musa::v1::_WechatPayQueryTransferResponse_default_instance_._instance,
};
const char descriptor_table_protodef_musa_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\nmusa.proto\022\014palm.musa.v1\032\033google/proto"
    "buf/empty.proto\"\211\002\n\026WechatPayPrepayReque"
    "st\022\016\n\006app_id\030\001 \001(\t\022\032\n\rpayer_open_id\030\002 \001("
    "\tH\000\210\001\001\022;\n\006amount\030\003 \001(\0132+.palm.musa.v1.We"
    "chatPayPrepayRequest.Amount\022\023\n\013descripti"
    "on\030\t \001(\t\022\023\n\013notify_host\030\013 \001(\t\032J\n\006Amount\022"
    "\r\n\005total\030\001 \001(\005\0221\n\010currency\030\002 \001(\0162\037.palm."
    "musa.v1.WechatPayCurrencyB\020\n\016_payer_open"
    "_id\"B\n\032WechatPayCloseOrderRequest\022\024\n\014out"
    "_trade_no\030\001 \001(\t\022\016\n\006reason\030\002 \001(\t\"E\n Wecha"
    "tPayNativeQrCodeUrlResponse\022\013\n\003url\030\001 \001(\t"
    "\022\024\n\014out_trade_no\030\002 \001(\t\"G\n\026WechatPayTrade"
    "Response\022\023\n\013trade_state\030\001 \001(\t\022\030\n\020trade_s"
    "tate_desc\030\002 \001(\t\"8\n\036WechatPayQueryOrderBy"
    "IdRequest\022\026\n\016transaction_id\030\001 \001(\t\">\n&Wec"
    "hatPayQueryOrderByOutTradeNoRequest\022\024\n\014o"
    "ut_trade_no\030\001 \001(\t\"\243\001\n\036WechatPayJsapiPrep"
    "ayIdResponse\022\016\n\006app_id\030\001 \001(\t\022\022\n\ntime_sta"
    "mp\030\002 \001(\t\022\021\n\tnonce_str\030\003 \001(\t\022\017\n\007package\030\004"
    " \001(\t\022\021\n\tsign_type\030\005 \001(\t\022\020\n\010pay_sign\030\006 \001("
    "\t\022\024\n\014out_trade_no\030\013 \001(\t\"=\n\021WechatPayBill"
    "Date\022\014\n\004year\030\001 \001(\005\022\r\n\005month\030\002 \001(\005\022\013\n\003day"
    "\030\003 \001(\005\"(\n\025WechatPayBillResponse\022\017\n\007conte"
    "nt\030\001 \001(\014\"\302\001\n\031WechatPayTradeBillRequest\0222"
    "\n\tbill_date\030\001 \001(\0132\037.palm.musa.v1.WechatP"
    "ayBillDate\022C\n\tbill_type\030\002 \001(\01620.palm.mus"
    "a.v1.WechatPayTradeBillRequest.BillType\""
    ",\n\010BillType\022\007\n\003ALL\020\000\022\013\n\007SUCCESS\020\001\022\n\n\006REF"
    "UND\020\002\"\323\001\n\034WechatPayFundFlowBillRequest\0222"
    "\n\tbill_date\030\001 \001(\0132\037.palm.musa.v1.WechatP"
    "ayBillDate\022L\n\014account_type\030\002 \001(\01626.palm."
    "musa.v1.WechatPayFundFlowBillRequest.Acc"
    "ountType\"1\n\013AccountType\022\t\n\005BASIC\020\000\022\r\n\tOP"
    "ERATION\020\001\022\010\n\004FEES\020\002\"\370\001\n\034WechatPayCreateR"
    "efundRequest\022\024\n\014out_trade_no\030\001 \001(\t\022\016\n\006re"
    "ason\030\002 \001(\t\022A\n\006amount\030\003 \001(\01321.palm.musa.v"
    "1.WechatPayCreateRefundRequest.Amount\022\023\n"
    "\013notify_host\030\013 \001(\t\032Z\n\006Amount\022\r\n\005total\030\001 "
    "\001(\005\022\016\n\006refund\030\002 \001(\005\0221\n\010currency\030\003 \001(\0162\037."
    "palm.musa.v1.WechatPayCurrency\"4\n\033Wechat"
    "PayQueryRefundRequest\022\025\n\rout_refund_no\030\001"
    " \001(\t\"\205\001\n\027WechatPayRefundResponse\022\025\n\rout_"
    "refund_no\030\001 \001(\t\022\017\n\007channel\030\002 \001(\t\022\016\n\006stat"
    "us\030\003 \001(\t\022\035\n\025user_received_account\030\004 \001(\t\022"
    "\023\n\013create_time\030c \001(\t\"\277\002\n\036WechatPayCreate"
    "TransferRequest\022\016\n\006app_id\030\001 \001(\t\022A\n\005batch"
    "\030\002 \001(\01322.palm.musa.v1.WechatPayCreateTra"
    "nsferRequest.Batch\022D\n\007details\030\003 \003(\01323.pa"
    "lm.musa.v1.WechatPayCreateTransferReques"
    "t.Detail\022\020\n\010scene_id\030\t \001(\t\032%\n\005Batch\022\014\n\004n"
    "ame\030\001 \001(\t\022\016\n\006remark\030\002 \001(\t\032K\n\006Detail\022\017\n\007o"
    "pen_id\030\001 \001(\t\022\020\n\010username\030\002 \001(\t\022\016\n\006amount"
    "\030\003 \001(\003\022\016\n\006remark\030\004 \001(\t\"\260\001\n\037WechatPayCrea"
    "teTransferResponse\022\024\n\014out_batch_no\030\001 \001(\t"
    "\022E\n\007details\030\002 \003(\01324.palm.musa.v1.WechatP"
    "ayCreateTransferResponse.Detail\0320\n\006Detai"
    "l\022\017\n\007open_id\030\001 \001(\t\022\025\n\rout_detail_no\030\002 \001("
    "\t\"\325\001\n\035WechatPayQueryTransferRequest\022\024\n\014o"
    "ut_batch_no\030\001 \001(\t\022\016\n\006offset\030\002 \001(\005\022\r\n\005lim"
    "it\030\003 \001(\005\022O\n\rdetail_status\030\t \001(\01628.palm.m"
    "usa.v1.WechatPayQueryTransferRequest.Det"
    "ailStatus\".\n\014DetailStatus\022\007\n\003ALL\020\000\022\013\n\007SU"
    "CCESS\020\001\022\010\n\004FAIL\020\002\"\255\002\n\036WechatPayQueryTran"
    "sferResponse\022A\n\005batch\030\001 \001(\01322.palm.musa."
    "v1.WechatPayQueryTransferResponse.Batch\022"
    "D\n\007details\030\t \003(\01323.palm.musa.v1.WechatPa"
    "yQueryTransferResponse.Detail\032/\n\006Detail\022"
    "\025\n\rout_detail_no\030\001 \001(\t\022\016\n\006status\030\002 \001(\t\032Q"
    "\n\005Batch\022\016\n\006status\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\022\031\n"
    "\014close_reason\030\t \001(\tH\000\210\001\001B\017\n\r_close_reaso"
    "n*\034\n\021WechatPayCurrency\022\007\n\003CNY\020\000*4\n\025Wecha"
    "tPayNotifyAction\022\017\n\013TRANSCATION\020\000\022\n\n\006REF"
    "UND\020\001*\034\n\020WechatPayTarType\022\010\n\004GZIP\020\0002s\n\017W"
    "echatPayNative\022`\n\006Prepay\022$.palm.musa.v1."
    "WechatPayPrepayRequest\032..palm.musa.v1.We"
    "chatPayNativeQrCodeUrlResponse\"\0002\242\003\n\016Wec"
    "hatPayJsapi\022^\n\006Prepay\022$.palm.musa.v1.Wec"
    "hatPayPrepayRequest\032,.palm.musa.v1.Wecha"
    "tPayJsapiPrepayIdResponse\"\000\022v\n\026QueryOrde"
    "rByOutTradeNo\0224.palm.musa.v1.WechatPayQu"
    "eryOrderByOutTradeNoRequest\032$.palm.musa."
    "v1.WechatPayTradeResponse\"\000\022f\n\016QueryOrde"
    "rById\022,.palm.musa.v1.WechatPayQueryOrder"
    "ByIdRequest\032$.palm.musa.v1.WechatPayTrad"
    "eResponse\"\000\022P\n\nCloseOrder\022(.palm.musa.v1"
    ".WechatPayCloseOrderRequest\032\026.google.pro"
    "tobuf.Empty\"\0002\307\001\n\rWechatPayBill\022W\n\005Trade"
    "\022\'.palm.musa.v1.WechatPayTradeBillReques"
    "t\032#.palm.musa.v1.WechatPayBillResponse\"\000"
    "\022]\n\010FundFlow\022*.palm.musa.v1.WechatPayFun"
    "dFlowBillRequest\032#.palm.musa.v1.WechatPa"
    "yBillResponse\"\0002\315\001\n\017WechatPayRefund\022]\n\006C"
    "reate\022*.palm.musa.v1.WechatPayCreateRefu"
    "ndRequest\032%.palm.musa.v1.WechatPayRefund"
    "Response\"\000\022[\n\005Query\022).palm.musa.v1.Wecha"
    "tPayQueryRefundRequest\032%.palm.musa.v1.We"
    "chatPayRefundResponse\"\0002\342\001\n\021WechatPayTra"
    "nsfer\022g\n\006Create\022,.palm.musa.v1.WechatPay"
    "CreateTransferRequest\032-.palm.musa.v1.Wec"
    "hatPayCreateTransferResponse\"\000\022d\n\005Query\022"
    "+.palm.musa.v1.WechatPayQueryTransferReq"
    "uest\032,.palm.musa.v1.WechatPayQueryTransf"
    "erResponse\"\0002C\n\006Health\0229\n\005Check\022\026.google"
    ".protobuf.Empty\032\026.google.protobuf.Empty\""
    "\000B.\n*com.github.saturn_xiv.palm.plugins."
    "musa.v1P\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_musa_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_musa_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_musa_2eproto = {
    false,
    false,
    4217,
    descriptor_table_protodef_musa_2eproto,
    "musa.proto",
    &descriptor_table_musa_2eproto_once,
    descriptor_table_musa_2eproto_deps,
    1,
    25,
    schemas,
    file_default_instances,
    TableStruct_musa_2eproto::offsets,
    file_level_metadata_musa_2eproto,
    file_level_enum_descriptors_musa_2eproto,
    file_level_service_descriptors_musa_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_musa_2eproto_getter() {
  return &descriptor_table_musa_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_musa_2eproto(&descriptor_table_musa_2eproto);
namespace palm {
namespace musa {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WechatPayTradeBillRequest_BillType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_musa_2eproto);
  return file_level_enum_descriptors_musa_2eproto[0];
}
bool WechatPayTradeBillRequest_BillType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr WechatPayTradeBillRequest_BillType WechatPayTradeBillRequest::ALL;
constexpr WechatPayTradeBillRequest_BillType WechatPayTradeBillRequest::SUCCESS;
constexpr WechatPayTradeBillRequest_BillType WechatPayTradeBillRequest::REFUND;
constexpr WechatPayTradeBillRequest_BillType WechatPayTradeBillRequest::BillType_MIN;
constexpr WechatPayTradeBillRequest_BillType WechatPayTradeBillRequest::BillType_MAX;
constexpr int WechatPayTradeBillRequest::BillType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WechatPayFundFlowBillRequest_AccountType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_musa_2eproto);
  return file_level_enum_descriptors_musa_2eproto[1];
}
bool WechatPayFundFlowBillRequest_AccountType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr WechatPayFundFlowBillRequest_AccountType WechatPayFundFlowBillRequest::BASIC;
constexpr WechatPayFundFlowBillRequest_AccountType WechatPayFundFlowBillRequest::OPERATION;
constexpr WechatPayFundFlowBillRequest_AccountType WechatPayFundFlowBillRequest::FEES;
constexpr WechatPayFundFlowBillRequest_AccountType WechatPayFundFlowBillRequest::AccountType_MIN;
constexpr WechatPayFundFlowBillRequest_AccountType WechatPayFundFlowBillRequest::AccountType_MAX;
constexpr int WechatPayFundFlowBillRequest::AccountType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WechatPayQueryTransferRequest_DetailStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_musa_2eproto);
  return file_level_enum_descriptors_musa_2eproto[2];
}
bool WechatPayQueryTransferRequest_DetailStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr WechatPayQueryTransferRequest_DetailStatus WechatPayQueryTransferRequest::ALL;
constexpr WechatPayQueryTransferRequest_DetailStatus WechatPayQueryTransferRequest::SUCCESS;
constexpr WechatPayQueryTransferRequest_DetailStatus WechatPayQueryTransferRequest::FAIL;
constexpr WechatPayQueryTransferRequest_DetailStatus WechatPayQueryTransferRequest::DetailStatus_MIN;
constexpr WechatPayQueryTransferRequest_DetailStatus WechatPayQueryTransferRequest::DetailStatus_MAX;
constexpr int WechatPayQueryTransferRequest::DetailStatus_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WechatPayCurrency_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_musa_2eproto);
  return file_level_enum_descriptors_musa_2eproto[3];
}
bool WechatPayCurrency_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WechatPayNotifyAction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_musa_2eproto);
  return file_level_enum_descriptors_musa_2eproto[4];
}
bool WechatPayNotifyAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WechatPayTarType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_musa_2eproto);
  return file_level_enum_descriptors_musa_2eproto[5];
}
bool WechatPayTarType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class WechatPayPrepayRequest_Amount::_Internal {
 public:
};

WechatPayPrepayRequest_Amount::WechatPayPrepayRequest_Amount(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayPrepayRequest.Amount)
}
WechatPayPrepayRequest_Amount::WechatPayPrepayRequest_Amount(const WechatPayPrepayRequest_Amount& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayPrepayRequest.Amount)
}

inline void WechatPayPrepayRequest_Amount::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.total_) { 0 }

    , decltype(_impl_.currency_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

WechatPayPrepayRequest_Amount::~WechatPayPrepayRequest_Amount() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayPrepayRequest.Amount)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayPrepayRequest_Amount::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void WechatPayPrepayRequest_Amount::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayPrepayRequest_Amount::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayPrepayRequest.Amount)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.total_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.currency_) -
      reinterpret_cast<char*>(&_impl_.total_)) + sizeof(_impl_.currency_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayPrepayRequest_Amount::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 total = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.total_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .palm.musa.v1.WechatPayCurrency currency = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_currency(static_cast<::palm::musa::v1::WechatPayCurrency>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayPrepayRequest_Amount::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayPrepayRequest.Amount)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 total = 1;
  if (this->_internal_total() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1, this->_internal_total(), target);
  }

  // .palm.musa.v1.WechatPayCurrency currency = 2;
  if (this->_internal_currency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_currency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayPrepayRequest.Amount)
  return target;
}

::size_t WechatPayPrepayRequest_Amount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayPrepayRequest.Amount)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 total = 1;
  if (this->_internal_total() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total());
  }

  // .palm.musa.v1.WechatPayCurrency currency = 2;
  if (this->_internal_currency() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_currency());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayPrepayRequest_Amount::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayPrepayRequest_Amount::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayPrepayRequest_Amount::GetClassData() const { return &_class_data_; }


void WechatPayPrepayRequest_Amount::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayPrepayRequest_Amount*>(&to_msg);
  auto& from = static_cast<const WechatPayPrepayRequest_Amount&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayPrepayRequest.Amount)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_total() != 0) {
    _this->_internal_set_total(from._internal_total());
  }
  if (from._internal_currency() != 0) {
    _this->_internal_set_currency(from._internal_currency());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayPrepayRequest_Amount::CopyFrom(const WechatPayPrepayRequest_Amount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayPrepayRequest.Amount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayPrepayRequest_Amount::IsInitialized() const {
  return true;
}

void WechatPayPrepayRequest_Amount::InternalSwap(WechatPayPrepayRequest_Amount* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WechatPayPrepayRequest_Amount, _impl_.currency_)
      + sizeof(WechatPayPrepayRequest_Amount::_impl_.currency_)
      - PROTOBUF_FIELD_OFFSET(WechatPayPrepayRequest_Amount, _impl_.total_)>(
          reinterpret_cast<char*>(&_impl_.total_),
          reinterpret_cast<char*>(&other->_impl_.total_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayPrepayRequest_Amount::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[0]);
}
// ===================================================================

class WechatPayPrepayRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<WechatPayPrepayRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WechatPayPrepayRequest, _impl_._has_bits_);
  static void set_has_payer_open_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::palm::musa::v1::WechatPayPrepayRequest_Amount& amount(const WechatPayPrepayRequest* msg);
  static void set_has_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::palm::musa::v1::WechatPayPrepayRequest_Amount&
WechatPayPrepayRequest::_Internal::amount(const WechatPayPrepayRequest* msg) {
  return *msg->_impl_.amount_;
}
WechatPayPrepayRequest::WechatPayPrepayRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayPrepayRequest)
}
WechatPayPrepayRequest::WechatPayPrepayRequest(const WechatPayPrepayRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayPrepayRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.app_id_) {}

    , decltype(_impl_.payer_open_id_) {}

    , decltype(_impl_.description_) {}

    , decltype(_impl_.notify_host_) {}

    , decltype(_impl_.amount_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    _this->_impl_.app_id_.Set(from._internal_app_id(), _this->GetArenaForAllocation());
  }
  _impl_.payer_open_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.payer_open_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.payer_open_id_.Set(from._internal_payer_open_id(), _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), _this->GetArenaForAllocation());
  }
  _impl_.notify_host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.notify_host_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_notify_host().empty()) {
    _this->_impl_.notify_host_.Set(from._internal_notify_host(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.amount_ = new ::palm::musa::v1::WechatPayPrepayRequest_Amount(*from._impl_.amount_);
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayPrepayRequest)
}

inline void WechatPayPrepayRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.app_id_) {}

    , decltype(_impl_.payer_open_id_) {}

    , decltype(_impl_.description_) {}

    , decltype(_impl_.notify_host_) {}

    , decltype(_impl_.amount_){nullptr}
  };
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.payer_open_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.payer_open_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.notify_host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.notify_host_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayPrepayRequest::~WechatPayPrepayRequest() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayPrepayRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayPrepayRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.app_id_.Destroy();
  _impl_.payer_open_id_.Destroy();
  _impl_.description_.Destroy();
  _impl_.notify_host_.Destroy();
  if (this != internal_default_instance()) delete _impl_.amount_;
}

void WechatPayPrepayRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayPrepayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayPrepayRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.app_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.payer_open_id_.ClearNonDefaultToEmpty();
  }
  _impl_.description_.ClearToEmpty();
  _impl_.notify_host_.ClearToEmpty();
  if (cached_has_bits & 0x00000002u) {
    ABSL_DCHECK(_impl_.amount_ != nullptr);
    _impl_.amount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayPrepayRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_app_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayPrepayRequest.app_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // optional string payer_open_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_payer_open_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayPrepayRequest.payer_open_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .palm.musa.v1.WechatPayPrepayRequest.Amount amount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string description = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayPrepayRequest.description"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string notify_host = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_notify_host();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayPrepayRequest.notify_host"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayPrepayRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayPrepayRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayPrepayRequest.app_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string payer_open_id = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_payer_open_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayPrepayRequest.payer_open_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // .palm.musa.v1.WechatPayPrepayRequest.Amount amount = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  // string description = 9;
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayPrepayRequest.description");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // string notify_host = 11;
  if (!this->_internal_notify_host().empty()) {
    const std::string& _s = this->_internal_notify_host();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayPrepayRequest.notify_host");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayPrepayRequest)
  return target;
}

::size_t WechatPayPrepayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayPrepayRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // optional string payer_open_id = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_payer_open_id());
  }

  // string description = 9;
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  // string notify_host = 11;
  if (!this->_internal_notify_host().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_notify_host());
  }

  // .palm.musa.v1.WechatPayPrepayRequest.Amount amount = 3;
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayPrepayRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayPrepayRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayPrepayRequest::GetClassData() const { return &_class_data_; }


void WechatPayPrepayRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayPrepayRequest*>(&to_msg);
  auto& from = static_cast<const WechatPayPrepayRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayPrepayRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_payer_open_id(from._internal_payer_open_id());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_notify_host().empty()) {
    _this->_internal_set_notify_host(from._internal_notify_host());
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_internal_mutable_amount()->::palm::musa::v1::WechatPayPrepayRequest_Amount::MergeFrom(
        from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayPrepayRequest::CopyFrom(const WechatPayPrepayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayPrepayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayPrepayRequest::IsInitialized() const {
  return true;
}

void WechatPayPrepayRequest::InternalSwap(WechatPayPrepayRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, lhs_arena,
                                       &other->_impl_.app_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payer_open_id_, lhs_arena,
                                       &other->_impl_.payer_open_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, lhs_arena,
                                       &other->_impl_.description_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.notify_host_, lhs_arena,
                                       &other->_impl_.notify_host_, rhs_arena);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayPrepayRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[1]);
}
// ===================================================================

class WechatPayCloseOrderRequest::_Internal {
 public:
};

WechatPayCloseOrderRequest::WechatPayCloseOrderRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayCloseOrderRequest)
}
WechatPayCloseOrderRequest::WechatPayCloseOrderRequest(const WechatPayCloseOrderRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayCloseOrderRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.out_trade_no_) {}

    , decltype(_impl_.reason_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.out_trade_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_trade_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_out_trade_no().empty()) {
    _this->_impl_.out_trade_no_.Set(from._internal_out_trade_no(), _this->GetArenaForAllocation());
  }
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.reason_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reason().empty()) {
    _this->_impl_.reason_.Set(from._internal_reason(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayCloseOrderRequest)
}

inline void WechatPayCloseOrderRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.out_trade_no_) {}

    , decltype(_impl_.reason_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.out_trade_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_trade_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.reason_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayCloseOrderRequest::~WechatPayCloseOrderRequest() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayCloseOrderRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayCloseOrderRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.out_trade_no_.Destroy();
  _impl_.reason_.Destroy();
}

void WechatPayCloseOrderRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayCloseOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayCloseOrderRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.out_trade_no_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayCloseOrderRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string out_trade_no = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_out_trade_no();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayCloseOrderRequest.out_trade_no"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string reason = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_reason();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayCloseOrderRequest.reason"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayCloseOrderRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayCloseOrderRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string out_trade_no = 1;
  if (!this->_internal_out_trade_no().empty()) {
    const std::string& _s = this->_internal_out_trade_no();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayCloseOrderRequest.out_trade_no");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string reason = 2;
  if (!this->_internal_reason().empty()) {
    const std::string& _s = this->_internal_reason();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayCloseOrderRequest.reason");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayCloseOrderRequest)
  return target;
}

::size_t WechatPayCloseOrderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayCloseOrderRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string out_trade_no = 1;
  if (!this->_internal_out_trade_no().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_out_trade_no());
  }

  // string reason = 2;
  if (!this->_internal_reason().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_reason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayCloseOrderRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayCloseOrderRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayCloseOrderRequest::GetClassData() const { return &_class_data_; }


void WechatPayCloseOrderRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayCloseOrderRequest*>(&to_msg);
  auto& from = static_cast<const WechatPayCloseOrderRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayCloseOrderRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_out_trade_no().empty()) {
    _this->_internal_set_out_trade_no(from._internal_out_trade_no());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayCloseOrderRequest::CopyFrom(const WechatPayCloseOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayCloseOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayCloseOrderRequest::IsInitialized() const {
  return true;
}

void WechatPayCloseOrderRequest::InternalSwap(WechatPayCloseOrderRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_trade_no_, lhs_arena,
                                       &other->_impl_.out_trade_no_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, lhs_arena,
                                       &other->_impl_.reason_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayCloseOrderRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[2]);
}
// ===================================================================

class WechatPayNativeQrCodeUrlResponse::_Internal {
 public:
};

WechatPayNativeQrCodeUrlResponse::WechatPayNativeQrCodeUrlResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayNativeQrCodeUrlResponse)
}
WechatPayNativeQrCodeUrlResponse::WechatPayNativeQrCodeUrlResponse(const WechatPayNativeQrCodeUrlResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayNativeQrCodeUrlResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.url_) {}

    , decltype(_impl_.out_trade_no_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    _this->_impl_.url_.Set(from._internal_url(), _this->GetArenaForAllocation());
  }
  _impl_.out_trade_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_trade_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_out_trade_no().empty()) {
    _this->_impl_.out_trade_no_.Set(from._internal_out_trade_no(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayNativeQrCodeUrlResponse)
}

inline void WechatPayNativeQrCodeUrlResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.url_) {}

    , decltype(_impl_.out_trade_no_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.out_trade_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_trade_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayNativeQrCodeUrlResponse::~WechatPayNativeQrCodeUrlResponse() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayNativeQrCodeUrlResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayNativeQrCodeUrlResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.url_.Destroy();
  _impl_.out_trade_no_.Destroy();
}

void WechatPayNativeQrCodeUrlResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayNativeQrCodeUrlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayNativeQrCodeUrlResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  _impl_.out_trade_no_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayNativeQrCodeUrlResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayNativeQrCodeUrlResponse.url"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string out_trade_no = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_out_trade_no();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayNativeQrCodeUrlResponse.out_trade_no"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayNativeQrCodeUrlResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayNativeQrCodeUrlResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    const std::string& _s = this->_internal_url();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayNativeQrCodeUrlResponse.url");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string out_trade_no = 2;
  if (!this->_internal_out_trade_no().empty()) {
    const std::string& _s = this->_internal_out_trade_no();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayNativeQrCodeUrlResponse.out_trade_no");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayNativeQrCodeUrlResponse)
  return target;
}

::size_t WechatPayNativeQrCodeUrlResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayNativeQrCodeUrlResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_url());
  }

  // string out_trade_no = 2;
  if (!this->_internal_out_trade_no().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_out_trade_no());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayNativeQrCodeUrlResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayNativeQrCodeUrlResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayNativeQrCodeUrlResponse::GetClassData() const { return &_class_data_; }


void WechatPayNativeQrCodeUrlResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayNativeQrCodeUrlResponse*>(&to_msg);
  auto& from = static_cast<const WechatPayNativeQrCodeUrlResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayNativeQrCodeUrlResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  if (!from._internal_out_trade_no().empty()) {
    _this->_internal_set_out_trade_no(from._internal_out_trade_no());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayNativeQrCodeUrlResponse::CopyFrom(const WechatPayNativeQrCodeUrlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayNativeQrCodeUrlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayNativeQrCodeUrlResponse::IsInitialized() const {
  return true;
}

void WechatPayNativeQrCodeUrlResponse::InternalSwap(WechatPayNativeQrCodeUrlResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, lhs_arena,
                                       &other->_impl_.url_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_trade_no_, lhs_arena,
                                       &other->_impl_.out_trade_no_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayNativeQrCodeUrlResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[3]);
}
// ===================================================================

class WechatPayTradeResponse::_Internal {
 public:
};

WechatPayTradeResponse::WechatPayTradeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayTradeResponse)
}
WechatPayTradeResponse::WechatPayTradeResponse(const WechatPayTradeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayTradeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.trade_state_) {}

    , decltype(_impl_.trade_state_desc_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.trade_state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.trade_state_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trade_state().empty()) {
    _this->_impl_.trade_state_.Set(from._internal_trade_state(), _this->GetArenaForAllocation());
  }
  _impl_.trade_state_desc_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.trade_state_desc_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trade_state_desc().empty()) {
    _this->_impl_.trade_state_desc_.Set(from._internal_trade_state_desc(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayTradeResponse)
}

inline void WechatPayTradeResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.trade_state_) {}

    , decltype(_impl_.trade_state_desc_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.trade_state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.trade_state_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.trade_state_desc_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.trade_state_desc_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayTradeResponse::~WechatPayTradeResponse() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayTradeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayTradeResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.trade_state_.Destroy();
  _impl_.trade_state_desc_.Destroy();
}

void WechatPayTradeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayTradeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayTradeResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trade_state_.ClearToEmpty();
  _impl_.trade_state_desc_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayTradeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string trade_state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_trade_state();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayTradeResponse.trade_state"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string trade_state_desc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_trade_state_desc();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayTradeResponse.trade_state_desc"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayTradeResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayTradeResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string trade_state = 1;
  if (!this->_internal_trade_state().empty()) {
    const std::string& _s = this->_internal_trade_state();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayTradeResponse.trade_state");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string trade_state_desc = 2;
  if (!this->_internal_trade_state_desc().empty()) {
    const std::string& _s = this->_internal_trade_state_desc();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayTradeResponse.trade_state_desc");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayTradeResponse)
  return target;
}

::size_t WechatPayTradeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayTradeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string trade_state = 1;
  if (!this->_internal_trade_state().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_trade_state());
  }

  // string trade_state_desc = 2;
  if (!this->_internal_trade_state_desc().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_trade_state_desc());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayTradeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayTradeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayTradeResponse::GetClassData() const { return &_class_data_; }


void WechatPayTradeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayTradeResponse*>(&to_msg);
  auto& from = static_cast<const WechatPayTradeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayTradeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trade_state().empty()) {
    _this->_internal_set_trade_state(from._internal_trade_state());
  }
  if (!from._internal_trade_state_desc().empty()) {
    _this->_internal_set_trade_state_desc(from._internal_trade_state_desc());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayTradeResponse::CopyFrom(const WechatPayTradeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayTradeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayTradeResponse::IsInitialized() const {
  return true;
}

void WechatPayTradeResponse::InternalSwap(WechatPayTradeResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trade_state_, lhs_arena,
                                       &other->_impl_.trade_state_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trade_state_desc_, lhs_arena,
                                       &other->_impl_.trade_state_desc_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayTradeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[4]);
}
// ===================================================================

class WechatPayQueryOrderByIdRequest::_Internal {
 public:
};

WechatPayQueryOrderByIdRequest::WechatPayQueryOrderByIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayQueryOrderByIdRequest)
}
WechatPayQueryOrderByIdRequest::WechatPayQueryOrderByIdRequest(const WechatPayQueryOrderByIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayQueryOrderByIdRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.transaction_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.transaction_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.transaction_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_transaction_id().empty()) {
    _this->_impl_.transaction_id_.Set(from._internal_transaction_id(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayQueryOrderByIdRequest)
}

inline void WechatPayQueryOrderByIdRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.transaction_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.transaction_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.transaction_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayQueryOrderByIdRequest::~WechatPayQueryOrderByIdRequest() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayQueryOrderByIdRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayQueryOrderByIdRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.transaction_id_.Destroy();
}

void WechatPayQueryOrderByIdRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayQueryOrderByIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayQueryOrderByIdRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.transaction_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayQueryOrderByIdRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string transaction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_transaction_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayQueryOrderByIdRequest.transaction_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayQueryOrderByIdRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayQueryOrderByIdRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string transaction_id = 1;
  if (!this->_internal_transaction_id().empty()) {
    const std::string& _s = this->_internal_transaction_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayQueryOrderByIdRequest.transaction_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayQueryOrderByIdRequest)
  return target;
}

::size_t WechatPayQueryOrderByIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayQueryOrderByIdRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transaction_id = 1;
  if (!this->_internal_transaction_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_transaction_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayQueryOrderByIdRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayQueryOrderByIdRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayQueryOrderByIdRequest::GetClassData() const { return &_class_data_; }


void WechatPayQueryOrderByIdRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayQueryOrderByIdRequest*>(&to_msg);
  auto& from = static_cast<const WechatPayQueryOrderByIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayQueryOrderByIdRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_transaction_id().empty()) {
    _this->_internal_set_transaction_id(from._internal_transaction_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayQueryOrderByIdRequest::CopyFrom(const WechatPayQueryOrderByIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayQueryOrderByIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayQueryOrderByIdRequest::IsInitialized() const {
  return true;
}

void WechatPayQueryOrderByIdRequest::InternalSwap(WechatPayQueryOrderByIdRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transaction_id_, lhs_arena,
                                       &other->_impl_.transaction_id_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayQueryOrderByIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[5]);
}
// ===================================================================

class WechatPayQueryOrderByOutTradeNoRequest::_Internal {
 public:
};

WechatPayQueryOrderByOutTradeNoRequest::WechatPayQueryOrderByOutTradeNoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest)
}
WechatPayQueryOrderByOutTradeNoRequest::WechatPayQueryOrderByOutTradeNoRequest(const WechatPayQueryOrderByOutTradeNoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayQueryOrderByOutTradeNoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.out_trade_no_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.out_trade_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_trade_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_out_trade_no().empty()) {
    _this->_impl_.out_trade_no_.Set(from._internal_out_trade_no(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest)
}

inline void WechatPayQueryOrderByOutTradeNoRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.out_trade_no_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.out_trade_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_trade_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayQueryOrderByOutTradeNoRequest::~WechatPayQueryOrderByOutTradeNoRequest() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayQueryOrderByOutTradeNoRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.out_trade_no_.Destroy();
}

void WechatPayQueryOrderByOutTradeNoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayQueryOrderByOutTradeNoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.out_trade_no_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayQueryOrderByOutTradeNoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string out_trade_no = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_out_trade_no();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest.out_trade_no"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayQueryOrderByOutTradeNoRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string out_trade_no = 1;
  if (!this->_internal_out_trade_no().empty()) {
    const std::string& _s = this->_internal_out_trade_no();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest.out_trade_no");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest)
  return target;
}

::size_t WechatPayQueryOrderByOutTradeNoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string out_trade_no = 1;
  if (!this->_internal_out_trade_no().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_out_trade_no());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayQueryOrderByOutTradeNoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayQueryOrderByOutTradeNoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayQueryOrderByOutTradeNoRequest::GetClassData() const { return &_class_data_; }


void WechatPayQueryOrderByOutTradeNoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayQueryOrderByOutTradeNoRequest*>(&to_msg);
  auto& from = static_cast<const WechatPayQueryOrderByOutTradeNoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_out_trade_no().empty()) {
    _this->_internal_set_out_trade_no(from._internal_out_trade_no());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayQueryOrderByOutTradeNoRequest::CopyFrom(const WechatPayQueryOrderByOutTradeNoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayQueryOrderByOutTradeNoRequest::IsInitialized() const {
  return true;
}

void WechatPayQueryOrderByOutTradeNoRequest::InternalSwap(WechatPayQueryOrderByOutTradeNoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_trade_no_, lhs_arena,
                                       &other->_impl_.out_trade_no_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayQueryOrderByOutTradeNoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[6]);
}
// ===================================================================

class WechatPayJsapiPrepayIdResponse::_Internal {
 public:
};

WechatPayJsapiPrepayIdResponse::WechatPayJsapiPrepayIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayJsapiPrepayIdResponse)
}
WechatPayJsapiPrepayIdResponse::WechatPayJsapiPrepayIdResponse(const WechatPayJsapiPrepayIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayJsapiPrepayIdResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.app_id_) {}

    , decltype(_impl_.time_stamp_) {}

    , decltype(_impl_.nonce_str_) {}

    , decltype(_impl_.package_) {}

    , decltype(_impl_.sign_type_) {}

    , decltype(_impl_.pay_sign_) {}

    , decltype(_impl_.out_trade_no_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    _this->_impl_.app_id_.Set(from._internal_app_id(), _this->GetArenaForAllocation());
  }
  _impl_.time_stamp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.time_stamp_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_time_stamp().empty()) {
    _this->_impl_.time_stamp_.Set(from._internal_time_stamp(), _this->GetArenaForAllocation());
  }
  _impl_.nonce_str_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nonce_str_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nonce_str().empty()) {
    _this->_impl_.nonce_str_.Set(from._internal_nonce_str(), _this->GetArenaForAllocation());
  }
  _impl_.package_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.package_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_package().empty()) {
    _this->_impl_.package_.Set(from._internal_package(), _this->GetArenaForAllocation());
  }
  _impl_.sign_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sign_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sign_type().empty()) {
    _this->_impl_.sign_type_.Set(from._internal_sign_type(), _this->GetArenaForAllocation());
  }
  _impl_.pay_sign_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.pay_sign_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pay_sign().empty()) {
    _this->_impl_.pay_sign_.Set(from._internal_pay_sign(), _this->GetArenaForAllocation());
  }
  _impl_.out_trade_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_trade_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_out_trade_no().empty()) {
    _this->_impl_.out_trade_no_.Set(from._internal_out_trade_no(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayJsapiPrepayIdResponse)
}

inline void WechatPayJsapiPrepayIdResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.app_id_) {}

    , decltype(_impl_.time_stamp_) {}

    , decltype(_impl_.nonce_str_) {}

    , decltype(_impl_.package_) {}

    , decltype(_impl_.sign_type_) {}

    , decltype(_impl_.pay_sign_) {}

    , decltype(_impl_.out_trade_no_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.time_stamp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.time_stamp_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nonce_str_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nonce_str_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.package_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.package_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.sign_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sign_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.pay_sign_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.pay_sign_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.out_trade_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_trade_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayJsapiPrepayIdResponse::~WechatPayJsapiPrepayIdResponse() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayJsapiPrepayIdResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayJsapiPrepayIdResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.app_id_.Destroy();
  _impl_.time_stamp_.Destroy();
  _impl_.nonce_str_.Destroy();
  _impl_.package_.Destroy();
  _impl_.sign_type_.Destroy();
  _impl_.pay_sign_.Destroy();
  _impl_.out_trade_no_.Destroy();
}

void WechatPayJsapiPrepayIdResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayJsapiPrepayIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayJsapiPrepayIdResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.app_id_.ClearToEmpty();
  _impl_.time_stamp_.ClearToEmpty();
  _impl_.nonce_str_.ClearToEmpty();
  _impl_.package_.ClearToEmpty();
  _impl_.sign_type_.ClearToEmpty();
  _impl_.pay_sign_.ClearToEmpty();
  _impl_.out_trade_no_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayJsapiPrepayIdResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_app_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayJsapiPrepayIdResponse.app_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string time_stamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_time_stamp();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayJsapiPrepayIdResponse.time_stamp"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string nonce_str = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_nonce_str();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayJsapiPrepayIdResponse.nonce_str"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string package = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_package();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayJsapiPrepayIdResponse.package"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string sign_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_sign_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayJsapiPrepayIdResponse.sign_type"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string pay_sign = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_pay_sign();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayJsapiPrepayIdResponse.pay_sign"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string out_trade_no = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_out_trade_no();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayJsapiPrepayIdResponse.out_trade_no"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayJsapiPrepayIdResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayJsapiPrepayIdResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayJsapiPrepayIdResponse.app_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string time_stamp = 2;
  if (!this->_internal_time_stamp().empty()) {
    const std::string& _s = this->_internal_time_stamp();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayJsapiPrepayIdResponse.time_stamp");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string nonce_str = 3;
  if (!this->_internal_nonce_str().empty()) {
    const std::string& _s = this->_internal_nonce_str();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayJsapiPrepayIdResponse.nonce_str");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string package = 4;
  if (!this->_internal_package().empty()) {
    const std::string& _s = this->_internal_package();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayJsapiPrepayIdResponse.package");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string sign_type = 5;
  if (!this->_internal_sign_type().empty()) {
    const std::string& _s = this->_internal_sign_type();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayJsapiPrepayIdResponse.sign_type");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string pay_sign = 6;
  if (!this->_internal_pay_sign().empty()) {
    const std::string& _s = this->_internal_pay_sign();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayJsapiPrepayIdResponse.pay_sign");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string out_trade_no = 11;
  if (!this->_internal_out_trade_no().empty()) {
    const std::string& _s = this->_internal_out_trade_no();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayJsapiPrepayIdResponse.out_trade_no");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayJsapiPrepayIdResponse)
  return target;
}

::size_t WechatPayJsapiPrepayIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayJsapiPrepayIdResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // string time_stamp = 2;
  if (!this->_internal_time_stamp().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_time_stamp());
  }

  // string nonce_str = 3;
  if (!this->_internal_nonce_str().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_nonce_str());
  }

  // string package = 4;
  if (!this->_internal_package().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_package());
  }

  // string sign_type = 5;
  if (!this->_internal_sign_type().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_sign_type());
  }

  // string pay_sign = 6;
  if (!this->_internal_pay_sign().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_pay_sign());
  }

  // string out_trade_no = 11;
  if (!this->_internal_out_trade_no().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_out_trade_no());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayJsapiPrepayIdResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayJsapiPrepayIdResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayJsapiPrepayIdResponse::GetClassData() const { return &_class_data_; }


void WechatPayJsapiPrepayIdResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayJsapiPrepayIdResponse*>(&to_msg);
  auto& from = static_cast<const WechatPayJsapiPrepayIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayJsapiPrepayIdResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_time_stamp().empty()) {
    _this->_internal_set_time_stamp(from._internal_time_stamp());
  }
  if (!from._internal_nonce_str().empty()) {
    _this->_internal_set_nonce_str(from._internal_nonce_str());
  }
  if (!from._internal_package().empty()) {
    _this->_internal_set_package(from._internal_package());
  }
  if (!from._internal_sign_type().empty()) {
    _this->_internal_set_sign_type(from._internal_sign_type());
  }
  if (!from._internal_pay_sign().empty()) {
    _this->_internal_set_pay_sign(from._internal_pay_sign());
  }
  if (!from._internal_out_trade_no().empty()) {
    _this->_internal_set_out_trade_no(from._internal_out_trade_no());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayJsapiPrepayIdResponse::CopyFrom(const WechatPayJsapiPrepayIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayJsapiPrepayIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayJsapiPrepayIdResponse::IsInitialized() const {
  return true;
}

void WechatPayJsapiPrepayIdResponse::InternalSwap(WechatPayJsapiPrepayIdResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, lhs_arena,
                                       &other->_impl_.app_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.time_stamp_, lhs_arena,
                                       &other->_impl_.time_stamp_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nonce_str_, lhs_arena,
                                       &other->_impl_.nonce_str_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.package_, lhs_arena,
                                       &other->_impl_.package_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sign_type_, lhs_arena,
                                       &other->_impl_.sign_type_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pay_sign_, lhs_arena,
                                       &other->_impl_.pay_sign_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_trade_no_, lhs_arena,
                                       &other->_impl_.out_trade_no_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayJsapiPrepayIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[7]);
}
// ===================================================================

class WechatPayBillDate::_Internal {
 public:
};

WechatPayBillDate::WechatPayBillDate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayBillDate)
}
WechatPayBillDate::WechatPayBillDate(const WechatPayBillDate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayBillDate)
}

inline void WechatPayBillDate::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.year_) { 0 }

    , decltype(_impl_.month_) { 0 }

    , decltype(_impl_.day_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

WechatPayBillDate::~WechatPayBillDate() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayBillDate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayBillDate::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void WechatPayBillDate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayBillDate::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayBillDate)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.year_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.day_) -
      reinterpret_cast<char*>(&_impl_.year_)) + sizeof(_impl_.day_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayBillDate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 year = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.year_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 month = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.month_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 day = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.day_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayBillDate::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayBillDate)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 year = 1;
  if (this->_internal_year() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1, this->_internal_year(), target);
  }

  // int32 month = 2;
  if (this->_internal_month() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        2, this->_internal_month(), target);
  }

  // int32 day = 3;
  if (this->_internal_day() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        3, this->_internal_day(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayBillDate)
  return target;
}

::size_t WechatPayBillDate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayBillDate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 year = 1;
  if (this->_internal_year() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_year());
  }

  // int32 month = 2;
  if (this->_internal_month() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_month());
  }

  // int32 day = 3;
  if (this->_internal_day() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_day());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayBillDate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayBillDate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayBillDate::GetClassData() const { return &_class_data_; }


void WechatPayBillDate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayBillDate*>(&to_msg);
  auto& from = static_cast<const WechatPayBillDate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayBillDate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_year() != 0) {
    _this->_internal_set_year(from._internal_year());
  }
  if (from._internal_month() != 0) {
    _this->_internal_set_month(from._internal_month());
  }
  if (from._internal_day() != 0) {
    _this->_internal_set_day(from._internal_day());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayBillDate::CopyFrom(const WechatPayBillDate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayBillDate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayBillDate::IsInitialized() const {
  return true;
}

void WechatPayBillDate::InternalSwap(WechatPayBillDate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WechatPayBillDate, _impl_.day_)
      + sizeof(WechatPayBillDate::_impl_.day_)
      - PROTOBUF_FIELD_OFFSET(WechatPayBillDate, _impl_.year_)>(
          reinterpret_cast<char*>(&_impl_.year_),
          reinterpret_cast<char*>(&other->_impl_.year_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayBillDate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[8]);
}
// ===================================================================

class WechatPayBillResponse::_Internal {
 public:
};

WechatPayBillResponse::WechatPayBillResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayBillResponse)
}
WechatPayBillResponse::WechatPayBillResponse(const WechatPayBillResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayBillResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.content_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.content_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayBillResponse)
}

inline void WechatPayBillResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.content_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.content_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayBillResponse::~WechatPayBillResponse() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayBillResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayBillResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.content_.Destroy();
}

void WechatPayBillResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayBillResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayBillResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayBillResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes content = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayBillResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayBillResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes content = 1;
  if (!this->_internal_content().empty()) {
    const std::string& _s = this->_internal_content();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayBillResponse)
  return target;
}

::size_t WechatPayBillResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayBillResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes content = 1;
  if (!this->_internal_content().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_content());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayBillResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayBillResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayBillResponse::GetClassData() const { return &_class_data_; }


void WechatPayBillResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayBillResponse*>(&to_msg);
  auto& from = static_cast<const WechatPayBillResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayBillResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayBillResponse::CopyFrom(const WechatPayBillResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayBillResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayBillResponse::IsInitialized() const {
  return true;
}

void WechatPayBillResponse::InternalSwap(WechatPayBillResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, lhs_arena,
                                       &other->_impl_.content_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayBillResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[9]);
}
// ===================================================================

class WechatPayTradeBillRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<WechatPayTradeBillRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WechatPayTradeBillRequest, _impl_._has_bits_);
  static const ::palm::musa::v1::WechatPayBillDate& bill_date(const WechatPayTradeBillRequest* msg);
  static void set_has_bill_date(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::musa::v1::WechatPayBillDate&
WechatPayTradeBillRequest::_Internal::bill_date(const WechatPayTradeBillRequest* msg) {
  return *msg->_impl_.bill_date_;
}
WechatPayTradeBillRequest::WechatPayTradeBillRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayTradeBillRequest)
}
WechatPayTradeBillRequest::WechatPayTradeBillRequest(const WechatPayTradeBillRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayTradeBillRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.bill_date_){nullptr}
    , decltype(_impl_.bill_type_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.bill_date_ = new ::palm::musa::v1::WechatPayBillDate(*from._impl_.bill_date_);
  }
  _this->_impl_.bill_type_ = from._impl_.bill_type_;
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayTradeBillRequest)
}

inline void WechatPayTradeBillRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.bill_date_){nullptr}
    , decltype(_impl_.bill_type_) { 0 }

  };
}

WechatPayTradeBillRequest::~WechatPayTradeBillRequest() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayTradeBillRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayTradeBillRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.bill_date_;
}

void WechatPayTradeBillRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayTradeBillRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayTradeBillRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.bill_date_ != nullptr);
    _impl_.bill_date_->Clear();
  }
  _impl_.bill_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayTradeBillRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .palm.musa.v1.WechatPayBillDate bill_date = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bill_date(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .palm.musa.v1.WechatPayTradeBillRequest.BillType bill_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_bill_type(static_cast<::palm::musa::v1::WechatPayTradeBillRequest_BillType>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayTradeBillRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayTradeBillRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.musa.v1.WechatPayBillDate bill_date = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::bill_date(this),
        _Internal::bill_date(this).GetCachedSize(), target, stream);
  }

  // .palm.musa.v1.WechatPayTradeBillRequest.BillType bill_type = 2;
  if (this->_internal_bill_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_bill_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayTradeBillRequest)
  return target;
}

::size_t WechatPayTradeBillRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayTradeBillRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .palm.musa.v1.WechatPayBillDate bill_date = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.bill_date_);
  }

  // .palm.musa.v1.WechatPayTradeBillRequest.BillType bill_type = 2;
  if (this->_internal_bill_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_bill_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayTradeBillRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayTradeBillRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayTradeBillRequest::GetClassData() const { return &_class_data_; }


void WechatPayTradeBillRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayTradeBillRequest*>(&to_msg);
  auto& from = static_cast<const WechatPayTradeBillRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayTradeBillRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_bill_date()->::palm::musa::v1::WechatPayBillDate::MergeFrom(
        from._internal_bill_date());
  }
  if (from._internal_bill_type() != 0) {
    _this->_internal_set_bill_type(from._internal_bill_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayTradeBillRequest::CopyFrom(const WechatPayTradeBillRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayTradeBillRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayTradeBillRequest::IsInitialized() const {
  return true;
}

void WechatPayTradeBillRequest::InternalSwap(WechatPayTradeBillRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WechatPayTradeBillRequest, _impl_.bill_type_)
      + sizeof(WechatPayTradeBillRequest::_impl_.bill_type_)
      - PROTOBUF_FIELD_OFFSET(WechatPayTradeBillRequest, _impl_.bill_date_)>(
          reinterpret_cast<char*>(&_impl_.bill_date_),
          reinterpret_cast<char*>(&other->_impl_.bill_date_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayTradeBillRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[10]);
}
// ===================================================================

class WechatPayFundFlowBillRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<WechatPayFundFlowBillRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WechatPayFundFlowBillRequest, _impl_._has_bits_);
  static const ::palm::musa::v1::WechatPayBillDate& bill_date(const WechatPayFundFlowBillRequest* msg);
  static void set_has_bill_date(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::musa::v1::WechatPayBillDate&
WechatPayFundFlowBillRequest::_Internal::bill_date(const WechatPayFundFlowBillRequest* msg) {
  return *msg->_impl_.bill_date_;
}
WechatPayFundFlowBillRequest::WechatPayFundFlowBillRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayFundFlowBillRequest)
}
WechatPayFundFlowBillRequest::WechatPayFundFlowBillRequest(const WechatPayFundFlowBillRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayFundFlowBillRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.bill_date_){nullptr}
    , decltype(_impl_.account_type_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.bill_date_ = new ::palm::musa::v1::WechatPayBillDate(*from._impl_.bill_date_);
  }
  _this->_impl_.account_type_ = from._impl_.account_type_;
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayFundFlowBillRequest)
}

inline void WechatPayFundFlowBillRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.bill_date_){nullptr}
    , decltype(_impl_.account_type_) { 0 }

  };
}

WechatPayFundFlowBillRequest::~WechatPayFundFlowBillRequest() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayFundFlowBillRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayFundFlowBillRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.bill_date_;
}

void WechatPayFundFlowBillRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayFundFlowBillRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayFundFlowBillRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.bill_date_ != nullptr);
    _impl_.bill_date_->Clear();
  }
  _impl_.account_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayFundFlowBillRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .palm.musa.v1.WechatPayBillDate bill_date = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bill_date(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .palm.musa.v1.WechatPayFundFlowBillRequest.AccountType account_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_account_type(static_cast<::palm::musa::v1::WechatPayFundFlowBillRequest_AccountType>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayFundFlowBillRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayFundFlowBillRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.musa.v1.WechatPayBillDate bill_date = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::bill_date(this),
        _Internal::bill_date(this).GetCachedSize(), target, stream);
  }

  // .palm.musa.v1.WechatPayFundFlowBillRequest.AccountType account_type = 2;
  if (this->_internal_account_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_account_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayFundFlowBillRequest)
  return target;
}

::size_t WechatPayFundFlowBillRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayFundFlowBillRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .palm.musa.v1.WechatPayBillDate bill_date = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.bill_date_);
  }

  // .palm.musa.v1.WechatPayFundFlowBillRequest.AccountType account_type = 2;
  if (this->_internal_account_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_account_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayFundFlowBillRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayFundFlowBillRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayFundFlowBillRequest::GetClassData() const { return &_class_data_; }


void WechatPayFundFlowBillRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayFundFlowBillRequest*>(&to_msg);
  auto& from = static_cast<const WechatPayFundFlowBillRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayFundFlowBillRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_bill_date()->::palm::musa::v1::WechatPayBillDate::MergeFrom(
        from._internal_bill_date());
  }
  if (from._internal_account_type() != 0) {
    _this->_internal_set_account_type(from._internal_account_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayFundFlowBillRequest::CopyFrom(const WechatPayFundFlowBillRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayFundFlowBillRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayFundFlowBillRequest::IsInitialized() const {
  return true;
}

void WechatPayFundFlowBillRequest::InternalSwap(WechatPayFundFlowBillRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WechatPayFundFlowBillRequest, _impl_.account_type_)
      + sizeof(WechatPayFundFlowBillRequest::_impl_.account_type_)
      - PROTOBUF_FIELD_OFFSET(WechatPayFundFlowBillRequest, _impl_.bill_date_)>(
          reinterpret_cast<char*>(&_impl_.bill_date_),
          reinterpret_cast<char*>(&other->_impl_.bill_date_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayFundFlowBillRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[11]);
}
// ===================================================================

class WechatPayCreateRefundRequest_Amount::_Internal {
 public:
};

WechatPayCreateRefundRequest_Amount::WechatPayCreateRefundRequest_Amount(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayCreateRefundRequest.Amount)
}
WechatPayCreateRefundRequest_Amount::WechatPayCreateRefundRequest_Amount(const WechatPayCreateRefundRequest_Amount& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayCreateRefundRequest.Amount)
}

inline void WechatPayCreateRefundRequest_Amount::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.total_) { 0 }

    , decltype(_impl_.refund_) { 0 }

    , decltype(_impl_.currency_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

WechatPayCreateRefundRequest_Amount::~WechatPayCreateRefundRequest_Amount() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayCreateRefundRequest.Amount)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayCreateRefundRequest_Amount::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void WechatPayCreateRefundRequest_Amount::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayCreateRefundRequest_Amount::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayCreateRefundRequest.Amount)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.total_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.currency_) -
      reinterpret_cast<char*>(&_impl_.total_)) + sizeof(_impl_.currency_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayCreateRefundRequest_Amount::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 total = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.total_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 refund = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.refund_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .palm.musa.v1.WechatPayCurrency currency = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_currency(static_cast<::palm::musa::v1::WechatPayCurrency>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayCreateRefundRequest_Amount::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayCreateRefundRequest.Amount)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 total = 1;
  if (this->_internal_total() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1, this->_internal_total(), target);
  }

  // int32 refund = 2;
  if (this->_internal_refund() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        2, this->_internal_refund(), target);
  }

  // .palm.musa.v1.WechatPayCurrency currency = 3;
  if (this->_internal_currency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_currency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayCreateRefundRequest.Amount)
  return target;
}

::size_t WechatPayCreateRefundRequest_Amount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayCreateRefundRequest.Amount)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 total = 1;
  if (this->_internal_total() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total());
  }

  // int32 refund = 2;
  if (this->_internal_refund() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_refund());
  }

  // .palm.musa.v1.WechatPayCurrency currency = 3;
  if (this->_internal_currency() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_currency());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayCreateRefundRequest_Amount::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayCreateRefundRequest_Amount::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayCreateRefundRequest_Amount::GetClassData() const { return &_class_data_; }


void WechatPayCreateRefundRequest_Amount::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayCreateRefundRequest_Amount*>(&to_msg);
  auto& from = static_cast<const WechatPayCreateRefundRequest_Amount&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayCreateRefundRequest.Amount)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_total() != 0) {
    _this->_internal_set_total(from._internal_total());
  }
  if (from._internal_refund() != 0) {
    _this->_internal_set_refund(from._internal_refund());
  }
  if (from._internal_currency() != 0) {
    _this->_internal_set_currency(from._internal_currency());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayCreateRefundRequest_Amount::CopyFrom(const WechatPayCreateRefundRequest_Amount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayCreateRefundRequest.Amount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayCreateRefundRequest_Amount::IsInitialized() const {
  return true;
}

void WechatPayCreateRefundRequest_Amount::InternalSwap(WechatPayCreateRefundRequest_Amount* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WechatPayCreateRefundRequest_Amount, _impl_.currency_)
      + sizeof(WechatPayCreateRefundRequest_Amount::_impl_.currency_)
      - PROTOBUF_FIELD_OFFSET(WechatPayCreateRefundRequest_Amount, _impl_.total_)>(
          reinterpret_cast<char*>(&_impl_.total_),
          reinterpret_cast<char*>(&other->_impl_.total_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayCreateRefundRequest_Amount::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[12]);
}
// ===================================================================

class WechatPayCreateRefundRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<WechatPayCreateRefundRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WechatPayCreateRefundRequest, _impl_._has_bits_);
  static const ::palm::musa::v1::WechatPayCreateRefundRequest_Amount& amount(const WechatPayCreateRefundRequest* msg);
  static void set_has_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::musa::v1::WechatPayCreateRefundRequest_Amount&
WechatPayCreateRefundRequest::_Internal::amount(const WechatPayCreateRefundRequest* msg) {
  return *msg->_impl_.amount_;
}
WechatPayCreateRefundRequest::WechatPayCreateRefundRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayCreateRefundRequest)
}
WechatPayCreateRefundRequest::WechatPayCreateRefundRequest(const WechatPayCreateRefundRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayCreateRefundRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.out_trade_no_) {}

    , decltype(_impl_.reason_) {}

    , decltype(_impl_.notify_host_) {}

    , decltype(_impl_.amount_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.out_trade_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_trade_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_out_trade_no().empty()) {
    _this->_impl_.out_trade_no_.Set(from._internal_out_trade_no(), _this->GetArenaForAllocation());
  }
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.reason_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reason().empty()) {
    _this->_impl_.reason_.Set(from._internal_reason(), _this->GetArenaForAllocation());
  }
  _impl_.notify_host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.notify_host_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_notify_host().empty()) {
    _this->_impl_.notify_host_.Set(from._internal_notify_host(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.amount_ = new ::palm::musa::v1::WechatPayCreateRefundRequest_Amount(*from._impl_.amount_);
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayCreateRefundRequest)
}

inline void WechatPayCreateRefundRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.out_trade_no_) {}

    , decltype(_impl_.reason_) {}

    , decltype(_impl_.notify_host_) {}

    , decltype(_impl_.amount_){nullptr}
  };
  _impl_.out_trade_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_trade_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.reason_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.notify_host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.notify_host_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayCreateRefundRequest::~WechatPayCreateRefundRequest() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayCreateRefundRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayCreateRefundRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.out_trade_no_.Destroy();
  _impl_.reason_.Destroy();
  _impl_.notify_host_.Destroy();
  if (this != internal_default_instance()) delete _impl_.amount_;
}

void WechatPayCreateRefundRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayCreateRefundRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayCreateRefundRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.out_trade_no_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  _impl_.notify_host_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.amount_ != nullptr);
    _impl_.amount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayCreateRefundRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string out_trade_no = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_out_trade_no();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayCreateRefundRequest.out_trade_no"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string reason = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_reason();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayCreateRefundRequest.reason"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .palm.musa.v1.WechatPayCreateRefundRequest.Amount amount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string notify_host = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_notify_host();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayCreateRefundRequest.notify_host"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayCreateRefundRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayCreateRefundRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string out_trade_no = 1;
  if (!this->_internal_out_trade_no().empty()) {
    const std::string& _s = this->_internal_out_trade_no();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayCreateRefundRequest.out_trade_no");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string reason = 2;
  if (!this->_internal_reason().empty()) {
    const std::string& _s = this->_internal_reason();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayCreateRefundRequest.reason");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.musa.v1.WechatPayCreateRefundRequest.Amount amount = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  // string notify_host = 11;
  if (!this->_internal_notify_host().empty()) {
    const std::string& _s = this->_internal_notify_host();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayCreateRefundRequest.notify_host");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayCreateRefundRequest)
  return target;
}

::size_t WechatPayCreateRefundRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayCreateRefundRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string out_trade_no = 1;
  if (!this->_internal_out_trade_no().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_out_trade_no());
  }

  // string reason = 2;
  if (!this->_internal_reason().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_reason());
  }

  // string notify_host = 11;
  if (!this->_internal_notify_host().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_notify_host());
  }

  // .palm.musa.v1.WechatPayCreateRefundRequest.Amount amount = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayCreateRefundRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayCreateRefundRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayCreateRefundRequest::GetClassData() const { return &_class_data_; }


void WechatPayCreateRefundRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayCreateRefundRequest*>(&to_msg);
  auto& from = static_cast<const WechatPayCreateRefundRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayCreateRefundRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_out_trade_no().empty()) {
    _this->_internal_set_out_trade_no(from._internal_out_trade_no());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (!from._internal_notify_host().empty()) {
    _this->_internal_set_notify_host(from._internal_notify_host());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_amount()->::palm::musa::v1::WechatPayCreateRefundRequest_Amount::MergeFrom(
        from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayCreateRefundRequest::CopyFrom(const WechatPayCreateRefundRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayCreateRefundRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayCreateRefundRequest::IsInitialized() const {
  return true;
}

void WechatPayCreateRefundRequest::InternalSwap(WechatPayCreateRefundRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_trade_no_, lhs_arena,
                                       &other->_impl_.out_trade_no_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, lhs_arena,
                                       &other->_impl_.reason_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.notify_host_, lhs_arena,
                                       &other->_impl_.notify_host_, rhs_arena);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayCreateRefundRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[13]);
}
// ===================================================================

class WechatPayQueryRefundRequest::_Internal {
 public:
};

WechatPayQueryRefundRequest::WechatPayQueryRefundRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayQueryRefundRequest)
}
WechatPayQueryRefundRequest::WechatPayQueryRefundRequest(const WechatPayQueryRefundRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayQueryRefundRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.out_refund_no_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.out_refund_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_refund_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_out_refund_no().empty()) {
    _this->_impl_.out_refund_no_.Set(from._internal_out_refund_no(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayQueryRefundRequest)
}

inline void WechatPayQueryRefundRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.out_refund_no_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.out_refund_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_refund_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayQueryRefundRequest::~WechatPayQueryRefundRequest() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayQueryRefundRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayQueryRefundRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.out_refund_no_.Destroy();
}

void WechatPayQueryRefundRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayQueryRefundRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayQueryRefundRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.out_refund_no_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayQueryRefundRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string out_refund_no = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_out_refund_no();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayQueryRefundRequest.out_refund_no"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayQueryRefundRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayQueryRefundRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string out_refund_no = 1;
  if (!this->_internal_out_refund_no().empty()) {
    const std::string& _s = this->_internal_out_refund_no();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayQueryRefundRequest.out_refund_no");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayQueryRefundRequest)
  return target;
}

::size_t WechatPayQueryRefundRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayQueryRefundRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string out_refund_no = 1;
  if (!this->_internal_out_refund_no().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_out_refund_no());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayQueryRefundRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayQueryRefundRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayQueryRefundRequest::GetClassData() const { return &_class_data_; }


void WechatPayQueryRefundRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayQueryRefundRequest*>(&to_msg);
  auto& from = static_cast<const WechatPayQueryRefundRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayQueryRefundRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_out_refund_no().empty()) {
    _this->_internal_set_out_refund_no(from._internal_out_refund_no());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayQueryRefundRequest::CopyFrom(const WechatPayQueryRefundRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayQueryRefundRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayQueryRefundRequest::IsInitialized() const {
  return true;
}

void WechatPayQueryRefundRequest::InternalSwap(WechatPayQueryRefundRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_refund_no_, lhs_arena,
                                       &other->_impl_.out_refund_no_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayQueryRefundRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[14]);
}
// ===================================================================

class WechatPayRefundResponse::_Internal {
 public:
};

WechatPayRefundResponse::WechatPayRefundResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayRefundResponse)
}
WechatPayRefundResponse::WechatPayRefundResponse(const WechatPayRefundResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayRefundResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.out_refund_no_) {}

    , decltype(_impl_.channel_) {}

    , decltype(_impl_.status_) {}

    , decltype(_impl_.user_received_account_) {}

    , decltype(_impl_.create_time_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.out_refund_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_refund_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_out_refund_no().empty()) {
    _this->_impl_.out_refund_no_.Set(from._internal_out_refund_no(), _this->GetArenaForAllocation());
  }
  _impl_.channel_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.channel_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_channel().empty()) {
    _this->_impl_.channel_.Set(from._internal_channel(), _this->GetArenaForAllocation());
  }
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.status_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status().empty()) {
    _this->_impl_.status_.Set(from._internal_status(), _this->GetArenaForAllocation());
  }
  _impl_.user_received_account_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.user_received_account_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_received_account().empty()) {
    _this->_impl_.user_received_account_.Set(from._internal_user_received_account(), _this->GetArenaForAllocation());
  }
  _impl_.create_time_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.create_time_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_create_time().empty()) {
    _this->_impl_.create_time_.Set(from._internal_create_time(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayRefundResponse)
}

inline void WechatPayRefundResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.out_refund_no_) {}

    , decltype(_impl_.channel_) {}

    , decltype(_impl_.status_) {}

    , decltype(_impl_.user_received_account_) {}

    , decltype(_impl_.create_time_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.out_refund_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_refund_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.channel_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.channel_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.status_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_received_account_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.user_received_account_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.create_time_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.create_time_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayRefundResponse::~WechatPayRefundResponse() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayRefundResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayRefundResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.out_refund_no_.Destroy();
  _impl_.channel_.Destroy();
  _impl_.status_.Destroy();
  _impl_.user_received_account_.Destroy();
  _impl_.create_time_.Destroy();
}

void WechatPayRefundResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayRefundResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayRefundResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.out_refund_no_.ClearToEmpty();
  _impl_.channel_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  _impl_.user_received_account_.ClearToEmpty();
  _impl_.create_time_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayRefundResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string out_refund_no = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_out_refund_no();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayRefundResponse.out_refund_no"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string channel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_channel();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayRefundResponse.channel"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_status();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayRefundResponse.status"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string user_received_account = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_user_received_account();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayRefundResponse.user_received_account"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string create_time = 99;
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_create_time();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayRefundResponse.create_time"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayRefundResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayRefundResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string out_refund_no = 1;
  if (!this->_internal_out_refund_no().empty()) {
    const std::string& _s = this->_internal_out_refund_no();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayRefundResponse.out_refund_no");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string channel = 2;
  if (!this->_internal_channel().empty()) {
    const std::string& _s = this->_internal_channel();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayRefundResponse.channel");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string status = 3;
  if (!this->_internal_status().empty()) {
    const std::string& _s = this->_internal_status();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayRefundResponse.status");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string user_received_account = 4;
  if (!this->_internal_user_received_account().empty()) {
    const std::string& _s = this->_internal_user_received_account();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayRefundResponse.user_received_account");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string create_time = 99;
  if (!this->_internal_create_time().empty()) {
    const std::string& _s = this->_internal_create_time();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayRefundResponse.create_time");
    target = stream->WriteStringMaybeAliased(99, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayRefundResponse)
  return target;
}

::size_t WechatPayRefundResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayRefundResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string out_refund_no = 1;
  if (!this->_internal_out_refund_no().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_out_refund_no());
  }

  // string channel = 2;
  if (!this->_internal_channel().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_channel());
  }

  // string status = 3;
  if (!this->_internal_status().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_status());
  }

  // string user_received_account = 4;
  if (!this->_internal_user_received_account().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_user_received_account());
  }

  // string create_time = 99;
  if (!this->_internal_create_time().empty()) {
    total_size += 2 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_create_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayRefundResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayRefundResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayRefundResponse::GetClassData() const { return &_class_data_; }


void WechatPayRefundResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayRefundResponse*>(&to_msg);
  auto& from = static_cast<const WechatPayRefundResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayRefundResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_out_refund_no().empty()) {
    _this->_internal_set_out_refund_no(from._internal_out_refund_no());
  }
  if (!from._internal_channel().empty()) {
    _this->_internal_set_channel(from._internal_channel());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_user_received_account().empty()) {
    _this->_internal_set_user_received_account(from._internal_user_received_account());
  }
  if (!from._internal_create_time().empty()) {
    _this->_internal_set_create_time(from._internal_create_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayRefundResponse::CopyFrom(const WechatPayRefundResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayRefundResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayRefundResponse::IsInitialized() const {
  return true;
}

void WechatPayRefundResponse::InternalSwap(WechatPayRefundResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_refund_no_, lhs_arena,
                                       &other->_impl_.out_refund_no_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_, lhs_arena,
                                       &other->_impl_.channel_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, lhs_arena,
                                       &other->_impl_.status_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_received_account_, lhs_arena,
                                       &other->_impl_.user_received_account_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.create_time_, lhs_arena,
                                       &other->_impl_.create_time_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayRefundResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[15]);
}
// ===================================================================

class WechatPayCreateTransferRequest_Batch::_Internal {
 public:
};

WechatPayCreateTransferRequest_Batch::WechatPayCreateTransferRequest_Batch(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayCreateTransferRequest.Batch)
}
WechatPayCreateTransferRequest_Batch::WechatPayCreateTransferRequest_Batch(const WechatPayCreateTransferRequest_Batch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayCreateTransferRequest_Batch* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.remark_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.remark_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.remark_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_remark().empty()) {
    _this->_impl_.remark_.Set(from._internal_remark(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayCreateTransferRequest.Batch)
}

inline void WechatPayCreateTransferRequest_Batch::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.remark_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.remark_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.remark_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayCreateTransferRequest_Batch::~WechatPayCreateTransferRequest_Batch() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayCreateTransferRequest.Batch)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayCreateTransferRequest_Batch::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.remark_.Destroy();
}

void WechatPayCreateTransferRequest_Batch::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayCreateTransferRequest_Batch::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayCreateTransferRequest.Batch)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.remark_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayCreateTransferRequest_Batch::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayCreateTransferRequest.Batch.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string remark = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_remark();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayCreateTransferRequest.Batch.remark"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayCreateTransferRequest_Batch::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayCreateTransferRequest.Batch)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayCreateTransferRequest.Batch.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string remark = 2;
  if (!this->_internal_remark().empty()) {
    const std::string& _s = this->_internal_remark();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayCreateTransferRequest.Batch.remark");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayCreateTransferRequest.Batch)
  return target;
}

::size_t WechatPayCreateTransferRequest_Batch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayCreateTransferRequest.Batch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string remark = 2;
  if (!this->_internal_remark().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_remark());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayCreateTransferRequest_Batch::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayCreateTransferRequest_Batch::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayCreateTransferRequest_Batch::GetClassData() const { return &_class_data_; }


void WechatPayCreateTransferRequest_Batch::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayCreateTransferRequest_Batch*>(&to_msg);
  auto& from = static_cast<const WechatPayCreateTransferRequest_Batch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayCreateTransferRequest.Batch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_remark().empty()) {
    _this->_internal_set_remark(from._internal_remark());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayCreateTransferRequest_Batch::CopyFrom(const WechatPayCreateTransferRequest_Batch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayCreateTransferRequest.Batch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayCreateTransferRequest_Batch::IsInitialized() const {
  return true;
}

void WechatPayCreateTransferRequest_Batch::InternalSwap(WechatPayCreateTransferRequest_Batch* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remark_, lhs_arena,
                                       &other->_impl_.remark_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayCreateTransferRequest_Batch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[16]);
}
// ===================================================================

class WechatPayCreateTransferRequest_Detail::_Internal {
 public:
};

WechatPayCreateTransferRequest_Detail::WechatPayCreateTransferRequest_Detail(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayCreateTransferRequest.Detail)
}
WechatPayCreateTransferRequest_Detail::WechatPayCreateTransferRequest_Detail(const WechatPayCreateTransferRequest_Detail& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayCreateTransferRequest_Detail* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.open_id_) {}

    , decltype(_impl_.username_) {}

    , decltype(_impl_.remark_) {}

    , decltype(_impl_.amount_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.open_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_open_id().empty()) {
    _this->_impl_.open_id_.Set(from._internal_open_id(), _this->GetArenaForAllocation());
  }
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.username_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    _this->_impl_.username_.Set(from._internal_username(), _this->GetArenaForAllocation());
  }
  _impl_.remark_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.remark_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_remark().empty()) {
    _this->_impl_.remark_.Set(from._internal_remark(), _this->GetArenaForAllocation());
  }
  _this->_impl_.amount_ = from._impl_.amount_;
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayCreateTransferRequest.Detail)
}

inline void WechatPayCreateTransferRequest_Detail::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.open_id_) {}

    , decltype(_impl_.username_) {}

    , decltype(_impl_.remark_) {}

    , decltype(_impl_.amount_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.open_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.username_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.remark_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.remark_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayCreateTransferRequest_Detail::~WechatPayCreateTransferRequest_Detail() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayCreateTransferRequest.Detail)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayCreateTransferRequest_Detail::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.open_id_.Destroy();
  _impl_.username_.Destroy();
  _impl_.remark_.Destroy();
}

void WechatPayCreateTransferRequest_Detail::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayCreateTransferRequest_Detail::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayCreateTransferRequest.Detail)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.open_id_.ClearToEmpty();
  _impl_.username_.ClearToEmpty();
  _impl_.remark_.ClearToEmpty();
  _impl_.amount_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayCreateTransferRequest_Detail::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string open_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_open_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayCreateTransferRequest.Detail.open_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string username = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_username();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayCreateTransferRequest.Detail.username"));
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 amount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string remark = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_remark();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayCreateTransferRequest.Detail.remark"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayCreateTransferRequest_Detail::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayCreateTransferRequest.Detail)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string open_id = 1;
  if (!this->_internal_open_id().empty()) {
    const std::string& _s = this->_internal_open_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayCreateTransferRequest.Detail.open_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string username = 2;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayCreateTransferRequest.Detail.username");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int64 amount = 3;
  if (this->_internal_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        3, this->_internal_amount(), target);
  }

  // string remark = 4;
  if (!this->_internal_remark().empty()) {
    const std::string& _s = this->_internal_remark();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayCreateTransferRequest.Detail.remark");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayCreateTransferRequest.Detail)
  return target;
}

::size_t WechatPayCreateTransferRequest_Detail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayCreateTransferRequest.Detail)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string open_id = 1;
  if (!this->_internal_open_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_open_id());
  }

  // string username = 2;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  // string remark = 4;
  if (!this->_internal_remark().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_remark());
  }

  // int64 amount = 3;
  if (this->_internal_amount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_amount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayCreateTransferRequest_Detail::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayCreateTransferRequest_Detail::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayCreateTransferRequest_Detail::GetClassData() const { return &_class_data_; }


void WechatPayCreateTransferRequest_Detail::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayCreateTransferRequest_Detail*>(&to_msg);
  auto& from = static_cast<const WechatPayCreateTransferRequest_Detail&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayCreateTransferRequest.Detail)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_open_id().empty()) {
    _this->_internal_set_open_id(from._internal_open_id());
  }
  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_remark().empty()) {
    _this->_internal_set_remark(from._internal_remark());
  }
  if (from._internal_amount() != 0) {
    _this->_internal_set_amount(from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayCreateTransferRequest_Detail::CopyFrom(const WechatPayCreateTransferRequest_Detail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayCreateTransferRequest.Detail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayCreateTransferRequest_Detail::IsInitialized() const {
  return true;
}

void WechatPayCreateTransferRequest_Detail::InternalSwap(WechatPayCreateTransferRequest_Detail* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.open_id_, lhs_arena,
                                       &other->_impl_.open_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, lhs_arena,
                                       &other->_impl_.username_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remark_, lhs_arena,
                                       &other->_impl_.remark_, rhs_arena);

  swap(_impl_.amount_, other->_impl_.amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayCreateTransferRequest_Detail::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[17]);
}
// ===================================================================

class WechatPayCreateTransferRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<WechatPayCreateTransferRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WechatPayCreateTransferRequest, _impl_._has_bits_);
  static const ::palm::musa::v1::WechatPayCreateTransferRequest_Batch& batch(const WechatPayCreateTransferRequest* msg);
  static void set_has_batch(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::musa::v1::WechatPayCreateTransferRequest_Batch&
WechatPayCreateTransferRequest::_Internal::batch(const WechatPayCreateTransferRequest* msg) {
  return *msg->_impl_.batch_;
}
WechatPayCreateTransferRequest::WechatPayCreateTransferRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayCreateTransferRequest)
}
WechatPayCreateTransferRequest::WechatPayCreateTransferRequest(const WechatPayCreateTransferRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayCreateTransferRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.details_){from._impl_.details_}
    , decltype(_impl_.app_id_) {}

    , decltype(_impl_.scene_id_) {}

    , decltype(_impl_.batch_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    _this->_impl_.app_id_.Set(from._internal_app_id(), _this->GetArenaForAllocation());
  }
  _impl_.scene_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.scene_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_scene_id().empty()) {
    _this->_impl_.scene_id_.Set(from._internal_scene_id(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.batch_ = new ::palm::musa::v1::WechatPayCreateTransferRequest_Batch(*from._impl_.batch_);
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayCreateTransferRequest)
}

inline void WechatPayCreateTransferRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.details_){arena}
    , decltype(_impl_.app_id_) {}

    , decltype(_impl_.scene_id_) {}

    , decltype(_impl_.batch_){nullptr}
  };
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.scene_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.scene_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayCreateTransferRequest::~WechatPayCreateTransferRequest() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayCreateTransferRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayCreateTransferRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_details()->~RepeatedPtrField();
  _impl_.app_id_.Destroy();
  _impl_.scene_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.batch_;
}

void WechatPayCreateTransferRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayCreateTransferRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayCreateTransferRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_details()->Clear();
  _impl_.app_id_.ClearToEmpty();
  _impl_.scene_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.batch_ != nullptr);
    _impl_.batch_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayCreateTransferRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_app_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayCreateTransferRequest.app_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .palm.musa.v1.WechatPayCreateTransferRequest.Batch batch = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_batch(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .palm.musa.v1.WechatPayCreateTransferRequest.Detail details = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_details(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // string scene_id = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_scene_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayCreateTransferRequest.scene_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayCreateTransferRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayCreateTransferRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayCreateTransferRequest.app_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.musa.v1.WechatPayCreateTransferRequest.Batch batch = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::batch(this),
        _Internal::batch(this).GetCachedSize(), target, stream);
  }

  // repeated .palm.musa.v1.WechatPayCreateTransferRequest.Detail details = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_details_size()); i < n; i++) {
    const auto& repfield = this->_internal_details(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string scene_id = 9;
  if (!this->_internal_scene_id().empty()) {
    const std::string& _s = this->_internal_scene_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayCreateTransferRequest.scene_id");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayCreateTransferRequest)
  return target;
}

::size_t WechatPayCreateTransferRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayCreateTransferRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.musa.v1.WechatPayCreateTransferRequest.Detail details = 3;
  total_size += 1UL * this->_internal_details_size();
  for (const auto& msg : this->_internal_details()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // string scene_id = 9;
  if (!this->_internal_scene_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_scene_id());
  }

  // .palm.musa.v1.WechatPayCreateTransferRequest.Batch batch = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.batch_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayCreateTransferRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayCreateTransferRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayCreateTransferRequest::GetClassData() const { return &_class_data_; }


void WechatPayCreateTransferRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayCreateTransferRequest*>(&to_msg);
  auto& from = static_cast<const WechatPayCreateTransferRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayCreateTransferRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_details()->MergeFrom(from._internal_details());
  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_scene_id().empty()) {
    _this->_internal_set_scene_id(from._internal_scene_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_batch()->::palm::musa::v1::WechatPayCreateTransferRequest_Batch::MergeFrom(
        from._internal_batch());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayCreateTransferRequest::CopyFrom(const WechatPayCreateTransferRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayCreateTransferRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayCreateTransferRequest::IsInitialized() const {
  return true;
}

void WechatPayCreateTransferRequest::InternalSwap(WechatPayCreateTransferRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_details()->InternalSwap(other->_internal_mutable_details());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, lhs_arena,
                                       &other->_impl_.app_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.scene_id_, lhs_arena,
                                       &other->_impl_.scene_id_, rhs_arena);
  swap(_impl_.batch_, other->_impl_.batch_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayCreateTransferRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[18]);
}
// ===================================================================

class WechatPayCreateTransferResponse_Detail::_Internal {
 public:
};

WechatPayCreateTransferResponse_Detail::WechatPayCreateTransferResponse_Detail(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayCreateTransferResponse.Detail)
}
WechatPayCreateTransferResponse_Detail::WechatPayCreateTransferResponse_Detail(const WechatPayCreateTransferResponse_Detail& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayCreateTransferResponse_Detail* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.open_id_) {}

    , decltype(_impl_.out_detail_no_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.open_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_open_id().empty()) {
    _this->_impl_.open_id_.Set(from._internal_open_id(), _this->GetArenaForAllocation());
  }
  _impl_.out_detail_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_detail_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_out_detail_no().empty()) {
    _this->_impl_.out_detail_no_.Set(from._internal_out_detail_no(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayCreateTransferResponse.Detail)
}

inline void WechatPayCreateTransferResponse_Detail::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.open_id_) {}

    , decltype(_impl_.out_detail_no_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.open_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.out_detail_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_detail_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayCreateTransferResponse_Detail::~WechatPayCreateTransferResponse_Detail() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayCreateTransferResponse.Detail)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayCreateTransferResponse_Detail::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.open_id_.Destroy();
  _impl_.out_detail_no_.Destroy();
}

void WechatPayCreateTransferResponse_Detail::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayCreateTransferResponse_Detail::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayCreateTransferResponse.Detail)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.open_id_.ClearToEmpty();
  _impl_.out_detail_no_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayCreateTransferResponse_Detail::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string open_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_open_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayCreateTransferResponse.Detail.open_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string out_detail_no = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_out_detail_no();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayCreateTransferResponse.Detail.out_detail_no"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayCreateTransferResponse_Detail::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayCreateTransferResponse.Detail)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string open_id = 1;
  if (!this->_internal_open_id().empty()) {
    const std::string& _s = this->_internal_open_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayCreateTransferResponse.Detail.open_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string out_detail_no = 2;
  if (!this->_internal_out_detail_no().empty()) {
    const std::string& _s = this->_internal_out_detail_no();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayCreateTransferResponse.Detail.out_detail_no");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayCreateTransferResponse.Detail)
  return target;
}

::size_t WechatPayCreateTransferResponse_Detail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayCreateTransferResponse.Detail)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string open_id = 1;
  if (!this->_internal_open_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_open_id());
  }

  // string out_detail_no = 2;
  if (!this->_internal_out_detail_no().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_out_detail_no());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayCreateTransferResponse_Detail::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayCreateTransferResponse_Detail::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayCreateTransferResponse_Detail::GetClassData() const { return &_class_data_; }


void WechatPayCreateTransferResponse_Detail::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayCreateTransferResponse_Detail*>(&to_msg);
  auto& from = static_cast<const WechatPayCreateTransferResponse_Detail&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayCreateTransferResponse.Detail)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_open_id().empty()) {
    _this->_internal_set_open_id(from._internal_open_id());
  }
  if (!from._internal_out_detail_no().empty()) {
    _this->_internal_set_out_detail_no(from._internal_out_detail_no());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayCreateTransferResponse_Detail::CopyFrom(const WechatPayCreateTransferResponse_Detail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayCreateTransferResponse.Detail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayCreateTransferResponse_Detail::IsInitialized() const {
  return true;
}

void WechatPayCreateTransferResponse_Detail::InternalSwap(WechatPayCreateTransferResponse_Detail* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.open_id_, lhs_arena,
                                       &other->_impl_.open_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_detail_no_, lhs_arena,
                                       &other->_impl_.out_detail_no_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayCreateTransferResponse_Detail::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[19]);
}
// ===================================================================

class WechatPayCreateTransferResponse::_Internal {
 public:
};

WechatPayCreateTransferResponse::WechatPayCreateTransferResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayCreateTransferResponse)
}
WechatPayCreateTransferResponse::WechatPayCreateTransferResponse(const WechatPayCreateTransferResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayCreateTransferResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.details_){from._impl_.details_}
    , decltype(_impl_.out_batch_no_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.out_batch_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_batch_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_out_batch_no().empty()) {
    _this->_impl_.out_batch_no_.Set(from._internal_out_batch_no(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayCreateTransferResponse)
}

inline void WechatPayCreateTransferResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.details_){arena}
    , decltype(_impl_.out_batch_no_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.out_batch_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_batch_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayCreateTransferResponse::~WechatPayCreateTransferResponse() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayCreateTransferResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayCreateTransferResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_details()->~RepeatedPtrField();
  _impl_.out_batch_no_.Destroy();
}

void WechatPayCreateTransferResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayCreateTransferResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayCreateTransferResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_details()->Clear();
  _impl_.out_batch_no_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayCreateTransferResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string out_batch_no = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_out_batch_no();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayCreateTransferResponse.out_batch_no"));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .palm.musa.v1.WechatPayCreateTransferResponse.Detail details = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_details(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayCreateTransferResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayCreateTransferResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string out_batch_no = 1;
  if (!this->_internal_out_batch_no().empty()) {
    const std::string& _s = this->_internal_out_batch_no();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayCreateTransferResponse.out_batch_no");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .palm.musa.v1.WechatPayCreateTransferResponse.Detail details = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_details_size()); i < n; i++) {
    const auto& repfield = this->_internal_details(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayCreateTransferResponse)
  return target;
}

::size_t WechatPayCreateTransferResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayCreateTransferResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.musa.v1.WechatPayCreateTransferResponse.Detail details = 2;
  total_size += 1UL * this->_internal_details_size();
  for (const auto& msg : this->_internal_details()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string out_batch_no = 1;
  if (!this->_internal_out_batch_no().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_out_batch_no());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayCreateTransferResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayCreateTransferResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayCreateTransferResponse::GetClassData() const { return &_class_data_; }


void WechatPayCreateTransferResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayCreateTransferResponse*>(&to_msg);
  auto& from = static_cast<const WechatPayCreateTransferResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayCreateTransferResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_details()->MergeFrom(from._internal_details());
  if (!from._internal_out_batch_no().empty()) {
    _this->_internal_set_out_batch_no(from._internal_out_batch_no());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayCreateTransferResponse::CopyFrom(const WechatPayCreateTransferResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayCreateTransferResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayCreateTransferResponse::IsInitialized() const {
  return true;
}

void WechatPayCreateTransferResponse::InternalSwap(WechatPayCreateTransferResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_details()->InternalSwap(other->_internal_mutable_details());
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_batch_no_, lhs_arena,
                                       &other->_impl_.out_batch_no_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayCreateTransferResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[20]);
}
// ===================================================================

class WechatPayQueryTransferRequest::_Internal {
 public:
};

WechatPayQueryTransferRequest::WechatPayQueryTransferRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayQueryTransferRequest)
}
WechatPayQueryTransferRequest::WechatPayQueryTransferRequest(const WechatPayQueryTransferRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayQueryTransferRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.out_batch_no_) {}

    , decltype(_impl_.offset_) {}

    , decltype(_impl_.limit_) {}

    , decltype(_impl_.detail_status_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.out_batch_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_batch_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_out_batch_no().empty()) {
    _this->_impl_.out_batch_no_.Set(from._internal_out_batch_no(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.offset_, &from._impl_.offset_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.detail_status_) -
    reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.detail_status_));
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayQueryTransferRequest)
}

inline void WechatPayQueryTransferRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.out_batch_no_) {}

    , decltype(_impl_.offset_) { 0 }

    , decltype(_impl_.limit_) { 0 }

    , decltype(_impl_.detail_status_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.out_batch_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_batch_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayQueryTransferRequest::~WechatPayQueryTransferRequest() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayQueryTransferRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayQueryTransferRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.out_batch_no_.Destroy();
}

void WechatPayQueryTransferRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayQueryTransferRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayQueryTransferRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.out_batch_no_.ClearToEmpty();
  ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.detail_status_) -
      reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.detail_status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayQueryTransferRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string out_batch_no = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_out_batch_no();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayQueryTransferRequest.out_batch_no"));
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 offset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 limit = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .palm.musa.v1.WechatPayQueryTransferRequest.DetailStatus detail_status = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 72)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_detail_status(static_cast<::palm::musa::v1::WechatPayQueryTransferRequest_DetailStatus>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayQueryTransferRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayQueryTransferRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string out_batch_no = 1;
  if (!this->_internal_out_batch_no().empty()) {
    const std::string& _s = this->_internal_out_batch_no();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayQueryTransferRequest.out_batch_no");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 offset = 2;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        2, this->_internal_offset(), target);
  }

  // int32 limit = 3;
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        3, this->_internal_limit(), target);
  }

  // .palm.musa.v1.WechatPayQueryTransferRequest.DetailStatus detail_status = 9;
  if (this->_internal_detail_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        9, this->_internal_detail_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayQueryTransferRequest)
  return target;
}

::size_t WechatPayQueryTransferRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayQueryTransferRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string out_batch_no = 1;
  if (!this->_internal_out_batch_no().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_out_batch_no());
  }

  // int32 offset = 2;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_offset());
  }

  // int32 limit = 3;
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_limit());
  }

  // .palm.musa.v1.WechatPayQueryTransferRequest.DetailStatus detail_status = 9;
  if (this->_internal_detail_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_detail_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayQueryTransferRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayQueryTransferRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayQueryTransferRequest::GetClassData() const { return &_class_data_; }


void WechatPayQueryTransferRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayQueryTransferRequest*>(&to_msg);
  auto& from = static_cast<const WechatPayQueryTransferRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayQueryTransferRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_out_batch_no().empty()) {
    _this->_internal_set_out_batch_no(from._internal_out_batch_no());
  }
  if (from._internal_offset() != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  if (from._internal_limit() != 0) {
    _this->_internal_set_limit(from._internal_limit());
  }
  if (from._internal_detail_status() != 0) {
    _this->_internal_set_detail_status(from._internal_detail_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayQueryTransferRequest::CopyFrom(const WechatPayQueryTransferRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayQueryTransferRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayQueryTransferRequest::IsInitialized() const {
  return true;
}

void WechatPayQueryTransferRequest::InternalSwap(WechatPayQueryTransferRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_batch_no_, lhs_arena,
                                       &other->_impl_.out_batch_no_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WechatPayQueryTransferRequest, _impl_.detail_status_)
      + sizeof(WechatPayQueryTransferRequest::_impl_.detail_status_)
      - PROTOBUF_FIELD_OFFSET(WechatPayQueryTransferRequest, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayQueryTransferRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[21]);
}
// ===================================================================

class WechatPayQueryTransferResponse_Detail::_Internal {
 public:
};

WechatPayQueryTransferResponse_Detail::WechatPayQueryTransferResponse_Detail(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayQueryTransferResponse.Detail)
}
WechatPayQueryTransferResponse_Detail::WechatPayQueryTransferResponse_Detail(const WechatPayQueryTransferResponse_Detail& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayQueryTransferResponse_Detail* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.out_detail_no_) {}

    , decltype(_impl_.status_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.out_detail_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_detail_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_out_detail_no().empty()) {
    _this->_impl_.out_detail_no_.Set(from._internal_out_detail_no(), _this->GetArenaForAllocation());
  }
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.status_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status().empty()) {
    _this->_impl_.status_.Set(from._internal_status(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayQueryTransferResponse.Detail)
}

inline void WechatPayQueryTransferResponse_Detail::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.out_detail_no_) {}

    , decltype(_impl_.status_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.out_detail_no_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.out_detail_no_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.status_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayQueryTransferResponse_Detail::~WechatPayQueryTransferResponse_Detail() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayQueryTransferResponse.Detail)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayQueryTransferResponse_Detail::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.out_detail_no_.Destroy();
  _impl_.status_.Destroy();
}

void WechatPayQueryTransferResponse_Detail::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayQueryTransferResponse_Detail::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayQueryTransferResponse.Detail)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.out_detail_no_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayQueryTransferResponse_Detail::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string out_detail_no = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_out_detail_no();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayQueryTransferResponse.Detail.out_detail_no"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayQueryTransferResponse.Detail.status"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayQueryTransferResponse_Detail::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayQueryTransferResponse.Detail)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string out_detail_no = 1;
  if (!this->_internal_out_detail_no().empty()) {
    const std::string& _s = this->_internal_out_detail_no();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayQueryTransferResponse.Detail.out_detail_no");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string status = 2;
  if (!this->_internal_status().empty()) {
    const std::string& _s = this->_internal_status();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayQueryTransferResponse.Detail.status");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayQueryTransferResponse.Detail)
  return target;
}

::size_t WechatPayQueryTransferResponse_Detail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayQueryTransferResponse.Detail)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string out_detail_no = 1;
  if (!this->_internal_out_detail_no().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_out_detail_no());
  }

  // string status = 2;
  if (!this->_internal_status().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayQueryTransferResponse_Detail::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayQueryTransferResponse_Detail::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayQueryTransferResponse_Detail::GetClassData() const { return &_class_data_; }


void WechatPayQueryTransferResponse_Detail::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayQueryTransferResponse_Detail*>(&to_msg);
  auto& from = static_cast<const WechatPayQueryTransferResponse_Detail&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayQueryTransferResponse.Detail)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_out_detail_no().empty()) {
    _this->_internal_set_out_detail_no(from._internal_out_detail_no());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayQueryTransferResponse_Detail::CopyFrom(const WechatPayQueryTransferResponse_Detail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayQueryTransferResponse.Detail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayQueryTransferResponse_Detail::IsInitialized() const {
  return true;
}

void WechatPayQueryTransferResponse_Detail::InternalSwap(WechatPayQueryTransferResponse_Detail* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_detail_no_, lhs_arena,
                                       &other->_impl_.out_detail_no_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, lhs_arena,
                                       &other->_impl_.status_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayQueryTransferResponse_Detail::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[22]);
}
// ===================================================================

class WechatPayQueryTransferResponse_Batch::_Internal {
 public:
  using HasBits = decltype(std::declval<WechatPayQueryTransferResponse_Batch>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WechatPayQueryTransferResponse_Batch, _impl_._has_bits_);
  static void set_has_close_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

WechatPayQueryTransferResponse_Batch::WechatPayQueryTransferResponse_Batch(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayQueryTransferResponse.Batch)
}
WechatPayQueryTransferResponse_Batch::WechatPayQueryTransferResponse_Batch(const WechatPayQueryTransferResponse_Batch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayQueryTransferResponse_Batch* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.status_) {}

    , decltype(_impl_.type_) {}

    , decltype(_impl_.close_reason_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.status_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status().empty()) {
    _this->_impl_.status_.Set(from._internal_status(), _this->GetArenaForAllocation());
  }
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), _this->GetArenaForAllocation());
  }
  _impl_.close_reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.close_reason_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.close_reason_.Set(from._internal_close_reason(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayQueryTransferResponse.Batch)
}

inline void WechatPayQueryTransferResponse_Batch::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.status_) {}

    , decltype(_impl_.type_) {}

    , decltype(_impl_.close_reason_) {}

  };
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.status_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.close_reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.close_reason_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatPayQueryTransferResponse_Batch::~WechatPayQueryTransferResponse_Batch() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayQueryTransferResponse.Batch)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayQueryTransferResponse_Batch::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.status_.Destroy();
  _impl_.type_.Destroy();
  _impl_.close_reason_.Destroy();
}

void WechatPayQueryTransferResponse_Batch::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayQueryTransferResponse_Batch::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayQueryTransferResponse.Batch)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.close_reason_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayQueryTransferResponse_Batch::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayQueryTransferResponse.Batch.status"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayQueryTransferResponse.Batch.type"));
        } else {
          goto handle_unusual;
        }
        continue;
      // optional string close_reason = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_close_reason();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.musa.v1.WechatPayQueryTransferResponse.Batch.close_reason"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayQueryTransferResponse_Batch::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayQueryTransferResponse.Batch)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (!this->_internal_status().empty()) {
    const std::string& _s = this->_internal_status();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayQueryTransferResponse.Batch.status");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayQueryTransferResponse.Batch.type");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string close_reason = 9;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_close_reason();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "palm.musa.v1.WechatPayQueryTransferResponse.Batch.close_reason");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayQueryTransferResponse.Batch)
  return target;
}

::size_t WechatPayQueryTransferResponse_Batch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayQueryTransferResponse.Batch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1;
  if (!this->_internal_status().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_status());
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  // optional string close_reason = 9;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_close_reason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayQueryTransferResponse_Batch::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayQueryTransferResponse_Batch::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayQueryTransferResponse_Batch::GetClassData() const { return &_class_data_; }


void WechatPayQueryTransferResponse_Batch::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayQueryTransferResponse_Batch*>(&to_msg);
  auto& from = static_cast<const WechatPayQueryTransferResponse_Batch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayQueryTransferResponse.Batch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_close_reason(from._internal_close_reason());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayQueryTransferResponse_Batch::CopyFrom(const WechatPayQueryTransferResponse_Batch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayQueryTransferResponse.Batch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayQueryTransferResponse_Batch::IsInitialized() const {
  return true;
}

void WechatPayQueryTransferResponse_Batch::InternalSwap(WechatPayQueryTransferResponse_Batch* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, lhs_arena,
                                       &other->_impl_.status_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, lhs_arena,
                                       &other->_impl_.type_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.close_reason_, lhs_arena,
                                       &other->_impl_.close_reason_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayQueryTransferResponse_Batch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[23]);
}
// ===================================================================

class WechatPayQueryTransferResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<WechatPayQueryTransferResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WechatPayQueryTransferResponse, _impl_._has_bits_);
  static const ::palm::musa::v1::WechatPayQueryTransferResponse_Batch& batch(const WechatPayQueryTransferResponse* msg);
  static void set_has_batch(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::musa::v1::WechatPayQueryTransferResponse_Batch&
WechatPayQueryTransferResponse::_Internal::batch(const WechatPayQueryTransferResponse* msg) {
  return *msg->_impl_.batch_;
}
WechatPayQueryTransferResponse::WechatPayQueryTransferResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.musa.v1.WechatPayQueryTransferResponse)
}
WechatPayQueryTransferResponse::WechatPayQueryTransferResponse(const WechatPayQueryTransferResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WechatPayQueryTransferResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.details_){from._impl_.details_}
    , decltype(_impl_.batch_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.batch_ = new ::palm::musa::v1::WechatPayQueryTransferResponse_Batch(*from._impl_.batch_);
  }
  // @@protoc_insertion_point(copy_constructor:palm.musa.v1.WechatPayQueryTransferResponse)
}

inline void WechatPayQueryTransferResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.details_){arena}
    , decltype(_impl_.batch_){nullptr}
  };
}

WechatPayQueryTransferResponse::~WechatPayQueryTransferResponse() {
  // @@protoc_insertion_point(destructor:palm.musa.v1.WechatPayQueryTransferResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WechatPayQueryTransferResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_details()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.batch_;
}

void WechatPayQueryTransferResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WechatPayQueryTransferResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.musa.v1.WechatPayQueryTransferResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_details()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.batch_ != nullptr);
    _impl_.batch_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatPayQueryTransferResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .palm.musa.v1.WechatPayQueryTransferResponse.Batch batch = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_batch(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .palm.musa.v1.WechatPayQueryTransferResponse.Detail details = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_details(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* WechatPayQueryTransferResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.musa.v1.WechatPayQueryTransferResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.musa.v1.WechatPayQueryTransferResponse.Batch batch = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::batch(this),
        _Internal::batch(this).GetCachedSize(), target, stream);
  }

  // repeated .palm.musa.v1.WechatPayQueryTransferResponse.Detail details = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_details_size()); i < n; i++) {
    const auto& repfield = this->_internal_details(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.musa.v1.WechatPayQueryTransferResponse)
  return target;
}

::size_t WechatPayQueryTransferResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.musa.v1.WechatPayQueryTransferResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.musa.v1.WechatPayQueryTransferResponse.Detail details = 9;
  total_size += 1UL * this->_internal_details_size();
  for (const auto& msg : this->_internal_details()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .palm.musa.v1.WechatPayQueryTransferResponse.Batch batch = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.batch_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatPayQueryTransferResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WechatPayQueryTransferResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatPayQueryTransferResponse::GetClassData() const { return &_class_data_; }


void WechatPayQueryTransferResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WechatPayQueryTransferResponse*>(&to_msg);
  auto& from = static_cast<const WechatPayQueryTransferResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.musa.v1.WechatPayQueryTransferResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_details()->MergeFrom(from._internal_details());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_batch()->::palm::musa::v1::WechatPayQueryTransferResponse_Batch::MergeFrom(
        from._internal_batch());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatPayQueryTransferResponse::CopyFrom(const WechatPayQueryTransferResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.musa.v1.WechatPayQueryTransferResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatPayQueryTransferResponse::IsInitialized() const {
  return true;
}

void WechatPayQueryTransferResponse::InternalSwap(WechatPayQueryTransferResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_details()->InternalSwap(other->_internal_mutable_details());
  swap(_impl_.batch_, other->_impl_.batch_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatPayQueryTransferResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_musa_2eproto_getter, &descriptor_table_musa_2eproto_once,
      file_level_metadata_musa_2eproto[24]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace musa
}  // namespace palm
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayPrepayRequest_Amount*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayPrepayRequest_Amount >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayPrepayRequest_Amount >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayPrepayRequest*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayPrepayRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayPrepayRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayCloseOrderRequest*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayCloseOrderRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayCloseOrderRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayNativeQrCodeUrlResponse*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayNativeQrCodeUrlResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayNativeQrCodeUrlResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayTradeResponse*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayTradeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayTradeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayQueryOrderByIdRequest*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayQueryOrderByIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayQueryOrderByIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayQueryOrderByOutTradeNoRequest*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayQueryOrderByOutTradeNoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayQueryOrderByOutTradeNoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayJsapiPrepayIdResponse*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayJsapiPrepayIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayJsapiPrepayIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayBillDate*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayBillDate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayBillDate >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayBillResponse*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayBillResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayBillResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayTradeBillRequest*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayTradeBillRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayTradeBillRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayFundFlowBillRequest*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayFundFlowBillRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayFundFlowBillRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayCreateRefundRequest_Amount*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayCreateRefundRequest_Amount >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayCreateRefundRequest_Amount >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayCreateRefundRequest*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayCreateRefundRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayCreateRefundRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayQueryRefundRequest*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayQueryRefundRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayQueryRefundRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayRefundResponse*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayRefundResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayRefundResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayCreateTransferRequest_Batch*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayCreateTransferRequest_Batch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayCreateTransferRequest_Batch >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayCreateTransferRequest_Detail*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayCreateTransferRequest_Detail >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayCreateTransferRequest_Detail >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayCreateTransferRequest*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayCreateTransferRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayCreateTransferRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayCreateTransferResponse_Detail*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayCreateTransferResponse_Detail >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayCreateTransferResponse_Detail >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayCreateTransferResponse*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayCreateTransferResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayCreateTransferResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayQueryTransferRequest*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayQueryTransferRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayQueryTransferRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayQueryTransferResponse_Detail*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayQueryTransferResponse_Detail >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayQueryTransferResponse_Detail >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayQueryTransferResponse_Batch*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayQueryTransferResponse_Batch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayQueryTransferResponse_Batch >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::musa::v1::WechatPayQueryTransferResponse*
Arena::CreateMaybeMessage< ::palm::musa::v1::WechatPayQueryTransferResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::musa::v1::WechatPayQueryTransferResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
