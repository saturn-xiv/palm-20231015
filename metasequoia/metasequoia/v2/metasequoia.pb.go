// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: metasequoia.proto

package v2

import (
	v2 "github.com/saturn_xiv/palm/orchid/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MediaContent_Editor int32

const (
	MediaContent_TEXTAREA MediaContent_Editor = 0
	MediaContent_QUILL    MediaContent_Editor = 1
)

// Enum value maps for MediaContent_Editor.
var (
	MediaContent_Editor_name = map[int32]string{
		0: "TEXTAREA",
		1: "QUILL",
	}
	MediaContent_Editor_value = map[string]int32{
		"TEXTAREA": 0,
		"QUILL":    1,
	}
)

func (x MediaContent_Editor) Enum() *MediaContent_Editor {
	p := new(MediaContent_Editor)
	*p = x
	return p
}

func (x MediaContent_Editor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaContent_Editor) Descriptor() protoreflect.EnumDescriptor {
	return file_metasequoia_proto_enumTypes[0].Descriptor()
}

func (MediaContent_Editor) Type() protoreflect.EnumType {
	return &file_metasequoia_proto_enumTypes[0]
}

func (x MediaContent_Editor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaContent_Editor.Descriptor instead.
func (MediaContent_Editor) EnumDescriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{3, 0}
}

type MediaContent_Status int32

const (
	MediaContent_Published MediaContent_Status = 0
	MediaContent_Draft     MediaContent_Status = 1
	MediaContent_Pending   MediaContent_Status = 2
	MediaContent_Private   MediaContent_Status = 3
	MediaContent_Future    MediaContent_Status = 4
	MediaContent_Trash     MediaContent_Status = 99
)

// Enum value maps for MediaContent_Status.
var (
	MediaContent_Status_name = map[int32]string{
		0:  "Published",
		1:  "Draft",
		2:  "Pending",
		3:  "Private",
		4:  "Future",
		99: "Trash",
	}
	MediaContent_Status_value = map[string]int32{
		"Published": 0,
		"Draft":     1,
		"Pending":   2,
		"Private":   3,
		"Future":    4,
		"Trash":     99,
	}
)

func (x MediaContent_Status) Enum() *MediaContent_Status {
	p := new(MediaContent_Status)
	*p = x
	return p
}

func (x MediaContent_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaContent_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_metasequoia_proto_enumTypes[1].Descriptor()
}

func (MediaContent_Status) Type() protoreflect.EnumType {
	return &file_metasequoia_proto_enumTypes[1]
}

func (x MediaContent_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaContent_Status.Descriptor instead.
func (MediaContent_Status) EnumDescriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{3, 1}
}

type UserLogsResponse_Item_Level int32

const (
	UserLogsResponse_Item_DEBUG   UserLogsResponse_Item_Level = 0
	UserLogsResponse_Item_INFO    UserLogsResponse_Item_Level = 1
	UserLogsResponse_Item_WARNING UserLogsResponse_Item_Level = 2
	UserLogsResponse_Item_ERROR   UserLogsResponse_Item_Level = 3
)

// Enum value maps for UserLogsResponse_Item_Level.
var (
	UserLogsResponse_Item_Level_name = map[int32]string{
		0: "DEBUG",
		1: "INFO",
		2: "WARNING",
		3: "ERROR",
	}
	UserLogsResponse_Item_Level_value = map[string]int32{
		"DEBUG":   0,
		"INFO":    1,
		"WARNING": 2,
		"ERROR":   3,
	}
)

func (x UserLogsResponse_Item_Level) Enum() *UserLogsResponse_Item_Level {
	p := new(UserLogsResponse_Item_Level)
	*p = x
	return p
}

func (x UserLogsResponse_Item_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserLogsResponse_Item_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_metasequoia_proto_enumTypes[2].Descriptor()
}

func (UserLogsResponse_Item_Level) Type() protoreflect.EnumType {
	return &file_metasequoia_proto_enumTypes[2]
}

func (x UserLogsResponse_Item_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserLogsResponse_Item_Level.Descriptor instead.
func (UserLogsResponse_Item_Level) EnumDescriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{11, 0, 0}
}

type UserSignInResponse_By int32

const (
	UserSignInResponse_Nickname          UserSignInResponse_By = 0
	UserSignInResponse_Email             UserSignInResponse_By = 1
	UserSignInResponse_Phone             UserSignInResponse_By = 2
	UserSignInResponse_WechatOauth2      UserSignInResponse_By = 11
	UserSignInResponse_WechatMiniProgram UserSignInResponse_By = 12
	UserSignInResponse_Facebook          UserSignInResponse_By = 21
	UserSignInResponse_Google            UserSignInResponse_By = 22
)

// Enum value maps for UserSignInResponse_By.
var (
	UserSignInResponse_By_name = map[int32]string{
		0:  "Nickname",
		1:  "Email",
		2:  "Phone",
		11: "WechatOauth2",
		12: "WechatMiniProgram",
		21: "Facebook",
		22: "Google",
	}
	UserSignInResponse_By_value = map[string]int32{
		"Nickname":          0,
		"Email":             1,
		"Phone":             2,
		"WechatOauth2":      11,
		"WechatMiniProgram": 12,
		"Facebook":          21,
		"Google":            22,
	}
)

func (x UserSignInResponse_By) Enum() *UserSignInResponse_By {
	p := new(UserSignInResponse_By)
	*p = x
	return p
}

func (x UserSignInResponse_By) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserSignInResponse_By) Descriptor() protoreflect.EnumDescriptor {
	return file_metasequoia_proto_enumTypes[3].Descriptor()
}

func (UserSignInResponse_By) Type() protoreflect.EnumType {
	return &file_metasequoia_proto_enumTypes[3]
}

func (x UserSignInResponse_By) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserSignInResponse_By.Descriptor instead.
func (UserSignInResponse_By) EnumDescriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{17, 0}
}

// https://github.com/karastojko/mailio/blob/master/include/mailio/smtp.hpp#L229
type SmtpProfile_AuthMethod int32

const (
	SmtpProfile_None     SmtpProfile_AuthMethod = 0
	SmtpProfile_Login    SmtpProfile_AuthMethod = 1
	SmtpProfile_StartTls SmtpProfile_AuthMethod = 2
)

// Enum value maps for SmtpProfile_AuthMethod.
var (
	SmtpProfile_AuthMethod_name = map[int32]string{
		0: "None",
		1: "Login",
		2: "StartTls",
	}
	SmtpProfile_AuthMethod_value = map[string]int32{
		"None":     0,
		"Login":    1,
		"StartTls": 2,
	}
)

func (x SmtpProfile_AuthMethod) Enum() *SmtpProfile_AuthMethod {
	p := new(SmtpProfile_AuthMethod)
	*p = x
	return p
}

func (x SmtpProfile_AuthMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SmtpProfile_AuthMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_metasequoia_proto_enumTypes[4].Descriptor()
}

func (SmtpProfile_AuthMethod) Type() protoreflect.EnumType {
	return &file_metasequoia_proto_enumTypes[4]
}

func (x SmtpProfile_AuthMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SmtpProfile_AuthMethod.Descriptor instead.
func (SmtpProfile_AuthMethod) EnumDescriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{43, 0}
}

type NotificationIndexResponse_Item_Level int32

const (
	NotificationIndexResponse_Item_NOTE NotificationIndexResponse_Item_Level = 0
	NotificationIndexResponse_Item_INFO NotificationIndexResponse_Item_Level = 1
)

// Enum value maps for NotificationIndexResponse_Item_Level.
var (
	NotificationIndexResponse_Item_Level_name = map[int32]string{
		0: "NOTE",
		1: "INFO",
	}
	NotificationIndexResponse_Item_Level_value = map[string]int32{
		"NOTE": 0,
		"INFO": 1,
	}
)

func (x NotificationIndexResponse_Item_Level) Enum() *NotificationIndexResponse_Item_Level {
	p := new(NotificationIndexResponse_Item_Level)
	*p = x
	return p
}

func (x NotificationIndexResponse_Item_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationIndexResponse_Item_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_metasequoia_proto_enumTypes[5].Descriptor()
}

func (NotificationIndexResponse_Item_Level) Type() protoreflect.EnumType {
	return &file_metasequoia_proto_enumTypes[5]
}

func (x NotificationIndexResponse_Item_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationIndexResponse_Item_Level.Descriptor instead.
func (NotificationIndexResponse_Item_Level) EnumDescriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{65, 0, 0}
}

type IdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdRequest) Reset() {
	*x = IdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdRequest) ProtoMessage() {}

func (x *IdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdRequest.ProtoReflect.Descriptor instead.
func (*IdRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{0}
}

func (x *IdRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Pager struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Pager) Reset() {
	*x = Pager{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pager) ProtoMessage() {}

func (x *Pager) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pager.ProtoReflect.Descriptor instead.
func (*Pager) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{1}
}

func (x *Pager) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pager) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size        int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Total       int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	HasNext     bool  `protobuf:"varint,11,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
	HasPrevious bool  `protobuf:"varint,12,opt,name=has_previous,json=hasPrevious,proto3" json:"has_previous,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{2}
}

func (x *Pagination) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Pagination) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Pagination) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

func (x *Pagination) GetHasPrevious() bool {
	if x != nil {
		return x.HasPrevious
	}
	return false
}

type MediaContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Editor      MediaContent_Editor    `protobuf:"varint,1,opt,name=editor,proto3,enum=palm.metasequoia.v1.MediaContent_Editor" json:"editor,omitempty"`
	Body        string                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Status      MediaContent_Status    `protobuf:"varint,3,opt,name=status,proto3,enum=palm.metasequoia.v1.MediaContent_Status" json:"status,omitempty"`
	PublishedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=published_at,json=publishedAt,proto3,oneof" json:"published_at,omitempty"`
}

func (x *MediaContent) Reset() {
	*x = MediaContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaContent) ProtoMessage() {}

func (x *MediaContent) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaContent.ProtoReflect.Descriptor instead.
func (*MediaContent) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{3}
}

func (x *MediaContent) GetEditor() MediaContent_Editor {
	if x != nil {
		return x.Editor
	}
	return MediaContent_TEXTAREA
}

func (x *MediaContent) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *MediaContent) GetStatus() MediaContent_Status {
	if x != nil {
		return x.Status
	}
	return MediaContent_Published
}

func (x *MediaContent) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

type UserDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
	RealName string `protobuf:"bytes,2,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
}

func (x *UserDetail) Reset() {
	*x = UserDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetail) ProtoMessage() {}

func (x *UserDetail) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetail.ProtoReflect.Descriptor instead.
func (*UserDetail) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{4}
}

func (x *UserDetail) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserDetail) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

type Oauth2State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goto string  `protobuf:"bytes,1,opt,name=goto,proto3" json:"goto,omitempty"`
	Host string  `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	User *string `protobuf:"bytes,3,opt,name=user,proto3,oneof" json:"user,omitempty"`
	Id   string  `protobuf:"bytes,9,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Oauth2State) Reset() {
	*x = Oauth2State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Oauth2State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Oauth2State) ProtoMessage() {}

func (x *Oauth2State) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Oauth2State.ProtoReflect.Descriptor instead.
func (*Oauth2State) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{5}
}

func (x *Oauth2State) GetGoto() string {
	if x != nil {
		return x.Goto
	}
	return ""
}

func (x *Oauth2State) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Oauth2State) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *Oauth2State) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload map[string]string `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UserProfile) Reset() {
	*x = UserProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfile) ProtoMessage() {}

func (x *UserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfile.ProtoReflect.Descriptor instead.
func (*UserProfile) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{6}
}

func (x *UserProfile) GetPayload() map[string]string {
	if x != nil {
		return x.Payload
	}
	return nil
}

type UserIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*UserIndexResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *UserIndexResponse) Reset() {
	*x = UserIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIndexResponse) ProtoMessage() {}

func (x *UserIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIndexResponse.ProtoReflect.Descriptor instead.
func (*UserIndexResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{7}
}

func (x *UserIndexResponse) GetItems() []*UserIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type UserSetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UserSetPasswordRequest) Reset() {
	*x = UserSetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSetPasswordRequest) ProtoMessage() {}

func (x *UserSetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSetPasswordRequest.ProtoReflect.Descriptor instead.
func (*UserSetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{8}
}

func (x *UserSetPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UserChangePasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPassword      string `protobuf:"bytes,1,opt,name=current_password,json=currentPassword,proto3" json:"current_password,omitempty"`
	NewPassword          string `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	PasswordConfirmation string `protobuf:"bytes,3,opt,name=password_confirmation,json=passwordConfirmation,proto3" json:"password_confirmation,omitempty"`
}

func (x *UserChangePasswordRequest) Reset() {
	*x = UserChangePasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChangePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChangePasswordRequest) ProtoMessage() {}

func (x *UserChangePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChangePasswordRequest.ProtoReflect.Descriptor instead.
func (*UserChangePasswordRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{9}
}

func (x *UserChangePasswordRequest) GetCurrentPassword() string {
	if x != nil {
		return x.CurrentPassword
	}
	return ""
}

func (x *UserChangePasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *UserChangePasswordRequest) GetPasswordConfirmation() string {
	if x != nil {
		return x.PasswordConfirmation
	}
	return ""
}

type UserLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plugin *string                `protobuf:"bytes,1,opt,name=plugin,proto3,oneof" json:"plugin,omitempty"`
	From   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *UserLogsRequest) Reset() {
	*x = UserLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLogsRequest) ProtoMessage() {}

func (x *UserLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLogsRequest.ProtoReflect.Descriptor instead.
func (*UserLogsRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{10}
}

func (x *UserLogsRequest) GetPlugin() string {
	if x != nil && x.Plugin != nil {
		return *x.Plugin
	}
	return ""
}

func (x *UserLogsRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *UserLogsRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type UserLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*UserLogsResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *UserLogsResponse) Reset() {
	*x = UserLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLogsResponse) ProtoMessage() {}

func (x *UserLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLogsResponse.ProtoReflect.Descriptor instead.
func (*UserLogsResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{11}
}

func (x *UserLogsResponse) GetItems() []*UserLogsResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type UserResetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UserResetPasswordRequest) Reset() {
	*x = UserResetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResetPasswordRequest) ProtoMessage() {}

func (x *UserResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*UserResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{12}
}

func (x *UserResetPasswordRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserResetPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UserTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UserTokenRequest) Reset() {
	*x = UserTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTokenRequest) ProtoMessage() {}

func (x *UserTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTokenRequest.ProtoReflect.Descriptor instead.
func (*UserTokenRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{13}
}

func (x *UserTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UserQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to By:
	//
	//	*UserQueryRequest_Email
	//	*UserQueryRequest_Nickname
	//	*UserQueryRequest_Phone
	//	*UserQueryRequest_Uid
	By isUserQueryRequest_By `protobuf_oneof:"by"`
}

func (x *UserQueryRequest) Reset() {
	*x = UserQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserQueryRequest) ProtoMessage() {}

func (x *UserQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserQueryRequest.ProtoReflect.Descriptor instead.
func (*UserQueryRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{14}
}

func (m *UserQueryRequest) GetBy() isUserQueryRequest_By {
	if m != nil {
		return m.By
	}
	return nil
}

func (x *UserQueryRequest) GetEmail() string {
	if x, ok := x.GetBy().(*UserQueryRequest_Email); ok {
		return x.Email
	}
	return ""
}

func (x *UserQueryRequest) GetNickname() string {
	if x, ok := x.GetBy().(*UserQueryRequest_Nickname); ok {
		return x.Nickname
	}
	return ""
}

func (x *UserQueryRequest) GetPhone() string {
	if x, ok := x.GetBy().(*UserQueryRequest_Phone); ok {
		return x.Phone
	}
	return ""
}

func (x *UserQueryRequest) GetUid() string {
	if x, ok := x.GetBy().(*UserQueryRequest_Uid); ok {
		return x.Uid
	}
	return ""
}

type isUserQueryRequest_By interface {
	isUserQueryRequest_By()
}

type UserQueryRequest_Email struct {
	Email string `protobuf:"bytes,1,opt,name=email,proto3,oneof"`
}

type UserQueryRequest_Nickname struct {
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3,oneof"`
}

type UserQueryRequest_Phone struct {
	Phone string `protobuf:"bytes,3,opt,name=phone,proto3,oneof"`
}

type UserQueryRequest_Uid struct {
	Uid string `protobuf:"bytes,4,opt,name=uid,proto3,oneof"`
}

func (*UserQueryRequest_Email) isUserQueryRequest_By() {}

func (*UserQueryRequest_Nickname) isUserQueryRequest_By() {}

func (*UserQueryRequest_Phone) isUserQueryRequest_By() {}

func (*UserQueryRequest_Uid) isUserQueryRequest_By() {}

type UserSignUpByEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
	RealName string `protobuf:"bytes,2,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	Email    string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Locale   string `protobuf:"bytes,11,opt,name=locale,proto3" json:"locale,omitempty"`
	Timezone string `protobuf:"bytes,12,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Home     string `protobuf:"bytes,99,opt,name=home,proto3" json:"home,omitempty"`
}

func (x *UserSignUpByEmailRequest) Reset() {
	*x = UserSignUpByEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignUpByEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignUpByEmailRequest) ProtoMessage() {}

func (x *UserSignUpByEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignUpByEmailRequest.ProtoReflect.Descriptor instead.
func (*UserSignUpByEmailRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{15}
}

func (x *UserSignUpByEmailRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserSignUpByEmailRequest) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *UserSignUpByEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserSignUpByEmailRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserSignUpByEmailRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *UserSignUpByEmailRequest) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *UserSignUpByEmailRequest) GetHome() string {
	if x != nil {
		return x.Home
	}
	return ""
}

type UserSignInByPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to User:
	//
	//	*UserSignInByPasswordRequest_Email
	//	*UserSignInByPasswordRequest_Nickname
	//	*UserSignInByPasswordRequest_Phone
	User     isUserSignInByPasswordRequest_User `protobuf_oneof:"user"`
	Password string                             `protobuf:"bytes,11,opt,name=password,proto3" json:"password,omitempty"`
	Ttl      *durationpb.Duration               `protobuf:"bytes,19,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *UserSignInByPasswordRequest) Reset() {
	*x = UserSignInByPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignInByPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignInByPasswordRequest) ProtoMessage() {}

func (x *UserSignInByPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignInByPasswordRequest.ProtoReflect.Descriptor instead.
func (*UserSignInByPasswordRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{16}
}

func (m *UserSignInByPasswordRequest) GetUser() isUserSignInByPasswordRequest_User {
	if m != nil {
		return m.User
	}
	return nil
}

func (x *UserSignInByPasswordRequest) GetEmail() string {
	if x, ok := x.GetUser().(*UserSignInByPasswordRequest_Email); ok {
		return x.Email
	}
	return ""
}

func (x *UserSignInByPasswordRequest) GetNickname() string {
	if x, ok := x.GetUser().(*UserSignInByPasswordRequest_Nickname); ok {
		return x.Nickname
	}
	return ""
}

func (x *UserSignInByPasswordRequest) GetPhone() string {
	if x, ok := x.GetUser().(*UserSignInByPasswordRequest_Phone); ok {
		return x.Phone
	}
	return ""
}

func (x *UserSignInByPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserSignInByPasswordRequest) GetTtl() *durationpb.Duration {
	if x != nil {
		return x.Ttl
	}
	return nil
}

type isUserSignInByPasswordRequest_User interface {
	isUserSignInByPasswordRequest_User()
}

type UserSignInByPasswordRequest_Email struct {
	Email string `protobuf:"bytes,1,opt,name=email,proto3,oneof"`
}

type UserSignInByPasswordRequest_Nickname struct {
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3,oneof"`
}

type UserSignInByPasswordRequest_Phone struct {
	Phone string `protobuf:"bytes,3,opt,name=phone,proto3,oneof"`
}

func (*UserSignInByPasswordRequest_Email) isUserSignInByPasswordRequest_User() {}

func (*UserSignInByPasswordRequest_Nickname) isUserSignInByPasswordRequest_User() {}

func (*UserSignInByPasswordRequest_Phone) isUserSignInByPasswordRequest_User() {}

type UserSignInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RealName    string                `protobuf:"bytes,1,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	By          UserSignInResponse_By `protobuf:"varint,9,opt,name=by,proto3,enum=palm.metasequoia.v1.UserSignInResponse_By" json:"by,omitempty"`
	Token       string                `protobuf:"bytes,11,opt,name=token,proto3" json:"token,omitempty"`
	Roles       []*Role               `protobuf:"bytes,12,rep,name=roles,proto3" json:"roles,omitempty"`
	Permissions []*Permission         `protobuf:"bytes,13,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *UserSignInResponse) Reset() {
	*x = UserSignInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignInResponse) ProtoMessage() {}

func (x *UserSignInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignInResponse.ProtoReflect.Descriptor instead.
func (*UserSignInResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{17}
}

func (x *UserSignInResponse) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *UserSignInResponse) GetBy() UserSignInResponse_By {
	if x != nil {
		return x.By
	}
	return UserSignInResponse_Nickname
}

func (x *UserSignInResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserSignInResponse) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *UserSignInResponse) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type Permission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Subject:
	//
	//	*Permission_User
	//	*Permission_Role
	Subject isPermission_Subject `protobuf_oneof:"subject"`
	Object  *Resource            `protobuf:"bytes,11,opt,name=object,proto3" json:"object,omitempty"`
	Action  string               `protobuf:"bytes,12,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *Permission) Reset() {
	*x = Permission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{18}
}

func (m *Permission) GetSubject() isPermission_Subject {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (x *Permission) GetUser() int32 {
	if x, ok := x.GetSubject().(*Permission_User); ok {
		return x.User
	}
	return 0
}

func (x *Permission) GetRole() *Role {
	if x, ok := x.GetSubject().(*Permission_Role); ok {
		return x.Role
	}
	return nil
}

func (x *Permission) GetObject() *Resource {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *Permission) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type isPermission_Subject interface {
	isPermission_Subject()
}

type Permission_User struct {
	User int32 `protobuf:"varint,1,opt,name=user,proto3,oneof"`
}

type Permission_Role struct {
	Role *Role `protobuf:"bytes,2,opt,name=role,proto3,oneof"`
}

func (*Permission_User) isPermission_Subject() {}

func (*Permission_Role) isPermission_Subject() {}

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Id:
	//
	//	*Resource_S
	//	*Resource_I
	Id   isResource_Id `protobuf_oneof:"id"`
	Type string        `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{19}
}

func (m *Resource) GetId() isResource_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (x *Resource) GetS() string {
	if x, ok := x.GetId().(*Resource_S); ok {
		return x.S
	}
	return ""
}

func (x *Resource) GetI() int32 {
	if x, ok := x.GetId().(*Resource_I); ok {
		return x.I
	}
	return 0
}

func (x *Resource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type isResource_Id interface {
	isResource_Id()
}

type Resource_S struct {
	S string `protobuf:"bytes,1,opt,name=s,proto3,oneof"`
}

type Resource_I struct {
	I int32 `protobuf:"varint,2,opt,name=i,proto3,oneof"`
}

func (*Resource_S) isResource_Id() {}

func (*Resource_I) isResource_Id() {}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to By:
	//
	//	*Role_Administrator
	//	*Role_Root
	//	*Role_Member_
	By isRole_By `protobuf_oneof:"by"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{20}
}

func (m *Role) GetBy() isRole_By {
	if m != nil {
		return m.By
	}
	return nil
}

func (x *Role) GetAdministrator() *emptypb.Empty {
	if x, ok := x.GetBy().(*Role_Administrator); ok {
		return x.Administrator
	}
	return nil
}

func (x *Role) GetRoot() *emptypb.Empty {
	if x, ok := x.GetBy().(*Role_Root); ok {
		return x.Root
	}
	return nil
}

func (x *Role) GetMember() *Role_Member {
	if x, ok := x.GetBy().(*Role_Member_); ok {
		return x.Member
	}
	return nil
}

type isRole_By interface {
	isRole_By()
}

type Role_Administrator struct {
	Administrator *emptypb.Empty `protobuf:"bytes,1,opt,name=administrator,proto3,oneof"`
}

type Role_Root struct {
	Root *emptypb.Empty `protobuf:"bytes,2,opt,name=root,proto3,oneof"`
}

type Role_Member_ struct {
	Member *Role_Member `protobuf:"bytes,3,opt,name=member,proto3,oneof"`
}

func (*Role_Administrator) isRole_By() {}

func (*Role_Root) isRole_By() {}

func (*Role_Member_) isRole_By() {}

type RbacCanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User   int32     `protobuf:"varint,1,opt,name=user,proto3" json:"user,omitempty"`
	Object *Resource `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	Action string    `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *RbacCanRequest) Reset() {
	*x = RbacCanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacCanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacCanRequest) ProtoMessage() {}

func (x *RbacCanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacCanRequest.ProtoReflect.Descriptor instead.
func (*RbacCanRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{21}
}

func (x *RbacCanRequest) GetUser() int32 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *RbacCanRequest) GetObject() *Resource {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *RbacCanRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type RbacHasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User int32 `protobuf:"varint,1,opt,name=user,proto3" json:"user,omitempty"`
	Role *Role `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *RbacHasRequest) Reset() {
	*x = RbacHasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacHasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacHasRequest) ProtoMessage() {}

func (x *RbacHasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacHasRequest.ProtoReflect.Descriptor instead.
func (*RbacHasRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{22}
}

func (x *RbacHasRequest) GetUser() int32 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *RbacHasRequest) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type RbacPermissionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action   string    `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Resource *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *RbacPermissionItem) Reset() {
	*x = RbacPermissionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacPermissionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacPermissionItem) ProtoMessage() {}

func (x *RbacPermissionItem) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacPermissionItem.ProtoReflect.Descriptor instead.
func (*RbacPermissionItem) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{23}
}

func (x *RbacPermissionItem) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *RbacPermissionItem) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type RbacPermissionsForUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User        int32                 `protobuf:"varint,1,opt,name=user,proto3" json:"user,omitempty"`
	Permissions []*RbacPermissionItem `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *RbacPermissionsForUserRequest) Reset() {
	*x = RbacPermissionsForUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacPermissionsForUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacPermissionsForUserRequest) ProtoMessage() {}

func (x *RbacPermissionsForUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacPermissionsForUserRequest.ProtoReflect.Descriptor instead.
func (*RbacPermissionsForUserRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{24}
}

func (x *RbacPermissionsForUserRequest) GetUser() int32 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *RbacPermissionsForUserRequest) GetPermissions() []*RbacPermissionItem {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type RbacPermissionsForRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role        *Role                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Permissions []*RbacPermissionItem `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *RbacPermissionsForRoleRequest) Reset() {
	*x = RbacPermissionsForRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacPermissionsForRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacPermissionsForRoleRequest) ProtoMessage() {}

func (x *RbacPermissionsForRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacPermissionsForRoleRequest.ProtoReflect.Descriptor instead.
func (*RbacPermissionsForRoleRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{25}
}

func (x *RbacPermissionsForRoleRequest) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *RbacPermissionsForRoleRequest) GetPermissions() []*RbacPermissionItem {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type RbacRolesForUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User  int32   `protobuf:"varint,1,opt,name=user,proto3" json:"user,omitempty"`
	Roles []*Role `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *RbacRolesForUserRequest) Reset() {
	*x = RbacRolesForUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacRolesForUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacRolesForUserRequest) ProtoMessage() {}

func (x *RbacRolesForUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacRolesForUserRequest.ProtoReflect.Descriptor instead.
func (*RbacRolesForUserRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{26}
}

func (x *RbacRolesForUserRequest) GetUser() int32 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *RbacRolesForUserRequest) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

type RbacRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Role `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RbacRolesResponse) Reset() {
	*x = RbacRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacRolesResponse) ProtoMessage() {}

func (x *RbacRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacRolesResponse.ProtoReflect.Descriptor instead.
func (*RbacRolesResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{27}
}

func (x *RbacRolesResponse) GetItems() []*Role {
	if x != nil {
		return x.Items
	}
	return nil
}

type RbacPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Permission `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RbacPermissionsResponse) Reset() {
	*x = RbacPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacPermissionsResponse) ProtoMessage() {}

func (x *RbacPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacPermissionsResponse.ProtoReflect.Descriptor instead.
func (*RbacPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{28}
}

func (x *RbacPermissionsResponse) GetItems() []*Permission {
	if x != nil {
		return x.Items
	}
	return nil
}

type SettingSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Global bool   `protobuf:"varint,1,opt,name=global,proto3" json:"global,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value  []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SettingSetRequest) Reset() {
	*x = SettingSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingSetRequest) ProtoMessage() {}

func (x *SettingSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingSetRequest.ProtoReflect.Descriptor instead.
func (*SettingSetRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{29}
}

func (x *SettingSetRequest) GetGlobal() bool {
	if x != nil {
		return x.Global
	}
	return false
}

func (x *SettingSetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SettingSetRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SettingGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Global bool   `protobuf:"varint,1,opt,name=global,proto3" json:"global,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *SettingGetRequest) Reset() {
	*x = SettingGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingGetRequest) ProtoMessage() {}

func (x *SettingGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingGetRequest.ProtoReflect.Descriptor instead.
func (*SettingGetRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{30}
}

func (x *SettingGetRequest) GetGlobal() bool {
	if x != nil {
		return x.Global
	}
	return false
}

func (x *SettingGetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type SettingByUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User int32 `protobuf:"varint,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *SettingByUserRequest) Reset() {
	*x = SettingByUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingByUserRequest) ProtoMessage() {}

func (x *SettingByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingByUserRequest.ProtoReflect.Descriptor instead.
func (*SettingByUserRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{31}
}

func (x *SettingByUserRequest) GetUser() int32 {
	if x != nil {
		return x.User
	}
	return 0
}

type SettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*SettingsResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SettingsResponse) Reset() {
	*x = SettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsResponse) ProtoMessage() {}

func (x *SettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsResponse.ProtoReflect.Descriptor instead.
func (*SettingsResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{32}
}

func (x *SettingsResponse) GetItems() []*SettingsResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type LocaleByLangRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *LocaleByLangRequest) Reset() {
	*x = LocaleByLangRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocaleByLangRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocaleByLangRequest) ProtoMessage() {}

func (x *LocaleByLangRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocaleByLangRequest.ProtoReflect.Descriptor instead.
func (*LocaleByLangRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{33}
}

func (x *LocaleByLangRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type LocaleGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *LocaleGetRequest) Reset() {
	*x = LocaleGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocaleGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocaleGetRequest) ProtoMessage() {}

func (x *LocaleGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocaleGetRequest.ProtoReflect.Descriptor instead.
func (*LocaleGetRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{34}
}

func (x *LocaleGetRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *LocaleGetRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type LocalesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*LocalesResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *LocalesResponse) Reset() {
	*x = LocalesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalesResponse) ProtoMessage() {}

func (x *LocalesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalesResponse.ProtoReflect.Descriptor instead.
func (*LocalesResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{35}
}

func (x *LocalesResponse) GetItems() []*LocalesResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type LocaleSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang    string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	Code    string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LocaleSetRequest) Reset() {
	*x = LocaleSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocaleSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocaleSetRequest) ProtoMessage() {}

func (x *LocaleSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocaleSetRequest.ProtoReflect.Descriptor instead.
func (*LocaleSetRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{36}
}

func (x *LocaleSetRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *LocaleSetRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LocaleSetRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type IndexNowProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *IndexNowProfile) Reset() {
	*x = IndexNowProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexNowProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexNowProfile) ProtoMessage() {}

func (x *IndexNowProfile) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexNowProfile.ProtoReflect.Descriptor instead.
func (*IndexNowProfile) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{37}
}

func (x *IndexNowProfile) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type IndexNowPingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Home string `protobuf:"bytes,9,opt,name=home,proto3" json:"home,omitempty"`
}

func (x *IndexNowPingRequest) Reset() {
	*x = IndexNowPingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexNowPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexNowPingRequest) ProtoMessage() {}

func (x *IndexNowPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexNowPingRequest.ProtoReflect.Descriptor instead.
func (*IndexNowPingRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{38}
}

func (x *IndexNowPingRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *IndexNowPingRequest) GetHome() string {
	if x != nil {
		return x.Home
	}
	return ""
}

type SitemapPingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Home string `protobuf:"bytes,1,opt,name=home,proto3" json:"home,omitempty"`
}

func (x *SitemapPingRequest) Reset() {
	*x = SitemapPingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SitemapPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SitemapPingRequest) ProtoMessage() {}

func (x *SitemapPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SitemapPingRequest.ProtoReflect.Descriptor instead.
func (*SitemapPingRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{39}
}

func (x *SitemapPingRequest) GetHome() string {
	if x != nil {
		return x.Home
	}
	return ""
}

type SiteMaintenanceModeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ttl    *durationpb.Duration `protobuf:"bytes,1,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Reason string               `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *SiteMaintenanceModeRequest) Reset() {
	*x = SiteMaintenanceModeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteMaintenanceModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteMaintenanceModeRequest) ProtoMessage() {}

func (x *SiteMaintenanceModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteMaintenanceModeRequest.ProtoReflect.Descriptor instead.
func (*SiteMaintenanceModeRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{40}
}

func (x *SiteMaintenanceModeRequest) GetTtl() *durationpb.Duration {
	if x != nil {
		return x.Ttl
	}
	return nil
}

func (x *SiteMaintenanceModeRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type SiteInstallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *UserSignUpByEmailRequest `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *SiteInstallRequest) Reset() {
	*x = SiteInstallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteInstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteInstallRequest) ProtoMessage() {}

func (x *SiteInstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteInstallRequest.ProtoReflect.Descriptor instead.
func (*SiteInstallRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{41}
}

func (x *SiteInstallRequest) GetUser() *UserSignUpByEmailRequest {
	if x != nil {
		return x.User
	}
	return nil
}

type TwilioProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From              string  `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	AccountSid        string  `protobuf:"bytes,2,opt,name=account_sid,json=accountSid,proto3" json:"account_sid,omitempty"`
	AuthToken         string  `protobuf:"bytes,3,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	SmsStatusCallback *string `protobuf:"bytes,9,opt,name=sms_status_callback,json=smsStatusCallback,proto3,oneof" json:"sms_status_callback,omitempty"`
}

func (x *TwilioProfile) Reset() {
	*x = TwilioProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwilioProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwilioProfile) ProtoMessage() {}

func (x *TwilioProfile) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwilioProfile.ProtoReflect.Descriptor instead.
func (*TwilioProfile) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{42}
}

func (x *TwilioProfile) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TwilioProfile) GetAccountSid() string {
	if x != nil {
		return x.AccountSid
	}
	return ""
}

func (x *TwilioProfile) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *TwilioProfile) GetSmsStatusCallback() string {
	if x != nil && x.SmsStatusCallback != nil {
		return *x.SmsStatusCallback
	}
	return ""
}

type SmtpProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host       string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port       uint32                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	AuthMethod SmtpProfile_AuthMethod `protobuf:"varint,3,opt,name=auth_method,json=authMethod,proto3,enum=palm.metasequoia.v1.SmtpProfile_AuthMethod" json:"auth_method,omitempty"`
	Cc         []*EmailTask_Address   `protobuf:"bytes,8,rep,name=cc,proto3" json:"cc,omitempty"`
	Bcc        []*EmailTask_Address   `protobuf:"bytes,9,rep,name=bcc,proto3" json:"bcc,omitempty"`
	From       *EmailTask_Address     `protobuf:"bytes,11,opt,name=from,proto3" json:"from,omitempty"`
	Password   string                 `protobuf:"bytes,12,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *SmtpProfile) Reset() {
	*x = SmtpProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmtpProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmtpProfile) ProtoMessage() {}

func (x *SmtpProfile) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmtpProfile.ProtoReflect.Descriptor instead.
func (*SmtpProfile) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{43}
}

func (x *SmtpProfile) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SmtpProfile) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *SmtpProfile) GetAuthMethod() SmtpProfile_AuthMethod {
	if x != nil {
		return x.AuthMethod
	}
	return SmtpProfile_None
}

func (x *SmtpProfile) GetCc() []*EmailTask_Address {
	if x != nil {
		return x.Cc
	}
	return nil
}

func (x *SmtpProfile) GetBcc() []*EmailTask_Address {
	if x != nil {
		return x.Bcc
	}
	return nil
}

func (x *SmtpProfile) GetFrom() *EmailTask_Address {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *SmtpProfile) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type EmailTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To          *EmailTask_Address      `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Cc          []*EmailTask_Address    `protobuf:"bytes,2,rep,name=cc,proto3" json:"cc,omitempty"`
	Bcc         []*EmailTask_Address    `protobuf:"bytes,3,rep,name=bcc,proto3" json:"bcc,omitempty"`
	Subject     string                  `protobuf:"bytes,11,opt,name=subject,proto3" json:"subject,omitempty"`
	Body        *EmailTask_Body         `protobuf:"bytes,12,opt,name=body,proto3" json:"body,omitempty"`
	Attachments []*EmailTask_Attachment `protobuf:"bytes,13,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *EmailTask) Reset() {
	*x = EmailTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailTask) ProtoMessage() {}

func (x *EmailTask) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailTask.ProtoReflect.Descriptor instead.
func (*EmailTask) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{44}
}

func (x *EmailTask) GetTo() *EmailTask_Address {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *EmailTask) GetCc() []*EmailTask_Address {
	if x != nil {
		return x.Cc
	}
	return nil
}

func (x *EmailTask) GetBcc() []*EmailTask_Address {
	if x != nil {
		return x.Bcc
	}
	return nil
}

func (x *EmailTask) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *EmailTask) GetBody() *EmailTask_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *EmailTask) GetAttachments() []*EmailTask_Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type SiteTwilioPingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To      string         `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Message string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Profile *TwilioProfile `protobuf:"bytes,9,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *SiteTwilioPingRequest) Reset() {
	*x = SiteTwilioPingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteTwilioPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteTwilioPingRequest) ProtoMessage() {}

func (x *SiteTwilioPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteTwilioPingRequest.ProtoReflect.Descriptor instead.
func (*SiteTwilioPingRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{45}
}

func (x *SiteTwilioPingRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SiteTwilioPingRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SiteTwilioPingRequest) GetProfile() *TwilioProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type SiteSmtpPingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To      *EmailTask_Address `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Subject string             `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Content string             `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Profile *SmtpProfile       `protobuf:"bytes,9,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *SiteSmtpPingRequest) Reset() {
	*x = SiteSmtpPingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteSmtpPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteSmtpPingRequest) ProtoMessage() {}

func (x *SiteSmtpPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteSmtpPingRequest.ProtoReflect.Descriptor instead.
func (*SiteSmtpPingRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{46}
}

func (x *SiteSmtpPingRequest) GetTo() *EmailTask_Address {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SiteSmtpPingRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SiteSmtpPingRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SiteSmtpPingRequest) GetProfile() *SmtpProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type SiteSetLogoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *SiteSetLogoRequest) Reset() {
	*x = SiteSetLogoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteSetLogoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteSetLogoRequest) ProtoMessage() {}

func (x *SiteSetLogoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteSetLogoRequest.ProtoReflect.Descriptor instead.
func (*SiteSetLogoRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{47}
}

func (x *SiteSetLogoRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type SiteSetCopyrightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload string `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *SiteSetCopyrightRequest) Reset() {
	*x = SiteSetCopyrightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteSetCopyrightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteSetCopyrightRequest) ProtoMessage() {}

func (x *SiteSetCopyrightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteSetCopyrightRequest.ProtoReflect.Descriptor instead.
func (*SiteSetCopyrightRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{48}
}

func (x *SiteSetCopyrightRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type SiteSetKeywordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []string `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SiteSetKeywordsRequest) Reset() {
	*x = SiteSetKeywordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteSetKeywordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteSetKeywordsRequest) ProtoMessage() {}

func (x *SiteSetKeywordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteSetKeywordsRequest.ProtoReflect.Descriptor instead.
func (*SiteSetKeywordsRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{49}
}

func (x *SiteSetKeywordsRequest) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

type SiteSetInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang        string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	Title       string `protobuf:"bytes,11,opt,name=title,proto3" json:"title,omitempty"`
	Subhead     string `protobuf:"bytes,12,opt,name=subhead,proto3" json:"subhead,omitempty"`
	Description string `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *SiteSetInfoRequest) Reset() {
	*x = SiteSetInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteSetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteSetInfoRequest) ProtoMessage() {}

func (x *SiteSetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteSetInfoRequest.ProtoReflect.Descriptor instead.
func (*SiteSetInfoRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{50}
}

func (x *SiteSetInfoRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *SiteSetInfoRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SiteSetInfoRequest) GetSubhead() string {
	if x != nil {
		return x.Subhead
	}
	return ""
}

func (x *SiteSetInfoRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type SiteLayoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string                     `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Subhead     string                     `protobuf:"bytes,2,opt,name=subhead,proto3" json:"subhead,omitempty"`
	Keywords    []string                   `protobuf:"bytes,3,rep,name=keywords,proto3" json:"keywords,omitempty"`
	Description string                     `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Author      *SiteLayoutResponse_Author `protobuf:"bytes,5,opt,name=author,proto3" json:"author,omitempty"`
	Copyright   string                     `protobuf:"bytes,6,opt,name=copyright,proto3" json:"copyright,omitempty"`
	Logo        string                     `protobuf:"bytes,7,opt,name=logo,proto3" json:"logo,omitempty"`
	Languages   []string                   `protobuf:"bytes,9,rep,name=languages,proto3" json:"languages,omitempty"`
}

func (x *SiteLayoutResponse) Reset() {
	*x = SiteLayoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteLayoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteLayoutResponse) ProtoMessage() {}

func (x *SiteLayoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteLayoutResponse.ProtoReflect.Descriptor instead.
func (*SiteLayoutResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{51}
}

func (x *SiteLayoutResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SiteLayoutResponse) GetSubhead() string {
	if x != nil {
		return x.Subhead
	}
	return ""
}

func (x *SiteLayoutResponse) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *SiteLayoutResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SiteLayoutResponse) GetAuthor() *SiteLayoutResponse_Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *SiteLayoutResponse) GetCopyright() string {
	if x != nil {
		return x.Copyright
	}
	return ""
}

func (x *SiteLayoutResponse) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *SiteLayoutResponse) GetLanguages() []string {
	if x != nil {
		return x.Languages
	}
	return nil
}

type GoogleProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteVerifyId *string                  `protobuf:"bytes,1,opt,name=site_verify_id,json=siteVerifyId,proto3,oneof" json:"site_verify_id,omitempty"`
	ReCaptcha    *GoogleProfile_ReCaptcha `protobuf:"bytes,2,opt,name=re_captcha,json=reCaptcha,proto3,oneof" json:"re_captcha,omitempty"`
}

func (x *GoogleProfile) Reset() {
	*x = GoogleProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleProfile) ProtoMessage() {}

func (x *GoogleProfile) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleProfile.ProtoReflect.Descriptor instead.
func (*GoogleProfile) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{52}
}

func (x *GoogleProfile) GetSiteVerifyId() string {
	if x != nil && x.SiteVerifyId != nil {
		return *x.SiteVerifyId
	}
	return ""
}

func (x *GoogleProfile) GetReCaptcha() *GoogleProfile_ReCaptcha {
	if x != nil {
		return x.ReCaptcha
	}
	return nil
}

type BaiduProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteVerify *BaiduProfile_SiteVerify `protobuf:"bytes,1,opt,name=site_verify,json=siteVerify,proto3,oneof" json:"site_verify,omitempty"`
}

func (x *BaiduProfile) Reset() {
	*x = BaiduProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduProfile) ProtoMessage() {}

func (x *BaiduProfile) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduProfile.ProtoReflect.Descriptor instead.
func (*BaiduProfile) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{53}
}

func (x *BaiduProfile) GetSiteVerify() *BaiduProfile_SiteVerify {
	if x != nil {
		return x.SiteVerify
	}
	return nil
}

type SmsTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   []string `protobuf:"bytes,2,rep,name=to,proto3" json:"to,omitempty"`
	Body string   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *SmsTask) Reset() {
	*x = SmsTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsTask) ProtoMessage() {}

func (x *SmsTask) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsTask.ProtoReflect.Descriptor instead.
func (*SmsTask) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{54}
}

func (x *SmsTask) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SmsTask) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SmsTask) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type SiteStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Postgresql *SiteStatusResponse_PostgreSql `protobuf:"bytes,1,opt,name=postgresql,proto3" json:"postgresql,omitempty"`
	Mysql      *SiteStatusResponse_MySql      `protobuf:"bytes,2,opt,name=mysql,proto3" json:"mysql,omitempty"`
	Redis      *SiteStatusResponse_Redis      `protobuf:"bytes,3,opt,name=redis,proto3" json:"redis,omitempty"`
	Rabbitmq   *SiteStatusResponse_RabbitMq   `protobuf:"bytes,4,opt,name=rabbitmq,proto3" json:"rabbitmq,omitempty"`
	Opensearch *SiteStatusResponse_OpenSearch `protobuf:"bytes,5,opt,name=opensearch,proto3" json:"opensearch,omitempty"`
	System     *SiteStatusResponse_System     `protobuf:"bytes,11,opt,name=system,proto3" json:"system,omitempty"`
	Healthes   []*SiteStatusResponse_Health   `protobuf:"bytes,21,rep,name=healthes,proto3" json:"healthes,omitempty"`
}

func (x *SiteStatusResponse) Reset() {
	*x = SiteStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStatusResponse) ProtoMessage() {}

func (x *SiteStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStatusResponse.ProtoReflect.Descriptor instead.
func (*SiteStatusResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{55}
}

func (x *SiteStatusResponse) GetPostgresql() *SiteStatusResponse_PostgreSql {
	if x != nil {
		return x.Postgresql
	}
	return nil
}

func (x *SiteStatusResponse) GetMysql() *SiteStatusResponse_MySql {
	if x != nil {
		return x.Mysql
	}
	return nil
}

func (x *SiteStatusResponse) GetRedis() *SiteStatusResponse_Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *SiteStatusResponse) GetRabbitmq() *SiteStatusResponse_RabbitMq {
	if x != nil {
		return x.Rabbitmq
	}
	return nil
}

func (x *SiteStatusResponse) GetOpensearch() *SiteStatusResponse_OpenSearch {
	if x != nil {
		return x.Opensearch
	}
	return nil
}

func (x *SiteStatusResponse) GetSystem() *SiteStatusResponse_System {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *SiteStatusResponse) GetHealthes() []*SiteStatusResponse_Health {
	if x != nil {
		return x.Healthes
	}
	return nil
}

type ShorterLinkIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *Pagination                      `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Items      []*ShorterLinkIndexResponse_Item `protobuf:"bytes,11,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ShorterLinkIndexResponse) Reset() {
	*x = ShorterLinkIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShorterLinkIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShorterLinkIndexResponse) ProtoMessage() {}

func (x *ShorterLinkIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShorterLinkIndexResponse.ProtoReflect.Descriptor instead.
func (*ShorterLinkIndexResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{56}
}

func (x *ShorterLinkIndexResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ShorterLinkIndexResponse) GetItems() []*ShorterLinkIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type ShorterLinkCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url     string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Details string `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ShorterLinkCreateRequest) Reset() {
	*x = ShorterLinkCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShorterLinkCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShorterLinkCreateRequest) ProtoMessage() {}

func (x *ShorterLinkCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShorterLinkCreateRequest.ProtoReflect.Descriptor instead.
func (*ShorterLinkCreateRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{57}
}

func (x *ShorterLinkCreateRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ShorterLinkCreateRequest) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type ShorterLinkUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Url     string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Details string `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ShorterLinkUpdateRequest) Reset() {
	*x = ShorterLinkUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShorterLinkUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShorterLinkUpdateRequest) ProtoMessage() {}

func (x *ShorterLinkUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShorterLinkUpdateRequest.ProtoReflect.Descriptor instead.
func (*ShorterLinkUpdateRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{58}
}

func (x *ShorterLinkUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShorterLinkUpdateRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ShorterLinkUpdateRequest) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type TagIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*TagIndexResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *TagIndexResponse) Reset() {
	*x = TagIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagIndexResponse) ProtoMessage() {}

func (x *TagIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagIndexResponse.ProtoReflect.Descriptor instead.
func (*TagIndexResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{59}
}

func (x *TagIndexResponse) GetItems() []*TagIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type TagCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Priority int32  `protobuf:"varint,11,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *TagCreateRequest) Reset() {
	*x = TagCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagCreateRequest) ProtoMessage() {}

func (x *TagCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagCreateRequest.ProtoReflect.Descriptor instead.
func (*TagCreateRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{60}
}

func (x *TagCreateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TagCreateRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type TagUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code     string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Priority int32  `protobuf:"varint,11,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *TagUpdateRequest) Reset() {
	*x = TagUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagUpdateRequest) ProtoMessage() {}

func (x *TagUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagUpdateRequest.ProtoReflect.Descriptor instead.
func (*TagUpdateRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{61}
}

func (x *TagUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TagUpdateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TagUpdateRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type CategoryIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CategoryIndexResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CategoryIndexResponse) Reset() {
	*x = CategoryIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryIndexResponse) ProtoMessage() {}

func (x *CategoryIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryIndexResponse.ProtoReflect.Descriptor instead.
func (*CategoryIndexResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{62}
}

func (x *CategoryIndexResponse) GetItems() []*CategoryIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type CategoryCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// Types that are assignable to By:
	//
	//	*CategoryCreateRequest_Left
	//	*CategoryCreateRequest_Parent
	By isCategoryCreateRequest_By `protobuf_oneof:"by"`
}

func (x *CategoryCreateRequest) Reset() {
	*x = CategoryCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryCreateRequest) ProtoMessage() {}

func (x *CategoryCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryCreateRequest.ProtoReflect.Descriptor instead.
func (*CategoryCreateRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{63}
}

func (x *CategoryCreateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (m *CategoryCreateRequest) GetBy() isCategoryCreateRequest_By {
	if m != nil {
		return m.By
	}
	return nil
}

func (x *CategoryCreateRequest) GetLeft() int32 {
	if x, ok := x.GetBy().(*CategoryCreateRequest_Left); ok {
		return x.Left
	}
	return 0
}

func (x *CategoryCreateRequest) GetParent() int32 {
	if x, ok := x.GetBy().(*CategoryCreateRequest_Parent); ok {
		return x.Parent
	}
	return 0
}

type isCategoryCreateRequest_By interface {
	isCategoryCreateRequest_By()
}

type CategoryCreateRequest_Left struct {
	Left int32 `protobuf:"varint,2,opt,name=left,proto3,oneof"`
}

type CategoryCreateRequest_Parent struct {
	Parent int32 `protobuf:"varint,3,opt,name=parent,proto3,oneof"`
}

func (*CategoryCreateRequest_Left) isCategoryCreateRequest_By() {}

func (*CategoryCreateRequest_Parent) isCategoryCreateRequest_By() {}

type CategoryUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CategoryUpdateRequest) Reset() {
	*x = CategoryUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryUpdateRequest) ProtoMessage() {}

func (x *CategoryUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryUpdateRequest.ProtoReflect.Descriptor instead.
func (*CategoryUpdateRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{64}
}

func (x *CategoryUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategoryUpdateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type NotificationIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*NotificationIndexResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *Pagination                       `protobuf:"bytes,9,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *NotificationIndexResponse) Reset() {
	*x = NotificationIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationIndexResponse) ProtoMessage() {}

func (x *NotificationIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationIndexResponse.ProtoReflect.Descriptor instead.
func (*NotificationIndexResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{65}
}

func (x *NotificationIndexResponse) GetItems() []*NotificationIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *NotificationIndexResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type NotificationCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level NotificationIndexResponse_Item_Level `protobuf:"varint,1,opt,name=level,proto3,enum=palm.metasequoia.v1.NotificationIndexResponse_Item_Level" json:"level,omitempty"`
	Title string                               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Url   string                               `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Lang  string                               `protobuf:"bytes,9,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *NotificationCreateRequest) Reset() {
	*x = NotificationCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationCreateRequest) ProtoMessage() {}

func (x *NotificationCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationCreateRequest.ProtoReflect.Descriptor instead.
func (*NotificationCreateRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{66}
}

func (x *NotificationCreateRequest) GetLevel() NotificationIndexResponse_Item_Level {
	if x != nil {
		return x.Level
	}
	return NotificationIndexResponse_Item_NOTE
}

func (x *NotificationCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotificationCreateRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *NotificationCreateRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type NotificationUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32                                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Level NotificationIndexResponse_Item_Level `protobuf:"varint,2,opt,name=level,proto3,enum=palm.metasequoia.v1.NotificationIndexResponse_Item_Level" json:"level,omitempty"`
	Title string                               `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Url   string                               `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *NotificationUpdateRequest) Reset() {
	*x = NotificationUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationUpdateRequest) ProtoMessage() {}

func (x *NotificationUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationUpdateRequest.ProtoReflect.Descriptor instead.
func (*NotificationUpdateRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{67}
}

func (x *NotificationUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NotificationUpdateRequest) GetLevel() NotificationIndexResponse_Item_Level {
	if x != nil {
		return x.Level
	}
	return NotificationIndexResponse_Item_NOTE
}

func (x *NotificationUpdateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotificationUpdateRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type AttachmentShowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ttl *durationpb.Duration `protobuf:"bytes,2,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *AttachmentShowRequest) Reset() {
	*x = AttachmentShowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentShowRequest) ProtoMessage() {}

func (x *AttachmentShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentShowRequest.ProtoReflect.Descriptor instead.
func (*AttachmentShowRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{68}
}

func (x *AttachmentShowRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AttachmentShowRequest) GetTtl() *durationpb.Duration {
	if x != nil {
		return x.Ttl
	}
	return nil
}

type AttachmentShowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *AttachmentIndexResponse_Item `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Url  string                        `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *AttachmentShowResponse) Reset() {
	*x = AttachmentShowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentShowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentShowResponse) ProtoMessage() {}

func (x *AttachmentShowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentShowResponse.ProtoReflect.Descriptor instead.
func (*AttachmentShowResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{69}
}

func (x *AttachmentShowResponse) GetItem() *AttachmentIndexResponse_Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *AttachmentShowResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type AttachmentIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *Pagination                     `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Items      []*AttachmentIndexResponse_Item `protobuf:"bytes,11,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AttachmentIndexResponse) Reset() {
	*x = AttachmentIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentIndexResponse) ProtoMessage() {}

func (x *AttachmentIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentIndexResponse.ProtoReflect.Descriptor instead.
func (*AttachmentIndexResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{70}
}

func (x *AttachmentIndexResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *AttachmentIndexResponse) GetItems() []*AttachmentIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type LeaveWordIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*LeaveWordIndexResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *Pagination                    `protobuf:"bytes,9,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *LeaveWordIndexResponse) Reset() {
	*x = LeaveWordIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveWordIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveWordIndexResponse) ProtoMessage() {}

func (x *LeaveWordIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveWordIndexResponse.ProtoReflect.Descriptor instead.
func (*LeaveWordIndexResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{71}
}

func (x *LeaveWordIndexResponse) GetItems() []*LeaveWordIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *LeaveWordIndexResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SignInByGoogleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scopes      []string             `protobuf:"bytes,1,rep,name=scopes,proto3" json:"scopes,omitempty"`
	Code        string               `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	State       string               `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	RedirectUri string               `protobuf:"bytes,4,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	Nonce       string               `protobuf:"bytes,9,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Ttl         *durationpb.Duration `protobuf:"bytes,11,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *SignInByGoogleRequest) Reset() {
	*x = SignInByGoogleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInByGoogleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInByGoogleRequest) ProtoMessage() {}

func (x *SignInByGoogleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInByGoogleRequest.ProtoReflect.Descriptor instead.
func (*SignInByGoogleRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{72}
}

func (x *SignInByGoogleRequest) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *SignInByGoogleRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SignInByGoogleRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SignInByGoogleRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *SignInByGoogleRequest) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *SignInByGoogleRequest) GetTtl() *durationpb.Duration {
	if x != nil {
		return x.Ttl
	}
	return nil
}

type GoogleSignInUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedirectUri string       `protobuf:"bytes,1,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	State       *Oauth2State `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *GoogleSignInUrlRequest) Reset() {
	*x = GoogleSignInUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleSignInUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleSignInUrlRequest) ProtoMessage() {}

func (x *GoogleSignInUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleSignInUrlRequest.ProtoReflect.Descriptor instead.
func (*GoogleSignInUrlRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{73}
}

func (x *GoogleSignInUrlRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *GoogleSignInUrlRequest) GetState() *Oauth2State {
	if x != nil {
		return x.State
	}
	return nil
}

type GoogleSignInUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url   string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Nonce string `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *GoogleSignInUrlResponse) Reset() {
	*x = GoogleSignInUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleSignInUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleSignInUrlResponse) ProtoMessage() {}

func (x *GoogleSignInUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleSignInUrlResponse.ProtoReflect.Descriptor instead.
func (*GoogleSignInUrlResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{74}
}

func (x *GoogleSignInUrlResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GoogleSignInUrlResponse) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

type WechatUserBindByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WechatUserId int32 `protobuf:"varint,2,opt,name=wechat_user_id,json=wechatUserId,proto3" json:"wechat_user_id,omitempty"`
}

func (x *WechatUserBindByIdRequest) Reset() {
	*x = WechatUserBindByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatUserBindByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatUserBindByIdRequest) ProtoMessage() {}

func (x *WechatUserBindByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatUserBindByIdRequest.ProtoReflect.Descriptor instead.
func (*WechatUserBindByIdRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{75}
}

func (x *WechatUserBindByIdRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WechatUserBindByIdRequest) GetWechatUserId() int32 {
	if x != nil {
		return x.WechatUserId
	}
	return 0
}

type WechatUserBindByAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *WechatUserBindByAccountRequest) Reset() {
	*x = WechatUserBindByAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatUserBindByAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatUserBindByAccountRequest) ProtoMessage() {}

func (x *WechatUserBindByAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatUserBindByAccountRequest.ProtoReflect.Descriptor instead.
func (*WechatUserBindByAccountRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{76}
}

func (x *WechatUserBindByAccountRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *WechatUserBindByAccountRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type WechatUserQueryByOpenIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OpenId string `protobuf:"bytes,2,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
}

func (x *WechatUserQueryByOpenIdRequest) Reset() {
	*x = WechatUserQueryByOpenIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatUserQueryByOpenIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatUserQueryByOpenIdRequest) ProtoMessage() {}

func (x *WechatUserQueryByOpenIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatUserQueryByOpenIdRequest.ProtoReflect.Descriptor instead.
func (*WechatUserQueryByOpenIdRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{77}
}

func (x *WechatUserQueryByOpenIdRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WechatUserQueryByOpenIdRequest) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

type WechatUserQueryByUnionIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId string `protobuf:"bytes,1,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`
}

func (x *WechatUserQueryByUnionIdRequest) Reset() {
	*x = WechatUserQueryByUnionIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatUserQueryByUnionIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatUserQueryByUnionIdRequest) ProtoMessage() {}

func (x *WechatUserQueryByUnionIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatUserQueryByUnionIdRequest.ProtoReflect.Descriptor instead.
func (*WechatUserQueryByUnionIdRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{78}
}

func (x *WechatUserQueryByUnionIdRequest) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

type WechatAllMiniProgramUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*WechatAllMiniProgramUserResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *WechatAllMiniProgramUserResponse) Reset() {
	*x = WechatAllMiniProgramUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatAllMiniProgramUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatAllMiniProgramUserResponse) ProtoMessage() {}

func (x *WechatAllMiniProgramUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatAllMiniProgramUserResponse.ProtoReflect.Descriptor instead.
func (*WechatAllMiniProgramUserResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{79}
}

func (x *WechatAllMiniProgramUserResponse) GetItems() []*WechatAllMiniProgramUserResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type WechatAllOauth2UserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*WechatAllOauth2UserResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *WechatAllOauth2UserResponse) Reset() {
	*x = WechatAllOauth2UserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatAllOauth2UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatAllOauth2UserResponse) ProtoMessage() {}

func (x *WechatAllOauth2UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatAllOauth2UserResponse.ProtoReflect.Descriptor instead.
func (*WechatAllOauth2UserResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{80}
}

func (x *WechatAllOauth2UserResponse) GetItems() []*WechatAllOauth2UserResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type SignInByWechatOauth2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State    string                                   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Code     string                                   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	AppId    string                                   `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Language v2.WechatOauth2QrConnectRequest_Language `protobuf:"varint,8,opt,name=language,proto3,enum=palm.orchid.v1.WechatOauth2QrConnectRequest_Language" json:"language,omitempty"`
	Ttl      *durationpb.Duration                     `protobuf:"bytes,11,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *SignInByWechatOauth2Request) Reset() {
	*x = SignInByWechatOauth2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInByWechatOauth2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInByWechatOauth2Request) ProtoMessage() {}

func (x *SignInByWechatOauth2Request) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInByWechatOauth2Request.ProtoReflect.Descriptor instead.
func (*SignInByWechatOauth2Request) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{81}
}

func (x *SignInByWechatOauth2Request) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SignInByWechatOauth2Request) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SignInByWechatOauth2Request) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *SignInByWechatOauth2Request) GetLanguage() v2.WechatOauth2QrConnectRequest_Language {
	if x != nil {
		return x.Language
	}
	return v2.WechatOauth2QrConnectRequest_Language(0)
}

func (x *SignInByWechatOauth2Request) GetTtl() *durationpb.Duration {
	if x != nil {
		return x.Ttl
	}
	return nil
}

type WechatOauth2SignInStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *WechatOauth2SignInStateResponse) Reset() {
	*x = WechatOauth2SignInStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatOauth2SignInStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatOauth2SignInStateResponse) ProtoMessage() {}

func (x *WechatOauth2SignInStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatOauth2SignInStateResponse.ProtoReflect.Descriptor instead.
func (*WechatOauth2SignInStateResponse) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{82}
}

func (x *WechatOauth2SignInStateResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type WechatOauth2SignInUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId       string                                   `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	RedirectUri string                                   `protobuf:"bytes,2,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	Language    v2.WechatOauth2QrConnectRequest_Language `protobuf:"varint,3,opt,name=language,proto3,enum=palm.orchid.v1.WechatOauth2QrConnectRequest_Language" json:"language,omitempty"`
}

func (x *WechatOauth2SignInUrlRequest) Reset() {
	*x = WechatOauth2SignInUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatOauth2SignInUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatOauth2SignInUrlRequest) ProtoMessage() {}

func (x *WechatOauth2SignInUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatOauth2SignInUrlRequest.ProtoReflect.Descriptor instead.
func (*WechatOauth2SignInUrlRequest) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{83}
}

func (x *WechatOauth2SignInUrlRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WechatOauth2SignInUrlRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *WechatOauth2SignInUrlRequest) GetLanguage() v2.WechatOauth2QrConnectRequest_Language {
	if x != nil {
		return x.Language
	}
	return v2.WechatOauth2QrConnectRequest_Language(0)
}

type WechatMiniProgramUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     string  `protobuf:"bytes,11,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OpenId    string  `protobuf:"bytes,12,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	UnionId   string  `protobuf:"bytes,13,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`
	Nickname  *string `protobuf:"bytes,21,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`
	AvatarUrl *string `protobuf:"bytes,22,opt,name=avatar_url,json=avatarUrl,proto3,oneof" json:"avatar_url,omitempty"`
}

func (x *WechatMiniProgramUser) Reset() {
	*x = WechatMiniProgramUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniProgramUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniProgramUser) ProtoMessage() {}

func (x *WechatMiniProgramUser) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniProgramUser.ProtoReflect.Descriptor instead.
func (*WechatMiniProgramUser) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{84}
}

func (x *WechatMiniProgramUser) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WechatMiniProgramUser) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *WechatMiniProgramUser) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *WechatMiniProgramUser) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *WechatMiniProgramUser) GetAvatarUrl() string {
	if x != nil && x.AvatarUrl != nil {
		return *x.AvatarUrl
	}
	return ""
}

type UserIndexResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname    string                 `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
	RealName    string                 `protobuf:"bytes,2,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	Email       string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Locale      string                 `protobuf:"bytes,18,opt,name=locale,proto3" json:"locale,omitempty"`
	Timezone    string                 `protobuf:"bytes,19,opt,name=timezone,proto3" json:"timezone,omitempty"`
	ConfirmedAt *timestamppb.Timestamp `protobuf:"bytes,91,opt,name=confirmed_at,json=confirmedAt,proto3,oneof" json:"confirmed_at,omitempty"`
	LockedAt    *timestamppb.Timestamp `protobuf:"bytes,92,opt,name=locked_at,json=lockedAt,proto3,oneof" json:"locked_at,omitempty"`
	DeletedAt   *timestamppb.Timestamp `protobuf:"bytes,93,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	By          UserSignInResponse_By  `protobuf:"varint,99,opt,name=by,proto3,enum=palm.metasequoia.v1.UserSignInResponse_By" json:"by,omitempty"`
}

func (x *UserIndexResponse_Item) Reset() {
	*x = UserIndexResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIndexResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIndexResponse_Item) ProtoMessage() {}

func (x *UserIndexResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIndexResponse_Item.ProtoReflect.Descriptor instead.
func (*UserIndexResponse_Item) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{7, 0}
}

func (x *UserIndexResponse_Item) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserIndexResponse_Item) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *UserIndexResponse_Item) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserIndexResponse_Item) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *UserIndexResponse_Item) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *UserIndexResponse_Item) GetConfirmedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ConfirmedAt
	}
	return nil
}

func (x *UserIndexResponse_Item) GetLockedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LockedAt
	}
	return nil
}

func (x *UserIndexResponse_Item) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *UserIndexResponse_Item) GetBy() UserSignInResponse_By {
	if x != nil {
		return x.By
	}
	return UserSignInResponse_Nickname
}

type UserLogsResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Level     UserLogsResponse_Item_Level `protobuf:"varint,2,opt,name=level,proto3,enum=palm.metasequoia.v1.UserLogsResponse_Item_Level" json:"level,omitempty"`
	Plugin    string                      `protobuf:"bytes,3,opt,name=plugin,proto3" json:"plugin,omitempty"`
	Ip        string                      `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	Message   string                      `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	CreatedAt *timestamppb.Timestamp      `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *UserLogsResponse_Item) Reset() {
	*x = UserLogsResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLogsResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLogsResponse_Item) ProtoMessage() {}

func (x *UserLogsResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLogsResponse_Item.ProtoReflect.Descriptor instead.
func (*UserLogsResponse_Item) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{11, 0}
}

func (x *UserLogsResponse_Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserLogsResponse_Item) GetLevel() UserLogsResponse_Item_Level {
	if x != nil {
		return x.Level
	}
	return UserLogsResponse_Item_DEBUG
}

func (x *UserLogsResponse_Item) GetPlugin() string {
	if x != nil {
		return x.Plugin
	}
	return ""
}

func (x *UserLogsResponse_Item) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UserLogsResponse_Item) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserLogsResponse_Item) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type Role_Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Role_Member) Reset() {
	*x = Role_Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role_Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role_Member) ProtoMessage() {}

func (x *Role_Member) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role_Member.ProtoReflect.Descriptor instead.
func (*Role_Member) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{20, 0}
}

func (x *Role_Member) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SettingsResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    *int32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	Key       string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value     []byte                 `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *SettingsResponse_Item) Reset() {
	*x = SettingsResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingsResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsResponse_Item) ProtoMessage() {}

func (x *SettingsResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsResponse_Item.ProtoReflect.Descriptor instead.
func (*SettingsResponse_Item) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{32, 0}
}

func (x *SettingsResponse_Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SettingsResponse_Item) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *SettingsResponse_Item) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SettingsResponse_Item) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SettingsResponse_Item) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SettingsResponse_Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type LocalesResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Lang      string                 `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	Code      string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Message   string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *LocalesResponse_Item) Reset() {
	*x = LocalesResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalesResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalesResponse_Item) ProtoMessage() {}

func (x *LocalesResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalesResponse_Item.ProtoReflect.Descriptor instead.
func (*LocalesResponse_Item) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{35, 0}
}

func (x *LocalesResponse_Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LocalesResponse_Item) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *LocalesResponse_Item) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LocalesResponse_Item) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LocalesResponse_Item) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *LocalesResponse_Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type EmailTask_Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *EmailTask_Address) Reset() {
	*x = EmailTask_Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailTask_Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailTask_Address) ProtoMessage() {}

func (x *EmailTask_Address) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailTask_Address.ProtoReflect.Descriptor instead.
func (*EmailTask_Address) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{44, 0}
}

func (x *EmailTask_Address) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmailTask_Address) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type EmailTask_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Html bool   `protobuf:"varint,2,opt,name=html,proto3" json:"html,omitempty"`
}

func (x *EmailTask_Body) Reset() {
	*x = EmailTask_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailTask_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailTask_Body) ProtoMessage() {}

func (x *EmailTask_Body) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailTask_Body.ProtoReflect.Descriptor instead.
func (*EmailTask_Body) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{44, 1}
}

func (x *EmailTask_Body) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *EmailTask_Body) GetHtml() bool {
	if x != nil {
		return x.Html
	}
	return false
}

type EmailTask_Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *EmailTask_Attachment) Reset() {
	*x = EmailTask_Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailTask_Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailTask_Attachment) ProtoMessage() {}

func (x *EmailTask_Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailTask_Attachment.ProtoReflect.Descriptor instead.
func (*EmailTask_Attachment) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{44, 2}
}

func (x *EmailTask_Attachment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmailTask_Attachment) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type SiteLayoutResponse_Author struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *SiteLayoutResponse_Author) Reset() {
	*x = SiteLayoutResponse_Author{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteLayoutResponse_Author) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteLayoutResponse_Author) ProtoMessage() {}

func (x *SiteLayoutResponse_Author) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteLayoutResponse_Author.ProtoReflect.Descriptor instead.
func (*SiteLayoutResponse_Author) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{51, 0}
}

func (x *SiteLayoutResponse_Author) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SiteLayoutResponse_Author) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// https://developers.google.com/recaptcha/intro
type GoogleProfile_ReCaptcha struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteKey string `protobuf:"bytes,1,opt,name=site_key,json=siteKey,proto3" json:"site_key,omitempty"`
	Secret  string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *GoogleProfile_ReCaptcha) Reset() {
	*x = GoogleProfile_ReCaptcha{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleProfile_ReCaptcha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleProfile_ReCaptcha) ProtoMessage() {}

func (x *GoogleProfile_ReCaptcha) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleProfile_ReCaptcha.ProtoReflect.Descriptor instead.
func (*GoogleProfile_ReCaptcha) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{52, 0}
}

func (x *GoogleProfile_ReCaptcha) GetSiteKey() string {
	if x != nil {
		return x.SiteKey
	}
	return ""
}

func (x *GoogleProfile_ReCaptcha) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type BaiduProfile_SiteVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *BaiduProfile_SiteVerify) Reset() {
	*x = BaiduProfile_SiteVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduProfile_SiteVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduProfile_SiteVerify) ProtoMessage() {}

func (x *BaiduProfile_SiteVerify) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduProfile_SiteVerify.ProtoReflect.Descriptor instead.
func (*BaiduProfile_SiteVerify) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{53, 0}
}

func (x *BaiduProfile_SiteVerify) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BaiduProfile_SiteVerify) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SiteStatusResponse_Database struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size string `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *SiteStatusResponse_Database) Reset() {
	*x = SiteStatusResponse_Database{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStatusResponse_Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStatusResponse_Database) ProtoMessage() {}

func (x *SiteStatusResponse_Database) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStatusResponse_Database.ProtoReflect.Descriptor instead.
func (*SiteStatusResponse_Database) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{55, 0}
}

func (x *SiteStatusResponse_Database) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SiteStatusResponse_Database) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type SiteStatusResponse_PostgreSql struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   string                         `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Now       *timestamppb.Timestamp         `protobuf:"bytes,2,opt,name=now,proto3" json:"now,omitempty"`
	Databases []*SiteStatusResponse_Database `protobuf:"bytes,9,rep,name=databases,proto3" json:"databases,omitempty"`
}

func (x *SiteStatusResponse_PostgreSql) Reset() {
	*x = SiteStatusResponse_PostgreSql{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStatusResponse_PostgreSql) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStatusResponse_PostgreSql) ProtoMessage() {}

func (x *SiteStatusResponse_PostgreSql) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStatusResponse_PostgreSql.ProtoReflect.Descriptor instead.
func (*SiteStatusResponse_PostgreSql) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{55, 1}
}

func (x *SiteStatusResponse_PostgreSql) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SiteStatusResponse_PostgreSql) GetNow() *timestamppb.Timestamp {
	if x != nil {
		return x.Now
	}
	return nil
}

func (x *SiteStatusResponse_PostgreSql) GetDatabases() []*SiteStatusResponse_Database {
	if x != nil {
		return x.Databases
	}
	return nil
}

type SiteStatusResponse_MySql struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size    uint64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *SiteStatusResponse_MySql) Reset() {
	*x = SiteStatusResponse_MySql{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStatusResponse_MySql) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStatusResponse_MySql) ProtoMessage() {}

func (x *SiteStatusResponse_MySql) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStatusResponse_MySql.ProtoReflect.Descriptor instead.
func (*SiteStatusResponse_MySql) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{55, 2}
}

func (x *SiteStatusResponse_MySql) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SiteStatusResponse_MySql) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type SiteStatusResponse_Redis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info  string                           `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Items []*SiteStatusResponse_Redis_Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SiteStatusResponse_Redis) Reset() {
	*x = SiteStatusResponse_Redis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStatusResponse_Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStatusResponse_Redis) ProtoMessage() {}

func (x *SiteStatusResponse_Redis) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStatusResponse_Redis.ProtoReflect.Descriptor instead.
func (*SiteStatusResponse_Redis) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{55, 3}
}

func (x *SiteStatusResponse_Redis) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *SiteStatusResponse_Redis) GetItems() []*SiteStatusResponse_Redis_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type SiteStatusResponse_RabbitMq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol  string `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Heartbeat uint32 `protobuf:"varint,2,opt,name=heartbeat,proto3" json:"heartbeat,omitempty"`
}

func (x *SiteStatusResponse_RabbitMq) Reset() {
	*x = SiteStatusResponse_RabbitMq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStatusResponse_RabbitMq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStatusResponse_RabbitMq) ProtoMessage() {}

func (x *SiteStatusResponse_RabbitMq) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStatusResponse_RabbitMq.ProtoReflect.Descriptor instead.
func (*SiteStatusResponse_RabbitMq) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{55, 4}
}

func (x *SiteStatusResponse_RabbitMq) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *SiteStatusResponse_RabbitMq) GetHeartbeat() uint32 {
	if x != nil {
		return x.Heartbeat
	}
	return 0
}

type SiteStatusResponse_OpenSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url  string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Info string `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *SiteStatusResponse_OpenSearch) Reset() {
	*x = SiteStatusResponse_OpenSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStatusResponse_OpenSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStatusResponse_OpenSearch) ProtoMessage() {}

func (x *SiteStatusResponse_OpenSearch) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStatusResponse_OpenSearch.ProtoReflect.Descriptor instead.
func (*SiteStatusResponse_OpenSearch) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{55, 5}
}

func (x *SiteStatusResponse_OpenSearch) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SiteStatusResponse_OpenSearch) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type SiteStatusResponse_Health struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SiteStatusResponse_Health) Reset() {
	*x = SiteStatusResponse_Health{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStatusResponse_Health) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStatusResponse_Health) ProtoMessage() {}

func (x *SiteStatusResponse_Health) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStatusResponse_Health.ProtoReflect.Descriptor instead.
func (*SiteStatusResponse_Health) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{55, 6}
}

func (x *SiteStatusResponse_Health) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SiteStatusResponse_Health) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SiteStatusResponse_System struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Cpu     string `protobuf:"bytes,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory  string `protobuf:"bytes,3,opt,name=memory,proto3" json:"memory,omitempty"`
	Boot    string `protobuf:"bytes,4,opt,name=boot,proto3" json:"boot,omitempty"`
	Disk    string `protobuf:"bytes,5,opt,name=disk,proto3" json:"disk,omitempty"`
	Load    string `protobuf:"bytes,6,opt,name=load,proto3" json:"load,omitempty"`
	Fs      string `protobuf:"bytes,7,opt,name=fs,proto3" json:"fs,omitempty"`
	Swap    string `protobuf:"bytes,8,opt,name=swap,proto3" json:"swap,omitempty"`
	Uptime  string `protobuf:"bytes,9,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Network string `protobuf:"bytes,10,opt,name=network,proto3" json:"network,omitempty"`
}

func (x *SiteStatusResponse_System) Reset() {
	*x = SiteStatusResponse_System{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStatusResponse_System) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStatusResponse_System) ProtoMessage() {}

func (x *SiteStatusResponse_System) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStatusResponse_System.ProtoReflect.Descriptor instead.
func (*SiteStatusResponse_System) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{55, 7}
}

func (x *SiteStatusResponse_System) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SiteStatusResponse_System) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *SiteStatusResponse_System) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *SiteStatusResponse_System) GetBoot() string {
	if x != nil {
		return x.Boot
	}
	return ""
}

func (x *SiteStatusResponse_System) GetDisk() string {
	if x != nil {
		return x.Disk
	}
	return ""
}

func (x *SiteStatusResponse_System) GetLoad() string {
	if x != nil {
		return x.Load
	}
	return ""
}

func (x *SiteStatusResponse_System) GetFs() string {
	if x != nil {
		return x.Fs
	}
	return ""
}

func (x *SiteStatusResponse_System) GetSwap() string {
	if x != nil {
		return x.Swap
	}
	return ""
}

func (x *SiteStatusResponse_System) GetUptime() string {
	if x != nil {
		return x.Uptime
	}
	return ""
}

func (x *SiteStatusResponse_System) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

type SiteStatusResponse_Redis_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node string `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Key  string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Ttl  int64  `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *SiteStatusResponse_Redis_Item) Reset() {
	*x = SiteStatusResponse_Redis_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStatusResponse_Redis_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStatusResponse_Redis_Item) ProtoMessage() {}

func (x *SiteStatusResponse_Redis_Item) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStatusResponse_Redis_Item.ProtoReflect.Descriptor instead.
func (*SiteStatusResponse_Redis_Item) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{55, 3, 0}
}

func (x *SiteStatusResponse_Redis_Item) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *SiteStatusResponse_Redis_Item) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SiteStatusResponse_Redis_Item) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type ShorterLinkIndexResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Url       string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Details   string                 `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	Code      string                 `protobuf:"bytes,9,opt,name=code,proto3" json:"code,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ShorterLinkIndexResponse_Item) Reset() {
	*x = ShorterLinkIndexResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShorterLinkIndexResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShorterLinkIndexResponse_Item) ProtoMessage() {}

func (x *ShorterLinkIndexResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShorterLinkIndexResponse_Item.ProtoReflect.Descriptor instead.
func (*ShorterLinkIndexResponse_Item) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{56, 0}
}

func (x *ShorterLinkIndexResponse_Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShorterLinkIndexResponse_Item) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ShorterLinkIndexResponse_Item) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *ShorterLinkIndexResponse_Item) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ShorterLinkIndexResponse_Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type TagIndexResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code      string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Priority  int32                  `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *TagIndexResponse_Item) Reset() {
	*x = TagIndexResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagIndexResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagIndexResponse_Item) ProtoMessage() {}

func (x *TagIndexResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagIndexResponse_Item.ProtoReflect.Descriptor instead.
func (*TagIndexResponse_Item) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{59, 0}
}

func (x *TagIndexResponse_Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TagIndexResponse_Item) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TagIndexResponse_Item) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *TagIndexResponse_Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CategoryIndexResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code      string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Left      int32                  `protobuf:"varint,3,opt,name=left,proto3" json:"left,omitempty"`
	Right     int32                  `protobuf:"varint,4,opt,name=right,proto3" json:"right,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *CategoryIndexResponse_Item) Reset() {
	*x = CategoryIndexResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryIndexResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryIndexResponse_Item) ProtoMessage() {}

func (x *CategoryIndexResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryIndexResponse_Item.ProtoReflect.Descriptor instead.
func (*CategoryIndexResponse_Item) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{62, 0}
}

func (x *CategoryIndexResponse_Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategoryIndexResponse_Item) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CategoryIndexResponse_Item) GetLeft() int32 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *CategoryIndexResponse_Item) GetRight() int32 {
	if x != nil {
		return x.Right
	}
	return 0
}

func (x *CategoryIndexResponse_Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type NotificationIndexResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Level     NotificationIndexResponse_Item_Level `protobuf:"varint,2,opt,name=level,proto3,enum=palm.metasequoia.v1.NotificationIndexResponse_Item_Level" json:"level,omitempty"`
	Title     string                               `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Url       string                               `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Lang      string                               `protobuf:"bytes,8,opt,name=lang,proto3" json:"lang,omitempty"`
	UpdatedAt *timestamppb.Timestamp               `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *NotificationIndexResponse_Item) Reset() {
	*x = NotificationIndexResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationIndexResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationIndexResponse_Item) ProtoMessage() {}

func (x *NotificationIndexResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationIndexResponse_Item.ProtoReflect.Descriptor instead.
func (*NotificationIndexResponse_Item) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{65, 0}
}

func (x *NotificationIndexResponse_Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NotificationIndexResponse_Item) GetLevel() NotificationIndexResponse_Item_Level {
	if x != nil {
		return x.Level
	}
	return NotificationIndexResponse_Item_NOTE
}

func (x *NotificationIndexResponse_Item) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotificationIndexResponse_Item) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *NotificationIndexResponse_Item) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *NotificationIndexResponse_Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AttachmentIndexResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Bucket      string                 `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Title       string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Size        int64                  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	ContentType string                 `protobuf:"bytes,6,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Status      MediaContent_Status    `protobuf:"varint,7,opt,name=status,proto3,enum=palm.metasequoia.v1.MediaContent_Status" json:"status,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *AttachmentIndexResponse_Item) Reset() {
	*x = AttachmentIndexResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentIndexResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentIndexResponse_Item) ProtoMessage() {}

func (x *AttachmentIndexResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentIndexResponse_Item.ProtoReflect.Descriptor instead.
func (*AttachmentIndexResponse_Item) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{70, 0}
}

func (x *AttachmentIndexResponse_Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AttachmentIndexResponse_Item) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *AttachmentIndexResponse_Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttachmentIndexResponse_Item) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AttachmentIndexResponse_Item) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AttachmentIndexResponse_Item) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *AttachmentIndexResponse_Item) GetStatus() MediaContent_Status {
	if x != nil {
		return x.Status
	}
	return MediaContent_Published
}

func (x *AttachmentIndexResponse_Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type LeaveWordIndexResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Lang      string                 `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	Ip        string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Content   *MediaContent          `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *LeaveWordIndexResponse_Item) Reset() {
	*x = LeaveWordIndexResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveWordIndexResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveWordIndexResponse_Item) ProtoMessage() {}

func (x *LeaveWordIndexResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveWordIndexResponse_Item.ProtoReflect.Descriptor instead.
func (*LeaveWordIndexResponse_Item) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{71, 0}
}

func (x *LeaveWordIndexResponse_Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LeaveWordIndexResponse_Item) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *LeaveWordIndexResponse_Item) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *LeaveWordIndexResponse_Item) GetContent() *MediaContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *LeaveWordIndexResponse_Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *LeaveWordIndexResponse_Item) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type WechatAllMiniProgramUserResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    int32   `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UnionId   string  `protobuf:"bytes,3,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`
	AppId     string  `protobuf:"bytes,4,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OpenId    string  `protobuf:"bytes,5,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	Nickname  *string `protobuf:"bytes,11,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`
	AvatarUrl *string `protobuf:"bytes,12,opt,name=avatar_url,json=avatarUrl,proto3,oneof" json:"avatar_url,omitempty"`
}

func (x *WechatAllMiniProgramUserResponse_Item) Reset() {
	*x = WechatAllMiniProgramUserResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatAllMiniProgramUserResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatAllMiniProgramUserResponse_Item) ProtoMessage() {}

func (x *WechatAllMiniProgramUserResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatAllMiniProgramUserResponse_Item.ProtoReflect.Descriptor instead.
func (*WechatAllMiniProgramUserResponse_Item) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{79, 0}
}

func (x *WechatAllMiniProgramUserResponse_Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WechatAllMiniProgramUserResponse_Item) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WechatAllMiniProgramUserResponse_Item) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *WechatAllMiniProgramUserResponse_Item) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WechatAllMiniProgramUserResponse_Item) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *WechatAllMiniProgramUserResponse_Item) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *WechatAllMiniProgramUserResponse_Item) GetAvatarUrl() string {
	if x != nil && x.AvatarUrl != nil {
		return *x.AvatarUrl
	}
	return ""
}

type WechatAllOauth2UserResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId     int32    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UnionId    string   `protobuf:"bytes,3,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`
	AppId      string   `protobuf:"bytes,4,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OpenId     string   `protobuf:"bytes,5,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	Nickname   string   `protobuf:"bytes,11,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex        int32    `protobuf:"varint,12,opt,name=sex,proto3" json:"sex,omitempty"`
	City       string   `protobuf:"bytes,13,opt,name=city,proto3" json:"city,omitempty"`
	Province   string   `protobuf:"bytes,14,opt,name=province,proto3" json:"province,omitempty"`
	Country    string   `protobuf:"bytes,15,opt,name=country,proto3" json:"country,omitempty"`
	HeadImgUrl *string  `protobuf:"bytes,16,opt,name=head_img_url,json=headImgUrl,proto3,oneof" json:"head_img_url,omitempty"`
	Privilege  []string `protobuf:"bytes,17,rep,name=privilege,proto3" json:"privilege,omitempty"`
	Lang       string   `protobuf:"bytes,18,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *WechatAllOauth2UserResponse_Item) Reset() {
	*x = WechatAllOauth2UserResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metasequoia_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatAllOauth2UserResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatAllOauth2UserResponse_Item) ProtoMessage() {}

func (x *WechatAllOauth2UserResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_metasequoia_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatAllOauth2UserResponse_Item.ProtoReflect.Descriptor instead.
func (*WechatAllOauth2UserResponse_Item) Descriptor() ([]byte, []int) {
	return file_metasequoia_proto_rawDescGZIP(), []int{80, 0}
}

func (x *WechatAllOauth2UserResponse_Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WechatAllOauth2UserResponse_Item) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WechatAllOauth2UserResponse_Item) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *WechatAllOauth2UserResponse_Item) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WechatAllOauth2UserResponse_Item) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *WechatAllOauth2UserResponse_Item) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *WechatAllOauth2UserResponse_Item) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *WechatAllOauth2UserResponse_Item) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *WechatAllOauth2UserResponse_Item) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *WechatAllOauth2UserResponse_Item) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *WechatAllOauth2UserResponse_Item) GetHeadImgUrl() string {
	if x != nil && x.HeadImgUrl != nil {
		return *x.HeadImgUrl
	}
	return ""
}

func (x *WechatAllOauth2UserResponse_Item) GetPrivilege() []string {
	if x != nil {
		return x.Privilege
	}
	return nil
}

func (x *WechatAllOauth2UserResponse_Item) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

var File_metasequoia_proto protoreflect.FileDescriptor

var file_metasequoia_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x6f, 0x72, 0x63, 0x68, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1b, 0x0a, 0x09, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x2f, 0x0a, 0x05, 0x50, 0x61, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61,
	0x73, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x68, 0x61, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x22, 0xf3, 0x02,
	0x0a, 0x0c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x40,
	0x0a, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x12, 0x40, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x22, 0x21, 0x0a, 0x06, 0x45, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x45, 0x58, 0x54, 0x41, 0x52, 0x45, 0x41,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x51, 0x55, 0x49, 0x4c, 0x4c, 0x10, 0x01, 0x22, 0x53, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46,
	0x75, 0x74, 0x75, 0x72, 0x65, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x73, 0x68,
	0x10, 0x63, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x22, 0x45, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x0b, 0x4f, 0x61,
	0x75, 0x74, 0x68, 0x32, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x74,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x22, 0x92, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x47, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x3a, 0x0a, 0x0c,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8e, 0x04, 0x0a, 0x11, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x1a, 0xb5, 0x03, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x42, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x5b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48,
	0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x3c, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x5c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x3e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x5d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48,
	0x02, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x3a, 0x0a, 0x02, 0x62, 0x79, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x79, 0x52, 0x02, 0x62, 0x79, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x34, 0x0a, 0x16, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x9e, 0x01, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x33, 0x0a, 0x15, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x95, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x22, 0xe8, 0x02, 0x0a, 0x10, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a,
	0x91, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x34, 0x0a,
	0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57,
	0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x03, 0x22, 0x4c, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x28, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7a, 0x0a, 0x10, 0x55,
	0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x42, 0x04, 0x0a, 0x02, 0x62, 0x79, 0x22, 0xcd, 0x01, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a,
	0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a,
	0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x18, 0x63, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x1b, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1c, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x42, 0x06,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xe4, 0x02, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x02, 0x62, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x42, 0x79, 0x52, 0x02, 0x62, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2f, 0x0a, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x41, 0x0a,
	0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x6b, 0x0a, 0x02, 0x42, 0x79, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x10, 0x0b, 0x12, 0x15, 0x0a, 0x11,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x10, 0x0c, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x10,
	0x15, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x10, 0x16, 0x22, 0xad, 0x01,
	0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x2f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75,
	0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x44, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x01, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x01, 0x73, 0x12, 0x0e, 0x0a, 0x01, 0x69, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x01, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x04, 0x0a,
	0x02, 0x69, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x0d,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x1c, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x04, 0x0a, 0x02, 0x62, 0x79, 0x22, 0x73, 0x0a, 0x0e, 0x52, 0x62,
	0x61, 0x63, 0x43, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x35, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75,
	0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x53, 0x0a, 0x0e, 0x52, 0x62, 0x61, 0x63, 0x48, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x22, 0x67, 0x0a, 0x12, 0x52, 0x62, 0x61, 0x63, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x7e, 0x0a,
	0x1d, 0x52, 0x62, 0x61, 0x63, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x49, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x62,
	0x61, 0x63, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x99, 0x01,
	0x0a, 0x1d, 0x52, 0x62, 0x61, 0x63, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x46, 0x6f, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x49,
	0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5e, 0x0a, 0x17, 0x52, 0x62, 0x61,
	0x63, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x11, 0x52, 0x62, 0x61,
	0x63, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x50, 0x0a, 0x17, 0x52, 0x62, 0x61, 0x63, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x53, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x2a, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0xb5, 0x02, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xde, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x13, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x65, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x61, 0x6e, 0x67, 0x22, 0x3a, 0x0a, 0x10, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0xa3, 0x02, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xce, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x54, 0x0a, 0x10, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x23, 0x0a, 0x0f,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x22, 0x3b, 0x0a, 0x13, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x6f, 0x77, 0x50, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x22, 0x28,
	0x0a, 0x12, 0x53, 0x69, 0x74, 0x65, 0x6d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x22, 0x61, 0x0a, 0x1a, 0x53, 0x69, 0x74, 0x65,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03,
	0x74, 0x74, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x12, 0x53,
	0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x41, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70,
	0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x22, 0xb0, 0x01, 0x0a, 0x0d, 0x54, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x33, 0x0a, 0x13, 0x73, 0x6d,
	0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x11, 0x73, 0x6d, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x42,
	0x16, 0x0a, 0x14, 0x5f, 0x73, 0x6d, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x22, 0xfe, 0x02, 0x0a, 0x0b, 0x53, 0x6d, 0x74, 0x70,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x4c, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6d, 0x74, 0x70, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x36, 0x0a,
	0x02, 0x63, 0x63, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x02, 0x63, 0x63, 0x12, 0x38, 0x0a, 0x03, 0x62, 0x63, 0x63, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61,
	0x73, 0x6b, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x03, 0x62, 0x63, 0x63, 0x12,
	0x3a, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x2f, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x6c, 0x73, 0x10, 0x02, 0x22, 0xf6, 0x03, 0x0a, 0x09, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x36, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61,
	0x73, 0x6b, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x36,
	0x0a, 0x02, 0x63, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x02, 0x63, 0x63, 0x12, 0x38, 0x0a, 0x03, 0x62, 0x63, 0x63, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54,
	0x61, 0x73, 0x6b, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x03, 0x62, 0x63, 0x63,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x4b, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0x33, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0x2e, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x68, 0x74, 0x6d, 0x6c, 0x1a, 0x3a, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x7f, 0x0a, 0x15, 0x53, 0x69, 0x74, 0x65, 0x54, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x77, 0x69, 0x6c,
	0x69, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x13, 0x53, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x74, 0x70, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6d,
	0x74, 0x70, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x22, 0x26, 0x0a, 0x12, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x33, 0x0a, 0x17, 0x53, 0x69,
	0x74, 0x65, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0x2e, 0x0a, 0x16, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x7a, 0x0a, 0x12, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x68, 0x65, 0x61, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x75, 0x62, 0x68, 0x65, 0x61, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xce, 0x02, 0x0a, 0x12,
	0x53, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x68,
	0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x68, 0x65,
	0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x46, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75,
	0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x70, 0x79,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x70,
	0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x32, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xee, 0x01, 0x0a,
	0x0d, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x29,
	0x0a, 0x0e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x69, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x50, 0x0a, 0x0a, 0x72, 0x65, 0x5f,
	0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x52, 0x65, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x48, 0x01, 0x52, 0x09, 0x72,
	0x65, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x88, 0x01, 0x01, 0x1a, 0x3e, 0x0a, 0x09, 0x52,
	0x65, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x69, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x22, 0xaa, 0x01,
	0x0a, 0x0c, 0x42, 0x61, 0x69, 0x64, 0x75, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x52,
	0x0a, 0x0b, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x69, 0x64, 0x75, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x69, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x88,
	0x01, 0x01, 0x1a, 0x36, 0x0a, 0x0a, 0x53, 0x69, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73,
	0x69, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x22, 0x41, 0x0a, 0x07, 0x53, 0x6d,
	0x73, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xf3, 0x0a,
	0x0a, 0x12, 0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x71, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x71, 0x6c, 0x52, 0x0a, 0x70, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c, 0x12, 0x43, 0x0a, 0x05, 0x6d, 0x79, 0x73, 0x71,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x4d, 0x79, 0x53, 0x71, 0x6c, 0x52, 0x05, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x12, 0x43, 0x0a,
	0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x52, 0x05, 0x72, 0x65, 0x64,
	0x69, 0x73, 0x12, 0x4c, 0x0a, 0x08, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x6d, 0x71, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x61,
	0x62, 0x62, 0x69, 0x74, 0x4d, 0x71, 0x52, 0x08, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x6d, 0x71,
	0x12, 0x52, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x4a, 0x0a, 0x08,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x65, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x08,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x65, 0x73, 0x1a, 0x32, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x1a, 0xa4, 0x01, 0x0a,
	0x0a, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x71, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x03, 0x6e, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03,
	0x6e, 0x6f, 0x77, 0x12, 0x4e, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x73, 0x1a, 0x35, 0x0a, 0x05, 0x4d, 0x79, 0x53, 0x71, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0xa5, 0x01, 0x0a, 0x05, 0x52,
	0x65, 0x64, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x48, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x1a, 0x3e, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74,
	0x74, 0x6c, 0x1a, 0x44, 0x0a, 0x08, 0x52, 0x61, 0x62, 0x62, 0x69, 0x74, 0x4d, 0x71, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x68,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x1a, 0x32, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x34, 0x0a, 0x06,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x1a, 0xde, 0x01, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x6f, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x66, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x66, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x77, 0x61, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x77, 0x61,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x22, 0xb9, 0x02, 0x0a, 0x18, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x4c,
	0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x48, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75,
	0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x4c, 0x69,
	0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x91, 0x01, 0x0a, 0x04,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x46, 0x0a, 0x18, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x56, 0x0a, 0x18, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0xd8, 0x01, 0x0a, 0x10, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x81, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x42, 0x0a, 0x10, 0x54, 0x61,
	0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x52,
	0x0a, 0x10, 0x54, 0x61, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x22, 0xf0, 0x01, 0x0a, 0x15, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x1a, 0x8f, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x6c, 0x65, 0x66, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x61, 0x0a, 0x15, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x18, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x42, 0x04, 0x0a, 0x02, 0x62, 0x79, 0x22, 0x3b, 0x0a, 0x15, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xa5, 0x03, 0x0a, 0x19, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3f,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0xfb, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4f, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x1b, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x54,
	0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01, 0x22, 0xa8, 0x01,
	0x0a, 0x19, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0xa4, 0x01, 0x0a, 0x19, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4f, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22,
	0x54, 0x0a, 0x15, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x68, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x71, 0x0a, 0x16, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xb2, 0x03, 0x0a, 0x17, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x8c,
	0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x40, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x28, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75,
	0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x91, 0x03,
	0x0a, 0x16, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0xed, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x3b,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xbf, 0x01, 0x0a, 0x15, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03,
	0x74, 0x74, 0x6c, 0x22, 0x73, 0x0a, 0x16, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69,
	0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x41, 0x0a, 0x17, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x5a, 0x0a, 0x19, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x77, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x1e, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x50, 0x0a, 0x1e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x1f, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xd2, 0x02, 0x0a, 0x20, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x4d,
	0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xdb, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x6e,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0xc9, 0x03, 0x0a, 0x1b, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x1a, 0xdc, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0c, 0x68, 0x65, 0x61, 0x64,
	0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x11, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x75,
	0x72, 0x6c, 0x22, 0xde, 0x01, 0x0a, 0x1b, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6f, 0x72, 0x63,
	0x68, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x32, 0x51, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03,
	0x74, 0x74, 0x6c, 0x22, 0x37, 0x0a, 0x1f, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x32, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xab, 0x01, 0x0a,
	0x1c, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x5f, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x51, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x6f, 0x72, 0x63, 0x68, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x51, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x15, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f,
	0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72,
	0x6c, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c,
	0x32, 0xde, 0x0e, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x6f, 0x0a, 0x10, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x30, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x53, 0x69,
	0x67, 0x6e, 0x55, 0x70, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2d, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x42, 0x79, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x42,
	0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x51,
	0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x67, 0x6f, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75,
	0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x58, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x2d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x07, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x27, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71,
	0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x04,
	0x4c, 0x6f, 0x67, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x20, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71,
	0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2e, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x07, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x49, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x26, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71,
	0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x04, 0x53,
	0x68, 0x6f, 0x77, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x07, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x47, 0x0a, 0x04, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x06, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12,
	0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x49, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0b, 0x53,
	0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2b, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x32, 0xa5, 0x09, 0x0a, 0x04, 0x52, 0x62, 0x61, 0x63, 0x12, 0x44, 0x0a, 0x03, 0x43, 0x61,
	0x6e, 0x12, 0x23, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71,
	0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x43, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x44, 0x0a, 0x03, 0x48, 0x61, 0x73, 0x12, 0x23, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x62,
	0x61, 0x63, 0x48, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75,
	0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x49, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x46, 0x6f,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x62, 0x61, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x5c, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x62,
	0x61, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x65, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x46, 0x6f, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x32, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x62, 0x61, 0x63, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x32, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x6e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75,
	0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x76, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71,
	0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x62, 0x61, 0x63, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x32, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71,
	0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x68, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x32, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0x9f, 0x03, 0x0a, 0x07, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x47, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5b,
	0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x06, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75,
	0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x02, 0x4d, 0x79, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x49, 0x0a, 0x06, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x87, 0x02, 0x0a, 0x06,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x46, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x25, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x59,
	0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x06, 0x42, 0x79, 0x4c,
	0x61, 0x6e, 0x67, 0x12, 0x28, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65,
	0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xb3, 0x0f, 0x0a, 0x04, 0x53, 0x69, 0x74, 0x65, 0x12, 0x5f,
	0x0a, 0x12, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x07, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x27, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a,
	0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a,
	0x06, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x27, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x09, 0x53, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x2e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69,
	0x74, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x56, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x2c, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71,
	0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x43,
	0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0b, 0x53, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2b, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x07, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x27, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x09, 0x53,
	0x65, 0x74, 0x54, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x12, 0x22, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x77, 0x69, 0x6c, 0x69, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x77, 0x69,
	0x6c, 0x69, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22,
	0x00, 0x12, 0x52, 0x0a, 0x0a, 0x50, 0x69, 0x6e, 0x67, 0x54, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x12,
	0x2a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x54, 0x77, 0x69, 0x6c, 0x69, 0x6f,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x53, 0x6d, 0x74, 0x70,
	0x12, 0x20, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75,
	0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6d, 0x74, 0x70, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x53, 0x6d, 0x74, 0x70, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x20, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6d, 0x74, 0x70, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x08, 0x50, 0x69, 0x6e, 0x67, 0x53, 0x6d, 0x74, 0x70, 0x12,
	0x28, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x74, 0x70, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4e,
	0x6f, 0x77, 0x12, 0x24, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x6f,
	0x77, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x6f,
	0x77, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x24, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22,
	0x00, 0x12, 0x52, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x6f,
	0x77, 0x12, 0x28, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71,
	0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x6f, 0x77,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x12, 0x22, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x49, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x50,
	0x69, 0x6e, 0x67, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12, 0x27, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x69, 0x74, 0x65, 0x6d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x08,
	0x53, 0x65, 0x74, 0x42, 0x61, 0x69, 0x64, 0x75, 0x12, 0x21, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x61, 0x69, 0x64, 0x75, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x61, 0x69, 0x64,
	0x75, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x69, 0x64, 0x75, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x4e,
	0x0a, 0x09, 0x50, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x69, 0x64, 0x75, 0x12, 0x27, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x6d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4b,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x27, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75,
	0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xce, 0x02, 0x0a, 0x0b,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x51, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x51,
	0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x1e, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x2d, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xaa, 0x02, 0x0a,
	0x03, 0x54, 0x61, 0x67, 0x12, 0x49, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x25,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x49, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x07, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x48, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x25, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75,
	0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xbe, 0x02, 0x0a, 0x08, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x4e, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x2a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75,
	0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x2a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75,
	0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71,
	0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x05, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xb1, 0x03, 0x0a, 0x0c, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x52, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x2e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x04, 0x53, 0x68,
	0x6f, 0x77, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x33, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x07, 0x44, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0x89,
	0x02, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a,
	0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x72, 0x1a, 0x2c, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x43, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x1e, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x77, 0x12,
	0x2a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xc7, 0x02, 0x0a, 0x09, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x45, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x52, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x72, 0x1a, 0x2b, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x57, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x1e, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x32, 0xd3, 0x01, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12,
	0x68, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x2b, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55,
	0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55, 0x72, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x06, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x12, 0x2a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x42, 0x79, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xfd, 0x0d, 0x0a, 0x06, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x12, 0x63, 0x0a, 0x11, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x34, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x32, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x0f, 0x4f, 0x61,
	0x75, 0x74, 0x68, 0x32, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x31, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x69, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x51, 0x72,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6d, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x32, 0x12, 0x30, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x42, 0x79, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5b, 0x0a, 0x0d, 0x41, 0x6c, 0x6c, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x30, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a,
	0x11, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x12,
	0x42, 0x69, 0x6e, 0x64, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x2e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x17,
	0x42, 0x69, 0x6e, 0x64, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x61, 0x75, 0x74, 0x68,
	0x32, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x61, 0x75, 0x74,
	0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x33,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x41, 0x6c, 0x6c, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79,
	0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x55,
	0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x65, 0x0a, 0x12, 0x41, 0x6c, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x35, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x4d,
	0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65,
	0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x17,
	0x42, 0x69, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x76, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x8f, 0x01, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x33, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x69, 0x6e,
	0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x8c, 0x01, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x35, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71,
	0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x6c,
	0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x60, 0x0a, 0x31, 0x63, 0x6f,
	0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x78, 0x69, 0x76, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x50,
	0x01, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61,
	0x74, 0x75, 0x72, 0x6e, 0x5f, 0x78, 0x69, 0x76, 0x2f, 0x70, 0x61, 0x6c, 0x6d, 0x2f, 0x6d, 0x65,
	0x74, 0x61, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2f, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_metasequoia_proto_rawDescOnce sync.Once
	file_metasequoia_proto_rawDescData = file_metasequoia_proto_rawDesc
)

func file_metasequoia_proto_rawDescGZIP() []byte {
	file_metasequoia_proto_rawDescOnce.Do(func() {
		file_metasequoia_proto_rawDescData = protoimpl.X.CompressGZIP(file_metasequoia_proto_rawDescData)
	})
	return file_metasequoia_proto_rawDescData
}

var file_metasequoia_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_metasequoia_proto_msgTypes = make([]protoimpl.MessageInfo, 114)
var file_metasequoia_proto_goTypes = []interface{}{
	(MediaContent_Editor)(0),                      // 0: palm.metasequoia.v1.MediaContent.Editor
	(MediaContent_Status)(0),                      // 1: palm.metasequoia.v1.MediaContent.Status
	(UserLogsResponse_Item_Level)(0),              // 2: palm.metasequoia.v1.UserLogsResponse.Item.Level
	(UserSignInResponse_By)(0),                    // 3: palm.metasequoia.v1.UserSignInResponse.By
	(SmtpProfile_AuthMethod)(0),                   // 4: palm.metasequoia.v1.SmtpProfile.AuthMethod
	(NotificationIndexResponse_Item_Level)(0),     // 5: palm.metasequoia.v1.NotificationIndexResponse.Item.Level
	(*IdRequest)(nil),                             // 6: palm.metasequoia.v1.IdRequest
	(*Pager)(nil),                                 // 7: palm.metasequoia.v1.Pager
	(*Pagination)(nil),                            // 8: palm.metasequoia.v1.Pagination
	(*MediaContent)(nil),                          // 9: palm.metasequoia.v1.MediaContent
	(*UserDetail)(nil),                            // 10: palm.metasequoia.v1.UserDetail
	(*Oauth2State)(nil),                           // 11: palm.metasequoia.v1.Oauth2State
	(*UserProfile)(nil),                           // 12: palm.metasequoia.v1.UserProfile
	(*UserIndexResponse)(nil),                     // 13: palm.metasequoia.v1.UserIndexResponse
	(*UserSetPasswordRequest)(nil),                // 14: palm.metasequoia.v1.UserSetPasswordRequest
	(*UserChangePasswordRequest)(nil),             // 15: palm.metasequoia.v1.UserChangePasswordRequest
	(*UserLogsRequest)(nil),                       // 16: palm.metasequoia.v1.UserLogsRequest
	(*UserLogsResponse)(nil),                      // 17: palm.metasequoia.v1.UserLogsResponse
	(*UserResetPasswordRequest)(nil),              // 18: palm.metasequoia.v1.UserResetPasswordRequest
	(*UserTokenRequest)(nil),                      // 19: palm.metasequoia.v1.UserTokenRequest
	(*UserQueryRequest)(nil),                      // 20: palm.metasequoia.v1.UserQueryRequest
	(*UserSignUpByEmailRequest)(nil),              // 21: palm.metasequoia.v1.UserSignUpByEmailRequest
	(*UserSignInByPasswordRequest)(nil),           // 22: palm.metasequoia.v1.UserSignInByPasswordRequest
	(*UserSignInResponse)(nil),                    // 23: palm.metasequoia.v1.UserSignInResponse
	(*Permission)(nil),                            // 24: palm.metasequoia.v1.Permission
	(*Resource)(nil),                              // 25: palm.metasequoia.v1.Resource
	(*Role)(nil),                                  // 26: palm.metasequoia.v1.Role
	(*RbacCanRequest)(nil),                        // 27: palm.metasequoia.v1.RbacCanRequest
	(*RbacHasRequest)(nil),                        // 28: palm.metasequoia.v1.RbacHasRequest
	(*RbacPermissionItem)(nil),                    // 29: palm.metasequoia.v1.RbacPermissionItem
	(*RbacPermissionsForUserRequest)(nil),         // 30: palm.metasequoia.v1.RbacPermissionsForUserRequest
	(*RbacPermissionsForRoleRequest)(nil),         // 31: palm.metasequoia.v1.RbacPermissionsForRoleRequest
	(*RbacRolesForUserRequest)(nil),               // 32: palm.metasequoia.v1.RbacRolesForUserRequest
	(*RbacRolesResponse)(nil),                     // 33: palm.metasequoia.v1.RbacRolesResponse
	(*RbacPermissionsResponse)(nil),               // 34: palm.metasequoia.v1.RbacPermissionsResponse
	(*SettingSetRequest)(nil),                     // 35: palm.metasequoia.v1.SettingSetRequest
	(*SettingGetRequest)(nil),                     // 36: palm.metasequoia.v1.SettingGetRequest
	(*SettingByUserRequest)(nil),                  // 37: palm.metasequoia.v1.SettingByUserRequest
	(*SettingsResponse)(nil),                      // 38: palm.metasequoia.v1.SettingsResponse
	(*LocaleByLangRequest)(nil),                   // 39: palm.metasequoia.v1.LocaleByLangRequest
	(*LocaleGetRequest)(nil),                      // 40: palm.metasequoia.v1.LocaleGetRequest
	(*LocalesResponse)(nil),                       // 41: palm.metasequoia.v1.LocalesResponse
	(*LocaleSetRequest)(nil),                      // 42: palm.metasequoia.v1.LocaleSetRequest
	(*IndexNowProfile)(nil),                       // 43: palm.metasequoia.v1.IndexNowProfile
	(*IndexNowPingRequest)(nil),                   // 44: palm.metasequoia.v1.IndexNowPingRequest
	(*SitemapPingRequest)(nil),                    // 45: palm.metasequoia.v1.SitemapPingRequest
	(*SiteMaintenanceModeRequest)(nil),            // 46: palm.metasequoia.v1.SiteMaintenanceModeRequest
	(*SiteInstallRequest)(nil),                    // 47: palm.metasequoia.v1.SiteInstallRequest
	(*TwilioProfile)(nil),                         // 48: palm.metasequoia.v1.TwilioProfile
	(*SmtpProfile)(nil),                           // 49: palm.metasequoia.v1.SmtpProfile
	(*EmailTask)(nil),                             // 50: palm.metasequoia.v1.EmailTask
	(*SiteTwilioPingRequest)(nil),                 // 51: palm.metasequoia.v1.SiteTwilioPingRequest
	(*SiteSmtpPingRequest)(nil),                   // 52: palm.metasequoia.v1.SiteSmtpPingRequest
	(*SiteSetLogoRequest)(nil),                    // 53: palm.metasequoia.v1.SiteSetLogoRequest
	(*SiteSetCopyrightRequest)(nil),               // 54: palm.metasequoia.v1.SiteSetCopyrightRequest
	(*SiteSetKeywordsRequest)(nil),                // 55: palm.metasequoia.v1.SiteSetKeywordsRequest
	(*SiteSetInfoRequest)(nil),                    // 56: palm.metasequoia.v1.SiteSetInfoRequest
	(*SiteLayoutResponse)(nil),                    // 57: palm.metasequoia.v1.SiteLayoutResponse
	(*GoogleProfile)(nil),                         // 58: palm.metasequoia.v1.GoogleProfile
	(*BaiduProfile)(nil),                          // 59: palm.metasequoia.v1.BaiduProfile
	(*SmsTask)(nil),                               // 60: palm.metasequoia.v1.SmsTask
	(*SiteStatusResponse)(nil),                    // 61: palm.metasequoia.v1.SiteStatusResponse
	(*ShorterLinkIndexResponse)(nil),              // 62: palm.metasequoia.v1.ShorterLinkIndexResponse
	(*ShorterLinkCreateRequest)(nil),              // 63: palm.metasequoia.v1.ShorterLinkCreateRequest
	(*ShorterLinkUpdateRequest)(nil),              // 64: palm.metasequoia.v1.ShorterLinkUpdateRequest
	(*TagIndexResponse)(nil),                      // 65: palm.metasequoia.v1.TagIndexResponse
	(*TagCreateRequest)(nil),                      // 66: palm.metasequoia.v1.TagCreateRequest
	(*TagUpdateRequest)(nil),                      // 67: palm.metasequoia.v1.TagUpdateRequest
	(*CategoryIndexResponse)(nil),                 // 68: palm.metasequoia.v1.CategoryIndexResponse
	(*CategoryCreateRequest)(nil),                 // 69: palm.metasequoia.v1.CategoryCreateRequest
	(*CategoryUpdateRequest)(nil),                 // 70: palm.metasequoia.v1.CategoryUpdateRequest
	(*NotificationIndexResponse)(nil),             // 71: palm.metasequoia.v1.NotificationIndexResponse
	(*NotificationCreateRequest)(nil),             // 72: palm.metasequoia.v1.NotificationCreateRequest
	(*NotificationUpdateRequest)(nil),             // 73: palm.metasequoia.v1.NotificationUpdateRequest
	(*AttachmentShowRequest)(nil),                 // 74: palm.metasequoia.v1.AttachmentShowRequest
	(*AttachmentShowResponse)(nil),                // 75: palm.metasequoia.v1.AttachmentShowResponse
	(*AttachmentIndexResponse)(nil),               // 76: palm.metasequoia.v1.AttachmentIndexResponse
	(*LeaveWordIndexResponse)(nil),                // 77: palm.metasequoia.v1.LeaveWordIndexResponse
	(*SignInByGoogleRequest)(nil),                 // 78: palm.metasequoia.v1.SignInByGoogleRequest
	(*GoogleSignInUrlRequest)(nil),                // 79: palm.metasequoia.v1.GoogleSignInUrlRequest
	(*GoogleSignInUrlResponse)(nil),               // 80: palm.metasequoia.v1.GoogleSignInUrlResponse
	(*WechatUserBindByIdRequest)(nil),             // 81: palm.metasequoia.v1.WechatUserBindByIdRequest
	(*WechatUserBindByAccountRequest)(nil),        // 82: palm.metasequoia.v1.WechatUserBindByAccountRequest
	(*WechatUserQueryByOpenIdRequest)(nil),        // 83: palm.metasequoia.v1.WechatUserQueryByOpenIdRequest
	(*WechatUserQueryByUnionIdRequest)(nil),       // 84: palm.metasequoia.v1.WechatUserQueryByUnionIdRequest
	(*WechatAllMiniProgramUserResponse)(nil),      // 85: palm.metasequoia.v1.WechatAllMiniProgramUserResponse
	(*WechatAllOauth2UserResponse)(nil),           // 86: palm.metasequoia.v1.WechatAllOauth2UserResponse
	(*SignInByWechatOauth2Request)(nil),           // 87: palm.metasequoia.v1.SignInByWechatOauth2Request
	(*WechatOauth2SignInStateResponse)(nil),       // 88: palm.metasequoia.v1.WechatOauth2SignInStateResponse
	(*WechatOauth2SignInUrlRequest)(nil),          // 89: palm.metasequoia.v1.WechatOauth2SignInUrlRequest
	(*WechatMiniProgramUser)(nil),                 // 90: palm.metasequoia.v1.WechatMiniProgramUser
	nil,                                           // 91: palm.metasequoia.v1.UserProfile.PayloadEntry
	(*UserIndexResponse_Item)(nil),                // 92: palm.metasequoia.v1.UserIndexResponse.Item
	(*UserLogsResponse_Item)(nil),                 // 93: palm.metasequoia.v1.UserLogsResponse.Item
	(*Role_Member)(nil),                           // 94: palm.metasequoia.v1.Role.Member
	(*SettingsResponse_Item)(nil),                 // 95: palm.metasequoia.v1.SettingsResponse.Item
	(*LocalesResponse_Item)(nil),                  // 96: palm.metasequoia.v1.LocalesResponse.Item
	(*EmailTask_Address)(nil),                     // 97: palm.metasequoia.v1.EmailTask.Address
	(*EmailTask_Body)(nil),                        // 98: palm.metasequoia.v1.EmailTask.Body
	(*EmailTask_Attachment)(nil),                  // 99: palm.metasequoia.v1.EmailTask.Attachment
	(*SiteLayoutResponse_Author)(nil),             // 100: palm.metasequoia.v1.SiteLayoutResponse.Author
	(*GoogleProfile_ReCaptcha)(nil),               // 101: palm.metasequoia.v1.GoogleProfile.ReCaptcha
	(*BaiduProfile_SiteVerify)(nil),               // 102: palm.metasequoia.v1.BaiduProfile.SiteVerify
	(*SiteStatusResponse_Database)(nil),           // 103: palm.metasequoia.v1.SiteStatusResponse.Database
	(*SiteStatusResponse_PostgreSql)(nil),         // 104: palm.metasequoia.v1.SiteStatusResponse.PostgreSql
	(*SiteStatusResponse_MySql)(nil),              // 105: palm.metasequoia.v1.SiteStatusResponse.MySql
	(*SiteStatusResponse_Redis)(nil),              // 106: palm.metasequoia.v1.SiteStatusResponse.Redis
	(*SiteStatusResponse_RabbitMq)(nil),           // 107: palm.metasequoia.v1.SiteStatusResponse.RabbitMq
	(*SiteStatusResponse_OpenSearch)(nil),         // 108: palm.metasequoia.v1.SiteStatusResponse.OpenSearch
	(*SiteStatusResponse_Health)(nil),             // 109: palm.metasequoia.v1.SiteStatusResponse.Health
	(*SiteStatusResponse_System)(nil),             // 110: palm.metasequoia.v1.SiteStatusResponse.System
	(*SiteStatusResponse_Redis_Item)(nil),         // 111: palm.metasequoia.v1.SiteStatusResponse.Redis.Item
	(*ShorterLinkIndexResponse_Item)(nil),         // 112: palm.metasequoia.v1.ShorterLinkIndexResponse.Item
	(*TagIndexResponse_Item)(nil),                 // 113: palm.metasequoia.v1.TagIndexResponse.Item
	(*CategoryIndexResponse_Item)(nil),            // 114: palm.metasequoia.v1.CategoryIndexResponse.Item
	(*NotificationIndexResponse_Item)(nil),        // 115: palm.metasequoia.v1.NotificationIndexResponse.Item
	(*AttachmentIndexResponse_Item)(nil),          // 116: palm.metasequoia.v1.AttachmentIndexResponse.Item
	(*LeaveWordIndexResponse_Item)(nil),           // 117: palm.metasequoia.v1.LeaveWordIndexResponse.Item
	(*WechatAllMiniProgramUserResponse_Item)(nil), // 118: palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item
	(*WechatAllOauth2UserResponse_Item)(nil),      // 119: palm.metasequoia.v1.WechatAllOauth2UserResponse.Item
	(*timestamppb.Timestamp)(nil),                 // 120: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),                   // 121: google.protobuf.Duration
	(*emptypb.Empty)(nil),                         // 122: google.protobuf.Empty
	(v2.WechatOauth2QrConnectRequest_Language)(0), // 123: palm.orchid.v1.WechatOauth2QrConnectRequest.Language
	(*v2.WechatOauth2QrConnectResponse)(nil),      // 124: palm.orchid.v1.WechatOauth2QrConnectResponse
}
var file_metasequoia_proto_depIdxs = []int32{
	0,   // 0: palm.metasequoia.v1.MediaContent.editor:type_name -> palm.metasequoia.v1.MediaContent.Editor
	1,   // 1: palm.metasequoia.v1.MediaContent.status:type_name -> palm.metasequoia.v1.MediaContent.Status
	120, // 2: palm.metasequoia.v1.MediaContent.published_at:type_name -> google.protobuf.Timestamp
	91,  // 3: palm.metasequoia.v1.UserProfile.payload:type_name -> palm.metasequoia.v1.UserProfile.PayloadEntry
	92,  // 4: palm.metasequoia.v1.UserIndexResponse.items:type_name -> palm.metasequoia.v1.UserIndexResponse.Item
	120, // 5: palm.metasequoia.v1.UserLogsRequest.from:type_name -> google.protobuf.Timestamp
	120, // 6: palm.metasequoia.v1.UserLogsRequest.to:type_name -> google.protobuf.Timestamp
	93,  // 7: palm.metasequoia.v1.UserLogsResponse.items:type_name -> palm.metasequoia.v1.UserLogsResponse.Item
	121, // 8: palm.metasequoia.v1.UserSignInByPasswordRequest.ttl:type_name -> google.protobuf.Duration
	3,   // 9: palm.metasequoia.v1.UserSignInResponse.by:type_name -> palm.metasequoia.v1.UserSignInResponse.By
	26,  // 10: palm.metasequoia.v1.UserSignInResponse.roles:type_name -> palm.metasequoia.v1.Role
	24,  // 11: palm.metasequoia.v1.UserSignInResponse.permissions:type_name -> palm.metasequoia.v1.Permission
	26,  // 12: palm.metasequoia.v1.Permission.role:type_name -> palm.metasequoia.v1.Role
	25,  // 13: palm.metasequoia.v1.Permission.object:type_name -> palm.metasequoia.v1.Resource
	122, // 14: palm.metasequoia.v1.Role.administrator:type_name -> google.protobuf.Empty
	122, // 15: palm.metasequoia.v1.Role.root:type_name -> google.protobuf.Empty
	94,  // 16: palm.metasequoia.v1.Role.member:type_name -> palm.metasequoia.v1.Role.Member
	25,  // 17: palm.metasequoia.v1.RbacCanRequest.object:type_name -> palm.metasequoia.v1.Resource
	26,  // 18: palm.metasequoia.v1.RbacHasRequest.role:type_name -> palm.metasequoia.v1.Role
	25,  // 19: palm.metasequoia.v1.RbacPermissionItem.resource:type_name -> palm.metasequoia.v1.Resource
	29,  // 20: palm.metasequoia.v1.RbacPermissionsForUserRequest.permissions:type_name -> palm.metasequoia.v1.RbacPermissionItem
	26,  // 21: palm.metasequoia.v1.RbacPermissionsForRoleRequest.role:type_name -> palm.metasequoia.v1.Role
	29,  // 22: palm.metasequoia.v1.RbacPermissionsForRoleRequest.permissions:type_name -> palm.metasequoia.v1.RbacPermissionItem
	26,  // 23: palm.metasequoia.v1.RbacRolesForUserRequest.roles:type_name -> palm.metasequoia.v1.Role
	26,  // 24: palm.metasequoia.v1.RbacRolesResponse.items:type_name -> palm.metasequoia.v1.Role
	24,  // 25: palm.metasequoia.v1.RbacPermissionsResponse.items:type_name -> palm.metasequoia.v1.Permission
	95,  // 26: palm.metasequoia.v1.SettingsResponse.items:type_name -> palm.metasequoia.v1.SettingsResponse.Item
	96,  // 27: palm.metasequoia.v1.LocalesResponse.items:type_name -> palm.metasequoia.v1.LocalesResponse.Item
	121, // 28: palm.metasequoia.v1.SiteMaintenanceModeRequest.ttl:type_name -> google.protobuf.Duration
	21,  // 29: palm.metasequoia.v1.SiteInstallRequest.user:type_name -> palm.metasequoia.v1.UserSignUpByEmailRequest
	4,   // 30: palm.metasequoia.v1.SmtpProfile.auth_method:type_name -> palm.metasequoia.v1.SmtpProfile.AuthMethod
	97,  // 31: palm.metasequoia.v1.SmtpProfile.cc:type_name -> palm.metasequoia.v1.EmailTask.Address
	97,  // 32: palm.metasequoia.v1.SmtpProfile.bcc:type_name -> palm.metasequoia.v1.EmailTask.Address
	97,  // 33: palm.metasequoia.v1.SmtpProfile.from:type_name -> palm.metasequoia.v1.EmailTask.Address
	97,  // 34: palm.metasequoia.v1.EmailTask.to:type_name -> palm.metasequoia.v1.EmailTask.Address
	97,  // 35: palm.metasequoia.v1.EmailTask.cc:type_name -> palm.metasequoia.v1.EmailTask.Address
	97,  // 36: palm.metasequoia.v1.EmailTask.bcc:type_name -> palm.metasequoia.v1.EmailTask.Address
	98,  // 37: palm.metasequoia.v1.EmailTask.body:type_name -> palm.metasequoia.v1.EmailTask.Body
	99,  // 38: palm.metasequoia.v1.EmailTask.attachments:type_name -> palm.metasequoia.v1.EmailTask.Attachment
	48,  // 39: palm.metasequoia.v1.SiteTwilioPingRequest.profile:type_name -> palm.metasequoia.v1.TwilioProfile
	97,  // 40: palm.metasequoia.v1.SiteSmtpPingRequest.to:type_name -> palm.metasequoia.v1.EmailTask.Address
	49,  // 41: palm.metasequoia.v1.SiteSmtpPingRequest.profile:type_name -> palm.metasequoia.v1.SmtpProfile
	100, // 42: palm.metasequoia.v1.SiteLayoutResponse.author:type_name -> palm.metasequoia.v1.SiteLayoutResponse.Author
	101, // 43: palm.metasequoia.v1.GoogleProfile.re_captcha:type_name -> palm.metasequoia.v1.GoogleProfile.ReCaptcha
	102, // 44: palm.metasequoia.v1.BaiduProfile.site_verify:type_name -> palm.metasequoia.v1.BaiduProfile.SiteVerify
	104, // 45: palm.metasequoia.v1.SiteStatusResponse.postgresql:type_name -> palm.metasequoia.v1.SiteStatusResponse.PostgreSql
	105, // 46: palm.metasequoia.v1.SiteStatusResponse.mysql:type_name -> palm.metasequoia.v1.SiteStatusResponse.MySql
	106, // 47: palm.metasequoia.v1.SiteStatusResponse.redis:type_name -> palm.metasequoia.v1.SiteStatusResponse.Redis
	107, // 48: palm.metasequoia.v1.SiteStatusResponse.rabbitmq:type_name -> palm.metasequoia.v1.SiteStatusResponse.RabbitMq
	108, // 49: palm.metasequoia.v1.SiteStatusResponse.opensearch:type_name -> palm.metasequoia.v1.SiteStatusResponse.OpenSearch
	110, // 50: palm.metasequoia.v1.SiteStatusResponse.system:type_name -> palm.metasequoia.v1.SiteStatusResponse.System
	109, // 51: palm.metasequoia.v1.SiteStatusResponse.healthes:type_name -> palm.metasequoia.v1.SiteStatusResponse.Health
	8,   // 52: palm.metasequoia.v1.ShorterLinkIndexResponse.pagination:type_name -> palm.metasequoia.v1.Pagination
	112, // 53: palm.metasequoia.v1.ShorterLinkIndexResponse.items:type_name -> palm.metasequoia.v1.ShorterLinkIndexResponse.Item
	113, // 54: palm.metasequoia.v1.TagIndexResponse.items:type_name -> palm.metasequoia.v1.TagIndexResponse.Item
	114, // 55: palm.metasequoia.v1.CategoryIndexResponse.items:type_name -> palm.metasequoia.v1.CategoryIndexResponse.Item
	115, // 56: palm.metasequoia.v1.NotificationIndexResponse.items:type_name -> palm.metasequoia.v1.NotificationIndexResponse.Item
	8,   // 57: palm.metasequoia.v1.NotificationIndexResponse.pagination:type_name -> palm.metasequoia.v1.Pagination
	5,   // 58: palm.metasequoia.v1.NotificationCreateRequest.level:type_name -> palm.metasequoia.v1.NotificationIndexResponse.Item.Level
	5,   // 59: palm.metasequoia.v1.NotificationUpdateRequest.level:type_name -> palm.metasequoia.v1.NotificationIndexResponse.Item.Level
	121, // 60: palm.metasequoia.v1.AttachmentShowRequest.ttl:type_name -> google.protobuf.Duration
	116, // 61: palm.metasequoia.v1.AttachmentShowResponse.item:type_name -> palm.metasequoia.v1.AttachmentIndexResponse.Item
	8,   // 62: palm.metasequoia.v1.AttachmentIndexResponse.pagination:type_name -> palm.metasequoia.v1.Pagination
	116, // 63: palm.metasequoia.v1.AttachmentIndexResponse.items:type_name -> palm.metasequoia.v1.AttachmentIndexResponse.Item
	117, // 64: palm.metasequoia.v1.LeaveWordIndexResponse.items:type_name -> palm.metasequoia.v1.LeaveWordIndexResponse.Item
	8,   // 65: palm.metasequoia.v1.LeaveWordIndexResponse.pagination:type_name -> palm.metasequoia.v1.Pagination
	121, // 66: palm.metasequoia.v1.SignInByGoogleRequest.ttl:type_name -> google.protobuf.Duration
	11,  // 67: palm.metasequoia.v1.GoogleSignInUrlRequest.state:type_name -> palm.metasequoia.v1.Oauth2State
	118, // 68: palm.metasequoia.v1.WechatAllMiniProgramUserResponse.items:type_name -> palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item
	119, // 69: palm.metasequoia.v1.WechatAllOauth2UserResponse.items:type_name -> palm.metasequoia.v1.WechatAllOauth2UserResponse.Item
	123, // 70: palm.metasequoia.v1.SignInByWechatOauth2Request.language:type_name -> palm.orchid.v1.WechatOauth2QrConnectRequest.Language
	121, // 71: palm.metasequoia.v1.SignInByWechatOauth2Request.ttl:type_name -> google.protobuf.Duration
	123, // 72: palm.metasequoia.v1.WechatOauth2SignInUrlRequest.language:type_name -> palm.orchid.v1.WechatOauth2QrConnectRequest.Language
	120, // 73: palm.metasequoia.v1.UserIndexResponse.Item.confirmed_at:type_name -> google.protobuf.Timestamp
	120, // 74: palm.metasequoia.v1.UserIndexResponse.Item.locked_at:type_name -> google.protobuf.Timestamp
	120, // 75: palm.metasequoia.v1.UserIndexResponse.Item.deleted_at:type_name -> google.protobuf.Timestamp
	3,   // 76: palm.metasequoia.v1.UserIndexResponse.Item.by:type_name -> palm.metasequoia.v1.UserSignInResponse.By
	2,   // 77: palm.metasequoia.v1.UserLogsResponse.Item.level:type_name -> palm.metasequoia.v1.UserLogsResponse.Item.Level
	120, // 78: palm.metasequoia.v1.UserLogsResponse.Item.created_at:type_name -> google.protobuf.Timestamp
	120, // 79: palm.metasequoia.v1.SettingsResponse.Item.created_at:type_name -> google.protobuf.Timestamp
	120, // 80: palm.metasequoia.v1.SettingsResponse.Item.updated_at:type_name -> google.protobuf.Timestamp
	120, // 81: palm.metasequoia.v1.LocalesResponse.Item.created_at:type_name -> google.protobuf.Timestamp
	120, // 82: palm.metasequoia.v1.LocalesResponse.Item.updated_at:type_name -> google.protobuf.Timestamp
	120, // 83: palm.metasequoia.v1.SiteStatusResponse.PostgreSql.now:type_name -> google.protobuf.Timestamp
	103, // 84: palm.metasequoia.v1.SiteStatusResponse.PostgreSql.databases:type_name -> palm.metasequoia.v1.SiteStatusResponse.Database
	111, // 85: palm.metasequoia.v1.SiteStatusResponse.Redis.items:type_name -> palm.metasequoia.v1.SiteStatusResponse.Redis.Item
	120, // 86: palm.metasequoia.v1.ShorterLinkIndexResponse.Item.updated_at:type_name -> google.protobuf.Timestamp
	120, // 87: palm.metasequoia.v1.TagIndexResponse.Item.updated_at:type_name -> google.protobuf.Timestamp
	120, // 88: palm.metasequoia.v1.CategoryIndexResponse.Item.updated_at:type_name -> google.protobuf.Timestamp
	5,   // 89: palm.metasequoia.v1.NotificationIndexResponse.Item.level:type_name -> palm.metasequoia.v1.NotificationIndexResponse.Item.Level
	120, // 90: palm.metasequoia.v1.NotificationIndexResponse.Item.updated_at:type_name -> google.protobuf.Timestamp
	1,   // 91: palm.metasequoia.v1.AttachmentIndexResponse.Item.status:type_name -> palm.metasequoia.v1.MediaContent.Status
	120, // 92: palm.metasequoia.v1.AttachmentIndexResponse.Item.updated_at:type_name -> google.protobuf.Timestamp
	9,   // 93: palm.metasequoia.v1.LeaveWordIndexResponse.Item.content:type_name -> palm.metasequoia.v1.MediaContent
	120, // 94: palm.metasequoia.v1.LeaveWordIndexResponse.Item.updated_at:type_name -> google.protobuf.Timestamp
	120, // 95: palm.metasequoia.v1.LeaveWordIndexResponse.Item.created_at:type_name -> google.protobuf.Timestamp
	22,  // 96: palm.metasequoia.v1.User.SignInByPassword:input_type -> palm.metasequoia.v1.UserSignInByPasswordRequest
	21,  // 97: palm.metasequoia.v1.User.SignUpByEmail:input_type -> palm.metasequoia.v1.UserSignUpByEmailRequest
	20,  // 98: palm.metasequoia.v1.User.ConfirmByEmail:input_type -> palm.metasequoia.v1.UserQueryRequest
	19,  // 99: palm.metasequoia.v1.User.ConfirmByToken:input_type -> palm.metasequoia.v1.UserTokenRequest
	20,  // 100: palm.metasequoia.v1.User.UnlockByEmail:input_type -> palm.metasequoia.v1.UserQueryRequest
	19,  // 101: palm.metasequoia.v1.User.UnlockByToken:input_type -> palm.metasequoia.v1.UserTokenRequest
	20,  // 102: palm.metasequoia.v1.User.ForgotPassword:input_type -> palm.metasequoia.v1.UserQueryRequest
	18,  // 103: palm.metasequoia.v1.User.ResetPassword:input_type -> palm.metasequoia.v1.UserResetPasswordRequest
	121, // 104: palm.metasequoia.v1.User.Refresh:input_type -> google.protobuf.Duration
	16,  // 105: palm.metasequoia.v1.User.Logs:input_type -> palm.metasequoia.v1.UserLogsRequest
	12,  // 106: palm.metasequoia.v1.User.SetProfile:input_type -> palm.metasequoia.v1.UserProfile
	122, // 107: palm.metasequoia.v1.User.GetProfile:input_type -> google.protobuf.Empty
	15,  // 108: palm.metasequoia.v1.User.ChangePassword:input_type -> palm.metasequoia.v1.UserChangePasswordRequest
	122, // 109: palm.metasequoia.v1.User.SignOut:input_type -> google.protobuf.Empty
	122, // 110: palm.metasequoia.v1.User.Index:input_type -> google.protobuf.Empty
	20,  // 111: palm.metasequoia.v1.User.Show:input_type -> palm.metasequoia.v1.UserQueryRequest
	20,  // 112: palm.metasequoia.v1.User.Disable:input_type -> palm.metasequoia.v1.UserQueryRequest
	20,  // 113: palm.metasequoia.v1.User.Enable:input_type -> palm.metasequoia.v1.UserQueryRequest
	20,  // 114: palm.metasequoia.v1.User.Lock:input_type -> palm.metasequoia.v1.UserQueryRequest
	20,  // 115: palm.metasequoia.v1.User.Unlock:input_type -> palm.metasequoia.v1.UserQueryRequest
	20,  // 116: palm.metasequoia.v1.User.Confirm:input_type -> palm.metasequoia.v1.UserQueryRequest
	20,  // 117: palm.metasequoia.v1.User.Delete:input_type -> palm.metasequoia.v1.UserQueryRequest
	14,  // 118: palm.metasequoia.v1.User.SetPassword:input_type -> palm.metasequoia.v1.UserSetPasswordRequest
	27,  // 119: palm.metasequoia.v1.Rbac.Can:input_type -> palm.metasequoia.v1.RbacCanRequest
	28,  // 120: palm.metasequoia.v1.Rbac.Has:input_type -> palm.metasequoia.v1.RbacHasRequest
	20,  // 121: palm.metasequoia.v1.Rbac.GetRolesForUser:input_type -> palm.metasequoia.v1.UserQueryRequest
	20,  // 122: palm.metasequoia.v1.Rbac.GetImplicitRolesForUser:input_type -> palm.metasequoia.v1.UserQueryRequest
	32,  // 123: palm.metasequoia.v1.Rbac.AddRolesForUser:input_type -> palm.metasequoia.v1.RbacRolesForUserRequest
	32,  // 124: palm.metasequoia.v1.Rbac.DeleteRolesForUser:input_type -> palm.metasequoia.v1.RbacRolesForUserRequest
	31,  // 125: palm.metasequoia.v1.Rbac.AddPermissionsForRole:input_type -> palm.metasequoia.v1.RbacPermissionsForRoleRequest
	31,  // 126: palm.metasequoia.v1.Rbac.DeletePermissionsForRole:input_type -> palm.metasequoia.v1.RbacPermissionsForRoleRequest
	20,  // 127: palm.metasequoia.v1.Rbac.GetPermissionsForUser:input_type -> palm.metasequoia.v1.UserQueryRequest
	20,  // 128: palm.metasequoia.v1.Rbac.GetImplicitPermissionsForUser:input_type -> palm.metasequoia.v1.UserQueryRequest
	30,  // 129: palm.metasequoia.v1.Rbac.AddPermissionsForUser:input_type -> palm.metasequoia.v1.RbacPermissionsForUserRequest
	30,  // 130: palm.metasequoia.v1.Rbac.DeletePermissionsForUser:input_type -> palm.metasequoia.v1.RbacPermissionsForUserRequest
	35,  // 131: palm.metasequoia.v1.Setting.Set:input_type -> palm.metasequoia.v1.SettingSetRequest
	36,  // 132: palm.metasequoia.v1.Setting.Get:input_type -> palm.metasequoia.v1.SettingGetRequest
	37,  // 133: palm.metasequoia.v1.Setting.ByUser:input_type -> palm.metasequoia.v1.SettingByUserRequest
	122, // 134: palm.metasequoia.v1.Setting.My:input_type -> google.protobuf.Empty
	122, // 135: palm.metasequoia.v1.Setting.Global:input_type -> google.protobuf.Empty
	42,  // 136: palm.metasequoia.v1.Locale.Set:input_type -> palm.metasequoia.v1.LocaleSetRequest
	40,  // 137: palm.metasequoia.v1.Locale.Get:input_type -> palm.metasequoia.v1.LocaleGetRequest
	39,  // 138: palm.metasequoia.v1.Locale.ByLang:input_type -> palm.metasequoia.v1.LocaleByLangRequest
	46,  // 139: palm.metasequoia.v1.Site.SetMaintenanceMode:input_type -> palm.metasequoia.v1.SiteMaintenanceModeRequest
	47,  // 140: palm.metasequoia.v1.Site.Install:input_type -> palm.metasequoia.v1.SiteInstallRequest
	122, // 141: palm.metasequoia.v1.Site.ClearCache:input_type -> google.protobuf.Empty
	122, // 142: palm.metasequoia.v1.Site.Layout:input_type -> google.protobuf.Empty
	100, // 143: palm.metasequoia.v1.Site.SetAuthor:input_type -> palm.metasequoia.v1.SiteLayoutResponse.Author
	54,  // 144: palm.metasequoia.v1.Site.SetCopyright:input_type -> palm.metasequoia.v1.SiteSetCopyrightRequest
	55,  // 145: palm.metasequoia.v1.Site.SetKeywords:input_type -> palm.metasequoia.v1.SiteSetKeywordsRequest
	56,  // 146: palm.metasequoia.v1.Site.SetInfo:input_type -> palm.metasequoia.v1.SiteSetInfoRequest
	53,  // 147: palm.metasequoia.v1.Site.SetLogo:input_type -> palm.metasequoia.v1.SiteSetLogoRequest
	48,  // 148: palm.metasequoia.v1.Site.SetTwilio:input_type -> palm.metasequoia.v1.TwilioProfile
	122, // 149: palm.metasequoia.v1.Site.GetTwilio:input_type -> google.protobuf.Empty
	51,  // 150: palm.metasequoia.v1.Site.PingTwilio:input_type -> palm.metasequoia.v1.SiteTwilioPingRequest
	49,  // 151: palm.metasequoia.v1.Site.SetSmtp:input_type -> palm.metasequoia.v1.SmtpProfile
	122, // 152: palm.metasequoia.v1.Site.GetSmtp:input_type -> google.protobuf.Empty
	52,  // 153: palm.metasequoia.v1.Site.PingSmtp:input_type -> palm.metasequoia.v1.SiteSmtpPingRequest
	43,  // 154: palm.metasequoia.v1.Site.SetIndexNow:input_type -> palm.metasequoia.v1.IndexNowProfile
	122, // 155: palm.metasequoia.v1.Site.GetIndexNow:input_type -> google.protobuf.Empty
	44,  // 156: palm.metasequoia.v1.Site.PingIndexNow:input_type -> palm.metasequoia.v1.IndexNowPingRequest
	58,  // 157: palm.metasequoia.v1.Site.SetGoogle:input_type -> palm.metasequoia.v1.GoogleProfile
	122, // 158: palm.metasequoia.v1.Site.GetGoogle:input_type -> google.protobuf.Empty
	45,  // 159: palm.metasequoia.v1.Site.PingGoogle:input_type -> palm.metasequoia.v1.SitemapPingRequest
	59,  // 160: palm.metasequoia.v1.Site.SetBaidu:input_type -> palm.metasequoia.v1.BaiduProfile
	122, // 161: palm.metasequoia.v1.Site.GetBaidu:input_type -> google.protobuf.Empty
	45,  // 162: palm.metasequoia.v1.Site.PingBaidu:input_type -> palm.metasequoia.v1.SitemapPingRequest
	122, // 163: palm.metasequoia.v1.Site.Status:input_type -> google.protobuf.Empty
	63,  // 164: palm.metasequoia.v1.ShorterLink.Create:input_type -> palm.metasequoia.v1.ShorterLinkCreateRequest
	64,  // 165: palm.metasequoia.v1.ShorterLink.Update:input_type -> palm.metasequoia.v1.ShorterLinkUpdateRequest
	6,   // 166: palm.metasequoia.v1.ShorterLink.Destroy:input_type -> palm.metasequoia.v1.IdRequest
	7,   // 167: palm.metasequoia.v1.ShorterLink.Index:input_type -> palm.metasequoia.v1.Pager
	66,  // 168: palm.metasequoia.v1.Tag.Create:input_type -> palm.metasequoia.v1.TagCreateRequest
	67,  // 169: palm.metasequoia.v1.Tag.Update:input_type -> palm.metasequoia.v1.TagUpdateRequest
	6,   // 170: palm.metasequoia.v1.Tag.Destroy:input_type -> palm.metasequoia.v1.IdRequest
	122, // 171: palm.metasequoia.v1.Tag.Index:input_type -> google.protobuf.Empty
	69,  // 172: palm.metasequoia.v1.Category.Create:input_type -> palm.metasequoia.v1.CategoryCreateRequest
	70,  // 173: palm.metasequoia.v1.Category.Update:input_type -> palm.metasequoia.v1.CategoryUpdateRequest
	6,   // 174: palm.metasequoia.v1.Category.Destroy:input_type -> palm.metasequoia.v1.IdRequest
	122, // 175: palm.metasequoia.v1.Category.Index:input_type -> google.protobuf.Empty
	72,  // 176: palm.metasequoia.v1.Notification.Create:input_type -> palm.metasequoia.v1.NotificationCreateRequest
	73,  // 177: palm.metasequoia.v1.Notification.Update:input_type -> palm.metasequoia.v1.NotificationUpdateRequest
	7,   // 178: palm.metasequoia.v1.Notification.Index:input_type -> palm.metasequoia.v1.Pager
	6,   // 179: palm.metasequoia.v1.Notification.Show:input_type -> palm.metasequoia.v1.IdRequest
	6,   // 180: palm.metasequoia.v1.Notification.Destory:input_type -> palm.metasequoia.v1.IdRequest
	7,   // 181: palm.metasequoia.v1.Attachment.Index:input_type -> palm.metasequoia.v1.Pager
	6,   // 182: palm.metasequoia.v1.Attachment.Destroy:input_type -> palm.metasequoia.v1.IdRequest
	74,  // 183: palm.metasequoia.v1.Attachment.Show:input_type -> palm.metasequoia.v1.AttachmentShowRequest
	9,   // 184: palm.metasequoia.v1.LeaveWord.Create:input_type -> palm.metasequoia.v1.MediaContent
	7,   // 185: palm.metasequoia.v1.LeaveWord.Index:input_type -> palm.metasequoia.v1.Pager
	6,   // 186: palm.metasequoia.v1.LeaveWord.Show:input_type -> palm.metasequoia.v1.IdRequest
	6,   // 187: palm.metasequoia.v1.LeaveWord.Destroy:input_type -> palm.metasequoia.v1.IdRequest
	79,  // 188: palm.metasequoia.v1.Google.SignInUrl:input_type -> palm.metasequoia.v1.GoogleSignInUrlRequest
	78,  // 189: palm.metasequoia.v1.Google.SignIn:input_type -> palm.metasequoia.v1.SignInByGoogleRequest
	122, // 190: palm.metasequoia.v1.Wechat.Oauth2SignInState:input_type -> google.protobuf.Empty
	89,  // 191: palm.metasequoia.v1.Wechat.Oauth2SignInUrl:input_type -> palm.metasequoia.v1.WechatOauth2SignInUrlRequest
	87,  // 192: palm.metasequoia.v1.Wechat.SignInByOauth2:input_type -> palm.metasequoia.v1.SignInByWechatOauth2Request
	122, // 193: palm.metasequoia.v1.Wechat.AllOauth2User:input_type -> google.protobuf.Empty
	6,   // 194: palm.metasequoia.v1.Wechat.DestroyOauth2User:input_type -> palm.metasequoia.v1.IdRequest
	81,  // 195: palm.metasequoia.v1.Wechat.BindOauth2UserById:input_type -> palm.metasequoia.v1.WechatUserBindByIdRequest
	82,  // 196: palm.metasequoia.v1.Wechat.BindOauth2UserByAccount:input_type -> palm.metasequoia.v1.WechatUserBindByAccountRequest
	6,   // 197: palm.metasequoia.v1.Wechat.GetOauth2UserById:input_type -> palm.metasequoia.v1.IdRequest
	83,  // 198: palm.metasequoia.v1.Wechat.GetOauth2UserByOpenId:input_type -> palm.metasequoia.v1.WechatUserQueryByOpenIdRequest
	84,  // 199: palm.metasequoia.v1.Wechat.GetOauth2UserByUnionId:input_type -> palm.metasequoia.v1.WechatUserQueryByUnionIdRequest
	122, // 200: palm.metasequoia.v1.Wechat.AllMiniProgramUser:input_type -> google.protobuf.Empty
	6,   // 201: palm.metasequoia.v1.Wechat.DestroyMiniProgramUser:input_type -> palm.metasequoia.v1.IdRequest
	81,  // 202: palm.metasequoia.v1.Wechat.BindMiniProgramUserById:input_type -> palm.metasequoia.v1.WechatUserBindByIdRequest
	6,   // 203: palm.metasequoia.v1.Wechat.GetMiniProgramUserById:input_type -> palm.metasequoia.v1.IdRequest
	83,  // 204: palm.metasequoia.v1.Wechat.GetMiniProgramUserByOpenId:input_type -> palm.metasequoia.v1.WechatUserQueryByOpenIdRequest
	84,  // 205: palm.metasequoia.v1.Wechat.GetMiniProgramUserByUnionId:input_type -> palm.metasequoia.v1.WechatUserQueryByUnionIdRequest
	23,  // 206: palm.metasequoia.v1.User.SignInByPassword:output_type -> palm.metasequoia.v1.UserSignInResponse
	122, // 207: palm.metasequoia.v1.User.SignUpByEmail:output_type -> google.protobuf.Empty
	122, // 208: palm.metasequoia.v1.User.ConfirmByEmail:output_type -> google.protobuf.Empty
	122, // 209: palm.metasequoia.v1.User.ConfirmByToken:output_type -> google.protobuf.Empty
	122, // 210: palm.metasequoia.v1.User.UnlockByEmail:output_type -> google.protobuf.Empty
	122, // 211: palm.metasequoia.v1.User.UnlockByToken:output_type -> google.protobuf.Empty
	122, // 212: palm.metasequoia.v1.User.ForgotPassword:output_type -> google.protobuf.Empty
	122, // 213: palm.metasequoia.v1.User.ResetPassword:output_type -> google.protobuf.Empty
	23,  // 214: palm.metasequoia.v1.User.Refresh:output_type -> palm.metasequoia.v1.UserSignInResponse
	17,  // 215: palm.metasequoia.v1.User.Logs:output_type -> palm.metasequoia.v1.UserLogsResponse
	122, // 216: palm.metasequoia.v1.User.SetProfile:output_type -> google.protobuf.Empty
	12,  // 217: palm.metasequoia.v1.User.GetProfile:output_type -> palm.metasequoia.v1.UserProfile
	122, // 218: palm.metasequoia.v1.User.ChangePassword:output_type -> google.protobuf.Empty
	122, // 219: palm.metasequoia.v1.User.SignOut:output_type -> google.protobuf.Empty
	13,  // 220: palm.metasequoia.v1.User.Index:output_type -> palm.metasequoia.v1.UserIndexResponse
	92,  // 221: palm.metasequoia.v1.User.Show:output_type -> palm.metasequoia.v1.UserIndexResponse.Item
	122, // 222: palm.metasequoia.v1.User.Disable:output_type -> google.protobuf.Empty
	122, // 223: palm.metasequoia.v1.User.Enable:output_type -> google.protobuf.Empty
	122, // 224: palm.metasequoia.v1.User.Lock:output_type -> google.protobuf.Empty
	122, // 225: palm.metasequoia.v1.User.Unlock:output_type -> google.protobuf.Empty
	122, // 226: palm.metasequoia.v1.User.Confirm:output_type -> google.protobuf.Empty
	122, // 227: palm.metasequoia.v1.User.Delete:output_type -> google.protobuf.Empty
	122, // 228: palm.metasequoia.v1.User.SetPassword:output_type -> google.protobuf.Empty
	122, // 229: palm.metasequoia.v1.Rbac.Can:output_type -> google.protobuf.Empty
	122, // 230: palm.metasequoia.v1.Rbac.Has:output_type -> google.protobuf.Empty
	33,  // 231: palm.metasequoia.v1.Rbac.GetRolesForUser:output_type -> palm.metasequoia.v1.RbacRolesResponse
	33,  // 232: palm.metasequoia.v1.Rbac.GetImplicitRolesForUser:output_type -> palm.metasequoia.v1.RbacRolesResponse
	122, // 233: palm.metasequoia.v1.Rbac.AddRolesForUser:output_type -> google.protobuf.Empty
	122, // 234: palm.metasequoia.v1.Rbac.DeleteRolesForUser:output_type -> google.protobuf.Empty
	122, // 235: palm.metasequoia.v1.Rbac.AddPermissionsForRole:output_type -> google.protobuf.Empty
	122, // 236: palm.metasequoia.v1.Rbac.DeletePermissionsForRole:output_type -> google.protobuf.Empty
	34,  // 237: palm.metasequoia.v1.Rbac.GetPermissionsForUser:output_type -> palm.metasequoia.v1.RbacPermissionsResponse
	34,  // 238: palm.metasequoia.v1.Rbac.GetImplicitPermissionsForUser:output_type -> palm.metasequoia.v1.RbacPermissionsResponse
	122, // 239: palm.metasequoia.v1.Rbac.AddPermissionsForUser:output_type -> google.protobuf.Empty
	122, // 240: palm.metasequoia.v1.Rbac.DeletePermissionsForUser:output_type -> google.protobuf.Empty
	122, // 241: palm.metasequoia.v1.Setting.Set:output_type -> google.protobuf.Empty
	95,  // 242: palm.metasequoia.v1.Setting.Get:output_type -> palm.metasequoia.v1.SettingsResponse.Item
	38,  // 243: palm.metasequoia.v1.Setting.ByUser:output_type -> palm.metasequoia.v1.SettingsResponse
	38,  // 244: palm.metasequoia.v1.Setting.My:output_type -> palm.metasequoia.v1.SettingsResponse
	38,  // 245: palm.metasequoia.v1.Setting.Global:output_type -> palm.metasequoia.v1.SettingsResponse
	122, // 246: palm.metasequoia.v1.Locale.Set:output_type -> google.protobuf.Empty
	96,  // 247: palm.metasequoia.v1.Locale.Get:output_type -> palm.metasequoia.v1.LocalesResponse.Item
	41,  // 248: palm.metasequoia.v1.Locale.ByLang:output_type -> palm.metasequoia.v1.LocalesResponse
	122, // 249: palm.metasequoia.v1.Site.SetMaintenanceMode:output_type -> google.protobuf.Empty
	122, // 250: palm.metasequoia.v1.Site.Install:output_type -> google.protobuf.Empty
	122, // 251: palm.metasequoia.v1.Site.ClearCache:output_type -> google.protobuf.Empty
	57,  // 252: palm.metasequoia.v1.Site.Layout:output_type -> palm.metasequoia.v1.SiteLayoutResponse
	122, // 253: palm.metasequoia.v1.Site.SetAuthor:output_type -> google.protobuf.Empty
	122, // 254: palm.metasequoia.v1.Site.SetCopyright:output_type -> google.protobuf.Empty
	122, // 255: palm.metasequoia.v1.Site.SetKeywords:output_type -> google.protobuf.Empty
	122, // 256: palm.metasequoia.v1.Site.SetInfo:output_type -> google.protobuf.Empty
	122, // 257: palm.metasequoia.v1.Site.SetLogo:output_type -> google.protobuf.Empty
	122, // 258: palm.metasequoia.v1.Site.SetTwilio:output_type -> google.protobuf.Empty
	48,  // 259: palm.metasequoia.v1.Site.GetTwilio:output_type -> palm.metasequoia.v1.TwilioProfile
	122, // 260: palm.metasequoia.v1.Site.PingTwilio:output_type -> google.protobuf.Empty
	122, // 261: palm.metasequoia.v1.Site.SetSmtp:output_type -> google.protobuf.Empty
	49,  // 262: palm.metasequoia.v1.Site.GetSmtp:output_type -> palm.metasequoia.v1.SmtpProfile
	122, // 263: palm.metasequoia.v1.Site.PingSmtp:output_type -> google.protobuf.Empty
	122, // 264: palm.metasequoia.v1.Site.SetIndexNow:output_type -> google.protobuf.Empty
	43,  // 265: palm.metasequoia.v1.Site.GetIndexNow:output_type -> palm.metasequoia.v1.IndexNowProfile
	122, // 266: palm.metasequoia.v1.Site.PingIndexNow:output_type -> google.protobuf.Empty
	122, // 267: palm.metasequoia.v1.Site.SetGoogle:output_type -> google.protobuf.Empty
	58,  // 268: palm.metasequoia.v1.Site.GetGoogle:output_type -> palm.metasequoia.v1.GoogleProfile
	122, // 269: palm.metasequoia.v1.Site.PingGoogle:output_type -> google.protobuf.Empty
	122, // 270: palm.metasequoia.v1.Site.SetBaidu:output_type -> google.protobuf.Empty
	59,  // 271: palm.metasequoia.v1.Site.GetBaidu:output_type -> palm.metasequoia.v1.BaiduProfile
	122, // 272: palm.metasequoia.v1.Site.PingBaidu:output_type -> google.protobuf.Empty
	61,  // 273: palm.metasequoia.v1.Site.Status:output_type -> palm.metasequoia.v1.SiteStatusResponse
	122, // 274: palm.metasequoia.v1.ShorterLink.Create:output_type -> google.protobuf.Empty
	122, // 275: palm.metasequoia.v1.ShorterLink.Update:output_type -> google.protobuf.Empty
	122, // 276: palm.metasequoia.v1.ShorterLink.Destroy:output_type -> google.protobuf.Empty
	62,  // 277: palm.metasequoia.v1.ShorterLink.Index:output_type -> palm.metasequoia.v1.ShorterLinkIndexResponse
	122, // 278: palm.metasequoia.v1.Tag.Create:output_type -> google.protobuf.Empty
	122, // 279: palm.metasequoia.v1.Tag.Update:output_type -> google.protobuf.Empty
	122, // 280: palm.metasequoia.v1.Tag.Destroy:output_type -> google.protobuf.Empty
	65,  // 281: palm.metasequoia.v1.Tag.Index:output_type -> palm.metasequoia.v1.TagIndexResponse
	122, // 282: palm.metasequoia.v1.Category.Create:output_type -> google.protobuf.Empty
	122, // 283: palm.metasequoia.v1.Category.Update:output_type -> google.protobuf.Empty
	122, // 284: palm.metasequoia.v1.Category.Destroy:output_type -> google.protobuf.Empty
	68,  // 285: palm.metasequoia.v1.Category.Index:output_type -> palm.metasequoia.v1.CategoryIndexResponse
	122, // 286: palm.metasequoia.v1.Notification.Create:output_type -> google.protobuf.Empty
	122, // 287: palm.metasequoia.v1.Notification.Update:output_type -> google.protobuf.Empty
	71,  // 288: palm.metasequoia.v1.Notification.Index:output_type -> palm.metasequoia.v1.NotificationIndexResponse
	115, // 289: palm.metasequoia.v1.Notification.Show:output_type -> palm.metasequoia.v1.NotificationIndexResponse.Item
	122, // 290: palm.metasequoia.v1.Notification.Destory:output_type -> google.protobuf.Empty
	76,  // 291: palm.metasequoia.v1.Attachment.Index:output_type -> palm.metasequoia.v1.AttachmentIndexResponse
	122, // 292: palm.metasequoia.v1.Attachment.Destroy:output_type -> google.protobuf.Empty
	75,  // 293: palm.metasequoia.v1.Attachment.Show:output_type -> palm.metasequoia.v1.AttachmentShowResponse
	122, // 294: palm.metasequoia.v1.LeaveWord.Create:output_type -> google.protobuf.Empty
	77,  // 295: palm.metasequoia.v1.LeaveWord.Index:output_type -> palm.metasequoia.v1.LeaveWordIndexResponse
	117, // 296: palm.metasequoia.v1.LeaveWord.Show:output_type -> palm.metasequoia.v1.LeaveWordIndexResponse.Item
	122, // 297: palm.metasequoia.v1.LeaveWord.Destroy:output_type -> google.protobuf.Empty
	80,  // 298: palm.metasequoia.v1.Google.SignInUrl:output_type -> palm.metasequoia.v1.GoogleSignInUrlResponse
	23,  // 299: palm.metasequoia.v1.Google.SignIn:output_type -> palm.metasequoia.v1.UserSignInResponse
	88,  // 300: palm.metasequoia.v1.Wechat.Oauth2SignInState:output_type -> palm.metasequoia.v1.WechatOauth2SignInStateResponse
	124, // 301: palm.metasequoia.v1.Wechat.Oauth2SignInUrl:output_type -> palm.orchid.v1.WechatOauth2QrConnectResponse
	23,  // 302: palm.metasequoia.v1.Wechat.SignInByOauth2:output_type -> palm.metasequoia.v1.UserSignInResponse
	86,  // 303: palm.metasequoia.v1.Wechat.AllOauth2User:output_type -> palm.metasequoia.v1.WechatAllOauth2UserResponse
	122, // 304: palm.metasequoia.v1.Wechat.DestroyOauth2User:output_type -> google.protobuf.Empty
	122, // 305: palm.metasequoia.v1.Wechat.BindOauth2UserById:output_type -> google.protobuf.Empty
	122, // 306: palm.metasequoia.v1.Wechat.BindOauth2UserByAccount:output_type -> google.protobuf.Empty
	119, // 307: palm.metasequoia.v1.Wechat.GetOauth2UserById:output_type -> palm.metasequoia.v1.WechatAllOauth2UserResponse.Item
	119, // 308: palm.metasequoia.v1.Wechat.GetOauth2UserByOpenId:output_type -> palm.metasequoia.v1.WechatAllOauth2UserResponse.Item
	86,  // 309: palm.metasequoia.v1.Wechat.GetOauth2UserByUnionId:output_type -> palm.metasequoia.v1.WechatAllOauth2UserResponse
	85,  // 310: palm.metasequoia.v1.Wechat.AllMiniProgramUser:output_type -> palm.metasequoia.v1.WechatAllMiniProgramUserResponse
	122, // 311: palm.metasequoia.v1.Wechat.DestroyMiniProgramUser:output_type -> google.protobuf.Empty
	122, // 312: palm.metasequoia.v1.Wechat.BindMiniProgramUserById:output_type -> google.protobuf.Empty
	118, // 313: palm.metasequoia.v1.Wechat.GetMiniProgramUserById:output_type -> palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item
	118, // 314: palm.metasequoia.v1.Wechat.GetMiniProgramUserByOpenId:output_type -> palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item
	85,  // 315: palm.metasequoia.v1.Wechat.GetMiniProgramUserByUnionId:output_type -> palm.metasequoia.v1.WechatAllMiniProgramUserResponse
	206, // [206:316] is the sub-list for method output_type
	96,  // [96:206] is the sub-list for method input_type
	96,  // [96:96] is the sub-list for extension type_name
	96,  // [96:96] is the sub-list for extension extendee
	0,   // [0:96] is the sub-list for field type_name
}

func init() { file_metasequoia_proto_init() }
func file_metasequoia_proto_init() {
	if File_metasequoia_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_metasequoia_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pager); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Oauth2State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChangePasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSignUpByEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSignInByPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSignInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacCanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacHasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacPermissionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacPermissionsForUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacPermissionsForRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacRolesForUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingByUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocaleByLangRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocaleGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocaleSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexNowProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexNowPingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SitemapPingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteMaintenanceModeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteInstallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwilioProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmtpProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteTwilioPingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteSmtpPingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteSetLogoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteSetCopyrightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteSetKeywordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteSetInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteLayoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShorterLinkIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShorterLinkCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShorterLinkUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachmentShowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachmentShowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachmentIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveWordIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInByGoogleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleSignInUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleSignInUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatUserBindByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatUserBindByAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatUserQueryByOpenIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatUserQueryByUnionIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatAllMiniProgramUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatAllOauth2UserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInByWechatOauth2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatOauth2SignInStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatOauth2SignInUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniProgramUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIndexResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLogsResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role_Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingsResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalesResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailTask_Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailTask_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailTask_Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteLayoutResponse_Author); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleProfile_ReCaptcha); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduProfile_SiteVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteStatusResponse_Database); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteStatusResponse_PostgreSql); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteStatusResponse_MySql); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteStatusResponse_Redis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteStatusResponse_RabbitMq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteStatusResponse_OpenSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteStatusResponse_Health); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteStatusResponse_System); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteStatusResponse_Redis_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShorterLinkIndexResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagIndexResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryIndexResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationIndexResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachmentIndexResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveWordIndexResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatAllMiniProgramUserResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metasequoia_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatAllOauth2UserResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_metasequoia_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_metasequoia_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_metasequoia_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_metasequoia_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*UserQueryRequest_Email)(nil),
		(*UserQueryRequest_Nickname)(nil),
		(*UserQueryRequest_Phone)(nil),
		(*UserQueryRequest_Uid)(nil),
	}
	file_metasequoia_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*UserSignInByPasswordRequest_Email)(nil),
		(*UserSignInByPasswordRequest_Nickname)(nil),
		(*UserSignInByPasswordRequest_Phone)(nil),
	}
	file_metasequoia_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*Permission_User)(nil),
		(*Permission_Role)(nil),
	}
	file_metasequoia_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*Resource_S)(nil),
		(*Resource_I)(nil),
	}
	file_metasequoia_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*Role_Administrator)(nil),
		(*Role_Root)(nil),
		(*Role_Member_)(nil),
	}
	file_metasequoia_proto_msgTypes[42].OneofWrappers = []interface{}{}
	file_metasequoia_proto_msgTypes[52].OneofWrappers = []interface{}{}
	file_metasequoia_proto_msgTypes[53].OneofWrappers = []interface{}{}
	file_metasequoia_proto_msgTypes[63].OneofWrappers = []interface{}{
		(*CategoryCreateRequest_Left)(nil),
		(*CategoryCreateRequest_Parent)(nil),
	}
	file_metasequoia_proto_msgTypes[84].OneofWrappers = []interface{}{}
	file_metasequoia_proto_msgTypes[86].OneofWrappers = []interface{}{}
	file_metasequoia_proto_msgTypes[89].OneofWrappers = []interface{}{}
	file_metasequoia_proto_msgTypes[112].OneofWrappers = []interface{}{}
	file_metasequoia_proto_msgTypes[113].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_metasequoia_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   114,
			NumExtensions: 0,
			NumServices:   13,
		},
		GoTypes:           file_metasequoia_proto_goTypes,
		DependencyIndexes: file_metasequoia_proto_depIdxs,
		EnumInfos:         file_metasequoia_proto_enumTypes,
		MessageInfos:      file_metasequoia_proto_msgTypes,
	}.Build()
	File_metasequoia_proto = out.File
	file_metasequoia_proto_rawDesc = nil
	file_metasequoia_proto_goTypes = nil
	file_metasequoia_proto_depIdxs = nil
}
