// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: orchid.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WechatOauth2QrConnectRequest_Language int32

const (
	WechatOauth2QrConnectRequest_EN WechatOauth2QrConnectRequest_Language = 0
	WechatOauth2QrConnectRequest_CN WechatOauth2QrConnectRequest_Language = 1
	WechatOauth2QrConnectRequest_TW WechatOauth2QrConnectRequest_Language = 2
)

// Enum value maps for WechatOauth2QrConnectRequest_Language.
var (
	WechatOauth2QrConnectRequest_Language_name = map[int32]string{
		0: "EN",
		1: "CN",
		2: "TW",
	}
	WechatOauth2QrConnectRequest_Language_value = map[string]int32{
		"EN": 0,
		"CN": 1,
		"TW": 2,
	}
)

func (x WechatOauth2QrConnectRequest_Language) Enum() *WechatOauth2QrConnectRequest_Language {
	p := new(WechatOauth2QrConnectRequest_Language)
	*p = x
	return p
}

func (x WechatOauth2QrConnectRequest_Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WechatOauth2QrConnectRequest_Language) Descriptor() protoreflect.EnumDescriptor {
	return file_orchid_proto_enumTypes[0].Descriptor()
}

func (WechatOauth2QrConnectRequest_Language) Type() protoreflect.EnumType {
	return &file_orchid_proto_enumTypes[0]
}

func (x WechatOauth2QrConnectRequest_Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WechatOauth2QrConnectRequest_Language.Descriptor instead.
func (WechatOauth2QrConnectRequest_Language) EnumDescriptor() ([]byte, []int) {
	return file_orchid_proto_rawDescGZIP(), []int{4, 0}
}

type WechatOauth2LoginResponse_Sex int32

const (
	WechatOauth2LoginResponse_MALE   WechatOauth2LoginResponse_Sex = 0
	WechatOauth2LoginResponse_FEMALE WechatOauth2LoginResponse_Sex = 1
)

// Enum value maps for WechatOauth2LoginResponse_Sex.
var (
	WechatOauth2LoginResponse_Sex_name = map[int32]string{
		0: "MALE",
		1: "FEMALE",
	}
	WechatOauth2LoginResponse_Sex_value = map[string]int32{
		"MALE":   0,
		"FEMALE": 1,
	}
)

func (x WechatOauth2LoginResponse_Sex) Enum() *WechatOauth2LoginResponse_Sex {
	p := new(WechatOauth2LoginResponse_Sex)
	*p = x
	return p
}

func (x WechatOauth2LoginResponse_Sex) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WechatOauth2LoginResponse_Sex) Descriptor() protoreflect.EnumDescriptor {
	return file_orchid_proto_enumTypes[1].Descriptor()
}

func (WechatOauth2LoginResponse_Sex) Type() protoreflect.EnumType {
	return &file_orchid_proto_enumTypes[1]
}

func (x WechatOauth2LoginResponse_Sex) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WechatOauth2LoginResponse_Sex.Descriptor instead.
func (WechatOauth2LoginResponse_Sex) EnumDescriptor() ([]byte, []int) {
	return file_orchid_proto_rawDescGZIP(), []int{6, 0}
}

type WechatMiniProgramLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *WechatMiniProgramLoginRequest) Reset() {
	*x = WechatMiniProgramLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orchid_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniProgramLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniProgramLoginRequest) ProtoMessage() {}

func (x *WechatMiniProgramLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchid_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniProgramLoginRequest.ProtoReflect.Descriptor instead.
func (*WechatMiniProgramLoginRequest) Descriptor() ([]byte, []int) {
	return file_orchid_proto_rawDescGZIP(), []int{0}
}

func (x *WechatMiniProgramLoginRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WechatMiniProgramLoginRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type WechatMiniProgramLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unionid    string `protobuf:"bytes,1,opt,name=unionid,proto3" json:"unionid,omitempty"`
	Openid     string `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
	SessionKey string `protobuf:"bytes,3,opt,name=session_key,json=sessionKey,proto3" json:"session_key,omitempty"`
}

func (x *WechatMiniProgramLoginResponse) Reset() {
	*x = WechatMiniProgramLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orchid_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniProgramLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniProgramLoginResponse) ProtoMessage() {}

func (x *WechatMiniProgramLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchid_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniProgramLoginResponse.ProtoReflect.Descriptor instead.
func (*WechatMiniProgramLoginResponse) Descriptor() ([]byte, []int) {
	return file_orchid_proto_rawDescGZIP(), []int{1}
}

func (x *WechatMiniProgramLoginResponse) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *WechatMiniProgramLoginResponse) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *WechatMiniProgramLoginResponse) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

type WechatMiniProgramPhoneNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *WechatMiniProgramPhoneNumberRequest) Reset() {
	*x = WechatMiniProgramPhoneNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orchid_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniProgramPhoneNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniProgramPhoneNumberRequest) ProtoMessage() {}

func (x *WechatMiniProgramPhoneNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchid_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniProgramPhoneNumberRequest.ProtoReflect.Descriptor instead.
func (*WechatMiniProgramPhoneNumberRequest) Descriptor() ([]byte, []int) {
	return file_orchid_proto_rawDescGZIP(), []int{2}
}

func (x *WechatMiniProgramPhoneNumberRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WechatMiniProgramPhoneNumberRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type WechatMiniProgramPhoneNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber     string `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PurePhoneNumber string `protobuf:"bytes,2,opt,name=pure_phone_number,json=purePhoneNumber,proto3" json:"pure_phone_number,omitempty"`
	CountryCode     string `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	WaterMark       uint64 `protobuf:"varint,4,opt,name=water_mark,json=waterMark,proto3" json:"water_mark,omitempty"`
}

func (x *WechatMiniProgramPhoneNumberResponse) Reset() {
	*x = WechatMiniProgramPhoneNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orchid_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniProgramPhoneNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniProgramPhoneNumberResponse) ProtoMessage() {}

func (x *WechatMiniProgramPhoneNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchid_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniProgramPhoneNumberResponse.ProtoReflect.Descriptor instead.
func (*WechatMiniProgramPhoneNumberResponse) Descriptor() ([]byte, []int) {
	return file_orchid_proto_rawDescGZIP(), []int{3}
}

func (x *WechatMiniProgramPhoneNumberResponse) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *WechatMiniProgramPhoneNumberResponse) GetPurePhoneNumber() string {
	if x != nil {
		return x.PurePhoneNumber
	}
	return ""
}

func (x *WechatMiniProgramPhoneNumberResponse) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *WechatMiniProgramPhoneNumberResponse) GetWaterMark() uint64 {
	if x != nil {
		return x.WaterMark
	}
	return 0
}

type WechatOauth2QrConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId       string                                `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	RedirectUri string                                `protobuf:"bytes,2,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	State       string                                `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Language    WechatOauth2QrConnectRequest_Language `protobuf:"varint,9,opt,name=language,proto3,enum=palm.orchid.v1.WechatOauth2QrConnectRequest_Language" json:"language,omitempty"`
}

func (x *WechatOauth2QrConnectRequest) Reset() {
	*x = WechatOauth2QrConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orchid_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatOauth2QrConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatOauth2QrConnectRequest) ProtoMessage() {}

func (x *WechatOauth2QrConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchid_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatOauth2QrConnectRequest.ProtoReflect.Descriptor instead.
func (*WechatOauth2QrConnectRequest) Descriptor() ([]byte, []int) {
	return file_orchid_proto_rawDescGZIP(), []int{4}
}

func (x *WechatOauth2QrConnectRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WechatOauth2QrConnectRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *WechatOauth2QrConnectRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *WechatOauth2QrConnectRequest) GetLanguage() WechatOauth2QrConnectRequest_Language {
	if x != nil {
		return x.Language
	}
	return WechatOauth2QrConnectRequest_EN
}

type WechatOauth2QrConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *WechatOauth2QrConnectResponse) Reset() {
	*x = WechatOauth2QrConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orchid_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatOauth2QrConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatOauth2QrConnectResponse) ProtoMessage() {}

func (x *WechatOauth2QrConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchid_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatOauth2QrConnectResponse.ProtoReflect.Descriptor instead.
func (*WechatOauth2QrConnectResponse) Descriptor() ([]byte, []int) {
	return file_orchid_proto_rawDescGZIP(), []int{5}
}

func (x *WechatOauth2QrConnectResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type WechatOauth2LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unionid    string                        `protobuf:"bytes,1,opt,name=unionid,proto3" json:"unionid,omitempty"`
	Openid     string                        `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
	Nickname   string                        `protobuf:"bytes,11,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex        WechatOauth2LoginResponse_Sex `protobuf:"varint,12,opt,name=sex,proto3,enum=palm.orchid.v1.WechatOauth2LoginResponse_Sex" json:"sex,omitempty"`
	Province   string                        `protobuf:"bytes,13,opt,name=province,proto3" json:"province,omitempty"`
	City       string                        `protobuf:"bytes,14,opt,name=city,proto3" json:"city,omitempty"`
	Country    string                        `protobuf:"bytes,15,opt,name=country,proto3" json:"country,omitempty"`
	Headimgurl *string                       `protobuf:"bytes,16,opt,name=headimgurl,proto3,oneof" json:"headimgurl,omitempty"`
	Privilege  []string                      `protobuf:"bytes,17,rep,name=privilege,proto3" json:"privilege,omitempty"`
}

func (x *WechatOauth2LoginResponse) Reset() {
	*x = WechatOauth2LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orchid_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatOauth2LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatOauth2LoginResponse) ProtoMessage() {}

func (x *WechatOauth2LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchid_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatOauth2LoginResponse.ProtoReflect.Descriptor instead.
func (*WechatOauth2LoginResponse) Descriptor() ([]byte, []int) {
	return file_orchid_proto_rawDescGZIP(), []int{6}
}

func (x *WechatOauth2LoginResponse) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *WechatOauth2LoginResponse) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *WechatOauth2LoginResponse) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *WechatOauth2LoginResponse) GetSex() WechatOauth2LoginResponse_Sex {
	if x != nil {
		return x.Sex
	}
	return WechatOauth2LoginResponse_MALE
}

func (x *WechatOauth2LoginResponse) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *WechatOauth2LoginResponse) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *WechatOauth2LoginResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *WechatOauth2LoginResponse) GetHeadimgurl() string {
	if x != nil && x.Headimgurl != nil {
		return *x.Headimgurl
	}
	return ""
}

func (x *WechatOauth2LoginResponse) GetPrivilege() []string {
	if x != nil {
		return x.Privilege
	}
	return nil
}

type WechatOauth2LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId    string                                `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Code     string                                `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	State    string                                `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Language WechatOauth2QrConnectRequest_Language `protobuf:"varint,9,opt,name=language,proto3,enum=palm.orchid.v1.WechatOauth2QrConnectRequest_Language" json:"language,omitempty"`
}

func (x *WechatOauth2LoginRequest) Reset() {
	*x = WechatOauth2LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orchid_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatOauth2LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatOauth2LoginRequest) ProtoMessage() {}

func (x *WechatOauth2LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchid_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatOauth2LoginRequest.ProtoReflect.Descriptor instead.
func (*WechatOauth2LoginRequest) Descriptor() ([]byte, []int) {
	return file_orchid_proto_rawDescGZIP(), []int{7}
}

func (x *WechatOauth2LoginRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WechatOauth2LoginRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *WechatOauth2LoginRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *WechatOauth2LoginRequest) GetLanguage() WechatOauth2QrConnectRequest_Language {
	if x != nil {
		return x.Language
	}
	return WechatOauth2QrConnectRequest_EN
}

var File_orchid_proto protoreflect.FileDescriptor

var file_orchid_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6f, 0x72, 0x63, 0x68, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x22, 0x4a,
	0x0a, 0x1d, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x73, 0x0a, 0x1e, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22,
	0x50, 0x0a, 0x23, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0xb7, 0x01, 0x0a, 0x24, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a,
	0x11, 0x70, 0x75, 0x72, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x72, 0x65, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x77, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x77, 0x61, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x22, 0xe5, 0x01, 0x0a, 0x1c,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x51, 0x72, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f,
	0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x51, 0x0a, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x51, 0x72, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22,
	0x22, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x45,
	0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x4e, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x54,
	0x57, 0x10, 0x02, 0x22, 0x31, 0x0a, 0x1d, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x32, 0x51, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xe3, 0x02, 0x0a, 0x19, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x69, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x78, 0x52, 0x03,
	0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x23, 0x0a,
	0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18,
	0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x22, 0x1b, 0x0a, 0x03, 0x53, 0x65, 0x78, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x4c, 0x45, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x01, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x22, 0xae, 0x01, 0x0a,
	0x18, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x51, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x51, 0x72, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x32, 0xf9, 0x01,
	0x0a, 0x11, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x12, 0x68, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x2d, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a,
	0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x69, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xda, 0x01, 0x0a, 0x0c, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x12, 0x6a, 0x0a, 0x09, 0x51, 0x72,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x2c, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6f,
	0x72, 0x63, 0x68, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x32, 0x51, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6f, 0x72, 0x63,
	0x68, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x32, 0x51, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x28, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x69, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x6f, 0x72, 0x63, 0x68, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x56, 0x0a, 0x2c, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x78, 0x69, 0x76, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x6f, 0x72, 0x63,
	0x68, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x78, 0x69, 0x76, 0x2f,
	0x70, 0x61, 0x6c, 0x6d, 0x2f, 0x6f, 0x72, 0x63, 0x68, 0x69, 0x64, 0x2f, 0x76, 0x32, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_orchid_proto_rawDescOnce sync.Once
	file_orchid_proto_rawDescData = file_orchid_proto_rawDesc
)

func file_orchid_proto_rawDescGZIP() []byte {
	file_orchid_proto_rawDescOnce.Do(func() {
		file_orchid_proto_rawDescData = protoimpl.X.CompressGZIP(file_orchid_proto_rawDescData)
	})
	return file_orchid_proto_rawDescData
}

var file_orchid_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_orchid_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_orchid_proto_goTypes = []interface{}{
	(WechatOauth2QrConnectRequest_Language)(0),   // 0: palm.orchid.v1.WechatOauth2QrConnectRequest.Language
	(WechatOauth2LoginResponse_Sex)(0),           // 1: palm.orchid.v1.WechatOauth2LoginResponse.Sex
	(*WechatMiniProgramLoginRequest)(nil),        // 2: palm.orchid.v1.WechatMiniProgramLoginRequest
	(*WechatMiniProgramLoginResponse)(nil),       // 3: palm.orchid.v1.WechatMiniProgramLoginResponse
	(*WechatMiniProgramPhoneNumberRequest)(nil),  // 4: palm.orchid.v1.WechatMiniProgramPhoneNumberRequest
	(*WechatMiniProgramPhoneNumberResponse)(nil), // 5: palm.orchid.v1.WechatMiniProgramPhoneNumberResponse
	(*WechatOauth2QrConnectRequest)(nil),         // 6: palm.orchid.v1.WechatOauth2QrConnectRequest
	(*WechatOauth2QrConnectResponse)(nil),        // 7: palm.orchid.v1.WechatOauth2QrConnectResponse
	(*WechatOauth2LoginResponse)(nil),            // 8: palm.orchid.v1.WechatOauth2LoginResponse
	(*WechatOauth2LoginRequest)(nil),             // 9: palm.orchid.v1.WechatOauth2LoginRequest
}
var file_orchid_proto_depIdxs = []int32{
	0, // 0: palm.orchid.v1.WechatOauth2QrConnectRequest.language:type_name -> palm.orchid.v1.WechatOauth2QrConnectRequest.Language
	1, // 1: palm.orchid.v1.WechatOauth2LoginResponse.sex:type_name -> palm.orchid.v1.WechatOauth2LoginResponse.Sex
	0, // 2: palm.orchid.v1.WechatOauth2LoginRequest.language:type_name -> palm.orchid.v1.WechatOauth2QrConnectRequest.Language
	2, // 3: palm.orchid.v1.WechatMiniProgram.Login:input_type -> palm.orchid.v1.WechatMiniProgramLoginRequest
	4, // 4: palm.orchid.v1.WechatMiniProgram.PhoneNumber:input_type -> palm.orchid.v1.WechatMiniProgramPhoneNumberRequest
	6, // 5: palm.orchid.v1.WechatOauth2.QrConnect:input_type -> palm.orchid.v1.WechatOauth2QrConnectRequest
	9, // 6: palm.orchid.v1.WechatOauth2.Login:input_type -> palm.orchid.v1.WechatOauth2LoginRequest
	3, // 7: palm.orchid.v1.WechatMiniProgram.Login:output_type -> palm.orchid.v1.WechatMiniProgramLoginResponse
	5, // 8: palm.orchid.v1.WechatMiniProgram.PhoneNumber:output_type -> palm.orchid.v1.WechatMiniProgramPhoneNumberResponse
	7, // 9: palm.orchid.v1.WechatOauth2.QrConnect:output_type -> palm.orchid.v1.WechatOauth2QrConnectResponse
	8, // 10: palm.orchid.v1.WechatOauth2.Login:output_type -> palm.orchid.v1.WechatOauth2LoginResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_orchid_proto_init() }
func file_orchid_proto_init() {
	if File_orchid_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_orchid_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniProgramLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orchid_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniProgramLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orchid_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniProgramPhoneNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orchid_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniProgramPhoneNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orchid_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatOauth2QrConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orchid_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatOauth2QrConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orchid_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatOauth2LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orchid_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatOauth2LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_orchid_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orchid_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_orchid_proto_goTypes,
		DependencyIndexes: file_orchid_proto_depIdxs,
		EnumInfos:         file_orchid_proto_enumTypes,
		MessageInfos:      file_orchid_proto_msgTypes,
	}.Build()
	File_orchid_proto = out.File
	file_orchid_proto_rawDesc = nil
	file_orchid_proto_goTypes = nil
	file_orchid_proto_depIdxs = nil
}
