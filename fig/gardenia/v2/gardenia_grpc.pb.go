// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.0
// source: gardenia.proto

package v2

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const ()

// OpenFireClient is the client API for OpenFire service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OpenFireClient interface {
}

type openFireClient struct {
	cc grpc.ClientConnInterface
}

func NewOpenFireClient(cc grpc.ClientConnInterface) OpenFireClient {
	return &openFireClient{cc}
}

// OpenFireServer is the server API for OpenFire service.
// All implementations must embed UnimplementedOpenFireServer
// for forward compatibility
type OpenFireServer interface {
	mustEmbedUnimplementedOpenFireServer()
}

// UnimplementedOpenFireServer must be embedded to have forward compatible implementations.
type UnimplementedOpenFireServer struct {
}

func (UnimplementedOpenFireServer) mustEmbedUnimplementedOpenFireServer() {}

// UnsafeOpenFireServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OpenFireServer will
// result in compilation errors.
type UnsafeOpenFireServer interface {
	mustEmbedUnimplementedOpenFireServer()
}

func RegisterOpenFireServer(s grpc.ServiceRegistrar, srv OpenFireServer) {
	s.RegisterService(&OpenFire_ServiceDesc, srv)
}

// OpenFire_ServiceDesc is the grpc.ServiceDesc for OpenFire service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OpenFire_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "palm.gardenia.v1.OpenFire",
	HandlerType: (*OpenFireServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "gardenia.proto",
}
