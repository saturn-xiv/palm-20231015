// source: orchid.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.palm.orchid.v1.WechatMiniProgramLoginRequest', null, global);
goog.exportSymbol('proto.palm.orchid.v1.WechatMiniProgramLoginResponse', null, global);
goog.exportSymbol('proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest', null, global);
goog.exportSymbol('proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse', null, global);
goog.exportSymbol('proto.palm.orchid.v1.WechatOauth2LoginRequest', null, global);
goog.exportSymbol('proto.palm.orchid.v1.WechatOauth2LoginRequest.Language', null, global);
goog.exportSymbol('proto.palm.orchid.v1.WechatOauth2LoginResponse', null, global);
goog.exportSymbol('proto.palm.orchid.v1.WechatOauth2LoginResponse.Sex', null, global);
goog.exportSymbol('proto.palm.orchid.v1.WechatOauth2QrConnectRequest', null, global);
goog.exportSymbol('proto.palm.orchid.v1.WechatOauth2QrConnectRequest.Language', null, global);
goog.exportSymbol('proto.palm.orchid.v1.WechatOauth2QrConnectResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.orchid.v1.WechatMiniProgramLoginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.orchid.v1.WechatMiniProgramLoginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.orchid.v1.WechatMiniProgramLoginRequest.displayName = 'proto.palm.orchid.v1.WechatMiniProgramLoginRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.orchid.v1.WechatMiniProgramLoginResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.orchid.v1.WechatMiniProgramLoginResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.orchid.v1.WechatMiniProgramLoginResponse.displayName = 'proto.palm.orchid.v1.WechatMiniProgramLoginResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.displayName = 'proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.displayName = 'proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.orchid.v1.WechatOauth2QrConnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.orchid.v1.WechatOauth2QrConnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.orchid.v1.WechatOauth2QrConnectRequest.displayName = 'proto.palm.orchid.v1.WechatOauth2QrConnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.orchid.v1.WechatOauth2QrConnectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.orchid.v1.WechatOauth2QrConnectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.orchid.v1.WechatOauth2QrConnectResponse.displayName = 'proto.palm.orchid.v1.WechatOauth2QrConnectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.palm.orchid.v1.WechatOauth2LoginResponse.repeatedFields_, null);
};
goog.inherits(proto.palm.orchid.v1.WechatOauth2LoginResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.orchid.v1.WechatOauth2LoginResponse.displayName = 'proto.palm.orchid.v1.WechatOauth2LoginResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.orchid.v1.WechatOauth2LoginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.orchid.v1.WechatOauth2LoginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.orchid.v1.WechatOauth2LoginRequest.displayName = 'proto.palm.orchid.v1.WechatOauth2LoginRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.orchid.v1.WechatMiniProgramLoginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.orchid.v1.WechatMiniProgramLoginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.orchid.v1.WechatMiniProgramLoginRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.orchid.v1.WechatMiniProgramLoginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    appId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.orchid.v1.WechatMiniProgramLoginRequest}
 */
proto.palm.orchid.v1.WechatMiniProgramLoginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.orchid.v1.WechatMiniProgramLoginRequest;
  return proto.palm.orchid.v1.WechatMiniProgramLoginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.orchid.v1.WechatMiniProgramLoginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.orchid.v1.WechatMiniProgramLoginRequest}
 */
proto.palm.orchid.v1.WechatMiniProgramLoginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.orchid.v1.WechatMiniProgramLoginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.orchid.v1.WechatMiniProgramLoginRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.orchid.v1.WechatMiniProgramLoginRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.orchid.v1.WechatMiniProgramLoginRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string app_id = 1;
 * @return {string}
 */
proto.palm.orchid.v1.WechatMiniProgramLoginRequest.prototype.getAppId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatMiniProgramLoginRequest} returns this
 */
proto.palm.orchid.v1.WechatMiniProgramLoginRequest.prototype.setAppId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.palm.orchid.v1.WechatMiniProgramLoginRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatMiniProgramLoginRequest} returns this
 */
proto.palm.orchid.v1.WechatMiniProgramLoginRequest.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.orchid.v1.WechatMiniProgramLoginResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.orchid.v1.WechatMiniProgramLoginResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.orchid.v1.WechatMiniProgramLoginResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.orchid.v1.WechatMiniProgramLoginResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    unionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    openid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sessionKey: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.orchid.v1.WechatMiniProgramLoginResponse}
 */
proto.palm.orchid.v1.WechatMiniProgramLoginResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.orchid.v1.WechatMiniProgramLoginResponse;
  return proto.palm.orchid.v1.WechatMiniProgramLoginResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.orchid.v1.WechatMiniProgramLoginResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.orchid.v1.WechatMiniProgramLoginResponse}
 */
proto.palm.orchid.v1.WechatMiniProgramLoginResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpenid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.orchid.v1.WechatMiniProgramLoginResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.orchid.v1.WechatMiniProgramLoginResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.orchid.v1.WechatMiniProgramLoginResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.orchid.v1.WechatMiniProgramLoginResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOpenid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSessionKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string unionid = 1;
 * @return {string}
 */
proto.palm.orchid.v1.WechatMiniProgramLoginResponse.prototype.getUnionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatMiniProgramLoginResponse} returns this
 */
proto.palm.orchid.v1.WechatMiniProgramLoginResponse.prototype.setUnionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string openid = 2;
 * @return {string}
 */
proto.palm.orchid.v1.WechatMiniProgramLoginResponse.prototype.getOpenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatMiniProgramLoginResponse} returns this
 */
proto.palm.orchid.v1.WechatMiniProgramLoginResponse.prototype.setOpenid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string session_key = 3;
 * @return {string}
 */
proto.palm.orchid.v1.WechatMiniProgramLoginResponse.prototype.getSessionKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatMiniProgramLoginResponse} returns this
 */
proto.palm.orchid.v1.WechatMiniProgramLoginResponse.prototype.setSessionKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    appId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest}
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest;
  return proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest}
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string app_id = 1;
 * @return {string}
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.prototype.getAppId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest} returns this
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.prototype.setAppId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest} returns this
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    purePhoneNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    countryCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    waterMark: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse}
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse;
  return proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse}
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPurePhoneNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWaterMark(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPurePhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWaterMark();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional string phone_number = 1;
 * @return {string}
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse} returns this
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string pure_phone_number = 2;
 * @return {string}
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.prototype.getPurePhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse} returns this
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.prototype.setPurePhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string country_code = 3;
 * @return {string}
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse} returns this
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 water_mark = 4;
 * @return {number}
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.prototype.getWaterMark = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse} returns this
 */
proto.palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.prototype.setWaterMark = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.orchid.v1.WechatOauth2QrConnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.orchid.v1.WechatOauth2QrConnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.orchid.v1.WechatOauth2QrConnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.orchid.v1.WechatOauth2QrConnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    appId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    redirectUri: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, ""),
    language: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.orchid.v1.WechatOauth2QrConnectRequest}
 */
proto.palm.orchid.v1.WechatOauth2QrConnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.orchid.v1.WechatOauth2QrConnectRequest;
  return proto.palm.orchid.v1.WechatOauth2QrConnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.orchid.v1.WechatOauth2QrConnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.orchid.v1.WechatOauth2QrConnectRequest}
 */
proto.palm.orchid.v1.WechatOauth2QrConnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirectUri(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 9:
      var value = /** @type {!proto.palm.orchid.v1.WechatOauth2QrConnectRequest.Language} */ (reader.readEnum());
      msg.setLanguage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.orchid.v1.WechatOauth2QrConnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.orchid.v1.WechatOauth2QrConnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.orchid.v1.WechatOauth2QrConnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.orchid.v1.WechatOauth2QrConnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRedirectUri();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLanguage();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.palm.orchid.v1.WechatOauth2QrConnectRequest.Language = {
  EN: 0,
  CN: 1
};

/**
 * optional string app_id = 1;
 * @return {string}
 */
proto.palm.orchid.v1.WechatOauth2QrConnectRequest.prototype.getAppId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatOauth2QrConnectRequest} returns this
 */
proto.palm.orchid.v1.WechatOauth2QrConnectRequest.prototype.setAppId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string redirect_uri = 2;
 * @return {string}
 */
proto.palm.orchid.v1.WechatOauth2QrConnectRequest.prototype.getRedirectUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatOauth2QrConnectRequest} returns this
 */
proto.palm.orchid.v1.WechatOauth2QrConnectRequest.prototype.setRedirectUri = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string state = 3;
 * @return {string}
 */
proto.palm.orchid.v1.WechatOauth2QrConnectRequest.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatOauth2QrConnectRequest} returns this
 */
proto.palm.orchid.v1.WechatOauth2QrConnectRequest.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Language language = 9;
 * @return {!proto.palm.orchid.v1.WechatOauth2QrConnectRequest.Language}
 */
proto.palm.orchid.v1.WechatOauth2QrConnectRequest.prototype.getLanguage = function() {
  return /** @type {!proto.palm.orchid.v1.WechatOauth2QrConnectRequest.Language} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.palm.orchid.v1.WechatOauth2QrConnectRequest.Language} value
 * @return {!proto.palm.orchid.v1.WechatOauth2QrConnectRequest} returns this
 */
proto.palm.orchid.v1.WechatOauth2QrConnectRequest.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.orchid.v1.WechatOauth2QrConnectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.orchid.v1.WechatOauth2QrConnectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.orchid.v1.WechatOauth2QrConnectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.orchid.v1.WechatOauth2QrConnectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.orchid.v1.WechatOauth2QrConnectResponse}
 */
proto.palm.orchid.v1.WechatOauth2QrConnectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.orchid.v1.WechatOauth2QrConnectResponse;
  return proto.palm.orchid.v1.WechatOauth2QrConnectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.orchid.v1.WechatOauth2QrConnectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.orchid.v1.WechatOauth2QrConnectResponse}
 */
proto.palm.orchid.v1.WechatOauth2QrConnectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.orchid.v1.WechatOauth2QrConnectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.orchid.v1.WechatOauth2QrConnectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.orchid.v1.WechatOauth2QrConnectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.orchid.v1.WechatOauth2QrConnectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.palm.orchid.v1.WechatOauth2QrConnectResponse.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatOauth2QrConnectResponse} returns this
 */
proto.palm.orchid.v1.WechatOauth2QrConnectResponse.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.repeatedFields_ = [17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.orchid.v1.WechatOauth2LoginResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.orchid.v1.WechatOauth2LoginResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    unionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    openid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nickname: jspb.Message.getFieldWithDefault(msg, 11, ""),
    sex: jspb.Message.getFieldWithDefault(msg, 12, 0),
    province: jspb.Message.getFieldWithDefault(msg, 13, ""),
    city: jspb.Message.getFieldWithDefault(msg, 14, ""),
    country: jspb.Message.getFieldWithDefault(msg, 15, ""),
    headimgurl: jspb.Message.getFieldWithDefault(msg, 16, ""),
    privilegeList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginResponse}
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.orchid.v1.WechatOauth2LoginResponse;
  return proto.palm.orchid.v1.WechatOauth2LoginResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.orchid.v1.WechatOauth2LoginResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginResponse}
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpenid(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setNickname(value);
      break;
    case 12:
      var value = /** @type {!proto.palm.orchid.v1.WechatOauth2LoginResponse.Sex} */ (reader.readEnum());
      msg.setSex(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeadimgurl(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrivilege(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.orchid.v1.WechatOauth2LoginResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.orchid.v1.WechatOauth2LoginResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOpenid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNickname();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSex();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getPrivilegeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      17,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.Sex = {
  MALE: 0,
  FEMALE: 1
};

/**
 * optional string unionid = 1;
 * @return {string}
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.getUnionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginResponse} returns this
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.setUnionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string openid = 2;
 * @return {string}
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.getOpenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginResponse} returns this
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.setOpenid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string nickname = 11;
 * @return {string}
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.getNickname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginResponse} returns this
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.setNickname = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional Sex sex = 12;
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginResponse.Sex}
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.getSex = function() {
  return /** @type {!proto.palm.orchid.v1.WechatOauth2LoginResponse.Sex} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.palm.orchid.v1.WechatOauth2LoginResponse.Sex} value
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginResponse} returns this
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.setSex = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional string province = 13;
 * @return {string}
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginResponse} returns this
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string city = 14;
 * @return {string}
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginResponse} returns this
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string country = 15;
 * @return {string}
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginResponse} returns this
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string headimgurl = 16;
 * @return {string}
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.getHeadimgurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginResponse} returns this
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.setHeadimgurl = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginResponse} returns this
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.clearHeadimgurl = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.hasHeadimgurl = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated string privilege = 17;
 * @return {!Array<string>}
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.getPrivilegeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 17));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginResponse} returns this
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.setPrivilegeList = function(value) {
  return jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginResponse} returns this
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.addPrivilege = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginResponse} returns this
 */
proto.palm.orchid.v1.WechatOauth2LoginResponse.prototype.clearPrivilegeList = function() {
  return this.setPrivilegeList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.orchid.v1.WechatOauth2LoginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.orchid.v1.WechatOauth2LoginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.orchid.v1.WechatOauth2LoginRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.orchid.v1.WechatOauth2LoginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    appId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, ""),
    language: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginRequest}
 */
proto.palm.orchid.v1.WechatOauth2LoginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.orchid.v1.WechatOauth2LoginRequest;
  return proto.palm.orchid.v1.WechatOauth2LoginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.orchid.v1.WechatOauth2LoginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginRequest}
 */
proto.palm.orchid.v1.WechatOauth2LoginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 9:
      var value = /** @type {!proto.palm.orchid.v1.WechatOauth2LoginRequest.Language} */ (reader.readEnum());
      msg.setLanguage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.orchid.v1.WechatOauth2LoginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.orchid.v1.WechatOauth2LoginRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.orchid.v1.WechatOauth2LoginRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.orchid.v1.WechatOauth2LoginRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLanguage();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.palm.orchid.v1.WechatOauth2LoginRequest.Language = {
  EN: 0,
  CN: 1,
  TW: 2
};

/**
 * optional string app_id = 1;
 * @return {string}
 */
proto.palm.orchid.v1.WechatOauth2LoginRequest.prototype.getAppId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginRequest} returns this
 */
proto.palm.orchid.v1.WechatOauth2LoginRequest.prototype.setAppId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.palm.orchid.v1.WechatOauth2LoginRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginRequest} returns this
 */
proto.palm.orchid.v1.WechatOauth2LoginRequest.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string state = 3;
 * @return {string}
 */
proto.palm.orchid.v1.WechatOauth2LoginRequest.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginRequest} returns this
 */
proto.palm.orchid.v1.WechatOauth2LoginRequest.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Language language = 9;
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginRequest.Language}
 */
proto.palm.orchid.v1.WechatOauth2LoginRequest.prototype.getLanguage = function() {
  return /** @type {!proto.palm.orchid.v1.WechatOauth2LoginRequest.Language} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.palm.orchid.v1.WechatOauth2LoginRequest.Language} value
 * @return {!proto.palm.orchid.v1.WechatOauth2LoginRequest} returns this
 */
proto.palm.orchid.v1.WechatOauth2LoginRequest.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


goog.object.extend(exports, proto.palm.orchid.v1);
