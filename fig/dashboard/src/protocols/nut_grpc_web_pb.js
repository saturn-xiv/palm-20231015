/**
 * @fileoverview gRPC-Web generated client stub for palm.nut.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.21.6
// source: nut.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js')

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js')
const proto = {};
proto.palm = {};
proto.palm.nut = {};
proto.palm.nut.v1 = require('./nut_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.UserClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.UserPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.UserSignInRequest,
 *   !proto.palm.nut.v1.UserSignInResponse>}
 */
const methodDescriptor_User_SignIn = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/SignIn',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.UserSignInRequest,
  proto.palm.nut.v1.UserSignInResponse,
  /**
   * @param {!proto.palm.nut.v1.UserSignInRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.UserSignInResponse.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.UserSignInRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.UserSignInResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.UserSignInResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.signIn =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/SignIn',
      request,
      metadata || {},
      methodDescriptor_User_SignIn,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.UserSignInRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.UserSignInResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.signIn =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/SignIn',
      request,
      metadata || {},
      methodDescriptor_User_SignIn);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.UserSignUpRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_User_SignUp = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/SignUp',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.UserSignUpRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.UserSignUpRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.UserSignUpRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.signUp =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/SignUp',
      request,
      metadata || {},
      methodDescriptor_User_SignUp,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.UserSignUpRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.signUp =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/SignUp',
      request,
      metadata || {},
      methodDescriptor_User_SignUp);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.UserQueryRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_User_ConfirmByEmail = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/ConfirmByEmail',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.UserQueryRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.UserQueryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.UserQueryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.confirmByEmail =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/ConfirmByEmail',
      request,
      metadata || {},
      methodDescriptor_User_ConfirmByEmail,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.UserQueryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.confirmByEmail =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/ConfirmByEmail',
      request,
      metadata || {},
      methodDescriptor_User_ConfirmByEmail);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.UserTokenRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_User_ConfirmByToken = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/ConfirmByToken',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.UserTokenRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.UserTokenRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.UserTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.confirmByToken =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/ConfirmByToken',
      request,
      metadata || {},
      methodDescriptor_User_ConfirmByToken,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.UserTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.confirmByToken =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/ConfirmByToken',
      request,
      metadata || {},
      methodDescriptor_User_ConfirmByToken);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.UserQueryRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_User_UnlockByEmail = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/UnlockByEmail',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.UserQueryRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.UserQueryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.UserQueryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.unlockByEmail =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/UnlockByEmail',
      request,
      metadata || {},
      methodDescriptor_User_UnlockByEmail,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.UserQueryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.unlockByEmail =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/UnlockByEmail',
      request,
      metadata || {},
      methodDescriptor_User_UnlockByEmail);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.UserTokenRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_User_UnlockByToken = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/UnlockByToken',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.UserTokenRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.UserTokenRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.UserTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.unlockByToken =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/UnlockByToken',
      request,
      metadata || {},
      methodDescriptor_User_UnlockByToken,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.UserTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.unlockByToken =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/UnlockByToken',
      request,
      metadata || {},
      methodDescriptor_User_UnlockByToken);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.UserQueryRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_User_ForgotPassword = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/ForgotPassword',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.UserQueryRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.UserQueryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.UserQueryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.forgotPassword =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/ForgotPassword',
      request,
      metadata || {},
      methodDescriptor_User_ForgotPassword,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.UserQueryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.forgotPassword =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/ForgotPassword',
      request,
      metadata || {},
      methodDescriptor_User_ForgotPassword);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.UserResetPasswordRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_User_ResetPassword = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/ResetPassword',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.UserResetPasswordRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.UserResetPasswordRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.UserResetPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.resetPassword =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/ResetPassword',
      request,
      metadata || {},
      methodDescriptor_User_ResetPassword,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.UserResetPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.resetPassword =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/ResetPassword',
      request,
      metadata || {},
      methodDescriptor_User_ResetPassword);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Duration,
 *   !proto.palm.nut.v1.UserSignInResponse>}
 */
const methodDescriptor_User_Refresh = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/Refresh',
  grpc.web.MethodType.UNARY,
  google_protobuf_duration_pb.Duration,
  proto.palm.nut.v1.UserSignInResponse,
  /**
   * @param {!proto.google.protobuf.Duration} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.UserSignInResponse.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Duration} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.UserSignInResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.UserSignInResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.refresh =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/Refresh',
      request,
      metadata || {},
      methodDescriptor_User_Refresh,
      callback);
};


/**
 * @param {!proto.google.protobuf.Duration} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.UserSignInResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.refresh =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/Refresh',
      request,
      metadata || {},
      methodDescriptor_User_Refresh);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.Pager,
 *   !proto.palm.nut.v1.UserLogsResponse>}
 */
const methodDescriptor_User_Logs = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/Logs',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.Pager,
  proto.palm.nut.v1.UserLogsResponse,
  /**
   * @param {!proto.palm.nut.v1.Pager} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.UserLogsResponse.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.Pager} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.UserLogsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.UserLogsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.logs =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/Logs',
      request,
      metadata || {},
      methodDescriptor_User_Logs,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.Pager} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.UserLogsResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.logs =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/Logs',
      request,
      metadata || {},
      methodDescriptor_User_Logs);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.UserSetProfileRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_User_SetProfile = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/SetProfile',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.UserSetProfileRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.UserSetProfileRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.UserSetProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.setProfile =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/SetProfile',
      request,
      metadata || {},
      methodDescriptor_User_SetProfile,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.UserSetProfileRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.setProfile =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/SetProfile',
      request,
      metadata || {},
      methodDescriptor_User_SetProfile);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.UserChangePasswordRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_User_ChangePassword = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/ChangePassword',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.UserChangePasswordRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.UserChangePasswordRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.UserChangePasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.changePassword =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/ChangePassword',
      request,
      metadata || {},
      methodDescriptor_User_ChangePassword,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.UserChangePasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.changePassword =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/ChangePassword',
      request,
      metadata || {},
      methodDescriptor_User_ChangePassword);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_User_SignOut = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/SignOut',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.signOut =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/SignOut',
      request,
      metadata || {},
      methodDescriptor_User_SignOut,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.signOut =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/SignOut',
      request,
      metadata || {},
      methodDescriptor_User_SignOut);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.Pager,
 *   !proto.palm.nut.v1.UserIndexResponse>}
 */
const methodDescriptor_User_Index = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/Index',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.Pager,
  proto.palm.nut.v1.UserIndexResponse,
  /**
   * @param {!proto.palm.nut.v1.Pager} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.UserIndexResponse.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.Pager} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.UserIndexResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.UserIndexResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.index =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/Index',
      request,
      metadata || {},
      methodDescriptor_User_Index,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.Pager} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.UserIndexResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.index =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/Index',
      request,
      metadata || {},
      methodDescriptor_User_Index);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.palm.nut.v1.UserIndexResponse.Item>}
 */
const methodDescriptor_User_Show = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/Show',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  proto.palm.nut.v1.UserIndexResponse.Item,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.UserIndexResponse.Item.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.UserIndexResponse.Item)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.UserIndexResponse.Item>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.show =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/Show',
      request,
      metadata || {},
      methodDescriptor_User_Show,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.UserIndexResponse.Item>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.show =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/Show',
      request,
      metadata || {},
      methodDescriptor_User_Show);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_User_Disable = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/Disable',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.disable =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/Disable',
      request,
      metadata || {},
      methodDescriptor_User_Disable,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.disable =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/Disable',
      request,
      metadata || {},
      methodDescriptor_User_Disable);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_User_Enable = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/Enable',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.enable =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/Enable',
      request,
      metadata || {},
      methodDescriptor_User_Enable,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.enable =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/Enable',
      request,
      metadata || {},
      methodDescriptor_User_Enable);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_User_Lock = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/Lock',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.lock =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/Lock',
      request,
      metadata || {},
      methodDescriptor_User_Lock,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.lock =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/Lock',
      request,
      metadata || {},
      methodDescriptor_User_Lock);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_User_Unlock = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/Unlock',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.unlock =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/Unlock',
      request,
      metadata || {},
      methodDescriptor_User_Unlock,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.unlock =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/Unlock',
      request,
      metadata || {},
      methodDescriptor_User_Unlock);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_User_Confirm = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/Confirm',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.confirm =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/Confirm',
      request,
      metadata || {},
      methodDescriptor_User_Confirm,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.confirm =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/Confirm',
      request,
      metadata || {},
      methodDescriptor_User_Confirm);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.UserSetPasswordRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_User_SetPassword = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.User/SetPassword',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.UserSetPasswordRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.UserSetPasswordRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.UserSetPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.UserClient.prototype.setPassword =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.User/SetPassword',
      request,
      metadata || {},
      methodDescriptor_User_SetPassword,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.UserSetPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.UserPromiseClient.prototype.setPassword =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.User/SetPassword',
      request,
      metadata || {},
      methodDescriptor_User_SetPassword);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.AttachmentClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.AttachmentPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.Pager,
 *   !proto.palm.nut.v1.AttachmentIndexResponse>}
 */
const methodDescriptor_Attachment_Index = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Attachment/Index',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.Pager,
  proto.palm.nut.v1.AttachmentIndexResponse,
  /**
   * @param {!proto.palm.nut.v1.Pager} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.AttachmentIndexResponse.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.Pager} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.AttachmentIndexResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.AttachmentIndexResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.AttachmentClient.prototype.index =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Attachment/Index',
      request,
      metadata || {},
      methodDescriptor_Attachment_Index,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.Pager} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.AttachmentIndexResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.AttachmentPromiseClient.prototype.index =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Attachment/Index',
      request,
      metadata || {},
      methodDescriptor_Attachment_Index);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Attachment_Destroy = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Attachment/Destroy',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.AttachmentClient.prototype.destroy =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Attachment/Destroy',
      request,
      metadata || {},
      methodDescriptor_Attachment_Destroy,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.AttachmentPromiseClient.prototype.destroy =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Attachment/Destroy',
      request,
      metadata || {},
      methodDescriptor_Attachment_Destroy);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.AttachmentShowRequest,
 *   !proto.palm.nut.v1.AttachmentShowResponse>}
 */
const methodDescriptor_Attachment_Show = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Attachment/Show',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.AttachmentShowRequest,
  proto.palm.nut.v1.AttachmentShowResponse,
  /**
   * @param {!proto.palm.nut.v1.AttachmentShowRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.AttachmentShowResponse.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.AttachmentShowRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.AttachmentShowResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.AttachmentShowResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.AttachmentClient.prototype.show =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Attachment/Show',
      request,
      metadata || {},
      methodDescriptor_Attachment_Show,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.AttachmentShowRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.AttachmentShowResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.AttachmentPromiseClient.prototype.show =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Attachment/Show',
      request,
      metadata || {},
      methodDescriptor_Attachment_Show);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.PolicyClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.PolicyPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.PolicyAddRoleRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Policy_AddRole = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Policy/AddRole',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.PolicyAddRoleRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.PolicyAddRoleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.PolicyAddRoleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.PolicyClient.prototype.addRole =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Policy/AddRole',
      request,
      metadata || {},
      methodDescriptor_Policy_AddRole,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.PolicyAddRoleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.PolicyPromiseClient.prototype.addRole =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Policy/AddRole',
      request,
      metadata || {},
      methodDescriptor_Policy_AddRole);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.palm.nut.v1.PolicyRoleListResponse>}
 */
const methodDescriptor_Policy_GetAllRoles = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Policy/GetAllRoles',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.palm.nut.v1.PolicyRoleListResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.PolicyRoleListResponse.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.PolicyRoleListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.PolicyRoleListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.PolicyClient.prototype.getAllRoles =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetAllRoles',
      request,
      metadata || {},
      methodDescriptor_Policy_GetAllRoles,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.PolicyRoleListResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.PolicyPromiseClient.prototype.getAllRoles =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetAllRoles',
      request,
      metadata || {},
      methodDescriptor_Policy_GetAllRoles);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Policy_DeleteRole = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Policy/DeleteRole',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.PolicyClient.prototype.deleteRole =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Policy/DeleteRole',
      request,
      metadata || {},
      methodDescriptor_Policy_DeleteRole,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.PolicyPromiseClient.prototype.deleteRole =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Policy/DeleteRole',
      request,
      metadata || {},
      methodDescriptor_Policy_DeleteRole);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.palm.nut.v1.PolicyRolesForUserResponse>}
 */
const methodDescriptor_Policy_GetRolesForUser = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Policy/GetRolesForUser',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  proto.palm.nut.v1.PolicyRolesForUserResponse,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.PolicyRolesForUserResponse.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.PolicyRolesForUserResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.PolicyRolesForUserResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.PolicyClient.prototype.getRolesForUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetRolesForUser',
      request,
      metadata || {},
      methodDescriptor_Policy_GetRolesForUser,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.PolicyRolesForUserResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.PolicyPromiseClient.prototype.getRolesForUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetRolesForUser',
      request,
      metadata || {},
      methodDescriptor_Policy_GetRolesForUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.palm.nut.v1.PolicyUsersForRoleResponse>}
 */
const methodDescriptor_Policy_GetUsersForRole = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Policy/GetUsersForRole',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  proto.palm.nut.v1.PolicyUsersForRoleResponse,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.PolicyUsersForRoleResponse.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.PolicyUsersForRoleResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.PolicyUsersForRoleResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.PolicyClient.prototype.getUsersForRole =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetUsersForRole',
      request,
      metadata || {},
      methodDescriptor_Policy_GetUsersForRole,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.PolicyUsersForRoleResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.PolicyPromiseClient.prototype.getUsersForRole =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetUsersForRole',
      request,
      metadata || {},
      methodDescriptor_Policy_GetUsersForRole);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.PolicyAddRolesForUserRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Policy_AddRolesForUser = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Policy/AddRolesForUser',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.PolicyAddRolesForUserRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.PolicyAddRolesForUserRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.PolicyAddRolesForUserRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.PolicyClient.prototype.addRolesForUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Policy/AddRolesForUser',
      request,
      metadata || {},
      methodDescriptor_Policy_AddRolesForUser,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.PolicyAddRolesForUserRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.PolicyPromiseClient.prototype.addRolesForUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Policy/AddRolesForUser',
      request,
      metadata || {},
      methodDescriptor_Policy_AddRolesForUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.PolicyDeleteRolesForUserRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Policy_DeleteRolesForUser = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Policy/DeleteRolesForUser',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.PolicyDeleteRolesForUserRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.PolicyDeleteRolesForUserRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.PolicyDeleteRolesForUserRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.PolicyClient.prototype.deleteRolesForUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Policy/DeleteRolesForUser',
      request,
      metadata || {},
      methodDescriptor_Policy_DeleteRolesForUser,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.PolicyDeleteRolesForUserRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.PolicyPromiseClient.prototype.deleteRolesForUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Policy/DeleteRolesForUser',
      request,
      metadata || {},
      methodDescriptor_Policy_DeleteRolesForUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.palm.nut.v1.PolicyImplicitRolesForUserResponse>}
 */
const methodDescriptor_Policy_GetImplicitRolesForUser = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Policy/GetImplicitRolesForUser',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  proto.palm.nut.v1.PolicyImplicitRolesForUserResponse,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.PolicyImplicitRolesForUserResponse.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.PolicyImplicitRolesForUserResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.PolicyImplicitRolesForUserResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.PolicyClient.prototype.getImplicitRolesForUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetImplicitRolesForUser',
      request,
      metadata || {},
      methodDescriptor_Policy_GetImplicitRolesForUser,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.PolicyImplicitRolesForUserResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.PolicyPromiseClient.prototype.getImplicitRolesForUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetImplicitRolesForUser',
      request,
      metadata || {},
      methodDescriptor_Policy_GetImplicitRolesForUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.palm.nut.v1.PolicyImplicitUsersForRoleResponse>}
 */
const methodDescriptor_Policy_GetImplicitUsersForRole = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Policy/GetImplicitUsersForRole',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  proto.palm.nut.v1.PolicyImplicitUsersForRoleResponse,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.PolicyImplicitUsersForRoleResponse.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.PolicyImplicitUsersForRoleResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.PolicyImplicitUsersForRoleResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.PolicyClient.prototype.getImplicitUsersForRole =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetImplicitUsersForRole',
      request,
      metadata || {},
      methodDescriptor_Policy_GetImplicitUsersForRole,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.PolicyImplicitUsersForRoleResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.PolicyPromiseClient.prototype.getImplicitUsersForRole =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetImplicitUsersForRole',
      request,
      metadata || {},
      methodDescriptor_Policy_GetImplicitUsersForRole);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.palm.nut.v1.PolicyPermissionList>}
 */
const methodDescriptor_Policy_GetPermissionsForUser = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Policy/GetPermissionsForUser',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  proto.palm.nut.v1.PolicyPermissionList,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.PolicyPermissionList.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.PolicyPermissionList)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.PolicyPermissionList>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.PolicyClient.prototype.getPermissionsForUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetPermissionsForUser',
      request,
      metadata || {},
      methodDescriptor_Policy_GetPermissionsForUser,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.PolicyPermissionList>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.PolicyPromiseClient.prototype.getPermissionsForUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetPermissionsForUser',
      request,
      metadata || {},
      methodDescriptor_Policy_GetPermissionsForUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.palm.nut.v1.PolicyPermissionList>}
 */
const methodDescriptor_Policy_GetPermissionsForRole = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Policy/GetPermissionsForRole',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  proto.palm.nut.v1.PolicyPermissionList,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.PolicyPermissionList.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.PolicyPermissionList)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.PolicyPermissionList>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.PolicyClient.prototype.getPermissionsForRole =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetPermissionsForRole',
      request,
      metadata || {},
      methodDescriptor_Policy_GetPermissionsForRole,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.PolicyPermissionList>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.PolicyPromiseClient.prototype.getPermissionsForRole =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetPermissionsForRole',
      request,
      metadata || {},
      methodDescriptor_Policy_GetPermissionsForRole);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.palm.nut.v1.PolicyPermissionList>}
 */
const methodDescriptor_Policy_GetImplicitPermissionsForUser = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Policy/GetImplicitPermissionsForUser',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  proto.palm.nut.v1.PolicyPermissionList,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.PolicyPermissionList.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.PolicyPermissionList)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.PolicyPermissionList>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.PolicyClient.prototype.getImplicitPermissionsForUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetImplicitPermissionsForUser',
      request,
      metadata || {},
      methodDescriptor_Policy_GetImplicitPermissionsForUser,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.PolicyPermissionList>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.PolicyPromiseClient.prototype.getImplicitPermissionsForUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetImplicitPermissionsForUser',
      request,
      metadata || {},
      methodDescriptor_Policy_GetImplicitPermissionsForUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.palm.nut.v1.PolicyPermissionList>}
 */
const methodDescriptor_Policy_GetImplicitPermissionsForRole = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Policy/GetImplicitPermissionsForRole',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  proto.palm.nut.v1.PolicyPermissionList,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.PolicyPermissionList.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.PolicyPermissionList)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.PolicyPermissionList>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.PolicyClient.prototype.getImplicitPermissionsForRole =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetImplicitPermissionsForRole',
      request,
      metadata || {},
      methodDescriptor_Policy_GetImplicitPermissionsForRole,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.PolicyPermissionList>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.PolicyPromiseClient.prototype.getImplicitPermissionsForRole =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Policy/GetImplicitPermissionsForRole',
      request,
      metadata || {},
      methodDescriptor_Policy_GetImplicitPermissionsForRole);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.PolicyPermissionList,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Policy_AddPermissions = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Policy/AddPermissions',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.PolicyPermissionList,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.PolicyPermissionList} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.PolicyPermissionList} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.PolicyClient.prototype.addPermissions =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Policy/AddPermissions',
      request,
      metadata || {},
      methodDescriptor_Policy_AddPermissions,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.PolicyPermissionList} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.PolicyPromiseClient.prototype.addPermissions =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Policy/AddPermissions',
      request,
      metadata || {},
      methodDescriptor_Policy_AddPermissions);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.PolicyPermissionList,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Policy_DeletePermissions = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Policy/DeletePermissions',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.PolicyPermissionList,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.PolicyPermissionList} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.PolicyPermissionList} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.PolicyClient.prototype.deletePermissions =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Policy/DeletePermissions',
      request,
      metadata || {},
      methodDescriptor_Policy_DeletePermissions,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.PolicyPermissionList} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.PolicyPromiseClient.prototype.deletePermissions =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Policy/DeletePermissions',
      request,
      metadata || {},
      methodDescriptor_Policy_DeletePermissions);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.LocaleClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.LocalePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.LocaleSetRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Locale_Set = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Locale/Set',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.LocaleSetRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.LocaleSetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.LocaleSetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.LocaleClient.prototype.set =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Locale/Set',
      request,
      metadata || {},
      methodDescriptor_Locale_Set,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.LocaleSetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.LocalePromiseClient.prototype.set =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Locale/Set',
      request,
      metadata || {},
      methodDescriptor_Locale_Set);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.LocaleGetRequest,
 *   !proto.palm.nut.v1.LocaleIndexResponse.Item>}
 */
const methodDescriptor_Locale_Get = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Locale/Get',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.LocaleGetRequest,
  proto.palm.nut.v1.LocaleIndexResponse.Item,
  /**
   * @param {!proto.palm.nut.v1.LocaleGetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.LocaleIndexResponse.Item.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.LocaleGetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.LocaleIndexResponse.Item)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.LocaleIndexResponse.Item>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.LocaleClient.prototype.get =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Locale/Get',
      request,
      metadata || {},
      methodDescriptor_Locale_Get,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.LocaleGetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.LocaleIndexResponse.Item>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.LocalePromiseClient.prototype.get =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Locale/Get',
      request,
      metadata || {},
      methodDescriptor_Locale_Get);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.LocaleByLangRequest,
 *   !proto.palm.nut.v1.LocaleByLangResponse>}
 */
const methodDescriptor_Locale_ByLang = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Locale/ByLang',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.LocaleByLangRequest,
  proto.palm.nut.v1.LocaleByLangResponse,
  /**
   * @param {!proto.palm.nut.v1.LocaleByLangRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.LocaleByLangResponse.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.LocaleByLangRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.LocaleByLangResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.LocaleByLangResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.LocaleClient.prototype.byLang =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Locale/ByLang',
      request,
      metadata || {},
      methodDescriptor_Locale_ByLang,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.LocaleByLangRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.LocaleByLangResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.LocalePromiseClient.prototype.byLang =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Locale/ByLang',
      request,
      metadata || {},
      methodDescriptor_Locale_ByLang);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.Pager,
 *   !proto.palm.nut.v1.LocaleIndexResponse>}
 */
const methodDescriptor_Locale_Index = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Locale/Index',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.Pager,
  proto.palm.nut.v1.LocaleIndexResponse,
  /**
   * @param {!proto.palm.nut.v1.Pager} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.LocaleIndexResponse.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.Pager} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.LocaleIndexResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.LocaleIndexResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.LocaleClient.prototype.index =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Locale/Index',
      request,
      metadata || {},
      methodDescriptor_Locale_Index,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.Pager} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.LocaleIndexResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.LocalePromiseClient.prototype.index =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Locale/Index',
      request,
      metadata || {},
      methodDescriptor_Locale_Index);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Locale_Destroy = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Locale/Destroy',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.LocaleClient.prototype.destroy =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Locale/Destroy',
      request,
      metadata || {},
      methodDescriptor_Locale_Destroy,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.LocalePromiseClient.prototype.destroy =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Locale/Destroy',
      request,
      metadata || {},
      methodDescriptor_Locale_Destroy);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.NotificationClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.NotificationPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.Pager,
 *   !proto.palm.nut.v1.IndexNotificationResponse>}
 */
const methodDescriptor_Notification_Index = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Notification/Index',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.Pager,
  proto.palm.nut.v1.IndexNotificationResponse,
  /**
   * @param {!proto.palm.nut.v1.Pager} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.IndexNotificationResponse.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.Pager} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.IndexNotificationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.IndexNotificationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.NotificationClient.prototype.index =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Notification/Index',
      request,
      metadata || {},
      methodDescriptor_Notification_Index,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.Pager} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.IndexNotificationResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.NotificationPromiseClient.prototype.index =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Notification/Index',
      request,
      metadata || {},
      methodDescriptor_Notification_Index);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.LeaveWordClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.LeaveWordPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.MediaContent,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_LeaveWord_Create = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.LeaveWord/Create',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.MediaContent,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.MediaContent} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.MediaContent} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.LeaveWordClient.prototype.create =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.LeaveWord/Create',
      request,
      metadata || {},
      methodDescriptor_LeaveWord_Create,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.MediaContent} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.LeaveWordPromiseClient.prototype.create =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.LeaveWord/Create',
      request,
      metadata || {},
      methodDescriptor_LeaveWord_Create);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.Pager,
 *   !proto.palm.nut.v1.LeaveWordIndexResponse>}
 */
const methodDescriptor_LeaveWord_Index = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.LeaveWord/Index',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.Pager,
  proto.palm.nut.v1.LeaveWordIndexResponse,
  /**
   * @param {!proto.palm.nut.v1.Pager} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.LeaveWordIndexResponse.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.Pager} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.LeaveWordIndexResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.LeaveWordIndexResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.LeaveWordClient.prototype.index =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.LeaveWord/Index',
      request,
      metadata || {},
      methodDescriptor_LeaveWord_Index,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.Pager} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.LeaveWordIndexResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.LeaveWordPromiseClient.prototype.index =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.LeaveWord/Index',
      request,
      metadata || {},
      methodDescriptor_LeaveWord_Index);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_LeaveWord_Destroy = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.LeaveWord/Destroy',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.LeaveWordClient.prototype.destroy =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.LeaveWord/Destroy',
      request,
      metadata || {},
      methodDescriptor_LeaveWord_Destroy,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.LeaveWordPromiseClient.prototype.destroy =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.LeaveWord/Destroy',
      request,
      metadata || {},
      methodDescriptor_LeaveWord_Destroy);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.SiteClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.SitePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.SiteMaintenanceModeRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_SetMaintenanceMode = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/SetMaintenanceMode',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.SiteMaintenanceModeRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.SiteMaintenanceModeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.SiteMaintenanceModeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.setMaintenanceMode =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/SetMaintenanceMode',
      request,
      metadata || {},
      methodDescriptor_Site_SetMaintenanceMode,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.SiteMaintenanceModeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.setMaintenanceMode =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/SetMaintenanceMode',
      request,
      metadata || {},
      methodDescriptor_Site_SetMaintenanceMode);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.SiteInstallRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_Install = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/Install',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.SiteInstallRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.SiteInstallRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.SiteInstallRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.install =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/Install',
      request,
      metadata || {},
      methodDescriptor_Site_Install,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.SiteInstallRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.install =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/Install',
      request,
      metadata || {},
      methodDescriptor_Site_Install);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_ClearCache = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/ClearCache',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.clearCache =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/ClearCache',
      request,
      metadata || {},
      methodDescriptor_Site_ClearCache,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.clearCache =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/ClearCache',
      request,
      metadata || {},
      methodDescriptor_Site_ClearCache);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.palm.nut.v1.SiteLayoutResponse>}
 */
const methodDescriptor_Site_Layout = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/Layout',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.palm.nut.v1.SiteLayoutResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.SiteLayoutResponse.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.SiteLayoutResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.SiteLayoutResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.layout =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/Layout',
      request,
      metadata || {},
      methodDescriptor_Site_Layout,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.SiteLayoutResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.layout =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/Layout',
      request,
      metadata || {},
      methodDescriptor_Site_Layout);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.SiteLayoutResponse.Author,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_SetAuthor = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/SetAuthor',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.SiteLayoutResponse.Author,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.SiteLayoutResponse.Author} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.SiteLayoutResponse.Author} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.setAuthor =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/SetAuthor',
      request,
      metadata || {},
      methodDescriptor_Site_SetAuthor,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.SiteLayoutResponse.Author} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.setAuthor =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/SetAuthor',
      request,
      metadata || {},
      methodDescriptor_Site_SetAuthor);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.SiteSetCopyrightRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_SetCopyright = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/SetCopyright',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.SiteSetCopyrightRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.SiteSetCopyrightRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.SiteSetCopyrightRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.setCopyright =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/SetCopyright',
      request,
      metadata || {},
      methodDescriptor_Site_SetCopyright,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.SiteSetCopyrightRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.setCopyright =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/SetCopyright',
      request,
      metadata || {},
      methodDescriptor_Site_SetCopyright);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.SiteSetKeywordsRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_SetKeywords = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/SetKeywords',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.SiteSetKeywordsRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.SiteSetKeywordsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.SiteSetKeywordsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.setKeywords =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/SetKeywords',
      request,
      metadata || {},
      methodDescriptor_Site_SetKeywords,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.SiteSetKeywordsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.setKeywords =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/SetKeywords',
      request,
      metadata || {},
      methodDescriptor_Site_SetKeywords);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.SiteSetInfoRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_SetInfo = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/SetInfo',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.SiteSetInfoRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.SiteSetInfoRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.SiteSetInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.setInfo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/SetInfo',
      request,
      metadata || {},
      methodDescriptor_Site_SetInfo,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.SiteSetInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.setInfo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/SetInfo',
      request,
      metadata || {},
      methodDescriptor_Site_SetInfo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.SiteSetLogoRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_SetLogo = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/SetLogo',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.SiteSetLogoRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.SiteSetLogoRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.SiteSetLogoRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.setLogo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/SetLogo',
      request,
      metadata || {},
      methodDescriptor_Site_SetLogo,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.SiteSetLogoRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.setLogo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/SetLogo',
      request,
      metadata || {},
      methodDescriptor_Site_SetLogo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.MinioProfile,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_SetMinio = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/SetMinio',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.MinioProfile,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.MinioProfile} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.MinioProfile} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.setMinio =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/SetMinio',
      request,
      metadata || {},
      methodDescriptor_Site_SetMinio,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.MinioProfile} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.setMinio =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/SetMinio',
      request,
      metadata || {},
      methodDescriptor_Site_SetMinio);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.palm.nut.v1.MinioProfile>}
 */
const methodDescriptor_Site_GetMinio = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/GetMinio',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.palm.nut.v1.MinioProfile,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.MinioProfile.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.MinioProfile)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.MinioProfile>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.getMinio =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/GetMinio',
      request,
      metadata || {},
      methodDescriptor_Site_GetMinio,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.MinioProfile>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.getMinio =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/GetMinio',
      request,
      metadata || {},
      methodDescriptor_Site_GetMinio);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.MinioProfile,
 *   !proto.palm.nut.v1.SiteMinioTestResponse>}
 */
const methodDescriptor_Site_TestMinio = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/TestMinio',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.MinioProfile,
  proto.palm.nut.v1.SiteMinioTestResponse,
  /**
   * @param {!proto.palm.nut.v1.MinioProfile} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.SiteMinioTestResponse.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.MinioProfile} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.SiteMinioTestResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.SiteMinioTestResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.testMinio =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/TestMinio',
      request,
      metadata || {},
      methodDescriptor_Site_TestMinio,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.MinioProfile} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.SiteMinioTestResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.testMinio =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/TestMinio',
      request,
      metadata || {},
      methodDescriptor_Site_TestMinio);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.TwilioProfile,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_SetTwilio = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/SetTwilio',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.TwilioProfile,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.TwilioProfile} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.TwilioProfile} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.setTwilio =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/SetTwilio',
      request,
      metadata || {},
      methodDescriptor_Site_SetTwilio,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.TwilioProfile} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.setTwilio =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/SetTwilio',
      request,
      metadata || {},
      methodDescriptor_Site_SetTwilio);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.palm.nut.v1.TwilioProfile>}
 */
const methodDescriptor_Site_GetTwilio = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/GetTwilio',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.palm.nut.v1.TwilioProfile,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.TwilioProfile.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.TwilioProfile)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.TwilioProfile>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.getTwilio =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/GetTwilio',
      request,
      metadata || {},
      methodDescriptor_Site_GetTwilio,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.TwilioProfile>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.getTwilio =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/GetTwilio',
      request,
      metadata || {},
      methodDescriptor_Site_GetTwilio);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.SiteTwilioTestRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_TestTwilio = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/TestTwilio',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.SiteTwilioTestRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.SiteTwilioTestRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.SiteTwilioTestRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.testTwilio =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/TestTwilio',
      request,
      metadata || {},
      methodDescriptor_Site_TestTwilio,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.SiteTwilioTestRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.testTwilio =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/TestTwilio',
      request,
      metadata || {},
      methodDescriptor_Site_TestTwilio);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.SmtpProfile,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_SetSmtp = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/SetSmtp',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.SmtpProfile,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.SmtpProfile} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.SmtpProfile} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.setSmtp =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/SetSmtp',
      request,
      metadata || {},
      methodDescriptor_Site_SetSmtp,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.SmtpProfile} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.setSmtp =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/SetSmtp',
      request,
      metadata || {},
      methodDescriptor_Site_SetSmtp);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.palm.nut.v1.SmtpProfile>}
 */
const methodDescriptor_Site_GetSmtp = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/GetSmtp',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.palm.nut.v1.SmtpProfile,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.SmtpProfile.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.SmtpProfile)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.SmtpProfile>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.getSmtp =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/GetSmtp',
      request,
      metadata || {},
      methodDescriptor_Site_GetSmtp,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.SmtpProfile>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.getSmtp =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/GetSmtp',
      request,
      metadata || {},
      methodDescriptor_Site_GetSmtp);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.SiteSmtpTestRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_TestSmtp = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/TestSmtp',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.SiteSmtpTestRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.SiteSmtpTestRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.SiteSmtpTestRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.testSmtp =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/TestSmtp',
      request,
      metadata || {},
      methodDescriptor_Site_TestSmtp,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.SiteSmtpTestRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.testSmtp =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/TestSmtp',
      request,
      metadata || {},
      methodDescriptor_Site_TestSmtp);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.BingProfile,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_SetBing = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/SetBing',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.BingProfile,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.BingProfile} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.BingProfile} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.setBing =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/SetBing',
      request,
      metadata || {},
      methodDescriptor_Site_SetBing,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.BingProfile} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.setBing =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/SetBing',
      request,
      metadata || {},
      methodDescriptor_Site_SetBing);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.palm.nut.v1.BingProfile>}
 */
const methodDescriptor_Site_GetBing = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/GetBing',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.palm.nut.v1.BingProfile,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.BingProfile.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.BingProfile)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.BingProfile>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.getBing =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/GetBing',
      request,
      metadata || {},
      methodDescriptor_Site_GetBing,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.BingProfile>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.getBing =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/GetBing',
      request,
      metadata || {},
      methodDescriptor_Site_GetBing);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IndexNowProfile,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_SetIndexNow = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/SetIndexNow',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IndexNowProfile,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.IndexNowProfile} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IndexNowProfile} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.setIndexNow =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/SetIndexNow',
      request,
      metadata || {},
      methodDescriptor_Site_SetIndexNow,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IndexNowProfile} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.setIndexNow =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/SetIndexNow',
      request,
      metadata || {},
      methodDescriptor_Site_SetIndexNow);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.palm.nut.v1.IndexNowProfile>}
 */
const methodDescriptor_Site_GetIndexNow = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/GetIndexNow',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.palm.nut.v1.IndexNowProfile,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.IndexNowProfile.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.IndexNowProfile)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.IndexNowProfile>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.getIndexNow =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/GetIndexNow',
      request,
      metadata || {},
      methodDescriptor_Site_GetIndexNow,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.IndexNowProfile>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.getIndexNow =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/GetIndexNow',
      request,
      metadata || {},
      methodDescriptor_Site_GetIndexNow);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IndexNowPingRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_PingIndexNow = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/PingIndexNow',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IndexNowPingRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.IndexNowPingRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IndexNowPingRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.pingIndexNow =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/PingIndexNow',
      request,
      metadata || {},
      methodDescriptor_Site_PingIndexNow,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IndexNowPingRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.pingIndexNow =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/PingIndexNow',
      request,
      metadata || {},
      methodDescriptor_Site_PingIndexNow);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.GoogleProfile,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_SetGoogle = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/SetGoogle',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.GoogleProfile,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.GoogleProfile} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.GoogleProfile} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.setGoogle =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/SetGoogle',
      request,
      metadata || {},
      methodDescriptor_Site_SetGoogle,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.GoogleProfile} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.setGoogle =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/SetGoogle',
      request,
      metadata || {},
      methodDescriptor_Site_SetGoogle);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.palm.nut.v1.GoogleProfile>}
 */
const methodDescriptor_Site_GetGoogle = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/GetGoogle',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.palm.nut.v1.GoogleProfile,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.GoogleProfile.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.GoogleProfile)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.GoogleProfile>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.getGoogle =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/GetGoogle',
      request,
      metadata || {},
      methodDescriptor_Site_GetGoogle,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.GoogleProfile>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.getGoogle =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/GetGoogle',
      request,
      metadata || {},
      methodDescriptor_Site_GetGoogle);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.SitemapPingRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_PingGoogle = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/PingGoogle',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.SitemapPingRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.SitemapPingRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.SitemapPingRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.pingGoogle =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/PingGoogle',
      request,
      metadata || {},
      methodDescriptor_Site_PingGoogle,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.SitemapPingRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.pingGoogle =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/PingGoogle',
      request,
      metadata || {},
      methodDescriptor_Site_PingGoogle);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.BaiduProfile,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_SetBaidu = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/SetBaidu',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.BaiduProfile,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.BaiduProfile} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.BaiduProfile} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.setBaidu =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/SetBaidu',
      request,
      metadata || {},
      methodDescriptor_Site_SetBaidu,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.BaiduProfile} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.setBaidu =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/SetBaidu',
      request,
      metadata || {},
      methodDescriptor_Site_SetBaidu);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.palm.nut.v1.BaiduProfile>}
 */
const methodDescriptor_Site_GetBaidu = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/GetBaidu',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.palm.nut.v1.BaiduProfile,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.BaiduProfile.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.BaiduProfile)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.BaiduProfile>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.getBaidu =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/GetBaidu',
      request,
      metadata || {},
      methodDescriptor_Site_GetBaidu,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.BaiduProfile>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.getBaidu =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/GetBaidu',
      request,
      metadata || {},
      methodDescriptor_Site_GetBaidu);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.SitemapPingRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Site_PingBaidu = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/PingBaidu',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.SitemapPingRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.SitemapPingRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.SitemapPingRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.pingBaidu =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/PingBaidu',
      request,
      metadata || {},
      methodDescriptor_Site_PingBaidu,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.SitemapPingRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.pingBaidu =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/PingBaidu',
      request,
      metadata || {},
      methodDescriptor_Site_PingBaidu);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.palm.nut.v1.SiteStatusResponse>}
 */
const methodDescriptor_Site_Status = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Site/Status',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.palm.nut.v1.SiteStatusResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.SiteStatusResponse.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.SiteStatusResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.SiteStatusResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.SiteClient.prototype.status =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Site/Status',
      request,
      metadata || {},
      methodDescriptor_Site_Status,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.SiteStatusResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.SitePromiseClient.prototype.status =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Site/Status',
      request,
      metadata || {},
      methodDescriptor_Site_Status);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.ShorterLinkClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.ShorterLinkPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.ShorterLinkCreateRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_ShorterLink_Create = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.ShorterLink/Create',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.ShorterLinkCreateRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.ShorterLinkCreateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.ShorterLinkCreateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.ShorterLinkClient.prototype.create =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.ShorterLink/Create',
      request,
      metadata || {},
      methodDescriptor_ShorterLink_Create,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.ShorterLinkCreateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.ShorterLinkPromiseClient.prototype.create =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.ShorterLink/Create',
      request,
      metadata || {},
      methodDescriptor_ShorterLink_Create);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.ShorterLinkUpdateRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_ShorterLink_Update = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.ShorterLink/Update',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.ShorterLinkUpdateRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.ShorterLinkUpdateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.ShorterLinkUpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.ShorterLinkClient.prototype.update =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.ShorterLink/Update',
      request,
      metadata || {},
      methodDescriptor_ShorterLink_Update,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.ShorterLinkUpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.ShorterLinkPromiseClient.prototype.update =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.ShorterLink/Update',
      request,
      metadata || {},
      methodDescriptor_ShorterLink_Update);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_ShorterLink_Destroy = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.ShorterLink/Destroy',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.ShorterLinkClient.prototype.destroy =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.ShorterLink/Destroy',
      request,
      metadata || {},
      methodDescriptor_ShorterLink_Destroy,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.ShorterLinkPromiseClient.prototype.destroy =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.ShorterLink/Destroy',
      request,
      metadata || {},
      methodDescriptor_ShorterLink_Destroy);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.Pager,
 *   !proto.palm.nut.v1.ShorterLinkIndexResponse>}
 */
const methodDescriptor_ShorterLink_Index = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.ShorterLink/Index',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.Pager,
  proto.palm.nut.v1.ShorterLinkIndexResponse,
  /**
   * @param {!proto.palm.nut.v1.Pager} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.ShorterLinkIndexResponse.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.Pager} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.ShorterLinkIndexResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.ShorterLinkIndexResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.ShorterLinkClient.prototype.index =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.ShorterLink/Index',
      request,
      metadata || {},
      methodDescriptor_ShorterLink_Index,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.Pager} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.ShorterLinkIndexResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.ShorterLinkPromiseClient.prototype.index =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.ShorterLink/Index',
      request,
      metadata || {},
      methodDescriptor_ShorterLink_Index);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.TagClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.TagPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.TagCreateRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Tag_Create = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Tag/Create',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.TagCreateRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.TagCreateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.TagCreateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.TagClient.prototype.create =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Tag/Create',
      request,
      metadata || {},
      methodDescriptor_Tag_Create,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.TagCreateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.TagPromiseClient.prototype.create =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Tag/Create',
      request,
      metadata || {},
      methodDescriptor_Tag_Create);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.TagUpdateRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Tag_Update = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Tag/Update',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.TagUpdateRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.TagUpdateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.TagUpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.TagClient.prototype.update =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Tag/Update',
      request,
      metadata || {},
      methodDescriptor_Tag_Update,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.TagUpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.TagPromiseClient.prototype.update =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Tag/Update',
      request,
      metadata || {},
      methodDescriptor_Tag_Update);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Tag_Destroy = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Tag/Destroy',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.TagClient.prototype.destroy =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Tag/Destroy',
      request,
      metadata || {},
      methodDescriptor_Tag_Destroy,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.TagPromiseClient.prototype.destroy =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Tag/Destroy',
      request,
      metadata || {},
      methodDescriptor_Tag_Destroy);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.palm.nut.v1.TagIndexResponse>}
 */
const methodDescriptor_Tag_Index = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Tag/Index',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.palm.nut.v1.TagIndexResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.TagIndexResponse.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.TagIndexResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.TagIndexResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.TagClient.prototype.index =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Tag/Index',
      request,
      metadata || {},
      methodDescriptor_Tag_Index,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.TagIndexResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.TagPromiseClient.prototype.index =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Tag/Index',
      request,
      metadata || {},
      methodDescriptor_Tag_Index);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.CategoryClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.palm.nut.v1.CategoryPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.CategoryCreateRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Category_Create = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Category/Create',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.CategoryCreateRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.CategoryCreateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.CategoryCreateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.CategoryClient.prototype.create =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Category/Create',
      request,
      metadata || {},
      methodDescriptor_Category_Create,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.CategoryCreateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.CategoryPromiseClient.prototype.create =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Category/Create',
      request,
      metadata || {},
      methodDescriptor_Category_Create);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.CategoryUpdateRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Category_Update = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Category/Update',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.CategoryUpdateRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.CategoryUpdateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.CategoryUpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.CategoryClient.prototype.update =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Category/Update',
      request,
      metadata || {},
      methodDescriptor_Category_Update,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.CategoryUpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.CategoryPromiseClient.prototype.update =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Category/Update',
      request,
      metadata || {},
      methodDescriptor_Category_Update);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.palm.nut.v1.IdRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Category_Destroy = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Category/Destroy',
  grpc.web.MethodType.UNARY,
  proto.palm.nut.v1.IdRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.palm.nut.v1.IdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.CategoryClient.prototype.destroy =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Category/Destroy',
      request,
      metadata || {},
      methodDescriptor_Category_Destroy,
      callback);
};


/**
 * @param {!proto.palm.nut.v1.IdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.CategoryPromiseClient.prototype.destroy =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Category/Destroy',
      request,
      metadata || {},
      methodDescriptor_Category_Destroy);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.palm.nut.v1.CategoryIndexResponse>}
 */
const methodDescriptor_Category_Index = new grpc.web.MethodDescriptor(
  '/palm.nut.v1.Category/Index',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.palm.nut.v1.CategoryIndexResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.palm.nut.v1.CategoryIndexResponse.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.palm.nut.v1.CategoryIndexResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.palm.nut.v1.CategoryIndexResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.palm.nut.v1.CategoryClient.prototype.index =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/palm.nut.v1.Category/Index',
      request,
      metadata || {},
      methodDescriptor_Category_Index,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.palm.nut.v1.CategoryIndexResponse>}
 *     Promise that resolves to the response
 */
proto.palm.nut.v1.CategoryPromiseClient.prototype.index =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/palm.nut.v1.Category/Index',
      request,
      metadata || {},
      methodDescriptor_Category_Index);
};


module.exports = proto.palm.nut.v1;

