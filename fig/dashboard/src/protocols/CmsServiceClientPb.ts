/**
 * @fileoverview gRPC-Web generated client stub for palm.cms.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.23.1
// source: cms.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';
import * as cms_pb from './cms_pb';
import * as nut_pb from './nut_pb';


export class NotificationClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/palm.cms.v1.Notification/Create',
    grpcWeb.MethodType.UNARY,
    cms_pb.NotificationCreateRequest,
    google_protobuf_empty_pb.Empty,
    (request: cms_pb.NotificationCreateRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  create(
    request: cms_pb.NotificationCreateRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  create(
    request: cms_pb.NotificationCreateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  create(
    request: cms_pb.NotificationCreateRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.cms.v1.Notification/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.cms.v1.Notification/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorUpdate = new grpcWeb.MethodDescriptor(
    '/palm.cms.v1.Notification/Update',
    grpcWeb.MethodType.UNARY,
    cms_pb.NotificationUpdateRequest,
    google_protobuf_empty_pb.Empty,
    (request: cms_pb.NotificationUpdateRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  update(
    request: cms_pb.NotificationUpdateRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  update(
    request: cms_pb.NotificationUpdateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  update(
    request: cms_pb.NotificationUpdateRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.cms.v1.Notification/Update',
        request,
        metadata || {},
        this.methodDescriptorUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.cms.v1.Notification/Update',
    request,
    metadata || {},
    this.methodDescriptorUpdate);
  }

  methodDescriptorIndex = new grpcWeb.MethodDescriptor(
    '/palm.cms.v1.Notification/Index',
    grpcWeb.MethodType.UNARY,
    nut_pb.Pager,
    cms_pb.NotificationIndexResponse,
    (request: nut_pb.Pager) => {
      return request.serializeBinary();
    },
    cms_pb.NotificationIndexResponse.deserializeBinary
  );

  index(
    request: nut_pb.Pager,
    metadata: grpcWeb.Metadata | null): Promise<cms_pb.NotificationIndexResponse>;

  index(
    request: nut_pb.Pager,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: cms_pb.NotificationIndexResponse) => void): grpcWeb.ClientReadableStream<cms_pb.NotificationIndexResponse>;

  index(
    request: nut_pb.Pager,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: cms_pb.NotificationIndexResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.cms.v1.Notification/Index',
        request,
        metadata || {},
        this.methodDescriptorIndex,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.cms.v1.Notification/Index',
    request,
    metadata || {},
    this.methodDescriptorIndex);
  }

  methodDescriptorShow = new grpcWeb.MethodDescriptor(
    '/palm.cms.v1.Notification/Show',
    grpcWeb.MethodType.UNARY,
    nut_pb.IdRequest,
    cms_pb.NotificationIndexResponse.Item,
    (request: nut_pb.IdRequest) => {
      return request.serializeBinary();
    },
    cms_pb.NotificationIndexResponse.Item.deserializeBinary
  );

  show(
    request: nut_pb.IdRequest,
    metadata: grpcWeb.Metadata | null): Promise<cms_pb.NotificationIndexResponse.Item>;

  show(
    request: nut_pb.IdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: cms_pb.NotificationIndexResponse.Item) => void): grpcWeb.ClientReadableStream<cms_pb.NotificationIndexResponse.Item>;

  show(
    request: nut_pb.IdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: cms_pb.NotificationIndexResponse.Item) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.cms.v1.Notification/Show',
        request,
        metadata || {},
        this.methodDescriptorShow,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.cms.v1.Notification/Show',
    request,
    metadata || {},
    this.methodDescriptorShow);
  }

  methodDescriptorDestory = new grpcWeb.MethodDescriptor(
    '/palm.cms.v1.Notification/Destory',
    grpcWeb.MethodType.UNARY,
    nut_pb.IdRequest,
    google_protobuf_empty_pb.Empty,
    (request: nut_pb.IdRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  destory(
    request: nut_pb.IdRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  destory(
    request: nut_pb.IdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  destory(
    request: nut_pb.IdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.cms.v1.Notification/Destory',
        request,
        metadata || {},
        this.methodDescriptorDestory,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.cms.v1.Notification/Destory',
    request,
    metadata || {},
    this.methodDescriptorDestory);
  }

}

export class FolderClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

}

