// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: ops-metrics.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReportHeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ReportHeartbeatRequest) Reset() {
	*x = ReportHeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ops_metrics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportHeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportHeartbeatRequest) ProtoMessage() {}

func (x *ReportHeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ops_metrics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportHeartbeatRequest.ProtoReflect.Descriptor instead.
func (*ReportHeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_ops_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *ReportHeartbeatRequest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ReportJournalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname  string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	User      string                 `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Group     string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	Command   string                 `protobuf:"bytes,4,opt,name=command,proto3" json:"command,omitempty"`
	Message   string                 `protobuf:"bytes,9,opt,name=message,proto3" json:"message,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ReportJournalRequest) Reset() {
	*x = ReportJournalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ops_metrics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportJournalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportJournalRequest) ProtoMessage() {}

func (x *ReportJournalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ops_metrics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportJournalRequest.ProtoReflect.Descriptor instead.
func (*ReportJournalRequest) Descriptor() ([]byte, []int) {
	return file_ops_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *ReportJournalRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ReportJournalRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ReportJournalRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ReportJournalRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ReportJournalRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReportJournalRequest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ReportNginxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*ReportNginxRequest_Access_
	//	*ReportNginxRequest_Error
	Payload   isReportNginxRequest_Payload `protobuf_oneof:"payload"`
	CreatedAt *timestamppb.Timestamp       `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ReportNginxRequest) Reset() {
	*x = ReportNginxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ops_metrics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportNginxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportNginxRequest) ProtoMessage() {}

func (x *ReportNginxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ops_metrics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportNginxRequest.ProtoReflect.Descriptor instead.
func (*ReportNginxRequest) Descriptor() ([]byte, []int) {
	return file_ops_metrics_proto_rawDescGZIP(), []int{2}
}

func (m *ReportNginxRequest) GetPayload() isReportNginxRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ReportNginxRequest) GetAccess() *ReportNginxRequest_Access {
	if x, ok := x.GetPayload().(*ReportNginxRequest_Access_); ok {
		return x.Access
	}
	return nil
}

func (x *ReportNginxRequest) GetError() string {
	if x, ok := x.GetPayload().(*ReportNginxRequest_Error); ok {
		return x.Error
	}
	return ""
}

func (x *ReportNginxRequest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type isReportNginxRequest_Payload interface {
	isReportNginxRequest_Payload()
}

type ReportNginxRequest_Access_ struct {
	Access *ReportNginxRequest_Access `protobuf:"bytes,1,opt,name=access,proto3,oneof"`
}

type ReportNginxRequest_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ReportNginxRequest_Access_) isReportNginxRequest_Payload() {}

func (*ReportNginxRequest_Error) isReportNginxRequest_Payload() {}

type ReportNginxRequest_Access struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientIp      string  `protobuf:"bytes,1,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	Method        string  `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Path          string  `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Version       float32 `protobuf:"fixed32,4,opt,name=version,proto3" json:"version,omitempty"`
	Status        uint32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	BodyBytesSent uint64  `protobuf:"varint,6,opt,name=body_bytes_sent,json=bodyBytesSent,proto3" json:"body_bytes_sent,omitempty"`
	RequestTime   float32 `protobuf:"fixed32,7,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
	HttpReferer   *string `protobuf:"bytes,8,opt,name=http_referer,json=httpReferer,proto3,oneof" json:"http_referer,omitempty"`
}

func (x *ReportNginxRequest_Access) Reset() {
	*x = ReportNginxRequest_Access{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ops_metrics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportNginxRequest_Access) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportNginxRequest_Access) ProtoMessage() {}

func (x *ReportNginxRequest_Access) ProtoReflect() protoreflect.Message {
	mi := &file_ops_metrics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportNginxRequest_Access.ProtoReflect.Descriptor instead.
func (*ReportNginxRequest_Access) Descriptor() ([]byte, []int) {
	return file_ops_metrics_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ReportNginxRequest_Access) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *ReportNginxRequest_Access) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ReportNginxRequest_Access) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReportNginxRequest_Access) GetVersion() float32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ReportNginxRequest_Access) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ReportNginxRequest_Access) GetBodyBytesSent() uint64 {
	if x != nil {
		return x.BodyBytesSent
	}
	return 0
}

func (x *ReportNginxRequest_Access) GetRequestTime() float32 {
	if x != nil {
		return x.RequestTime
	}
	return 0
}

func (x *ReportNginxRequest_Access) GetHttpReferer() string {
	if x != nil && x.HttpReferer != nil {
		return *x.HttpReferer
	}
	return ""
}

var File_ops_metrics_proto protoreflect.FileDescriptor

var file_ops_metrics_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6f, 0x70, 0x73, 0x2d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x14,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc6, 0x03, 0x0a, 0x12, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x4e, 0x67, 0x69, 0x6e, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x48, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x67, 0x69,
	0x6e, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x48, 0x00, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x87, 0x02,
	0x0a, 0x06, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x62, 0x6f,
	0x64, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x5f,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x32, 0xf8, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x52, 0x0a,
	0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x2b, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x07, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x29, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x4a, 0x0a, 0x05, 0x4e, 0x67, 0x69, 0x6e, 0x78, 0x12, 0x27, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x67, 0x69, 0x6e, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x5f, 0x0a,
	0x31, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x78, 0x69, 0x76, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x73, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x76, 0x31, 0x50, 0x01, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x78, 0x69, 0x76, 0x2f, 0x66, 0x69, 0x67, 0x2f,
	0x6f, 0x70, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x32, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ops_metrics_proto_rawDescOnce sync.Once
	file_ops_metrics_proto_rawDescData = file_ops_metrics_proto_rawDesc
)

func file_ops_metrics_proto_rawDescGZIP() []byte {
	file_ops_metrics_proto_rawDescOnce.Do(func() {
		file_ops_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(file_ops_metrics_proto_rawDescData)
	})
	return file_ops_metrics_proto_rawDescData
}

var file_ops_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ops_metrics_proto_goTypes = []interface{}{
	(*ReportHeartbeatRequest)(nil),    // 0: palm.ops.metrics.v1.ReportHeartbeatRequest
	(*ReportJournalRequest)(nil),      // 1: palm.ops.metrics.v1.ReportJournalRequest
	(*ReportNginxRequest)(nil),        // 2: palm.ops.metrics.v1.ReportNginxRequest
	(*ReportNginxRequest_Access)(nil), // 3: palm.ops.metrics.v1.ReportNginxRequest.Access
	(*timestamppb.Timestamp)(nil),     // 4: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),             // 5: google.protobuf.Empty
}
var file_ops_metrics_proto_depIdxs = []int32{
	4, // 0: palm.ops.metrics.v1.ReportHeartbeatRequest.created_at:type_name -> google.protobuf.Timestamp
	4, // 1: palm.ops.metrics.v1.ReportJournalRequest.created_at:type_name -> google.protobuf.Timestamp
	3, // 2: palm.ops.metrics.v1.ReportNginxRequest.access:type_name -> palm.ops.metrics.v1.ReportNginxRequest.Access
	4, // 3: palm.ops.metrics.v1.ReportNginxRequest.created_at:type_name -> google.protobuf.Timestamp
	0, // 4: palm.ops.metrics.v1.Report.Heartbeat:input_type -> palm.ops.metrics.v1.ReportHeartbeatRequest
	1, // 5: palm.ops.metrics.v1.Report.Journal:input_type -> palm.ops.metrics.v1.ReportJournalRequest
	2, // 6: palm.ops.metrics.v1.Report.Nginx:input_type -> palm.ops.metrics.v1.ReportNginxRequest
	5, // 7: palm.ops.metrics.v1.Report.Heartbeat:output_type -> google.protobuf.Empty
	5, // 8: palm.ops.metrics.v1.Report.Journal:output_type -> google.protobuf.Empty
	5, // 9: palm.ops.metrics.v1.Report.Nginx:output_type -> google.protobuf.Empty
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_ops_metrics_proto_init() }
func file_ops_metrics_proto_init() {
	if File_ops_metrics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ops_metrics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportHeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ops_metrics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportJournalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ops_metrics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportNginxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ops_metrics_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportNginxRequest_Access); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ops_metrics_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ReportNginxRequest_Access_)(nil),
		(*ReportNginxRequest_Error)(nil),
	}
	file_ops_metrics_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ops_metrics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ops_metrics_proto_goTypes,
		DependencyIndexes: file_ops_metrics_proto_depIdxs,
		MessageInfos:      file_ops_metrics_proto_msgTypes,
	}.Build()
	File_ops_metrics_proto = out.File
	file_ops_metrics_proto_rawDesc = nil
	file_ops_metrics_proto_goTypes = nil
	file_ops_metrics_proto_depIdxs = nil
}
