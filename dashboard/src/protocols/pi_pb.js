// source: pi.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var nut_pb = require('./nut_pb.js');
goog.object.extend(proto, nut_pb);
goog.exportSymbol('proto.palm.pi.v1.AudioPlayRequest', null, global);
goog.exportSymbol('proto.palm.pi.v1.AudioTtsRequest', null, global);
goog.exportSymbol('proto.palm.pi.v1.AudioTtsRequest.Message', null, global);
goog.exportSymbol('proto.palm.pi.v1.NetworkProfile', null, global);
goog.exportSymbol('proto.palm.pi.v1.NetworkProfile.Eap', null, global);
goog.exportSymbol('proto.palm.pi.v1.NetworkProfile.Ethernet', null, global);
goog.exportSymbol('proto.palm.pi.v1.NetworkProfile.Ethernet.IpCase', null, global);
goog.exportSymbol('proto.palm.pi.v1.NetworkProfile.IpV4', null, global);
goog.exportSymbol('proto.palm.pi.v1.NetworkProfile.Wifi', null, global);
goog.exportSymbol('proto.palm.pi.v1.NetworkProfile.Wifi.IpCase', null, global);
goog.exportSymbol('proto.palm.pi.v1.NetworkProfile.Wifi.SecurityCase', null, global);
goog.exportSymbol('proto.palm.pi.v1.NetworkProfile.Wpa', null, global);
goog.exportSymbol('proto.palm.pi.v1.OpenVpnProfile', null, global);
goog.exportSymbol('proto.palm.pi.v1.OpenVpnProfile.Auth', null, global);
goog.exportSymbol('proto.palm.pi.v1.TtyRequest', null, global);
goog.exportSymbol('proto.palm.pi.v1.TtyResponse', null, global);
goog.exportSymbol('proto.palm.pi.v1.UserLogsResponse', null, global);
goog.exportSymbol('proto.palm.pi.v1.UserLogsResponse.Item', null, global);
goog.exportSymbol('proto.palm.pi.v1.UserProfile', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.pi.v1.UserProfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.pi.v1.UserProfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.pi.v1.UserProfile.displayName = 'proto.palm.pi.v1.UserProfile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.pi.v1.UserLogsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.palm.pi.v1.UserLogsResponse.repeatedFields_, null);
};
goog.inherits(proto.palm.pi.v1.UserLogsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.pi.v1.UserLogsResponse.displayName = 'proto.palm.pi.v1.UserLogsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.pi.v1.UserLogsResponse.Item = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.pi.v1.UserLogsResponse.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.pi.v1.UserLogsResponse.Item.displayName = 'proto.palm.pi.v1.UserLogsResponse.Item';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.pi.v1.TtyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.palm.pi.v1.TtyRequest.repeatedFields_, null);
};
goog.inherits(proto.palm.pi.v1.TtyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.pi.v1.TtyRequest.displayName = 'proto.palm.pi.v1.TtyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.pi.v1.TtyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.pi.v1.TtyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.pi.v1.TtyResponse.displayName = 'proto.palm.pi.v1.TtyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.pi.v1.AudioPlayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.palm.pi.v1.AudioPlayRequest.repeatedFields_, null);
};
goog.inherits(proto.palm.pi.v1.AudioPlayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.pi.v1.AudioPlayRequest.displayName = 'proto.palm.pi.v1.AudioPlayRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.pi.v1.AudioTtsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.palm.pi.v1.AudioTtsRequest.repeatedFields_, null);
};
goog.inherits(proto.palm.pi.v1.AudioTtsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.pi.v1.AudioTtsRequest.displayName = 'proto.palm.pi.v1.AudioTtsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.pi.v1.AudioTtsRequest.Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.pi.v1.AudioTtsRequest.Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.pi.v1.AudioTtsRequest.Message.displayName = 'proto.palm.pi.v1.AudioTtsRequest.Message';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.pi.v1.OpenVpnProfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.pi.v1.OpenVpnProfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.pi.v1.OpenVpnProfile.displayName = 'proto.palm.pi.v1.OpenVpnProfile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.pi.v1.OpenVpnProfile.Auth = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.pi.v1.OpenVpnProfile.Auth, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.pi.v1.OpenVpnProfile.Auth.displayName = 'proto.palm.pi.v1.OpenVpnProfile.Auth';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.pi.v1.NetworkProfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.pi.v1.NetworkProfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.pi.v1.NetworkProfile.displayName = 'proto.palm.pi.v1.NetworkProfile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.pi.v1.NetworkProfile.IpV4 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.pi.v1.NetworkProfile.IpV4, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.pi.v1.NetworkProfile.IpV4.displayName = 'proto.palm.pi.v1.NetworkProfile.IpV4';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.pi.v1.NetworkProfile.Wifi = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.palm.pi.v1.NetworkProfile.Wifi.oneofGroups_);
};
goog.inherits(proto.palm.pi.v1.NetworkProfile.Wifi, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.pi.v1.NetworkProfile.Wifi.displayName = 'proto.palm.pi.v1.NetworkProfile.Wifi';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.pi.v1.NetworkProfile.Wpa = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.pi.v1.NetworkProfile.Wpa, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.pi.v1.NetworkProfile.Wpa.displayName = 'proto.palm.pi.v1.NetworkProfile.Wpa';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.pi.v1.NetworkProfile.Eap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.pi.v1.NetworkProfile.Eap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.pi.v1.NetworkProfile.Eap.displayName = 'proto.palm.pi.v1.NetworkProfile.Eap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.pi.v1.NetworkProfile.Ethernet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.palm.pi.v1.NetworkProfile.Ethernet.oneofGroups_);
};
goog.inherits(proto.palm.pi.v1.NetworkProfile.Ethernet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.pi.v1.NetworkProfile.Ethernet.displayName = 'proto.palm.pi.v1.NetworkProfile.Ethernet';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.pi.v1.UserProfile.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.pi.v1.UserProfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.pi.v1.UserProfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.UserProfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.pi.v1.UserProfile}
 */
proto.palm.pi.v1.UserProfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.pi.v1.UserProfile;
  return proto.palm.pi.v1.UserProfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.pi.v1.UserProfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.pi.v1.UserProfile}
 */
proto.palm.pi.v1.UserProfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.pi.v1.UserProfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.pi.v1.UserProfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.pi.v1.UserProfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.UserProfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.palm.pi.v1.UserProfile.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.UserProfile} returns this
 */
proto.palm.pi.v1.UserProfile.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.palm.pi.v1.UserProfile.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.UserProfile} returns this
 */
proto.palm.pi.v1.UserProfile.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.palm.pi.v1.UserLogsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.pi.v1.UserLogsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.pi.v1.UserLogsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.pi.v1.UserLogsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.UserLogsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.palm.pi.v1.UserLogsResponse.Item.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && nut_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.pi.v1.UserLogsResponse}
 */
proto.palm.pi.v1.UserLogsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.pi.v1.UserLogsResponse;
  return proto.palm.pi.v1.UserLogsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.pi.v1.UserLogsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.pi.v1.UserLogsResponse}
 */
proto.palm.pi.v1.UserLogsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.palm.pi.v1.UserLogsResponse.Item;
      reader.readMessage(value,proto.palm.pi.v1.UserLogsResponse.Item.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    case 2:
      var value = new nut_pb.Pagination;
      reader.readMessage(value,nut_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.pi.v1.UserLogsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.pi.v1.UserLogsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.pi.v1.UserLogsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.UserLogsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.palm.pi.v1.UserLogsResponse.Item.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      nut_pb.Pagination.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.pi.v1.UserLogsResponse.Item.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.pi.v1.UserLogsResponse.Item.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.pi.v1.UserLogsResponse.Item} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.UserLogsResponse.Item.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.pi.v1.UserLogsResponse.Item}
 */
proto.palm.pi.v1.UserLogsResponse.Item.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.pi.v1.UserLogsResponse.Item;
  return proto.palm.pi.v1.UserLogsResponse.Item.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.pi.v1.UserLogsResponse.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.pi.v1.UserLogsResponse.Item}
 */
proto.palm.pi.v1.UserLogsResponse.Item.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.pi.v1.UserLogsResponse.Item.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.pi.v1.UserLogsResponse.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.pi.v1.UserLogsResponse.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.UserLogsResponse.Item.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.palm.pi.v1.UserLogsResponse.Item.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.UserLogsResponse.Item} returns this
 */
proto.palm.pi.v1.UserLogsResponse.Item.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.palm.pi.v1.UserLogsResponse.Item.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.palm.pi.v1.UserLogsResponse.Item} returns this
*/
proto.palm.pi.v1.UserLogsResponse.Item.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.pi.v1.UserLogsResponse.Item} returns this
 */
proto.palm.pi.v1.UserLogsResponse.Item.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.pi.v1.UserLogsResponse.Item.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Item items = 1;
 * @return {!Array<!proto.palm.pi.v1.UserLogsResponse.Item>}
 */
proto.palm.pi.v1.UserLogsResponse.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.palm.pi.v1.UserLogsResponse.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.palm.pi.v1.UserLogsResponse.Item, 1));
};


/**
 * @param {!Array<!proto.palm.pi.v1.UserLogsResponse.Item>} value
 * @return {!proto.palm.pi.v1.UserLogsResponse} returns this
*/
proto.palm.pi.v1.UserLogsResponse.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.palm.pi.v1.UserLogsResponse.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.palm.pi.v1.UserLogsResponse.Item}
 */
proto.palm.pi.v1.UserLogsResponse.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.palm.pi.v1.UserLogsResponse.Item, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.palm.pi.v1.UserLogsResponse} returns this
 */
proto.palm.pi.v1.UserLogsResponse.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * optional palm.nut.v1.Pagination pagination = 2;
 * @return {?proto.palm.nut.v1.Pagination}
 */
proto.palm.pi.v1.UserLogsResponse.prototype.getPagination = function() {
  return /** @type{?proto.palm.nut.v1.Pagination} */ (
    jspb.Message.getWrapperField(this, nut_pb.Pagination, 2));
};


/**
 * @param {?proto.palm.nut.v1.Pagination|undefined} value
 * @return {!proto.palm.pi.v1.UserLogsResponse} returns this
*/
proto.palm.pi.v1.UserLogsResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.pi.v1.UserLogsResponse} returns this
 */
proto.palm.pi.v1.UserLogsResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.pi.v1.UserLogsResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.palm.pi.v1.TtyRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.pi.v1.TtyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.pi.v1.TtyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.pi.v1.TtyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.TtyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    delay: (f = msg.getDelay()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.pi.v1.TtyRequest}
 */
proto.palm.pi.v1.TtyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.pi.v1.TtyRequest;
  return proto.palm.pi.v1.TtyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.pi.v1.TtyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.pi.v1.TtyRequest}
 */
proto.palm.pi.v1.TtyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addItems(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDelay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.pi.v1.TtyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.pi.v1.TtyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.pi.v1.TtyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.TtyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getDelay();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string items = 1;
 * @return {!Array<string>}
 */
proto.palm.pi.v1.TtyRequest.prototype.getItemsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.palm.pi.v1.TtyRequest} returns this
 */
proto.palm.pi.v1.TtyRequest.prototype.setItemsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.palm.pi.v1.TtyRequest} returns this
 */
proto.palm.pi.v1.TtyRequest.prototype.addItems = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.palm.pi.v1.TtyRequest} returns this
 */
proto.palm.pi.v1.TtyRequest.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * optional google.protobuf.Duration delay = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.palm.pi.v1.TtyRequest.prototype.getDelay = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.palm.pi.v1.TtyRequest} returns this
*/
proto.palm.pi.v1.TtyRequest.prototype.setDelay = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.pi.v1.TtyRequest} returns this
 */
proto.palm.pi.v1.TtyRequest.prototype.clearDelay = function() {
  return this.setDelay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.pi.v1.TtyRequest.prototype.hasDelay = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.pi.v1.TtyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.pi.v1.TtyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.pi.v1.TtyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.TtyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.pi.v1.TtyResponse}
 */
proto.palm.pi.v1.TtyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.pi.v1.TtyResponse;
  return proto.palm.pi.v1.TtyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.pi.v1.TtyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.pi.v1.TtyResponse}
 */
proto.palm.pi.v1.TtyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.pi.v1.TtyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.pi.v1.TtyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.pi.v1.TtyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.TtyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.palm.pi.v1.TtyResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.TtyResponse} returns this
 */
proto.palm.pi.v1.TtyResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.palm.pi.v1.TtyResponse.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.palm.pi.v1.TtyResponse} returns this
*/
proto.palm.pi.v1.TtyResponse.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.pi.v1.TtyResponse} returns this
 */
proto.palm.pi.v1.TtyResponse.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.pi.v1.TtyResponse.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.palm.pi.v1.AudioPlayRequest.repeatedFields_ = [1,21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.pi.v1.AudioPlayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.pi.v1.AudioPlayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.pi.v1.AudioPlayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.AudioPlayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    loopList: (f = jspb.Message.getRepeatedField(msg, 21)) == null ? undefined : f,
    delay: (f = msg.getDelay()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.pi.v1.AudioPlayRequest}
 */
proto.palm.pi.v1.AudioPlayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.pi.v1.AudioPlayRequest;
  return proto.palm.pi.v1.AudioPlayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.pi.v1.AudioPlayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.pi.v1.AudioPlayRequest}
 */
proto.palm.pi.v1.AudioPlayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addFiles(value);
      break;
    case 21:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLoop(values[i]);
      }
      break;
    case 22:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDelay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.pi.v1.AudioPlayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.pi.v1.AudioPlayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.pi.v1.AudioPlayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.AudioPlayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getLoopList();
  if (f.length > 0) {
    writer.writePackedUint64(
      21,
      f
    );
  }
  f = message.getDelay();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string files = 1;
 * @return {!Array<string>}
 */
proto.palm.pi.v1.AudioPlayRequest.prototype.getFilesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.palm.pi.v1.AudioPlayRequest} returns this
 */
proto.palm.pi.v1.AudioPlayRequest.prototype.setFilesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.palm.pi.v1.AudioPlayRequest} returns this
 */
proto.palm.pi.v1.AudioPlayRequest.prototype.addFiles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.palm.pi.v1.AudioPlayRequest} returns this
 */
proto.palm.pi.v1.AudioPlayRequest.prototype.clearFilesList = function() {
  return this.setFilesList([]);
};


/**
 * repeated uint64 loop = 21;
 * @return {!Array<number>}
 */
proto.palm.pi.v1.AudioPlayRequest.prototype.getLoopList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 21));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.palm.pi.v1.AudioPlayRequest} returns this
 */
proto.palm.pi.v1.AudioPlayRequest.prototype.setLoopList = function(value) {
  return jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.palm.pi.v1.AudioPlayRequest} returns this
 */
proto.palm.pi.v1.AudioPlayRequest.prototype.addLoop = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.palm.pi.v1.AudioPlayRequest} returns this
 */
proto.palm.pi.v1.AudioPlayRequest.prototype.clearLoopList = function() {
  return this.setLoopList([]);
};


/**
 * optional google.protobuf.Duration delay = 22;
 * @return {?proto.google.protobuf.Duration}
 */
proto.palm.pi.v1.AudioPlayRequest.prototype.getDelay = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 22));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.palm.pi.v1.AudioPlayRequest} returns this
*/
proto.palm.pi.v1.AudioPlayRequest.prototype.setDelay = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.pi.v1.AudioPlayRequest} returns this
 */
proto.palm.pi.v1.AudioPlayRequest.prototype.clearDelay = function() {
  return this.setDelay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.pi.v1.AudioPlayRequest.prototype.hasDelay = function() {
  return jspb.Message.getField(this, 22) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.palm.pi.v1.AudioTtsRequest.repeatedFields_ = [1,21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.pi.v1.AudioTtsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.pi.v1.AudioTtsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.pi.v1.AudioTtsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.AudioTtsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    proto.palm.pi.v1.AudioTtsRequest.Message.toObject, includeInstance),
    loopList: (f = jspb.Message.getRepeatedField(msg, 21)) == null ? undefined : f,
    delay: (f = msg.getDelay()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.pi.v1.AudioTtsRequest}
 */
proto.palm.pi.v1.AudioTtsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.pi.v1.AudioTtsRequest;
  return proto.palm.pi.v1.AudioTtsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.pi.v1.AudioTtsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.pi.v1.AudioTtsRequest}
 */
proto.palm.pi.v1.AudioTtsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.palm.pi.v1.AudioTtsRequest.Message;
      reader.readMessage(value,proto.palm.pi.v1.AudioTtsRequest.Message.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    case 21:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLoop(values[i]);
      }
      break;
    case 22:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDelay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.pi.v1.AudioTtsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.pi.v1.AudioTtsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.pi.v1.AudioTtsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.AudioTtsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.palm.pi.v1.AudioTtsRequest.Message.serializeBinaryToWriter
    );
  }
  f = message.getLoopList();
  if (f.length > 0) {
    writer.writePackedUint64(
      21,
      f
    );
  }
  f = message.getDelay();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.pi.v1.AudioTtsRequest.Message.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.pi.v1.AudioTtsRequest.Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.pi.v1.AudioTtsRequest.Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.AudioTtsRequest.Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.pi.v1.AudioTtsRequest.Message}
 */
proto.palm.pi.v1.AudioTtsRequest.Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.pi.v1.AudioTtsRequest.Message;
  return proto.palm.pi.v1.AudioTtsRequest.Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.pi.v1.AudioTtsRequest.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.pi.v1.AudioTtsRequest.Message}
 */
proto.palm.pi.v1.AudioTtsRequest.Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.pi.v1.AudioTtsRequest.Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.pi.v1.AudioTtsRequest.Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.pi.v1.AudioTtsRequest.Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.AudioTtsRequest.Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.palm.pi.v1.AudioTtsRequest.Message.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.AudioTtsRequest.Message} returns this
 */
proto.palm.pi.v1.AudioTtsRequest.Message.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Message messages = 1;
 * @return {!Array<!proto.palm.pi.v1.AudioTtsRequest.Message>}
 */
proto.palm.pi.v1.AudioTtsRequest.prototype.getMessagesList = function() {
  return /** @type{!Array<!proto.palm.pi.v1.AudioTtsRequest.Message>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.palm.pi.v1.AudioTtsRequest.Message, 1));
};


/**
 * @param {!Array<!proto.palm.pi.v1.AudioTtsRequest.Message>} value
 * @return {!proto.palm.pi.v1.AudioTtsRequest} returns this
*/
proto.palm.pi.v1.AudioTtsRequest.prototype.setMessagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.palm.pi.v1.AudioTtsRequest.Message=} opt_value
 * @param {number=} opt_index
 * @return {!proto.palm.pi.v1.AudioTtsRequest.Message}
 */
proto.palm.pi.v1.AudioTtsRequest.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.palm.pi.v1.AudioTtsRequest.Message, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.palm.pi.v1.AudioTtsRequest} returns this
 */
proto.palm.pi.v1.AudioTtsRequest.prototype.clearMessagesList = function() {
  return this.setMessagesList([]);
};


/**
 * repeated uint64 loop = 21;
 * @return {!Array<number>}
 */
proto.palm.pi.v1.AudioTtsRequest.prototype.getLoopList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 21));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.palm.pi.v1.AudioTtsRequest} returns this
 */
proto.palm.pi.v1.AudioTtsRequest.prototype.setLoopList = function(value) {
  return jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.palm.pi.v1.AudioTtsRequest} returns this
 */
proto.palm.pi.v1.AudioTtsRequest.prototype.addLoop = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.palm.pi.v1.AudioTtsRequest} returns this
 */
proto.palm.pi.v1.AudioTtsRequest.prototype.clearLoopList = function() {
  return this.setLoopList([]);
};


/**
 * optional google.protobuf.Duration delay = 22;
 * @return {?proto.google.protobuf.Duration}
 */
proto.palm.pi.v1.AudioTtsRequest.prototype.getDelay = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 22));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.palm.pi.v1.AudioTtsRequest} returns this
*/
proto.palm.pi.v1.AudioTtsRequest.prototype.setDelay = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.pi.v1.AudioTtsRequest} returns this
 */
proto.palm.pi.v1.AudioTtsRequest.prototype.clearDelay = function() {
  return this.setDelay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.pi.v1.AudioTtsRequest.prototype.hasDelay = function() {
  return jspb.Message.getField(this, 22) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.pi.v1.OpenVpnProfile.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.pi.v1.OpenVpnProfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.pi.v1.OpenVpnProfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.OpenVpnProfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && proto.palm.pi.v1.OpenVpnProfile.Auth.toObject(includeInstance, f),
    body: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.pi.v1.OpenVpnProfile}
 */
proto.palm.pi.v1.OpenVpnProfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.pi.v1.OpenVpnProfile;
  return proto.palm.pi.v1.OpenVpnProfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.pi.v1.OpenVpnProfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.pi.v1.OpenVpnProfile}
 */
proto.palm.pi.v1.OpenVpnProfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.palm.pi.v1.OpenVpnProfile.Auth;
      reader.readMessage(value,proto.palm.pi.v1.OpenVpnProfile.Auth.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.pi.v1.OpenVpnProfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.pi.v1.OpenVpnProfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.pi.v1.OpenVpnProfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.OpenVpnProfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.palm.pi.v1.OpenVpnProfile.Auth.serializeBinaryToWriter
    );
  }
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.pi.v1.OpenVpnProfile.Auth.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.pi.v1.OpenVpnProfile.Auth.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.pi.v1.OpenVpnProfile.Auth} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.OpenVpnProfile.Auth.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.pi.v1.OpenVpnProfile.Auth}
 */
proto.palm.pi.v1.OpenVpnProfile.Auth.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.pi.v1.OpenVpnProfile.Auth;
  return proto.palm.pi.v1.OpenVpnProfile.Auth.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.pi.v1.OpenVpnProfile.Auth} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.pi.v1.OpenVpnProfile.Auth}
 */
proto.palm.pi.v1.OpenVpnProfile.Auth.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.pi.v1.OpenVpnProfile.Auth.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.pi.v1.OpenVpnProfile.Auth.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.pi.v1.OpenVpnProfile.Auth} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.OpenVpnProfile.Auth.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user = 1;
 * @return {string}
 */
proto.palm.pi.v1.OpenVpnProfile.Auth.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.OpenVpnProfile.Auth} returns this
 */
proto.palm.pi.v1.OpenVpnProfile.Auth.prototype.setUser = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.palm.pi.v1.OpenVpnProfile.Auth.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.OpenVpnProfile.Auth} returns this
 */
proto.palm.pi.v1.OpenVpnProfile.Auth.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Auth auth = 1;
 * @return {?proto.palm.pi.v1.OpenVpnProfile.Auth}
 */
proto.palm.pi.v1.OpenVpnProfile.prototype.getAuth = function() {
  return /** @type{?proto.palm.pi.v1.OpenVpnProfile.Auth} */ (
    jspb.Message.getWrapperField(this, proto.palm.pi.v1.OpenVpnProfile.Auth, 1));
};


/**
 * @param {?proto.palm.pi.v1.OpenVpnProfile.Auth|undefined} value
 * @return {!proto.palm.pi.v1.OpenVpnProfile} returns this
*/
proto.palm.pi.v1.OpenVpnProfile.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.pi.v1.OpenVpnProfile} returns this
 */
proto.palm.pi.v1.OpenVpnProfile.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.pi.v1.OpenVpnProfile.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string body = 2;
 * @return {string}
 */
proto.palm.pi.v1.OpenVpnProfile.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.OpenVpnProfile} returns this
 */
proto.palm.pi.v1.OpenVpnProfile.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.pi.v1.NetworkProfile.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.pi.v1.NetworkProfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.pi.v1.NetworkProfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.NetworkProfile.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.pi.v1.NetworkProfile}
 */
proto.palm.pi.v1.NetworkProfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.pi.v1.NetworkProfile;
  return proto.palm.pi.v1.NetworkProfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.pi.v1.NetworkProfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.pi.v1.NetworkProfile}
 */
proto.palm.pi.v1.NetworkProfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.pi.v1.NetworkProfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.pi.v1.NetworkProfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.pi.v1.NetworkProfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.NetworkProfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.pi.v1.NetworkProfile.IpV4.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.pi.v1.NetworkProfile.IpV4.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.pi.v1.NetworkProfile.IpV4} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.NetworkProfile.IpV4.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    netmask: jspb.Message.getFieldWithDefault(msg, 2, ""),
    gateway: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dns1: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dns2: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.pi.v1.NetworkProfile.IpV4}
 */
proto.palm.pi.v1.NetworkProfile.IpV4.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.pi.v1.NetworkProfile.IpV4;
  return proto.palm.pi.v1.NetworkProfile.IpV4.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.pi.v1.NetworkProfile.IpV4} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.pi.v1.NetworkProfile.IpV4}
 */
proto.palm.pi.v1.NetworkProfile.IpV4.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetmask(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateway(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDns1(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDns2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.pi.v1.NetworkProfile.IpV4.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.pi.v1.NetworkProfile.IpV4.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.pi.v1.NetworkProfile.IpV4} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.NetworkProfile.IpV4.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNetmask();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGateway();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDns1();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.palm.pi.v1.NetworkProfile.IpV4.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.NetworkProfile.IpV4} returns this
 */
proto.palm.pi.v1.NetworkProfile.IpV4.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string netmask = 2;
 * @return {string}
 */
proto.palm.pi.v1.NetworkProfile.IpV4.prototype.getNetmask = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.NetworkProfile.IpV4} returns this
 */
proto.palm.pi.v1.NetworkProfile.IpV4.prototype.setNetmask = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string gateway = 3;
 * @return {string}
 */
proto.palm.pi.v1.NetworkProfile.IpV4.prototype.getGateway = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.NetworkProfile.IpV4} returns this
 */
proto.palm.pi.v1.NetworkProfile.IpV4.prototype.setGateway = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string dns1 = 4;
 * @return {string}
 */
proto.palm.pi.v1.NetworkProfile.IpV4.prototype.getDns1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.NetworkProfile.IpV4} returns this
 */
proto.palm.pi.v1.NetworkProfile.IpV4.prototype.setDns1 = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string dns2 = 5;
 * @return {string}
 */
proto.palm.pi.v1.NetworkProfile.IpV4.prototype.getDns2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.NetworkProfile.IpV4} returns this
 */
proto.palm.pi.v1.NetworkProfile.IpV4.prototype.setDns2 = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.palm.pi.v1.NetworkProfile.IpV4} returns this
 */
proto.palm.pi.v1.NetworkProfile.IpV4.prototype.clearDns2 = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.pi.v1.NetworkProfile.IpV4.prototype.hasDns2 = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.palm.pi.v1.NetworkProfile.Wifi.oneofGroups_ = [[11,12],[21,22,23]];

/**
 * @enum {number}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.IpCase = {
  IP_NOT_SET: 0,
  DHCP: 11,
  STATIC: 12
};

/**
 * @return {proto.palm.pi.v1.NetworkProfile.Wifi.IpCase}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.getIpCase = function() {
  return /** @type {proto.palm.pi.v1.NetworkProfile.Wifi.IpCase} */(jspb.Message.computeOneofCase(this, proto.palm.pi.v1.NetworkProfile.Wifi.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.SecurityCase = {
  SECURITY_NOT_SET: 0,
  OPEN: 21,
  WPA: 22,
  EAP: 23
};

/**
 * @return {proto.palm.pi.v1.NetworkProfile.Wifi.SecurityCase}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.getSecurityCase = function() {
  return /** @type {proto.palm.pi.v1.NetworkProfile.Wifi.SecurityCase} */(jspb.Message.computeOneofCase(this, proto.palm.pi.v1.NetworkProfile.Wifi.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.pi.v1.NetworkProfile.Wifi.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.pi.v1.NetworkProfile.Wifi} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.NetworkProfile.Wifi.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ssid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dhcp: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    pb_static: (f = msg.getStatic()) && proto.palm.pi.v1.NetworkProfile.IpV4.toObject(includeInstance, f),
    open: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    wpa: (f = msg.getWpa()) && proto.palm.pi.v1.NetworkProfile.Wpa.toObject(includeInstance, f),
    eap: (f = msg.getEap()) && proto.palm.pi.v1.NetworkProfile.Eap.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.pi.v1.NetworkProfile.Wifi}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.pi.v1.NetworkProfile.Wifi;
  return proto.palm.pi.v1.NetworkProfile.Wifi.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.pi.v1.NetworkProfile.Wifi} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.pi.v1.NetworkProfile.Wifi}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsid(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDhcp(value);
      break;
    case 12:
      var value = new proto.palm.pi.v1.NetworkProfile.IpV4;
      reader.readMessage(value,proto.palm.pi.v1.NetworkProfile.IpV4.deserializeBinaryFromReader);
      msg.setStatic(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOpen(value);
      break;
    case 22:
      var value = new proto.palm.pi.v1.NetworkProfile.Wpa;
      reader.readMessage(value,proto.palm.pi.v1.NetworkProfile.Wpa.deserializeBinaryFromReader);
      msg.setWpa(value);
      break;
    case 23:
      var value = new proto.palm.pi.v1.NetworkProfile.Eap;
      reader.readMessage(value,proto.palm.pi.v1.NetworkProfile.Eap.deserializeBinaryFromReader);
      msg.setEap(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.pi.v1.NetworkProfile.Wifi.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.pi.v1.NetworkProfile.Wifi} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.NetworkProfile.Wifi.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSsid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getStatic();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.palm.pi.v1.NetworkProfile.IpV4.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getWpa();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.palm.pi.v1.NetworkProfile.Wpa.serializeBinaryToWriter
    );
  }
  f = message.getEap();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.palm.pi.v1.NetworkProfile.Eap.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.NetworkProfile.Wifi} returns this
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ssid = 2;
 * @return {string}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.getSsid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.NetworkProfile.Wifi} returns this
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.setSsid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool dhcp = 11;
 * @return {boolean}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.getDhcp = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.palm.pi.v1.NetworkProfile.Wifi} returns this
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.setDhcp = function(value) {
  return jspb.Message.setOneofField(this, 11, proto.palm.pi.v1.NetworkProfile.Wifi.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.palm.pi.v1.NetworkProfile.Wifi} returns this
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.clearDhcp = function() {
  return jspb.Message.setOneofField(this, 11, proto.palm.pi.v1.NetworkProfile.Wifi.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.hasDhcp = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional IpV4 static = 12;
 * @return {?proto.palm.pi.v1.NetworkProfile.IpV4}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.getStatic = function() {
  return /** @type{?proto.palm.pi.v1.NetworkProfile.IpV4} */ (
    jspb.Message.getWrapperField(this, proto.palm.pi.v1.NetworkProfile.IpV4, 12));
};


/**
 * @param {?proto.palm.pi.v1.NetworkProfile.IpV4|undefined} value
 * @return {!proto.palm.pi.v1.NetworkProfile.Wifi} returns this
*/
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.setStatic = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.palm.pi.v1.NetworkProfile.Wifi.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.pi.v1.NetworkProfile.Wifi} returns this
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.clearStatic = function() {
  return this.setStatic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.hasStatic = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool open = 21;
 * @return {boolean}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.getOpen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.palm.pi.v1.NetworkProfile.Wifi} returns this
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.setOpen = function(value) {
  return jspb.Message.setOneofField(this, 21, proto.palm.pi.v1.NetworkProfile.Wifi.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.palm.pi.v1.NetworkProfile.Wifi} returns this
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.clearOpen = function() {
  return jspb.Message.setOneofField(this, 21, proto.palm.pi.v1.NetworkProfile.Wifi.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.hasOpen = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional Wpa wpa = 22;
 * @return {?proto.palm.pi.v1.NetworkProfile.Wpa}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.getWpa = function() {
  return /** @type{?proto.palm.pi.v1.NetworkProfile.Wpa} */ (
    jspb.Message.getWrapperField(this, proto.palm.pi.v1.NetworkProfile.Wpa, 22));
};


/**
 * @param {?proto.palm.pi.v1.NetworkProfile.Wpa|undefined} value
 * @return {!proto.palm.pi.v1.NetworkProfile.Wifi} returns this
*/
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.setWpa = function(value) {
  return jspb.Message.setOneofWrapperField(this, 22, proto.palm.pi.v1.NetworkProfile.Wifi.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.pi.v1.NetworkProfile.Wifi} returns this
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.clearWpa = function() {
  return this.setWpa(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.hasWpa = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional Eap eap = 23;
 * @return {?proto.palm.pi.v1.NetworkProfile.Eap}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.getEap = function() {
  return /** @type{?proto.palm.pi.v1.NetworkProfile.Eap} */ (
    jspb.Message.getWrapperField(this, proto.palm.pi.v1.NetworkProfile.Eap, 23));
};


/**
 * @param {?proto.palm.pi.v1.NetworkProfile.Eap|undefined} value
 * @return {!proto.palm.pi.v1.NetworkProfile.Wifi} returns this
*/
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.setEap = function(value) {
  return jspb.Message.setOneofWrapperField(this, 23, proto.palm.pi.v1.NetworkProfile.Wifi.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.pi.v1.NetworkProfile.Wifi} returns this
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.clearEap = function() {
  return this.setEap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.pi.v1.NetworkProfile.Wifi.prototype.hasEap = function() {
  return jspb.Message.getField(this, 23) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.pi.v1.NetworkProfile.Wpa.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.pi.v1.NetworkProfile.Wpa.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.pi.v1.NetworkProfile.Wpa} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.NetworkProfile.Wpa.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.pi.v1.NetworkProfile.Wpa}
 */
proto.palm.pi.v1.NetworkProfile.Wpa.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.pi.v1.NetworkProfile.Wpa;
  return proto.palm.pi.v1.NetworkProfile.Wpa.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.pi.v1.NetworkProfile.Wpa} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.pi.v1.NetworkProfile.Wpa}
 */
proto.palm.pi.v1.NetworkProfile.Wpa.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.pi.v1.NetworkProfile.Wpa.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.pi.v1.NetworkProfile.Wpa.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.pi.v1.NetworkProfile.Wpa} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.NetworkProfile.Wpa.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.palm.pi.v1.NetworkProfile.Wpa.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.NetworkProfile.Wpa} returns this
 */
proto.palm.pi.v1.NetworkProfile.Wpa.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.palm.pi.v1.NetworkProfile.Wpa.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.NetworkProfile.Wpa} returns this
 */
proto.palm.pi.v1.NetworkProfile.Wpa.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.pi.v1.NetworkProfile.Eap.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.pi.v1.NetworkProfile.Eap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.pi.v1.NetworkProfile.Eap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.NetworkProfile.Eap.toObject = function(includeInstance, msg) {
  var f, obj = {
    identify: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.pi.v1.NetworkProfile.Eap}
 */
proto.palm.pi.v1.NetworkProfile.Eap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.pi.v1.NetworkProfile.Eap;
  return proto.palm.pi.v1.NetworkProfile.Eap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.pi.v1.NetworkProfile.Eap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.pi.v1.NetworkProfile.Eap}
 */
proto.palm.pi.v1.NetworkProfile.Eap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentify(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.pi.v1.NetworkProfile.Eap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.pi.v1.NetworkProfile.Eap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.pi.v1.NetworkProfile.Eap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.NetworkProfile.Eap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentify();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string identify = 1;
 * @return {string}
 */
proto.palm.pi.v1.NetworkProfile.Eap.prototype.getIdentify = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.NetworkProfile.Eap} returns this
 */
proto.palm.pi.v1.NetworkProfile.Eap.prototype.setIdentify = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.palm.pi.v1.NetworkProfile.Eap.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.NetworkProfile.Eap} returns this
 */
proto.palm.pi.v1.NetworkProfile.Eap.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.oneofGroups_ = [[11,12]];

/**
 * @enum {number}
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.IpCase = {
  IP_NOT_SET: 0,
  DHCP: 11,
  STATIC: 12
};

/**
 * @return {proto.palm.pi.v1.NetworkProfile.Ethernet.IpCase}
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.prototype.getIpCase = function() {
  return /** @type {proto.palm.pi.v1.NetworkProfile.Ethernet.IpCase} */(jspb.Message.computeOneofCase(this, proto.palm.pi.v1.NetworkProfile.Ethernet.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.pi.v1.NetworkProfile.Ethernet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.pi.v1.NetworkProfile.Ethernet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dhcp: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    pb_static: (f = msg.getStatic()) && proto.palm.pi.v1.NetworkProfile.IpV4.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.pi.v1.NetworkProfile.Ethernet}
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.pi.v1.NetworkProfile.Ethernet;
  return proto.palm.pi.v1.NetworkProfile.Ethernet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.pi.v1.NetworkProfile.Ethernet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.pi.v1.NetworkProfile.Ethernet}
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDhcp(value);
      break;
    case 12:
      var value = new proto.palm.pi.v1.NetworkProfile.IpV4;
      reader.readMessage(value,proto.palm.pi.v1.NetworkProfile.IpV4.deserializeBinaryFromReader);
      msg.setStatic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.pi.v1.NetworkProfile.Ethernet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.pi.v1.NetworkProfile.Ethernet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getStatic();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.palm.pi.v1.NetworkProfile.IpV4.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.pi.v1.NetworkProfile.Ethernet} returns this
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool dhcp = 11;
 * @return {boolean}
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.prototype.getDhcp = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.palm.pi.v1.NetworkProfile.Ethernet} returns this
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.prototype.setDhcp = function(value) {
  return jspb.Message.setOneofField(this, 11, proto.palm.pi.v1.NetworkProfile.Ethernet.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.palm.pi.v1.NetworkProfile.Ethernet} returns this
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.prototype.clearDhcp = function() {
  return jspb.Message.setOneofField(this, 11, proto.palm.pi.v1.NetworkProfile.Ethernet.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.prototype.hasDhcp = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional IpV4 static = 12;
 * @return {?proto.palm.pi.v1.NetworkProfile.IpV4}
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.prototype.getStatic = function() {
  return /** @type{?proto.palm.pi.v1.NetworkProfile.IpV4} */ (
    jspb.Message.getWrapperField(this, proto.palm.pi.v1.NetworkProfile.IpV4, 12));
};


/**
 * @param {?proto.palm.pi.v1.NetworkProfile.IpV4|undefined} value
 * @return {!proto.palm.pi.v1.NetworkProfile.Ethernet} returns this
*/
proto.palm.pi.v1.NetworkProfile.Ethernet.prototype.setStatic = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.palm.pi.v1.NetworkProfile.Ethernet.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.pi.v1.NetworkProfile.Ethernet} returns this
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.prototype.clearStatic = function() {
  return this.setStatic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.pi.v1.NetworkProfile.Ethernet.prototype.hasStatic = function() {
  return jspb.Message.getField(this, 12) != null;
};


goog.object.extend(exports, proto.palm.pi.v1);
