// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: orchid.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Palm.Orchid.V1 {
  /// <summary>
  /// ----------------------------------------------------------------------------
  /// </summary>
  public static partial class WechatMiniProgram
  {
    static readonly string __ServiceName = "palm.orchid.v1.WechatMiniProgram";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Palm.Orchid.V1.WechatMiniProgramLoginRequest> __Marshaller_palm_orchid_v1_WechatMiniProgramLoginRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Palm.Orchid.V1.WechatMiniProgramLoginRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Palm.Orchid.V1.WechatMiniProgramLoginResponse> __Marshaller_palm_orchid_v1_WechatMiniProgramLoginResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Palm.Orchid.V1.WechatMiniProgramLoginResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberRequest> __Marshaller_palm_orchid_v1_WechatMiniProgramPhoneNumberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberResponse> __Marshaller_palm_orchid_v1_WechatMiniProgramPhoneNumberResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Palm.Orchid.V1.WechatMiniProgramLoginRequest, global::Palm.Orchid.V1.WechatMiniProgramLoginResponse> __Method_Login = new grpc::Method<global::Palm.Orchid.V1.WechatMiniProgramLoginRequest, global::Palm.Orchid.V1.WechatMiniProgramLoginResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Login",
        __Marshaller_palm_orchid_v1_WechatMiniProgramLoginRequest,
        __Marshaller_palm_orchid_v1_WechatMiniProgramLoginResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberRequest, global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberResponse> __Method_PhoneNumber = new grpc::Method<global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberRequest, global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PhoneNumber",
        __Marshaller_palm_orchid_v1_WechatMiniProgramPhoneNumberRequest,
        __Marshaller_palm_orchid_v1_WechatMiniProgramPhoneNumberResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Palm.Orchid.V1.OrchidReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of WechatMiniProgram</summary>
    [grpc::BindServiceMethod(typeof(WechatMiniProgram), "BindService")]
    public abstract partial class WechatMiniProgramBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Palm.Orchid.V1.WechatMiniProgramLoginResponse> Login(global::Palm.Orchid.V1.WechatMiniProgramLoginRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberResponse> PhoneNumber(global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for WechatMiniProgram</summary>
    public partial class WechatMiniProgramClient : grpc::ClientBase<WechatMiniProgramClient>
    {
      /// <summary>Creates a new client for WechatMiniProgram</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public WechatMiniProgramClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for WechatMiniProgram that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public WechatMiniProgramClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected WechatMiniProgramClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected WechatMiniProgramClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Palm.Orchid.V1.WechatMiniProgramLoginResponse Login(global::Palm.Orchid.V1.WechatMiniProgramLoginRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Login(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Palm.Orchid.V1.WechatMiniProgramLoginResponse Login(global::Palm.Orchid.V1.WechatMiniProgramLoginRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Login, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Palm.Orchid.V1.WechatMiniProgramLoginResponse> LoginAsync(global::Palm.Orchid.V1.WechatMiniProgramLoginRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Palm.Orchid.V1.WechatMiniProgramLoginResponse> LoginAsync(global::Palm.Orchid.V1.WechatMiniProgramLoginRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Login, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberResponse PhoneNumber(global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PhoneNumber(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberResponse PhoneNumber(global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PhoneNumber, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberResponse> PhoneNumberAsync(global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PhoneNumberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberResponse> PhoneNumberAsync(global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PhoneNumber, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override WechatMiniProgramClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new WechatMiniProgramClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(WechatMiniProgramBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Login, serviceImpl.Login)
          .AddMethod(__Method_PhoneNumber, serviceImpl.PhoneNumber).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, WechatMiniProgramBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Login, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Palm.Orchid.V1.WechatMiniProgramLoginRequest, global::Palm.Orchid.V1.WechatMiniProgramLoginResponse>(serviceImpl.Login));
      serviceBinder.AddMethod(__Method_PhoneNumber, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberRequest, global::Palm.Orchid.V1.WechatMiniProgramPhoneNumberResponse>(serviceImpl.PhoneNumber));
    }

  }
  public static partial class WechatOauth2
  {
    static readonly string __ServiceName = "palm.orchid.v1.WechatOauth2";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Palm.Orchid.V1.WechatOauth2QrConnectRequest> __Marshaller_palm_orchid_v1_WechatOauth2QrConnectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Palm.Orchid.V1.WechatOauth2QrConnectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Palm.Orchid.V1.WechatOauth2QrConnectResponse> __Marshaller_palm_orchid_v1_WechatOauth2QrConnectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Palm.Orchid.V1.WechatOauth2QrConnectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Palm.Orchid.V1.WechatOauth2LoginRequest> __Marshaller_palm_orchid_v1_WechatOauth2LoginRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Palm.Orchid.V1.WechatOauth2LoginRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Palm.Orchid.V1.WechatOauth2LoginResponse> __Marshaller_palm_orchid_v1_WechatOauth2LoginResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Palm.Orchid.V1.WechatOauth2LoginResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Palm.Orchid.V1.WechatOauth2QrConnectRequest, global::Palm.Orchid.V1.WechatOauth2QrConnectResponse> __Method_QrConnect = new grpc::Method<global::Palm.Orchid.V1.WechatOauth2QrConnectRequest, global::Palm.Orchid.V1.WechatOauth2QrConnectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QrConnect",
        __Marshaller_palm_orchid_v1_WechatOauth2QrConnectRequest,
        __Marshaller_palm_orchid_v1_WechatOauth2QrConnectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Palm.Orchid.V1.WechatOauth2LoginRequest, global::Palm.Orchid.V1.WechatOauth2LoginResponse> __Method_Login = new grpc::Method<global::Palm.Orchid.V1.WechatOauth2LoginRequest, global::Palm.Orchid.V1.WechatOauth2LoginResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Login",
        __Marshaller_palm_orchid_v1_WechatOauth2LoginRequest,
        __Marshaller_palm_orchid_v1_WechatOauth2LoginResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Palm.Orchid.V1.OrchidReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of WechatOauth2</summary>
    [grpc::BindServiceMethod(typeof(WechatOauth2), "BindService")]
    public abstract partial class WechatOauth2Base
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Palm.Orchid.V1.WechatOauth2QrConnectResponse> QrConnect(global::Palm.Orchid.V1.WechatOauth2QrConnectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Palm.Orchid.V1.WechatOauth2LoginResponse> Login(global::Palm.Orchid.V1.WechatOauth2LoginRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for WechatOauth2</summary>
    public partial class WechatOauth2Client : grpc::ClientBase<WechatOauth2Client>
    {
      /// <summary>Creates a new client for WechatOauth2</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public WechatOauth2Client(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for WechatOauth2 that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public WechatOauth2Client(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected WechatOauth2Client() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected WechatOauth2Client(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Palm.Orchid.V1.WechatOauth2QrConnectResponse QrConnect(global::Palm.Orchid.V1.WechatOauth2QrConnectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QrConnect(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Palm.Orchid.V1.WechatOauth2QrConnectResponse QrConnect(global::Palm.Orchid.V1.WechatOauth2QrConnectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QrConnect, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Palm.Orchid.V1.WechatOauth2QrConnectResponse> QrConnectAsync(global::Palm.Orchid.V1.WechatOauth2QrConnectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QrConnectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Palm.Orchid.V1.WechatOauth2QrConnectResponse> QrConnectAsync(global::Palm.Orchid.V1.WechatOauth2QrConnectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QrConnect, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Palm.Orchid.V1.WechatOauth2LoginResponse Login(global::Palm.Orchid.V1.WechatOauth2LoginRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Login(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Palm.Orchid.V1.WechatOauth2LoginResponse Login(global::Palm.Orchid.V1.WechatOauth2LoginRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Login, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Palm.Orchid.V1.WechatOauth2LoginResponse> LoginAsync(global::Palm.Orchid.V1.WechatOauth2LoginRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Palm.Orchid.V1.WechatOauth2LoginResponse> LoginAsync(global::Palm.Orchid.V1.WechatOauth2LoginRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Login, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override WechatOauth2Client NewInstance(ClientBaseConfiguration configuration)
      {
        return new WechatOauth2Client(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(WechatOauth2Base serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_QrConnect, serviceImpl.QrConnect)
          .AddMethod(__Method_Login, serviceImpl.Login).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, WechatOauth2Base serviceImpl)
    {
      serviceBinder.AddMethod(__Method_QrConnect, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Palm.Orchid.V1.WechatOauth2QrConnectRequest, global::Palm.Orchid.V1.WechatOauth2QrConnectResponse>(serviceImpl.QrConnect));
      serviceBinder.AddMethod(__Method_Login, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Palm.Orchid.V1.WechatOauth2LoginRequest, global::Palm.Orchid.V1.WechatOauth2LoginResponse>(serviceImpl.Login));
    }

  }
}
#endregion
