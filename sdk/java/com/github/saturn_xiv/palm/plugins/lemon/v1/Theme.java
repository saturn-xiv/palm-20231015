// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lemon.proto

package com.github.saturn_xiv.palm.plugins.lemon.v1;

/**
 * <pre>
 * ----------------------------------------------------------------------------
 * </pre>
 *
 * Protobuf enum {@code palm.lemon.v1.Theme}
 */
public enum Theme
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>Universal = 0;</code>
   */
  Universal(0),
  /**
   * <code>CleanWhite = 1;</code>
   */
  CleanWhite(1),
  /**
   * <code>Docsy = 2;</code>
   */
  Docsy(2),
  /**
   * <code>Gantry = 3;</code>
   */
  Gantry(3),
  /**
   * <code>Hinode = 4;</code>
   */
  Hinode(4),
  /**
   * <code>XCorporation = 5;</code>
   */
  XCorporation(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>Universal = 0;</code>
   */
  public static final int Universal_VALUE = 0;
  /**
   * <code>CleanWhite = 1;</code>
   */
  public static final int CleanWhite_VALUE = 1;
  /**
   * <code>Docsy = 2;</code>
   */
  public static final int Docsy_VALUE = 2;
  /**
   * <code>Gantry = 3;</code>
   */
  public static final int Gantry_VALUE = 3;
  /**
   * <code>Hinode = 4;</code>
   */
  public static final int Hinode_VALUE = 4;
  /**
   * <code>XCorporation = 5;</code>
   */
  public static final int XCorporation_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Theme valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Theme forNumber(int value) {
    switch (value) {
      case 0: return Universal;
      case 1: return CleanWhite;
      case 2: return Docsy;
      case 3: return Gantry;
      case 4: return Hinode;
      case 5: return XCorporation;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Theme>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Theme> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Theme>() {
          public Theme findValueByNumber(int number) {
            return Theme.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.github.saturn_xiv.palm.plugins.lemon.v1.Lemon.getDescriptor().getEnumTypes().get(0);
  }

  private static final Theme[] VALUES = values();

  public static Theme valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Theme(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:palm.lemon.v1.Theme)
}

