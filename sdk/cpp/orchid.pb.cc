// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: orchid.proto

#include "orchid.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace palm {
namespace orchid {
namespace v1 {

inline constexpr WechatOauth2QrConnectResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WechatOauth2QrConnectResponse::WechatOauth2QrConnectResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WechatOauth2QrConnectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatOauth2QrConnectResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatOauth2QrConnectResponseDefaultTypeInternal() {}
  union {
    WechatOauth2QrConnectResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatOauth2QrConnectResponseDefaultTypeInternal _WechatOauth2QrConnectResponse_default_instance_;

inline constexpr WechatOauth2QrConnectRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : app_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        redirect_uri_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        state_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        language_{static_cast< ::palm::orchid::v1::WechatOauth2QrConnectRequest_Language >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WechatOauth2QrConnectRequest::WechatOauth2QrConnectRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WechatOauth2QrConnectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatOauth2QrConnectRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatOauth2QrConnectRequestDefaultTypeInternal() {}
  union {
    WechatOauth2QrConnectRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatOauth2QrConnectRequestDefaultTypeInternal _WechatOauth2QrConnectRequest_default_instance_;

inline constexpr WechatOauth2LoginResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        privilege_{},
        unionid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        openid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        province_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        city_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        country_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        headimgurl_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sex_{static_cast< ::palm::orchid::v1::WechatOauth2LoginResponse_Sex >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR WechatOauth2LoginResponse::WechatOauth2LoginResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WechatOauth2LoginResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatOauth2LoginResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatOauth2LoginResponseDefaultTypeInternal() {}
  union {
    WechatOauth2LoginResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatOauth2LoginResponseDefaultTypeInternal _WechatOauth2LoginResponse_default_instance_;

inline constexpr WechatOauth2LoginRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : app_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        state_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        language_{static_cast< ::palm::orchid::v1::WechatOauth2QrConnectRequest_Language >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WechatOauth2LoginRequest::WechatOauth2LoginRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WechatOauth2LoginRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatOauth2LoginRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatOauth2LoginRequestDefaultTypeInternal() {}
  union {
    WechatOauth2LoginRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatOauth2LoginRequestDefaultTypeInternal _WechatOauth2LoginRequest_default_instance_;

inline constexpr WechatMiniProgramPhoneNumberResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : phone_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pure_phone_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        country_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        water_mark_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WechatMiniProgramPhoneNumberResponse::WechatMiniProgramPhoneNumberResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WechatMiniProgramPhoneNumberResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatMiniProgramPhoneNumberResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatMiniProgramPhoneNumberResponseDefaultTypeInternal() {}
  union {
    WechatMiniProgramPhoneNumberResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatMiniProgramPhoneNumberResponseDefaultTypeInternal _WechatMiniProgramPhoneNumberResponse_default_instance_;

inline constexpr WechatMiniProgramPhoneNumberRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : app_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WechatMiniProgramPhoneNumberRequest::WechatMiniProgramPhoneNumberRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WechatMiniProgramPhoneNumberRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatMiniProgramPhoneNumberRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatMiniProgramPhoneNumberRequestDefaultTypeInternal() {}
  union {
    WechatMiniProgramPhoneNumberRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatMiniProgramPhoneNumberRequestDefaultTypeInternal _WechatMiniProgramPhoneNumberRequest_default_instance_;

inline constexpr WechatMiniProgramLoginResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : unionid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        openid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WechatMiniProgramLoginResponse::WechatMiniProgramLoginResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WechatMiniProgramLoginResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatMiniProgramLoginResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatMiniProgramLoginResponseDefaultTypeInternal() {}
  union {
    WechatMiniProgramLoginResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatMiniProgramLoginResponseDefaultTypeInternal _WechatMiniProgramLoginResponse_default_instance_;

inline constexpr WechatMiniProgramLoginRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : app_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WechatMiniProgramLoginRequest::WechatMiniProgramLoginRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WechatMiniProgramLoginRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WechatMiniProgramLoginRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WechatMiniProgramLoginRequestDefaultTypeInternal() {}
  union {
    WechatMiniProgramLoginRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatMiniProgramLoginRequestDefaultTypeInternal _WechatMiniProgramLoginRequest_default_instance_;
}  // namespace v1
}  // namespace orchid
}  // namespace palm
static ::_pb::Metadata file_level_metadata_orchid_2eproto[8];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_orchid_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_orchid_2eproto = nullptr;
const ::uint32_t TableStruct_orchid_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramLoginRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramLoginRequest, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramLoginRequest, _impl_.code_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramLoginResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramLoginResponse, _impl_.unionid_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramLoginResponse, _impl_.openid_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramLoginResponse, _impl_.session_key_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramPhoneNumberRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramPhoneNumberRequest, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramPhoneNumberRequest, _impl_.code_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramPhoneNumberResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramPhoneNumberResponse, _impl_.phone_number_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramPhoneNumberResponse, _impl_.pure_phone_number_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramPhoneNumberResponse, _impl_.country_code_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramPhoneNumberResponse, _impl_.water_mark_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2QrConnectRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2QrConnectRequest, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2QrConnectRequest, _impl_.redirect_uri_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2QrConnectRequest, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2QrConnectRequest, _impl_.language_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2QrConnectResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2QrConnectResponse, _impl_.url_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, _impl_.unionid_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, _impl_.openid_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, _impl_.nickname_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, _impl_.sex_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, _impl_.province_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, _impl_.city_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, _impl_.country_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, _impl_.headimgurl_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, _impl_.privilege_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginRequest, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginRequest, _impl_.code_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginRequest, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginRequest, _impl_.language_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::palm::orchid::v1::WechatMiniProgramLoginRequest)},
        {10, -1, -1, sizeof(::palm::orchid::v1::WechatMiniProgramLoginResponse)},
        {21, -1, -1, sizeof(::palm::orchid::v1::WechatMiniProgramPhoneNumberRequest)},
        {31, -1, -1, sizeof(::palm::orchid::v1::WechatMiniProgramPhoneNumberResponse)},
        {43, -1, -1, sizeof(::palm::orchid::v1::WechatOauth2QrConnectRequest)},
        {55, -1, -1, sizeof(::palm::orchid::v1::WechatOauth2QrConnectResponse)},
        {64, 81, -1, sizeof(::palm::orchid::v1::WechatOauth2LoginResponse)},
        {90, -1, -1, sizeof(::palm::orchid::v1::WechatOauth2LoginRequest)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::palm::orchid::v1::_WechatMiniProgramLoginRequest_default_instance_._instance,
    &::palm::orchid::v1::_WechatMiniProgramLoginResponse_default_instance_._instance,
    &::palm::orchid::v1::_WechatMiniProgramPhoneNumberRequest_default_instance_._instance,
    &::palm::orchid::v1::_WechatMiniProgramPhoneNumberResponse_default_instance_._instance,
    &::palm::orchid::v1::_WechatOauth2QrConnectRequest_default_instance_._instance,
    &::palm::orchid::v1::_WechatOauth2QrConnectResponse_default_instance_._instance,
    &::palm::orchid::v1::_WechatOauth2LoginResponse_default_instance_._instance,
    &::palm::orchid::v1::_WechatOauth2LoginRequest_default_instance_._instance,
};
const char descriptor_table_protodef_orchid_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014orchid.proto\022\016palm.orchid.v1\"=\n\035Wechat"
    "MiniProgramLoginRequest\022\016\n\006app_id\030\001 \001(\t\022"
    "\014\n\004code\030\002 \001(\t\"V\n\036WechatMiniProgramLoginR"
    "esponse\022\017\n\007unionid\030\001 \001(\t\022\016\n\006openid\030\002 \001(\t"
    "\022\023\n\013session_key\030\003 \001(\t\"C\n#WechatMiniProgr"
    "amPhoneNumberRequest\022\016\n\006app_id\030\001 \001(\t\022\014\n\004"
    "code\030\002 \001(\t\"\201\001\n$WechatMiniProgramPhoneNum"
    "berResponse\022\024\n\014phone_number\030\001 \001(\t\022\031\n\021pur"
    "e_phone_number\030\002 \001(\t\022\024\n\014country_code\030\003 \001"
    "(\t\022\022\n\nwater_mark\030\004 \001(\004\"\300\001\n\034WechatOauth2Q"
    "rConnectRequest\022\016\n\006app_id\030\001 \001(\t\022\024\n\014redir"
    "ect_uri\030\002 \001(\t\022\r\n\005state\030\003 \001(\t\022G\n\010language"
    "\030\t \001(\01625.palm.orchid.v1.WechatOauth2QrCo"
    "nnectRequest.Language\"\"\n\010Language\022\006\n\002EN\020"
    "\000\022\006\n\002CN\020\001\022\006\n\002TW\020\002\",\n\035WechatOauth2QrConne"
    "ctResponse\022\013\n\003url\030\001 \001(\t\"\223\002\n\031WechatOauth2"
    "LoginResponse\022\017\n\007unionid\030\001 \001(\t\022\016\n\006openid"
    "\030\002 \001(\t\022\020\n\010nickname\030\013 \001(\t\022:\n\003sex\030\014 \001(\0162-."
    "palm.orchid.v1.WechatOauth2LoginResponse"
    ".Sex\022\020\n\010province\030\r \001(\t\022\014\n\004city\030\016 \001(\t\022\017\n\007"
    "country\030\017 \001(\t\022\027\n\nheadimgurl\030\020 \001(\tH\000\210\001\001\022\021"
    "\n\tprivilege\030\021 \003(\t\"\033\n\003Sex\022\010\n\004MALE\020\000\022\n\n\006FE"
    "MALE\020\001B\r\n\013_headimgurl\"\220\001\n\030WechatOauth2Lo"
    "ginRequest\022\016\n\006app_id\030\001 \001(\t\022\014\n\004code\030\002 \001(\t"
    "\022\r\n\005state\030\003 \001(\t\022G\n\010language\030\t \001(\01625.palm"
    ".orchid.v1.WechatOauth2QrConnectRequest."
    "Language2\371\001\n\021WechatMiniProgram\022h\n\005Login\022"
    "-.palm.orchid.v1.WechatMiniProgramLoginR"
    "equest\032..palm.orchid.v1.WechatMiniProgra"
    "mLoginResponse\"\000\022z\n\013PhoneNumber\0223.palm.o"
    "rchid.v1.WechatMiniProgramPhoneNumberReq"
    "uest\0324.palm.orchid.v1.WechatMiniProgramP"
    "honeNumberResponse\"\0002\332\001\n\014WechatOauth2\022j\n"
    "\tQrConnect\022,.palm.orchid.v1.WechatOauth2"
    "QrConnectRequest\032-.palm.orchid.v1.Wechat"
    "Oauth2QrConnectResponse\"\000\022^\n\005Login\022(.pal"
    "m.orchid.v1.WechatOauth2LoginRequest\032).p"
    "alm.orchid.v1.WechatOauth2LoginResponse\""
    "\000BV\n,com.github.saturn_xiv.palm.plugins."
    "orchid.v1P\001Z$github.com/saturn_xiv/palm/"
    "orchid/v2b\006proto3"
};
static ::absl::once_flag descriptor_table_orchid_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_orchid_2eproto = {
    false,
    false,
    1617,
    descriptor_table_protodef_orchid_2eproto,
    "orchid.proto",
    &descriptor_table_orchid_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_orchid_2eproto::offsets,
    file_level_metadata_orchid_2eproto,
    file_level_enum_descriptors_orchid_2eproto,
    file_level_service_descriptors_orchid_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_orchid_2eproto_getter() {
  return &descriptor_table_orchid_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_orchid_2eproto(&descriptor_table_orchid_2eproto);
namespace palm {
namespace orchid {
namespace v1 {
const ::google::protobuf::EnumDescriptor* WechatOauth2QrConnectRequest_Language_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_orchid_2eproto);
  return file_level_enum_descriptors_orchid_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t WechatOauth2QrConnectRequest_Language_internal_data_[] = {
    196608u, 0u, };
bool WechatOauth2QrConnectRequest_Language_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr WechatOauth2QrConnectRequest_Language WechatOauth2QrConnectRequest::EN;
constexpr WechatOauth2QrConnectRequest_Language WechatOauth2QrConnectRequest::CN;
constexpr WechatOauth2QrConnectRequest_Language WechatOauth2QrConnectRequest::TW;
constexpr WechatOauth2QrConnectRequest_Language WechatOauth2QrConnectRequest::Language_MIN;
constexpr WechatOauth2QrConnectRequest_Language WechatOauth2QrConnectRequest::Language_MAX;
constexpr int WechatOauth2QrConnectRequest::Language_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* WechatOauth2LoginResponse_Sex_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_orchid_2eproto);
  return file_level_enum_descriptors_orchid_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t WechatOauth2LoginResponse_Sex_internal_data_[] = {
    131072u, 0u, };
bool WechatOauth2LoginResponse_Sex_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr WechatOauth2LoginResponse_Sex WechatOauth2LoginResponse::MALE;
constexpr WechatOauth2LoginResponse_Sex WechatOauth2LoginResponse::FEMALE;
constexpr WechatOauth2LoginResponse_Sex WechatOauth2LoginResponse::Sex_MIN;
constexpr WechatOauth2LoginResponse_Sex WechatOauth2LoginResponse::Sex_MAX;
constexpr int WechatOauth2LoginResponse::Sex_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class WechatMiniProgramLoginRequest::_Internal {
 public:
};

WechatMiniProgramLoginRequest::WechatMiniProgramLoginRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.orchid.v1.WechatMiniProgramLoginRequest)
}
inline PROTOBUF_NDEBUG_INLINE WechatMiniProgramLoginRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : app_id_(arena, from.app_id_),
        code_(arena, from.code_),
        _cached_size_{0} {}

WechatMiniProgramLoginRequest::WechatMiniProgramLoginRequest(
    ::google::protobuf::Arena* arena,
    const WechatMiniProgramLoginRequest& from)
    : ::google::protobuf::Message(arena) {
  WechatMiniProgramLoginRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.orchid.v1.WechatMiniProgramLoginRequest)
}
inline PROTOBUF_NDEBUG_INLINE WechatMiniProgramLoginRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : app_id_(arena),
        code_(arena),
        _cached_size_{0} {}

inline void WechatMiniProgramLoginRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WechatMiniProgramLoginRequest::~WechatMiniProgramLoginRequest() {
  // @@protoc_insertion_point(destructor:palm.orchid.v1.WechatMiniProgramLoginRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatMiniProgramLoginRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.app_id_.Destroy();
  _impl_.code_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WechatMiniProgramLoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.orchid.v1.WechatMiniProgramLoginRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.app_id_.ClearToEmpty();
  _impl_.code_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatMiniProgramLoginRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 63, 2> WechatMiniProgramLoginRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WechatMiniProgramLoginRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string code = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WechatMiniProgramLoginRequest, _impl_.code_)}},
    // string app_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WechatMiniProgramLoginRequest, _impl_.app_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string app_id = 1;
    {PROTOBUF_FIELD_OFFSET(WechatMiniProgramLoginRequest, _impl_.app_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string code = 2;
    {PROTOBUF_FIELD_OFFSET(WechatMiniProgramLoginRequest, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\6\4\0\0\0\0\0"
    "palm.orchid.v1.WechatMiniProgramLoginRequest"
    "app_id"
    "code"
  }},
};

::uint8_t* WechatMiniProgramLoginRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.orchid.v1.WechatMiniProgramLoginRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatMiniProgramLoginRequest.app_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatMiniProgramLoginRequest.code");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.orchid.v1.WechatMiniProgramLoginRequest)
  return target;
}

::size_t WechatMiniProgramLoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.orchid.v1.WechatMiniProgramLoginRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatMiniProgramLoginRequest::_class_data_ = {
    WechatMiniProgramLoginRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WechatMiniProgramLoginRequest::GetClassData() const {
  return &_class_data_;
}

void WechatMiniProgramLoginRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatMiniProgramLoginRequest*>(&to_msg);
  auto& from = static_cast<const WechatMiniProgramLoginRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.orchid.v1.WechatMiniProgramLoginRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatMiniProgramLoginRequest::CopyFrom(const WechatMiniProgramLoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.orchid.v1.WechatMiniProgramLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatMiniProgramLoginRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WechatMiniProgramLoginRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WechatMiniProgramLoginRequest::InternalSwap(WechatMiniProgramLoginRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, &other->_impl_.app_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, &other->_impl_.code_, arena);
}

::google::protobuf::Metadata WechatMiniProgramLoginRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orchid_2eproto_getter, &descriptor_table_orchid_2eproto_once,
      file_level_metadata_orchid_2eproto[0]);
}
// ===================================================================

class WechatMiniProgramLoginResponse::_Internal {
 public:
};

WechatMiniProgramLoginResponse::WechatMiniProgramLoginResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.orchid.v1.WechatMiniProgramLoginResponse)
}
inline PROTOBUF_NDEBUG_INLINE WechatMiniProgramLoginResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : unionid_(arena, from.unionid_),
        openid_(arena, from.openid_),
        session_key_(arena, from.session_key_),
        _cached_size_{0} {}

WechatMiniProgramLoginResponse::WechatMiniProgramLoginResponse(
    ::google::protobuf::Arena* arena,
    const WechatMiniProgramLoginResponse& from)
    : ::google::protobuf::Message(arena) {
  WechatMiniProgramLoginResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.orchid.v1.WechatMiniProgramLoginResponse)
}
inline PROTOBUF_NDEBUG_INLINE WechatMiniProgramLoginResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : unionid_(arena),
        openid_(arena),
        session_key_(arena),
        _cached_size_{0} {}

inline void WechatMiniProgramLoginResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WechatMiniProgramLoginResponse::~WechatMiniProgramLoginResponse() {
  // @@protoc_insertion_point(destructor:palm.orchid.v1.WechatMiniProgramLoginResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatMiniProgramLoginResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.unionid_.Destroy();
  _impl_.openid_.Destroy();
  _impl_.session_key_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WechatMiniProgramLoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.orchid.v1.WechatMiniProgramLoginResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unionid_.ClearToEmpty();
  _impl_.openid_.ClearToEmpty();
  _impl_.session_key_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatMiniProgramLoginResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 78, 2> WechatMiniProgramLoginResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WechatMiniProgramLoginResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string unionid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WechatMiniProgramLoginResponse, _impl_.unionid_)}},
    // string openid = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WechatMiniProgramLoginResponse, _impl_.openid_)}},
    // string session_key = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(WechatMiniProgramLoginResponse, _impl_.session_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string unionid = 1;
    {PROTOBUF_FIELD_OFFSET(WechatMiniProgramLoginResponse, _impl_.unionid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string openid = 2;
    {PROTOBUF_FIELD_OFFSET(WechatMiniProgramLoginResponse, _impl_.openid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string session_key = 3;
    {PROTOBUF_FIELD_OFFSET(WechatMiniProgramLoginResponse, _impl_.session_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\7\6\13\0\0\0\0"
    "palm.orchid.v1.WechatMiniProgramLoginResponse"
    "unionid"
    "openid"
    "session_key"
  }},
};

::uint8_t* WechatMiniProgramLoginResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.orchid.v1.WechatMiniProgramLoginResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string unionid = 1;
  if (!this->_internal_unionid().empty()) {
    const std::string& _s = this->_internal_unionid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatMiniProgramLoginResponse.unionid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string openid = 2;
  if (!this->_internal_openid().empty()) {
    const std::string& _s = this->_internal_openid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatMiniProgramLoginResponse.openid");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string session_key = 3;
  if (!this->_internal_session_key().empty()) {
    const std::string& _s = this->_internal_session_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatMiniProgramLoginResponse.session_key");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.orchid.v1.WechatMiniProgramLoginResponse)
  return target;
}

::size_t WechatMiniProgramLoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.orchid.v1.WechatMiniProgramLoginResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string unionid = 1;
  if (!this->_internal_unionid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_unionid());
  }

  // string openid = 2;
  if (!this->_internal_openid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_openid());
  }

  // string session_key = 3;
  if (!this->_internal_session_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_session_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatMiniProgramLoginResponse::_class_data_ = {
    WechatMiniProgramLoginResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WechatMiniProgramLoginResponse::GetClassData() const {
  return &_class_data_;
}

void WechatMiniProgramLoginResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatMiniProgramLoginResponse*>(&to_msg);
  auto& from = static_cast<const WechatMiniProgramLoginResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.orchid.v1.WechatMiniProgramLoginResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_unionid().empty()) {
    _this->_internal_set_unionid(from._internal_unionid());
  }
  if (!from._internal_openid().empty()) {
    _this->_internal_set_openid(from._internal_openid());
  }
  if (!from._internal_session_key().empty()) {
    _this->_internal_set_session_key(from._internal_session_key());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatMiniProgramLoginResponse::CopyFrom(const WechatMiniProgramLoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.orchid.v1.WechatMiniProgramLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatMiniProgramLoginResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WechatMiniProgramLoginResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WechatMiniProgramLoginResponse::InternalSwap(WechatMiniProgramLoginResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unionid_, &other->_impl_.unionid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.openid_, &other->_impl_.openid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_key_, &other->_impl_.session_key_, arena);
}

::google::protobuf::Metadata WechatMiniProgramLoginResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orchid_2eproto_getter, &descriptor_table_orchid_2eproto_once,
      file_level_metadata_orchid_2eproto[1]);
}
// ===================================================================

class WechatMiniProgramPhoneNumberRequest::_Internal {
 public:
};

WechatMiniProgramPhoneNumberRequest::WechatMiniProgramPhoneNumberRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
}
inline PROTOBUF_NDEBUG_INLINE WechatMiniProgramPhoneNumberRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : app_id_(arena, from.app_id_),
        code_(arena, from.code_),
        _cached_size_{0} {}

WechatMiniProgramPhoneNumberRequest::WechatMiniProgramPhoneNumberRequest(
    ::google::protobuf::Arena* arena,
    const WechatMiniProgramPhoneNumberRequest& from)
    : ::google::protobuf::Message(arena) {
  WechatMiniProgramPhoneNumberRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
}
inline PROTOBUF_NDEBUG_INLINE WechatMiniProgramPhoneNumberRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : app_id_(arena),
        code_(arena),
        _cached_size_{0} {}

inline void WechatMiniProgramPhoneNumberRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WechatMiniProgramPhoneNumberRequest::~WechatMiniProgramPhoneNumberRequest() {
  // @@protoc_insertion_point(destructor:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatMiniProgramPhoneNumberRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.app_id_.Destroy();
  _impl_.code_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WechatMiniProgramPhoneNumberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.app_id_.ClearToEmpty();
  _impl_.code_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatMiniProgramPhoneNumberRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 69, 2> WechatMiniProgramPhoneNumberRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WechatMiniProgramPhoneNumberRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string code = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WechatMiniProgramPhoneNumberRequest, _impl_.code_)}},
    // string app_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WechatMiniProgramPhoneNumberRequest, _impl_.app_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string app_id = 1;
    {PROTOBUF_FIELD_OFFSET(WechatMiniProgramPhoneNumberRequest, _impl_.app_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string code = 2;
    {PROTOBUF_FIELD_OFFSET(WechatMiniProgramPhoneNumberRequest, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\62\6\4\0\0\0\0\0"
    "palm.orchid.v1.WechatMiniProgramPhoneNumberRequest"
    "app_id"
    "code"
  }},
};

::uint8_t* WechatMiniProgramPhoneNumberRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.app_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.code");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
  return target;
}

::size_t WechatMiniProgramPhoneNumberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatMiniProgramPhoneNumberRequest::_class_data_ = {
    WechatMiniProgramPhoneNumberRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WechatMiniProgramPhoneNumberRequest::GetClassData() const {
  return &_class_data_;
}

void WechatMiniProgramPhoneNumberRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatMiniProgramPhoneNumberRequest*>(&to_msg);
  auto& from = static_cast<const WechatMiniProgramPhoneNumberRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatMiniProgramPhoneNumberRequest::CopyFrom(const WechatMiniProgramPhoneNumberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatMiniProgramPhoneNumberRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WechatMiniProgramPhoneNumberRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WechatMiniProgramPhoneNumberRequest::InternalSwap(WechatMiniProgramPhoneNumberRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, &other->_impl_.app_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, &other->_impl_.code_, arena);
}

::google::protobuf::Metadata WechatMiniProgramPhoneNumberRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orchid_2eproto_getter, &descriptor_table_orchid_2eproto_once,
      file_level_metadata_orchid_2eproto[2]);
}
// ===================================================================

class WechatMiniProgramPhoneNumberResponse::_Internal {
 public:
};

WechatMiniProgramPhoneNumberResponse::WechatMiniProgramPhoneNumberResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
}
inline PROTOBUF_NDEBUG_INLINE WechatMiniProgramPhoneNumberResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : phone_number_(arena, from.phone_number_),
        pure_phone_number_(arena, from.pure_phone_number_),
        country_code_(arena, from.country_code_),
        _cached_size_{0} {}

WechatMiniProgramPhoneNumberResponse::WechatMiniProgramPhoneNumberResponse(
    ::google::protobuf::Arena* arena,
    const WechatMiniProgramPhoneNumberResponse& from)
    : ::google::protobuf::Message(arena) {
  WechatMiniProgramPhoneNumberResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.water_mark_ = from._impl_.water_mark_;

  // @@protoc_insertion_point(copy_constructor:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
}
inline PROTOBUF_NDEBUG_INLINE WechatMiniProgramPhoneNumberResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : phone_number_(arena),
        pure_phone_number_(arena),
        country_code_(arena),
        _cached_size_{0} {}

inline void WechatMiniProgramPhoneNumberResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.water_mark_ = {};
}
WechatMiniProgramPhoneNumberResponse::~WechatMiniProgramPhoneNumberResponse() {
  // @@protoc_insertion_point(destructor:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatMiniProgramPhoneNumberResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.phone_number_.Destroy();
  _impl_.pure_phone_number_.Destroy();
  _impl_.country_code_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WechatMiniProgramPhoneNumberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.phone_number_.ClearToEmpty();
  _impl_.pure_phone_number_.ClearToEmpty();
  _impl_.country_code_.ClearToEmpty();
  _impl_.water_mark_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatMiniProgramPhoneNumberResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 101, 2> WechatMiniProgramPhoneNumberResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WechatMiniProgramPhoneNumberResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 water_mark = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WechatMiniProgramPhoneNumberResponse, _impl_.water_mark_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(WechatMiniProgramPhoneNumberResponse, _impl_.water_mark_)}},
    // string phone_number = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WechatMiniProgramPhoneNumberResponse, _impl_.phone_number_)}},
    // string pure_phone_number = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WechatMiniProgramPhoneNumberResponse, _impl_.pure_phone_number_)}},
    // string country_code = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(WechatMiniProgramPhoneNumberResponse, _impl_.country_code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string phone_number = 1;
    {PROTOBUF_FIELD_OFFSET(WechatMiniProgramPhoneNumberResponse, _impl_.phone_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string pure_phone_number = 2;
    {PROTOBUF_FIELD_OFFSET(WechatMiniProgramPhoneNumberResponse, _impl_.pure_phone_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string country_code = 3;
    {PROTOBUF_FIELD_OFFSET(WechatMiniProgramPhoneNumberResponse, _impl_.country_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 water_mark = 4;
    {PROTOBUF_FIELD_OFFSET(WechatMiniProgramPhoneNumberResponse, _impl_.water_mark_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\63\14\21\14\0\0\0\0"
    "palm.orchid.v1.WechatMiniProgramPhoneNumberResponse"
    "phone_number"
    "pure_phone_number"
    "country_code"
  }},
};

::uint8_t* WechatMiniProgramPhoneNumberResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string phone_number = 1;
  if (!this->_internal_phone_number().empty()) {
    const std::string& _s = this->_internal_phone_number();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.phone_number");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string pure_phone_number = 2;
  if (!this->_internal_pure_phone_number().empty()) {
    const std::string& _s = this->_internal_pure_phone_number();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.pure_phone_number");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string country_code = 3;
  if (!this->_internal_country_code().empty()) {
    const std::string& _s = this->_internal_country_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.country_code");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // uint64 water_mark = 4;
  if (this->_internal_water_mark() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_water_mark(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
  return target;
}

::size_t WechatMiniProgramPhoneNumberResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string phone_number = 1;
  if (!this->_internal_phone_number().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_phone_number());
  }

  // string pure_phone_number = 2;
  if (!this->_internal_pure_phone_number().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_pure_phone_number());
  }

  // string country_code = 3;
  if (!this->_internal_country_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_country_code());
  }

  // uint64 water_mark = 4;
  if (this->_internal_water_mark() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_water_mark());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatMiniProgramPhoneNumberResponse::_class_data_ = {
    WechatMiniProgramPhoneNumberResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WechatMiniProgramPhoneNumberResponse::GetClassData() const {
  return &_class_data_;
}

void WechatMiniProgramPhoneNumberResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatMiniProgramPhoneNumberResponse*>(&to_msg);
  auto& from = static_cast<const WechatMiniProgramPhoneNumberResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_phone_number().empty()) {
    _this->_internal_set_phone_number(from._internal_phone_number());
  }
  if (!from._internal_pure_phone_number().empty()) {
    _this->_internal_set_pure_phone_number(from._internal_pure_phone_number());
  }
  if (!from._internal_country_code().empty()) {
    _this->_internal_set_country_code(from._internal_country_code());
  }
  if (from._internal_water_mark() != 0) {
    _this->_internal_set_water_mark(from._internal_water_mark());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatMiniProgramPhoneNumberResponse::CopyFrom(const WechatMiniProgramPhoneNumberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatMiniProgramPhoneNumberResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WechatMiniProgramPhoneNumberResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WechatMiniProgramPhoneNumberResponse::InternalSwap(WechatMiniProgramPhoneNumberResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.phone_number_, &other->_impl_.phone_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pure_phone_number_, &other->_impl_.pure_phone_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.country_code_, &other->_impl_.country_code_, arena);
        swap(_impl_.water_mark_, other->_impl_.water_mark_);
}

::google::protobuf::Metadata WechatMiniProgramPhoneNumberResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orchid_2eproto_getter, &descriptor_table_orchid_2eproto_once,
      file_level_metadata_orchid_2eproto[3]);
}
// ===================================================================

class WechatOauth2QrConnectRequest::_Internal {
 public:
};

WechatOauth2QrConnectRequest::WechatOauth2QrConnectRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.orchid.v1.WechatOauth2QrConnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE WechatOauth2QrConnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : app_id_(arena, from.app_id_),
        redirect_uri_(arena, from.redirect_uri_),
        state_(arena, from.state_),
        _cached_size_{0} {}

WechatOauth2QrConnectRequest::WechatOauth2QrConnectRequest(
    ::google::protobuf::Arena* arena,
    const WechatOauth2QrConnectRequest& from)
    : ::google::protobuf::Message(arena) {
  WechatOauth2QrConnectRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.language_ = from._impl_.language_;

  // @@protoc_insertion_point(copy_constructor:palm.orchid.v1.WechatOauth2QrConnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE WechatOauth2QrConnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : app_id_(arena),
        redirect_uri_(arena),
        state_(arena),
        _cached_size_{0} {}

inline void WechatOauth2QrConnectRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.language_ = {};
}
WechatOauth2QrConnectRequest::~WechatOauth2QrConnectRequest() {
  // @@protoc_insertion_point(destructor:palm.orchid.v1.WechatOauth2QrConnectRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatOauth2QrConnectRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.app_id_.Destroy();
  _impl_.redirect_uri_.Destroy();
  _impl_.state_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WechatOauth2QrConnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.orchid.v1.WechatOauth2QrConnectRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.app_id_.ClearToEmpty();
  _impl_.redirect_uri_.ClearToEmpty();
  _impl_.state_.ClearToEmpty();
  _impl_.language_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatOauth2QrConnectRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 75, 2> WechatOauth2QrConnectRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967032,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WechatOauth2QrConnectRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string app_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2QrConnectRequest, _impl_.app_id_)}},
    // string redirect_uri = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2QrConnectRequest, _impl_.redirect_uri_)}},
    // string state = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2QrConnectRequest, _impl_.state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string app_id = 1;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2QrConnectRequest, _impl_.app_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string redirect_uri = 2;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2QrConnectRequest, _impl_.redirect_uri_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string state = 3;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2QrConnectRequest, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 9;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2QrConnectRequest, _impl_.language_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\53\6\14\5\0\0\0\0"
    "palm.orchid.v1.WechatOauth2QrConnectRequest"
    "app_id"
    "redirect_uri"
    "state"
  }},
};

::uint8_t* WechatOauth2QrConnectRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.orchid.v1.WechatOauth2QrConnectRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatOauth2QrConnectRequest.app_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string redirect_uri = 2;
  if (!this->_internal_redirect_uri().empty()) {
    const std::string& _s = this->_internal_redirect_uri();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatOauth2QrConnectRequest.redirect_uri");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    const std::string& _s = this->_internal_state();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatOauth2QrConnectRequest.state");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 9;
  if (this->_internal_language() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        9, this->_internal_language(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.orchid.v1.WechatOauth2QrConnectRequest)
  return target;
}

::size_t WechatOauth2QrConnectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.orchid.v1.WechatOauth2QrConnectRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // string redirect_uri = 2;
  if (!this->_internal_redirect_uri().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_redirect_uri());
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_state());
  }

  // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 9;
  if (this->_internal_language() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_language());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatOauth2QrConnectRequest::_class_data_ = {
    WechatOauth2QrConnectRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WechatOauth2QrConnectRequest::GetClassData() const {
  return &_class_data_;
}

void WechatOauth2QrConnectRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatOauth2QrConnectRequest*>(&to_msg);
  auto& from = static_cast<const WechatOauth2QrConnectRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.orchid.v1.WechatOauth2QrConnectRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_redirect_uri().empty()) {
    _this->_internal_set_redirect_uri(from._internal_redirect_uri());
  }
  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_language() != 0) {
    _this->_internal_set_language(from._internal_language());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatOauth2QrConnectRequest::CopyFrom(const WechatOauth2QrConnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.orchid.v1.WechatOauth2QrConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatOauth2QrConnectRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WechatOauth2QrConnectRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WechatOauth2QrConnectRequest::InternalSwap(WechatOauth2QrConnectRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, &other->_impl_.app_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.redirect_uri_, &other->_impl_.redirect_uri_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, &other->_impl_.state_, arena);
  swap(_impl_.language_, other->_impl_.language_);
}

::google::protobuf::Metadata WechatOauth2QrConnectRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orchid_2eproto_getter, &descriptor_table_orchid_2eproto_once,
      file_level_metadata_orchid_2eproto[4]);
}
// ===================================================================

class WechatOauth2QrConnectResponse::_Internal {
 public:
};

WechatOauth2QrConnectResponse::WechatOauth2QrConnectResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.orchid.v1.WechatOauth2QrConnectResponse)
}
inline PROTOBUF_NDEBUG_INLINE WechatOauth2QrConnectResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : url_(arena, from.url_),
        _cached_size_{0} {}

WechatOauth2QrConnectResponse::WechatOauth2QrConnectResponse(
    ::google::protobuf::Arena* arena,
    const WechatOauth2QrConnectResponse& from)
    : ::google::protobuf::Message(arena) {
  WechatOauth2QrConnectResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.orchid.v1.WechatOauth2QrConnectResponse)
}
inline PROTOBUF_NDEBUG_INLINE WechatOauth2QrConnectResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : url_(arena),
        _cached_size_{0} {}

inline void WechatOauth2QrConnectResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WechatOauth2QrConnectResponse::~WechatOauth2QrConnectResponse() {
  // @@protoc_insertion_point(destructor:palm.orchid.v1.WechatOauth2QrConnectResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatOauth2QrConnectResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.url_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WechatOauth2QrConnectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.orchid.v1.WechatOauth2QrConnectResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatOauth2QrConnectResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 56, 2> WechatOauth2QrConnectResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WechatOauth2QrConnectResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string url = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2QrConnectResponse, _impl_.url_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string url = 1;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2QrConnectResponse, _impl_.url_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\3\0\0\0\0\0\0"
    "palm.orchid.v1.WechatOauth2QrConnectResponse"
    "url"
  }},
};

::uint8_t* WechatOauth2QrConnectResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.orchid.v1.WechatOauth2QrConnectResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    const std::string& _s = this->_internal_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatOauth2QrConnectResponse.url");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.orchid.v1.WechatOauth2QrConnectResponse)
  return target;
}

::size_t WechatOauth2QrConnectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.orchid.v1.WechatOauth2QrConnectResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatOauth2QrConnectResponse::_class_data_ = {
    WechatOauth2QrConnectResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WechatOauth2QrConnectResponse::GetClassData() const {
  return &_class_data_;
}

void WechatOauth2QrConnectResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatOauth2QrConnectResponse*>(&to_msg);
  auto& from = static_cast<const WechatOauth2QrConnectResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.orchid.v1.WechatOauth2QrConnectResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatOauth2QrConnectResponse::CopyFrom(const WechatOauth2QrConnectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.orchid.v1.WechatOauth2QrConnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatOauth2QrConnectResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WechatOauth2QrConnectResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WechatOauth2QrConnectResponse::InternalSwap(WechatOauth2QrConnectResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, &other->_impl_.url_, arena);
}

::google::protobuf::Metadata WechatOauth2QrConnectResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orchid_2eproto_getter, &descriptor_table_orchid_2eproto_once,
      file_level_metadata_orchid_2eproto[5]);
}
// ===================================================================

class WechatOauth2LoginResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<WechatOauth2LoginResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_._has_bits_);
  static void set_has_headimgurl(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

WechatOauth2LoginResponse::WechatOauth2LoginResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.orchid.v1.WechatOauth2LoginResponse)
}
inline PROTOBUF_NDEBUG_INLINE WechatOauth2LoginResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        privilege_{visibility, arena, from.privilege_},
        unionid_(arena, from.unionid_),
        openid_(arena, from.openid_),
        nickname_(arena, from.nickname_),
        province_(arena, from.province_),
        city_(arena, from.city_),
        country_(arena, from.country_),
        headimgurl_(arena, from.headimgurl_) {}

WechatOauth2LoginResponse::WechatOauth2LoginResponse(
    ::google::protobuf::Arena* arena,
    const WechatOauth2LoginResponse& from)
    : ::google::protobuf::Message(arena) {
  WechatOauth2LoginResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.sex_ = from._impl_.sex_;

  // @@protoc_insertion_point(copy_constructor:palm.orchid.v1.WechatOauth2LoginResponse)
}
inline PROTOBUF_NDEBUG_INLINE WechatOauth2LoginResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        privilege_{visibility, arena},
        unionid_(arena),
        openid_(arena),
        nickname_(arena),
        province_(arena),
        city_(arena),
        country_(arena),
        headimgurl_(arena) {}

inline void WechatOauth2LoginResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.sex_ = {};
}
WechatOauth2LoginResponse::~WechatOauth2LoginResponse() {
  // @@protoc_insertion_point(destructor:palm.orchid.v1.WechatOauth2LoginResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatOauth2LoginResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.unionid_.Destroy();
  _impl_.openid_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.province_.Destroy();
  _impl_.city_.Destroy();
  _impl_.country_.Destroy();
  _impl_.headimgurl_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WechatOauth2LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.orchid.v1.WechatOauth2LoginResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.privilege_.Clear();
  _impl_.unionid_.ClearToEmpty();
  _impl_.openid_.ClearToEmpty();
  _impl_.nickname_.ClearToEmpty();
  _impl_.province_.ClearToEmpty();
  _impl_.city_.ClearToEmpty();
  _impl_.country_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.headimgurl_.ClearNonDefaultToEmpty();
  }
  _impl_.sex_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatOauth2LoginResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 9, 0, 116, 2> WechatOauth2LoginResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_._has_bits_),
    0, // no _extensions_
    17, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294837244,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WechatOauth2LoginResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string headimgurl = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 0, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_.headimgurl_)}},
    // string unionid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_.unionid_)}},
    // string openid = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_.openid_)}},
    // string nickname = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_.nickname_)}},
    // .palm.orchid.v1.WechatOauth2LoginResponse.Sex sex = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WechatOauth2LoginResponse, _impl_.sex_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_.sex_)}},
    // string province = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_.province_)}},
    // string city = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_.city_)}},
    // string country = 15;
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_.country_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string unionid = 1;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_.unionid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string openid = 2;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_.openid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string nickname = 11;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_.nickname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .palm.orchid.v1.WechatOauth2LoginResponse.Sex sex = 12;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_.sex_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string province = 13;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_.province_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string city = 14;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_.city_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string country = 15;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_.country_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string headimgurl = 16;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_.headimgurl_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string privilege = 17;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2LoginResponse, _impl_.privilege_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\50\7\6\10\0\10\4\7\12\11\0\0\0\0\0\0"
    "palm.orchid.v1.WechatOauth2LoginResponse"
    "unionid"
    "openid"
    "nickname"
    "province"
    "city"
    "country"
    "headimgurl"
    "privilege"
  }},
};

::uint8_t* WechatOauth2LoginResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.orchid.v1.WechatOauth2LoginResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string unionid = 1;
  if (!this->_internal_unionid().empty()) {
    const std::string& _s = this->_internal_unionid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatOauth2LoginResponse.unionid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string openid = 2;
  if (!this->_internal_openid().empty()) {
    const std::string& _s = this->_internal_openid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatOauth2LoginResponse.openid");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string nickname = 11;
  if (!this->_internal_nickname().empty()) {
    const std::string& _s = this->_internal_nickname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatOauth2LoginResponse.nickname");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // .palm.orchid.v1.WechatOauth2LoginResponse.Sex sex = 12;
  if (this->_internal_sex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        12, this->_internal_sex(), target);
  }

  // string province = 13;
  if (!this->_internal_province().empty()) {
    const std::string& _s = this->_internal_province();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatOauth2LoginResponse.province");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // string city = 14;
  if (!this->_internal_city().empty()) {
    const std::string& _s = this->_internal_city();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatOauth2LoginResponse.city");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // string country = 15;
  if (!this->_internal_country().empty()) {
    const std::string& _s = this->_internal_country();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatOauth2LoginResponse.country");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string headimgurl = 16;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_headimgurl();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatOauth2LoginResponse.headimgurl");
    target = stream->WriteStringMaybeAliased(16, _s, target);
  }

  // repeated string privilege = 17;
  for (int i = 0, n = this->_internal_privilege_size(); i < n; ++i) {
    const auto& s = this->_internal_privilege().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatOauth2LoginResponse.privilege");
    target = stream->WriteString(17, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.orchid.v1.WechatOauth2LoginResponse)
  return target;
}

::size_t WechatOauth2LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.orchid.v1.WechatOauth2LoginResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string privilege = 17;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_privilege().size());
  for (int i = 0, n = _internal_privilege().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_privilege().Get(i));
  }
  // string unionid = 1;
  if (!this->_internal_unionid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_unionid());
  }

  // string openid = 2;
  if (!this->_internal_openid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_openid());
  }

  // string nickname = 11;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_nickname());
  }

  // string province = 13;
  if (!this->_internal_province().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_province());
  }

  // string city = 14;
  if (!this->_internal_city().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_city());
  }

  // string country = 15;
  if (!this->_internal_country().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_country());
  }

  // optional string headimgurl = 16;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_headimgurl());
  }

  // .palm.orchid.v1.WechatOauth2LoginResponse.Sex sex = 12;
  if (this->_internal_sex() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_sex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatOauth2LoginResponse::_class_data_ = {
    WechatOauth2LoginResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WechatOauth2LoginResponse::GetClassData() const {
  return &_class_data_;
}

void WechatOauth2LoginResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatOauth2LoginResponse*>(&to_msg);
  auto& from = static_cast<const WechatOauth2LoginResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.orchid.v1.WechatOauth2LoginResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_privilege()->MergeFrom(from._internal_privilege());
  if (!from._internal_unionid().empty()) {
    _this->_internal_set_unionid(from._internal_unionid());
  }
  if (!from._internal_openid().empty()) {
    _this->_internal_set_openid(from._internal_openid());
  }
  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_province().empty()) {
    _this->_internal_set_province(from._internal_province());
  }
  if (!from._internal_city().empty()) {
    _this->_internal_set_city(from._internal_city());
  }
  if (!from._internal_country().empty()) {
    _this->_internal_set_country(from._internal_country());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_headimgurl(from._internal_headimgurl());
  }
  if (from._internal_sex() != 0) {
    _this->_internal_set_sex(from._internal_sex());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatOauth2LoginResponse::CopyFrom(const WechatOauth2LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.orchid.v1.WechatOauth2LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatOauth2LoginResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WechatOauth2LoginResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WechatOauth2LoginResponse::InternalSwap(WechatOauth2LoginResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.privilege_.InternalSwap(&other->_impl_.privilege_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unionid_, &other->_impl_.unionid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.openid_, &other->_impl_.openid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.province_, &other->_impl_.province_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.city_, &other->_impl_.city_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.country_, &other->_impl_.country_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.headimgurl_, &other->_impl_.headimgurl_, arena);
  swap(_impl_.sex_, other->_impl_.sex_);
}

::google::protobuf::Metadata WechatOauth2LoginResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orchid_2eproto_getter, &descriptor_table_orchid_2eproto_once,
      file_level_metadata_orchid_2eproto[6]);
}
// ===================================================================

class WechatOauth2LoginRequest::_Internal {
 public:
};

WechatOauth2LoginRequest::WechatOauth2LoginRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.orchid.v1.WechatOauth2LoginRequest)
}
inline PROTOBUF_NDEBUG_INLINE WechatOauth2LoginRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : app_id_(arena, from.app_id_),
        code_(arena, from.code_),
        state_(arena, from.state_),
        _cached_size_{0} {}

WechatOauth2LoginRequest::WechatOauth2LoginRequest(
    ::google::protobuf::Arena* arena,
    const WechatOauth2LoginRequest& from)
    : ::google::protobuf::Message(arena) {
  WechatOauth2LoginRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.language_ = from._impl_.language_;

  // @@protoc_insertion_point(copy_constructor:palm.orchid.v1.WechatOauth2LoginRequest)
}
inline PROTOBUF_NDEBUG_INLINE WechatOauth2LoginRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : app_id_(arena),
        code_(arena),
        state_(arena),
        _cached_size_{0} {}

inline void WechatOauth2LoginRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.language_ = {};
}
WechatOauth2LoginRequest::~WechatOauth2LoginRequest() {
  // @@protoc_insertion_point(destructor:palm.orchid.v1.WechatOauth2LoginRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WechatOauth2LoginRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.app_id_.Destroy();
  _impl_.code_.Destroy();
  _impl_.state_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WechatOauth2LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.orchid.v1.WechatOauth2LoginRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.app_id_.ClearToEmpty();
  _impl_.code_.ClearToEmpty();
  _impl_.state_.ClearToEmpty();
  _impl_.language_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WechatOauth2LoginRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 63, 2> WechatOauth2LoginRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967032,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WechatOauth2LoginRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string app_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2LoginRequest, _impl_.app_id_)}},
    // string code = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2LoginRequest, _impl_.code_)}},
    // string state = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(WechatOauth2LoginRequest, _impl_.state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string app_id = 1;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2LoginRequest, _impl_.app_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string code = 2;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2LoginRequest, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string state = 3;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2LoginRequest, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 9;
    {PROTOBUF_FIELD_OFFSET(WechatOauth2LoginRequest, _impl_.language_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\47\6\4\5\0\0\0\0"
    "palm.orchid.v1.WechatOauth2LoginRequest"
    "app_id"
    "code"
    "state"
  }},
};

::uint8_t* WechatOauth2LoginRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.orchid.v1.WechatOauth2LoginRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatOauth2LoginRequest.app_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatOauth2LoginRequest.code");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    const std::string& _s = this->_internal_state();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.orchid.v1.WechatOauth2LoginRequest.state");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 9;
  if (this->_internal_language() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        9, this->_internal_language(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.orchid.v1.WechatOauth2LoginRequest)
  return target;
}

::size_t WechatOauth2LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.orchid.v1.WechatOauth2LoginRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code());
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_state());
  }

  // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 9;
  if (this->_internal_language() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_language());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WechatOauth2LoginRequest::_class_data_ = {
    WechatOauth2LoginRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WechatOauth2LoginRequest::GetClassData() const {
  return &_class_data_;
}

void WechatOauth2LoginRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WechatOauth2LoginRequest*>(&to_msg);
  auto& from = static_cast<const WechatOauth2LoginRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.orchid.v1.WechatOauth2LoginRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_language() != 0) {
    _this->_internal_set_language(from._internal_language());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WechatOauth2LoginRequest::CopyFrom(const WechatOauth2LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.orchid.v1.WechatOauth2LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WechatOauth2LoginRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WechatOauth2LoginRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WechatOauth2LoginRequest::InternalSwap(WechatOauth2LoginRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, &other->_impl_.app_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, &other->_impl_.code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, &other->_impl_.state_, arena);
  swap(_impl_.language_, other->_impl_.language_);
}

::google::protobuf::Metadata WechatOauth2LoginRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orchid_2eproto_getter, &descriptor_table_orchid_2eproto_once,
      file_level_metadata_orchid_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace orchid
}  // namespace palm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
