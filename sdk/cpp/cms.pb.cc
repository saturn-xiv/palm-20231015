// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cms.proto

#include "cms.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace palm {
namespace cms {
namespace v1 {
        template <typename>
PROTOBUF_CONSTEXPR ArticleCreateRequest::ArticleCreateRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.tags_)*/ {},
      /* _impl_._tags_cached_byte_size_ = */ {0},
      /*decltype(_impl_.title_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.summary_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.body_)*/ nullptr,
    } {}
struct ArticleCreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArticleCreateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArticleCreateRequestDefaultTypeInternal() {}
  union {
    ArticleCreateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArticleCreateRequestDefaultTypeInternal _ArticleCreateRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ArticleUpdateRequest::ArticleUpdateRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.tags_)*/ {},
      /* _impl_._tags_cached_byte_size_ = */ {0},
      /*decltype(_impl_.title_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.summary_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.body_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ArticleUpdateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArticleUpdateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArticleUpdateRequestDefaultTypeInternal() {}
  union {
    ArticleUpdateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArticleUpdateRequestDefaultTypeInternal _ArticleUpdateRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ArticleIndexResponse_Item::ArticleIndexResponse_Item(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.tags_)*/ {},
      /*decltype(_impl_.lang_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.title_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.summary_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.body_)*/ nullptr,
      /*decltype(_impl_.updated_at_)*/ nullptr,
      /*decltype(_impl_.author_)*/ nullptr,
      /*decltype(_impl_.id_)*/ 0,
    } {}
struct ArticleIndexResponse_ItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArticleIndexResponse_ItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArticleIndexResponse_ItemDefaultTypeInternal() {}
  union {
    ArticleIndexResponse_Item _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArticleIndexResponse_ItemDefaultTypeInternal _ArticleIndexResponse_Item_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ArticleIndexResponse::ArticleIndexResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.items_)*/ {},
      /*decltype(_impl_.pagination_)*/ nullptr,
    } {}
struct ArticleIndexResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArticleIndexResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArticleIndexResponseDefaultTypeInternal() {}
  union {
    ArticleIndexResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArticleIndexResponseDefaultTypeInternal _ArticleIndexResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ArticleShowResponse::ArticleShowResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.comments_)*/ {},
      /*decltype(_impl_.item_)*/ nullptr,
    } {}
struct ArticleShowResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArticleShowResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArticleShowResponseDefaultTypeInternal() {}
  union {
    ArticleShowResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArticleShowResponseDefaultTypeInternal _ArticleShowResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CommentCreateRequest::CommentCreateRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.body_)*/ nullptr,
      /*decltype(_impl_.article_)*/ 0,
    } {}
struct CommentCreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommentCreateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommentCreateRequestDefaultTypeInternal() {}
  union {
    CommentCreateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommentCreateRequestDefaultTypeInternal _CommentCreateRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CommentUpdateRequest::CommentUpdateRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.body_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CommentUpdateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommentUpdateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommentUpdateRequestDefaultTypeInternal() {}
  union {
    CommentUpdateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommentUpdateRequestDefaultTypeInternal _CommentUpdateRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CommentIndexResponse_Item::CommentIndexResponse_Item(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.body_)*/ nullptr,
      /*decltype(_impl_.updated_at_)*/ nullptr,
      /*decltype(_impl_.author_)*/ nullptr,
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_.article_)*/ 0,
    } {}
struct CommentIndexResponse_ItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommentIndexResponse_ItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommentIndexResponse_ItemDefaultTypeInternal() {}
  union {
    CommentIndexResponse_Item _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommentIndexResponse_ItemDefaultTypeInternal _CommentIndexResponse_Item_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CommentIndexResponse::CommentIndexResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.items_)*/ {},
      /*decltype(_impl_.pagination_)*/ nullptr,
    } {}
struct CommentIndexResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommentIndexResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommentIndexResponseDefaultTypeInternal() {}
  union {
    CommentIndexResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommentIndexResponseDefaultTypeInternal _CommentIndexResponse_default_instance_;
}  // namespace v1
}  // namespace cms
}  // namespace palm
static ::_pb::Metadata file_level_metadata_cms_2eproto[9];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cms_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cms_2eproto = nullptr;
const ::uint32_t TableStruct_cms_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleCreateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleCreateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleCreateRequest, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleCreateRequest, _impl_.summary_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleCreateRequest, _impl_.body_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleCreateRequest, _impl_.tags_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleUpdateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleUpdateRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleUpdateRequest, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleUpdateRequest, _impl_.summary_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleUpdateRequest, _impl_.body_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleUpdateRequest, _impl_.tags_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleIndexResponse_Item, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleIndexResponse_Item, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleIndexResponse_Item, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleIndexResponse_Item, _impl_.lang_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleIndexResponse_Item, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleIndexResponse_Item, _impl_.summary_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleIndexResponse_Item, _impl_.body_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleIndexResponse_Item, _impl_.updated_at_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleIndexResponse_Item, _impl_.author_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleIndexResponse_Item, _impl_.tags_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
    2,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleIndexResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleIndexResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleIndexResponse, _impl_.items_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleIndexResponse, _impl_.pagination_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleShowResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleShowResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleShowResponse, _impl_.item_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::ArticleShowResponse, _impl_.comments_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentCreateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentCreateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentCreateRequest, _impl_.article_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentCreateRequest, _impl_.body_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentUpdateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentUpdateRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentUpdateRequest, _impl_.body_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentIndexResponse_Item, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentIndexResponse_Item, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentIndexResponse_Item, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentIndexResponse_Item, _impl_.article_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentIndexResponse_Item, _impl_.body_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentIndexResponse_Item, _impl_.updated_at_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentIndexResponse_Item, _impl_.author_),
    ~0u,
    ~0u,
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentIndexResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentIndexResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentIndexResponse, _impl_.items_),
    PROTOBUF_FIELD_OFFSET(::palm::cms::v1::CommentIndexResponse, _impl_.pagination_),
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::palm::cms::v1::ArticleCreateRequest)},
        {16, -1, -1, sizeof(::palm::cms::v1::ArticleUpdateRequest)},
        {29, 45, -1, sizeof(::palm::cms::v1::ArticleIndexResponse_Item)},
        {53, 63, -1, sizeof(::palm::cms::v1::ArticleIndexResponse)},
        {65, 75, -1, sizeof(::palm::cms::v1::ArticleShowResponse)},
        {77, 87, -1, sizeof(::palm::cms::v1::CommentCreateRequest)},
        {89, -1, -1, sizeof(::palm::cms::v1::CommentUpdateRequest)},
        {99, 112, -1, sizeof(::palm::cms::v1::CommentIndexResponse_Item)},
        {117, 127, -1, sizeof(::palm::cms::v1::CommentIndexResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::palm::cms::v1::_ArticleCreateRequest_default_instance_._instance,
    &::palm::cms::v1::_ArticleUpdateRequest_default_instance_._instance,
    &::palm::cms::v1::_ArticleIndexResponse_Item_default_instance_._instance,
    &::palm::cms::v1::_ArticleIndexResponse_default_instance_._instance,
    &::palm::cms::v1::_ArticleShowResponse_default_instance_._instance,
    &::palm::cms::v1::_CommentCreateRequest_default_instance_._instance,
    &::palm::cms::v1::_CommentUpdateRequest_default_instance_._instance,
    &::palm::cms::v1::_CommentIndexResponse_Item_default_instance_._instance,
    &::palm::cms::v1::_CommentIndexResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cms_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\tcms.proto\022\013palm.cms.v1\032\033google/protobu"
    "f/empty.proto\032\037google/protobuf/timestamp"
    ".proto\032\021metasequoia.proto\"u\n\024ArticleCrea"
    "teRequest\022\r\n\005title\030\001 \001(\t\022\017\n\007summary\030\002 \001("
    "\t\022/\n\004body\030\003 \001(\0132!.palm.metasequoia.v1.Me"
    "diaContent\022\014\n\004tags\030\004 \003(\005\"^\n\024ArticleUpdat"
    "eRequest\022\n\n\002id\030\001 \001(\005\022\r\n\005title\030\002 \001(\t\022\017\n\007s"
    "ummary\030\003 \001(\t\022\014\n\004body\030\004 \001(\t\022\014\n\004tags\030\005 \003(\005"
    "\"\221\003\n\024ArticleIndexResponse\0225\n\005items\030\001 \003(\013"
    "2&.palm.cms.v1.ArticleIndexResponse.Item"
    "\0223\n\npagination\030\t \001(\0132\037.palm.metasequoia."
    "v1.Pagination\032\214\002\n\004Item\022\n\n\002id\030\001 \001(\005\022\014\n\004la"
    "ng\030\002 \001(\t\022\r\n\005title\030\003 \001(\t\022\017\n\007summary\030\004 \001(\t"
    "\022/\n\004body\030\005 \001(\0132!.palm.metasequoia.v1.Med"
    "iaContent\022.\n\nupdated_at\030\t \001(\0132\032.google.p"
    "rotobuf.Timestamp\022/\n\006author\030\013 \001(\0132\037.palm"
    ".metasequoia.v1.UserDetail\0228\n\004tags\030\014 \003(\013"
    "2*.palm.metasequoia.v1.TagIndexResponse."
    "Item\"\205\001\n\023ArticleShowResponse\0224\n\004item\030\001 \001"
    "(\0132&.palm.cms.v1.ArticleIndexResponse.It"
    "em\0228\n\010comments\030\002 \003(\0132&.palm.cms.v1.Comme"
    "ntIndexResponse.Item\"X\n\024CommentCreateReq"
    "uest\022\017\n\007article\030\001 \001(\005\022/\n\004body\030\002 \001(\0132!.pa"
    "lm.metasequoia.v1.MediaContent\"0\n\024Commen"
    "tUpdateRequest\022\n\n\002id\030\001 \001(\005\022\014\n\004body\030\002 \001(\t"
    "\"\272\002\n\024CommentIndexResponse\0225\n\005items\030\001 \003(\013"
    "2&.palm.cms.v1.CommentIndexResponse.Item"
    "\0223\n\npagination\030\t \001(\0132\037.palm.metasequoia."
    "v1.Pagination\032\265\001\n\004Item\022\n\n\002id\030\001 \001(\005\022\017\n\007ar"
    "ticle\030\002 \001(\005\022/\n\004body\030\003 \001(\0132!.palm.metaseq"
    "uoia.v1.MediaContent\022.\n\nupdated_at\030\t \001(\013"
    "2\032.google.protobuf.Timestamp\022/\n\006author\030\013"
    " \001(\0132\037.palm.metasequoia.v1.UserDetail2\362\002"
    "\n\007Article\022E\n\006Create\022!.palm.cms.v1.Articl"
    "eCreateRequest\032\026.google.protobuf.Empty\"\000"
    "\022E\n\006Update\022!.palm.cms.v1.ArticleUpdateRe"
    "quest\032\026.google.protobuf.Empty\"\000\022H\n\005Index"
    "\022\032.palm.metasequoia.v1.Pager\032!.palm.cms."
    "v1.ArticleIndexResponse\"\000\022J\n\004Show\022\036.palm"
    ".metasequoia.v1.IdRequest\032 .palm.cms.v1."
    "ArticleShowResponse\"\000\022C\n\007Destory\022\036.palm."
    "metasequoia.v1.IdRequest\032\026.google.protob"
    "uf.Empty\"\0002\246\002\n\007Comment\022E\n\006Create\022!.palm."
    "cms.v1.CommentCreateRequest\032\026.google.pro"
    "tobuf.Empty\"\000\022E\n\006Update\022!.palm.cms.v1.Co"
    "mmentUpdateRequest\032\026.google.protobuf.Emp"
    "ty\"\000\022H\n\005Index\022\032.palm.metasequoia.v1.Page"
    "r\032!.palm.cms.v1.CommentIndexResponse\"\000\022C"
    "\n\007Destory\022\036.palm.metasequoia.v1.IdReques"
    "t\032\026.google.protobuf.Empty\"\000BP\n)com.githu"
    "b.saturn_xiv.palm.plugins.cms.v1P\001Z!gith"
    "ub.com/saturn_xiv/palm/cms/v2b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cms_2eproto_deps[3] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_metasequoia_2eproto,
};
static ::absl::once_flag descriptor_table_cms_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cms_2eproto = {
    false,
    false,
    2077,
    descriptor_table_protodef_cms_2eproto,
    "cms.proto",
    &descriptor_table_cms_2eproto_once,
    descriptor_table_cms_2eproto_deps,
    3,
    9,
    schemas,
    file_default_instances,
    TableStruct_cms_2eproto::offsets,
    file_level_metadata_cms_2eproto,
    file_level_enum_descriptors_cms_2eproto,
    file_level_service_descriptors_cms_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cms_2eproto_getter() {
  return &descriptor_table_cms_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cms_2eproto(&descriptor_table_cms_2eproto);
namespace palm {
namespace cms {
namespace v1 {
// ===================================================================

class ArticleCreateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ArticleCreateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ArticleCreateRequest, _impl_._has_bits_);
  static const ::palm::metasequoia::v1::MediaContent& body(const ArticleCreateRequest* msg);
  static void set_has_body(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::metasequoia::v1::MediaContent& ArticleCreateRequest::_Internal::body(const ArticleCreateRequest* msg) {
  return *msg->_impl_.body_;
}
void ArticleCreateRequest::clear_body() {
  if (_impl_.body_ != nullptr) _impl_.body_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ArticleCreateRequest::ArticleCreateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.cms.v1.ArticleCreateRequest)
}
ArticleCreateRequest::ArticleCreateRequest(const ArticleCreateRequest& from) : ::google::protobuf::Message() {
  ArticleCreateRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.tags_){from._impl_.tags_},
      /* _impl_._tags_cached_byte_size_ = */ {0},
      decltype(_impl_.title_){},
      decltype(_impl_.summary_){},
      decltype(_impl_.body_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), _this->GetArenaForAllocation());
  }
  _impl_.summary_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.summary_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_summary().empty()) {
    _this->_impl_.summary_.Set(from._internal_summary(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.body_ = new ::palm::metasequoia::v1::MediaContent(*from._impl_.body_);
  }

  // @@protoc_insertion_point(copy_constructor:palm.cms.v1.ArticleCreateRequest)
}
inline void ArticleCreateRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.tags_){arena},
      /* _impl_._tags_cached_byte_size_ = */ {0},
      decltype(_impl_.title_){},
      decltype(_impl_.summary_){},
      decltype(_impl_.body_){nullptr},
  };
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.summary_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.summary_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
ArticleCreateRequest::~ArticleCreateRequest() {
  // @@protoc_insertion_point(destructor:palm.cms.v1.ArticleCreateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ArticleCreateRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tags_.~RepeatedField();
  _impl_.title_.Destroy();
  _impl_.summary_.Destroy();
  if (this != internal_default_instance()) delete _impl_.body_;
}
void ArticleCreateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ArticleCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.cms.v1.ArticleCreateRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_tags()->Clear();
  _impl_.title_.ClearToEmpty();
  _impl_.summary_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.body_ != nullptr);
    _impl_.body_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ArticleCreateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 53, 2> ArticleCreateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ArticleCreateRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ArticleCreateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated int32 tags = 4;
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ArticleCreateRequest, _impl_.tags_)}},
    // string title = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ArticleCreateRequest, _impl_.title_)}},
    // string summary = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ArticleCreateRequest, _impl_.summary_)}},
    // .palm.metasequoia.v1.MediaContent body = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ArticleCreateRequest, _impl_.body_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1;
    {PROTOBUF_FIELD_OFFSET(ArticleCreateRequest, _impl_.title_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string summary = 2;
    {PROTOBUF_FIELD_OFFSET(ArticleCreateRequest, _impl_.summary_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .palm.metasequoia.v1.MediaContent body = 3;
    {PROTOBUF_FIELD_OFFSET(ArticleCreateRequest, _impl_.body_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 tags = 4;
    {PROTOBUF_FIELD_OFFSET(ArticleCreateRequest, _impl_.tags_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::metasequoia::v1::MediaContent>()},
  }}, {{
    "\40\5\7\0\0\0\0\0"
    "palm.cms.v1.ArticleCreateRequest"
    "title"
    "summary"
  }},
};

::uint8_t* ArticleCreateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.cms.v1.ArticleCreateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string title = 1;
  if (!this->_internal_title().empty()) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.cms.v1.ArticleCreateRequest.title");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string summary = 2;
  if (!this->_internal_summary().empty()) {
    const std::string& _s = this->_internal_summary();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.cms.v1.ArticleCreateRequest.summary");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.metasequoia.v1.MediaContent body = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::body(this),
        _Internal::body(this).GetCachedSize(), target, stream);
  }

  // repeated int32 tags = 4;
  {
    int byte_size = _impl_._tags_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(4, _internal_tags(),
                                                 byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.cms.v1.ArticleCreateRequest)
  return target;
}

::size_t ArticleCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.cms.v1.ArticleCreateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 tags = 4;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_tags())
    ;
    _impl_._tags_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string title = 1;
  if (!this->_internal_title().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_title());
  }

  // string summary = 2;
  if (!this->_internal_summary().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_summary());
  }

  // .palm.metasequoia.v1.MediaContent body = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.body_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ArticleCreateRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ArticleCreateRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*ArticleCreateRequest::GetClassData() const { return &_class_data_; }


void ArticleCreateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ArticleCreateRequest*>(&to_msg);
  auto& from = static_cast<const ArticleCreateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.cms.v1.ArticleCreateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_summary().empty()) {
    _this->_internal_set_summary(from._internal_summary());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_body()->::palm::metasequoia::v1::MediaContent::MergeFrom(
        from._internal_body());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ArticleCreateRequest::CopyFrom(const ArticleCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.cms.v1.ArticleCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ArticleCreateRequest::IsInitialized() const {
  return true;
}

void ArticleCreateRequest::InternalSwap(ArticleCreateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, lhs_arena,
                                       &other->_impl_.title_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.summary_, lhs_arena,
                                       &other->_impl_.summary_, rhs_arena);
  swap(_impl_.body_, other->_impl_.body_);
}

::google::protobuf::Metadata ArticleCreateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cms_2eproto_getter, &descriptor_table_cms_2eproto_once,
      file_level_metadata_cms_2eproto[0]);
}
// ===================================================================

class ArticleUpdateRequest::_Internal {
 public:
};

ArticleUpdateRequest::ArticleUpdateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.cms.v1.ArticleUpdateRequest)
}
ArticleUpdateRequest::ArticleUpdateRequest(const ArticleUpdateRequest& from) : ::google::protobuf::Message() {
  ArticleUpdateRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tags_){from._impl_.tags_},
      /* _impl_._tags_cached_byte_size_ = */ {0},
      decltype(_impl_.title_){},
      decltype(_impl_.summary_){},
      decltype(_impl_.body_){},
      decltype(_impl_.id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), _this->GetArenaForAllocation());
  }
  _impl_.summary_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.summary_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_summary().empty()) {
    _this->_impl_.summary_.Set(from._internal_summary(), _this->GetArenaForAllocation());
  }
  _impl_.body_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.body_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_body().empty()) {
    _this->_impl_.body_.Set(from._internal_body(), _this->GetArenaForAllocation());
  }
  _this->_impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:palm.cms.v1.ArticleUpdateRequest)
}
inline void ArticleUpdateRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.tags_){arena},
      /* _impl_._tags_cached_byte_size_ = */ {0},
      decltype(_impl_.title_){},
      decltype(_impl_.summary_){},
      decltype(_impl_.body_){},
      decltype(_impl_.id_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.summary_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.summary_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.body_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.body_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
ArticleUpdateRequest::~ArticleUpdateRequest() {
  // @@protoc_insertion_point(destructor:palm.cms.v1.ArticleUpdateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ArticleUpdateRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tags_.~RepeatedField();
  _impl_.title_.Destroy();
  _impl_.summary_.Destroy();
  _impl_.body_.Destroy();
}
void ArticleUpdateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ArticleUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.cms.v1.ArticleUpdateRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_tags()->Clear();
  _impl_.title_.ClearToEmpty();
  _impl_.summary_.ClearToEmpty();
  _impl_.body_.ClearToEmpty();
  _impl_.id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ArticleUpdateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 57, 2> ArticleUpdateRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ArticleUpdateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ArticleUpdateRequest, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ArticleUpdateRequest, _impl_.id_)}},
    // string title = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ArticleUpdateRequest, _impl_.title_)}},
    // string summary = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ArticleUpdateRequest, _impl_.summary_)}},
    // string body = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ArticleUpdateRequest, _impl_.body_)}},
    // repeated int32 tags = 5;
    {::_pbi::TcParser::FastV32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ArticleUpdateRequest, _impl_.tags_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(ArticleUpdateRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string title = 2;
    {PROTOBUF_FIELD_OFFSET(ArticleUpdateRequest, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string summary = 3;
    {PROTOBUF_FIELD_OFFSET(ArticleUpdateRequest, _impl_.summary_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string body = 4;
    {PROTOBUF_FIELD_OFFSET(ArticleUpdateRequest, _impl_.body_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated int32 tags = 5;
    {PROTOBUF_FIELD_OFFSET(ArticleUpdateRequest, _impl_.tags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
    "\40\0\5\7\4\0\0\0"
    "palm.cms.v1.ArticleUpdateRequest"
    "title"
    "summary"
    "body"
  }},
};

::uint8_t* ArticleUpdateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.cms.v1.ArticleUpdateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string title = 2;
  if (!this->_internal_title().empty()) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.cms.v1.ArticleUpdateRequest.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string summary = 3;
  if (!this->_internal_summary().empty()) {
    const std::string& _s = this->_internal_summary();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.cms.v1.ArticleUpdateRequest.summary");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string body = 4;
  if (!this->_internal_body().empty()) {
    const std::string& _s = this->_internal_body();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.cms.v1.ArticleUpdateRequest.body");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // repeated int32 tags = 5;
  {
    int byte_size = _impl_._tags_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(5, _internal_tags(),
                                                 byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.cms.v1.ArticleUpdateRequest)
  return target;
}

::size_t ArticleUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.cms.v1.ArticleUpdateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 tags = 5;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_tags())
    ;
    _impl_._tags_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string title = 2;
  if (!this->_internal_title().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_title());
  }

  // string summary = 3;
  if (!this->_internal_summary().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_summary());
  }

  // string body = 4;
  if (!this->_internal_body().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_body());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ArticleUpdateRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ArticleUpdateRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*ArticleUpdateRequest::GetClassData() const { return &_class_data_; }


void ArticleUpdateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ArticleUpdateRequest*>(&to_msg);
  auto& from = static_cast<const ArticleUpdateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.cms.v1.ArticleUpdateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_summary().empty()) {
    _this->_internal_set_summary(from._internal_summary());
  }
  if (!from._internal_body().empty()) {
    _this->_internal_set_body(from._internal_body());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ArticleUpdateRequest::CopyFrom(const ArticleUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.cms.v1.ArticleUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ArticleUpdateRequest::IsInitialized() const {
  return true;
}

void ArticleUpdateRequest::InternalSwap(ArticleUpdateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, lhs_arena,
                                       &other->_impl_.title_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.summary_, lhs_arena,
                                       &other->_impl_.summary_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, lhs_arena,
                                       &other->_impl_.body_, rhs_arena);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata ArticleUpdateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cms_2eproto_getter, &descriptor_table_cms_2eproto_once,
      file_level_metadata_cms_2eproto[1]);
}
// ===================================================================

class ArticleIndexResponse_Item::_Internal {
 public:
  using HasBits = decltype(std::declval<ArticleIndexResponse_Item>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_._has_bits_);
  static const ::palm::metasequoia::v1::MediaContent& body(const ArticleIndexResponse_Item* msg);
  static void set_has_body(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& updated_at(const ArticleIndexResponse_Item* msg);
  static void set_has_updated_at(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::palm::metasequoia::v1::UserDetail& author(const ArticleIndexResponse_Item* msg);
  static void set_has_author(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::palm::metasequoia::v1::MediaContent& ArticleIndexResponse_Item::_Internal::body(const ArticleIndexResponse_Item* msg) {
  return *msg->_impl_.body_;
}
const ::google::protobuf::Timestamp& ArticleIndexResponse_Item::_Internal::updated_at(const ArticleIndexResponse_Item* msg) {
  return *msg->_impl_.updated_at_;
}
const ::palm::metasequoia::v1::UserDetail& ArticleIndexResponse_Item::_Internal::author(const ArticleIndexResponse_Item* msg) {
  return *msg->_impl_.author_;
}
void ArticleIndexResponse_Item::clear_body() {
  if (_impl_.body_ != nullptr) _impl_.body_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ArticleIndexResponse_Item::clear_updated_at() {
  if (_impl_.updated_at_ != nullptr) _impl_.updated_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ArticleIndexResponse_Item::clear_author() {
  if (_impl_.author_ != nullptr) _impl_.author_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void ArticleIndexResponse_Item::clear_tags() {
  _internal_mutable_tags()->Clear();
}
ArticleIndexResponse_Item::ArticleIndexResponse_Item(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.cms.v1.ArticleIndexResponse.Item)
}
ArticleIndexResponse_Item::ArticleIndexResponse_Item(const ArticleIndexResponse_Item& from) : ::google::protobuf::Message() {
  ArticleIndexResponse_Item* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.tags_){from._impl_.tags_},
      decltype(_impl_.lang_){},
      decltype(_impl_.title_){},
      decltype(_impl_.summary_){},
      decltype(_impl_.body_){nullptr},
      decltype(_impl_.updated_at_){nullptr},
      decltype(_impl_.author_){nullptr},
      decltype(_impl_.id_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lang().empty()) {
    _this->_impl_.lang_.Set(from._internal_lang(), _this->GetArenaForAllocation());
  }
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), _this->GetArenaForAllocation());
  }
  _impl_.summary_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.summary_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_summary().empty()) {
    _this->_impl_.summary_.Set(from._internal_summary(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.body_ = new ::palm::metasequoia::v1::MediaContent(*from._impl_.body_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.updated_at_ = new ::google::protobuf::Timestamp(*from._impl_.updated_at_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.author_ = new ::palm::metasequoia::v1::UserDetail(*from._impl_.author_);
  }
  _this->_impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:palm.cms.v1.ArticleIndexResponse.Item)
}
inline void ArticleIndexResponse_Item::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.tags_){arena},
      decltype(_impl_.lang_){},
      decltype(_impl_.title_){},
      decltype(_impl_.summary_){},
      decltype(_impl_.body_){nullptr},
      decltype(_impl_.updated_at_){nullptr},
      decltype(_impl_.author_){nullptr},
      decltype(_impl_.id_){0},
  };
  _impl_.lang_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lang_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.summary_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.summary_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
ArticleIndexResponse_Item::~ArticleIndexResponse_Item() {
  // @@protoc_insertion_point(destructor:palm.cms.v1.ArticleIndexResponse.Item)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ArticleIndexResponse_Item::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tags_.~RepeatedPtrField();
  _impl_.lang_.Destroy();
  _impl_.title_.Destroy();
  _impl_.summary_.Destroy();
  if (this != internal_default_instance()) delete _impl_.body_;
  if (this != internal_default_instance()) delete _impl_.updated_at_;
  if (this != internal_default_instance()) delete _impl_.author_;
}
void ArticleIndexResponse_Item::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ArticleIndexResponse_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.cms.v1.ArticleIndexResponse.Item)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_tags()->Clear();
  _impl_.lang_.ClearToEmpty();
  _impl_.title_.ClearToEmpty();
  _impl_.summary_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.body_ != nullptr);
      _impl_.body_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.updated_at_ != nullptr);
      _impl_.updated_at_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.author_ != nullptr);
      _impl_.author_->Clear();
    }
  }
  _impl_.id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ArticleIndexResponse_Item::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 4, 70, 2> ArticleIndexResponse_Item::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963936,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ArticleIndexResponse_Item_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ArticleIndexResponse_Item, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.id_)}},
    // string lang = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.lang_)}},
    // string title = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.title_)}},
    // string summary = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.summary_)}},
    // .palm.metasequoia.v1.MediaContent body = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.body_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp updated_at = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 1, 1, PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.updated_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .palm.metasequoia.v1.UserDetail author = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 2, 2, PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.author_)}},
    // repeated .palm.metasequoia.v1.TagIndexResponse.Item tags = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 3, PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.tags_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string lang = 2;
    {PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.lang_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string title = 3;
    {PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.title_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string summary = 4;
    {PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.summary_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .palm.metasequoia.v1.MediaContent body = 5;
    {PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.body_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp updated_at = 9;
    {PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.updated_at_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .palm.metasequoia.v1.UserDetail author = 11;
    {PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.author_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .palm.metasequoia.v1.TagIndexResponse.Item tags = 12;
    {PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.tags_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::metasequoia::v1::MediaContent>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::palm::metasequoia::v1::UserDetail>()},
    {::_pbi::TcParser::GetTable<::palm::metasequoia::v1::TagIndexResponse_Item>()},
  }}, {{
    "\45\0\4\5\7\0\0\0\0\0\0\0\0\0\0\0"
    "palm.cms.v1.ArticleIndexResponse.Item"
    "lang"
    "title"
    "summary"
  }},
};

::uint8_t* ArticleIndexResponse_Item::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.cms.v1.ArticleIndexResponse.Item)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string lang = 2;
  if (!this->_internal_lang().empty()) {
    const std::string& _s = this->_internal_lang();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.cms.v1.ArticleIndexResponse.Item.lang");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string title = 3;
  if (!this->_internal_title().empty()) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.cms.v1.ArticleIndexResponse.Item.title");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string summary = 4;
  if (!this->_internal_summary().empty()) {
    const std::string& _s = this->_internal_summary();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.cms.v1.ArticleIndexResponse.Item.summary");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.metasequoia.v1.MediaContent body = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::body(this),
        _Internal::body(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 9;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::updated_at(this),
        _Internal::updated_at(this).GetCachedSize(), target, stream);
  }

  // .palm.metasequoia.v1.UserDetail author = 11;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::author(this),
        _Internal::author(this).GetCachedSize(), target, stream);
  }

  // repeated .palm.metasequoia.v1.TagIndexResponse.Item tags = 12;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tags_size()); i < n; i++) {
    const auto& repfield = this->_internal_tags().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(12, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.cms.v1.ArticleIndexResponse.Item)
  return target;
}

::size_t ArticleIndexResponse_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.cms.v1.ArticleIndexResponse.Item)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.metasequoia.v1.TagIndexResponse.Item tags = 12;
  total_size += 1UL * this->_internal_tags_size();
  for (const auto& msg : this->_internal_tags()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string lang = 2;
  if (!this->_internal_lang().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_lang());
  }

  // string title = 3;
  if (!this->_internal_title().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_title());
  }

  // string summary = 4;
  if (!this->_internal_summary().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_summary());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .palm.metasequoia.v1.MediaContent body = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.body_);
    }

    // .google.protobuf.Timestamp updated_at = 9;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.updated_at_);
    }

    // .palm.metasequoia.v1.UserDetail author = 11;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.author_);
    }

  }
  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ArticleIndexResponse_Item::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ArticleIndexResponse_Item::MergeImpl
};
const ::google::protobuf::Message::ClassData*ArticleIndexResponse_Item::GetClassData() const { return &_class_data_; }


void ArticleIndexResponse_Item::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ArticleIndexResponse_Item*>(&to_msg);
  auto& from = static_cast<const ArticleIndexResponse_Item&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.cms.v1.ArticleIndexResponse.Item)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  if (!from._internal_lang().empty()) {
    _this->_internal_set_lang(from._internal_lang());
  }
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_summary().empty()) {
    _this->_internal_set_summary(from._internal_summary());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_body()->::palm::metasequoia::v1::MediaContent::MergeFrom(
          from._internal_body());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_updated_at()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_updated_at());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_author()->::palm::metasequoia::v1::UserDetail::MergeFrom(
          from._internal_author());
    }
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ArticleIndexResponse_Item::CopyFrom(const ArticleIndexResponse_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.cms.v1.ArticleIndexResponse.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ArticleIndexResponse_Item::IsInitialized() const {
  return true;
}

void ArticleIndexResponse_Item::InternalSwap(ArticleIndexResponse_Item* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lang_, lhs_arena,
                                       &other->_impl_.lang_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, lhs_arena,
                                       &other->_impl_.title_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.summary_, lhs_arena,
                                       &other->_impl_.summary_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.id_)
      + sizeof(ArticleIndexResponse_Item::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(ArticleIndexResponse_Item, _impl_.body_)>(
          reinterpret_cast<char*>(&_impl_.body_),
          reinterpret_cast<char*>(&other->_impl_.body_));
}

::google::protobuf::Metadata ArticleIndexResponse_Item::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cms_2eproto_getter, &descriptor_table_cms_2eproto_once,
      file_level_metadata_cms_2eproto[2]);
}
// ===================================================================

class ArticleIndexResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ArticleIndexResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ArticleIndexResponse, _impl_._has_bits_);
  static const ::palm::metasequoia::v1::Pagination& pagination(const ArticleIndexResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::metasequoia::v1::Pagination& ArticleIndexResponse::_Internal::pagination(const ArticleIndexResponse* msg) {
  return *msg->_impl_.pagination_;
}
void ArticleIndexResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ArticleIndexResponse::ArticleIndexResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.cms.v1.ArticleIndexResponse)
}
ArticleIndexResponse::ArticleIndexResponse(const ArticleIndexResponse& from) : ::google::protobuf::Message() {
  ArticleIndexResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.items_){from._impl_.items_},
      decltype(_impl_.pagination_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::palm::metasequoia::v1::Pagination(*from._impl_.pagination_);
  }

  // @@protoc_insertion_point(copy_constructor:palm.cms.v1.ArticleIndexResponse)
}
inline void ArticleIndexResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.items_){arena},
      decltype(_impl_.pagination_){nullptr},
  };
}
ArticleIndexResponse::~ArticleIndexResponse() {
  // @@protoc_insertion_point(destructor:palm.cms.v1.ArticleIndexResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ArticleIndexResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}
void ArticleIndexResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ArticleIndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.cms.v1.ArticleIndexResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_items()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ArticleIndexResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> ArticleIndexResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ArticleIndexResponse, _impl_._has_bits_),
    0, // no _extensions_
    9, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967038,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ArticleIndexResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .palm.cms.v1.ArticleIndexResponse.Item items = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ArticleIndexResponse, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .palm.cms.v1.ArticleIndexResponse.Item items = 1;
    {PROTOBUF_FIELD_OFFSET(ArticleIndexResponse, _impl_.items_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .palm.metasequoia.v1.Pagination pagination = 9;
    {PROTOBUF_FIELD_OFFSET(ArticleIndexResponse, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::cms::v1::ArticleIndexResponse_Item>()},
    {::_pbi::TcParser::GetTable<::palm::metasequoia::v1::Pagination>()},
  }}, {{
  }},
};

::uint8_t* ArticleIndexResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.cms.v1.ArticleIndexResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .palm.cms.v1.ArticleIndexResponse.Item items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.metasequoia.v1.Pagination pagination = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.cms.v1.ArticleIndexResponse)
  return target;
}

::size_t ArticleIndexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.cms.v1.ArticleIndexResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.cms.v1.ArticleIndexResponse.Item items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_internal_items()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .palm.metasequoia.v1.Pagination pagination = 9;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ArticleIndexResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ArticleIndexResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*ArticleIndexResponse::GetClassData() const { return &_class_data_; }


void ArticleIndexResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ArticleIndexResponse*>(&to_msg);
  auto& from = static_cast<const ArticleIndexResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.cms.v1.ArticleIndexResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(from._internal_items());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::palm::metasequoia::v1::Pagination::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ArticleIndexResponse::CopyFrom(const ArticleIndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.cms.v1.ArticleIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ArticleIndexResponse::IsInitialized() const {
  return true;
}

void ArticleIndexResponse::InternalSwap(ArticleIndexResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata ArticleIndexResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cms_2eproto_getter, &descriptor_table_cms_2eproto_once,
      file_level_metadata_cms_2eproto[3]);
}
// ===================================================================

class ArticleShowResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ArticleShowResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ArticleShowResponse, _impl_._has_bits_);
  static const ::palm::cms::v1::ArticleIndexResponse_Item& item(const ArticleShowResponse* msg);
  static void set_has_item(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::cms::v1::ArticleIndexResponse_Item& ArticleShowResponse::_Internal::item(const ArticleShowResponse* msg) {
  return *msg->_impl_.item_;
}
ArticleShowResponse::ArticleShowResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.cms.v1.ArticleShowResponse)
}
ArticleShowResponse::ArticleShowResponse(const ArticleShowResponse& from) : ::google::protobuf::Message() {
  ArticleShowResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.comments_){from._impl_.comments_},
      decltype(_impl_.item_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.item_ = new ::palm::cms::v1::ArticleIndexResponse_Item(*from._impl_.item_);
  }

  // @@protoc_insertion_point(copy_constructor:palm.cms.v1.ArticleShowResponse)
}
inline void ArticleShowResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.comments_){arena},
      decltype(_impl_.item_){nullptr},
  };
}
ArticleShowResponse::~ArticleShowResponse() {
  // @@protoc_insertion_point(destructor:palm.cms.v1.ArticleShowResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ArticleShowResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.comments_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.item_;
}
void ArticleShowResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ArticleShowResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.cms.v1.ArticleShowResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_comments()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.item_ != nullptr);
    _impl_.item_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ArticleShowResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ArticleShowResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ArticleShowResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ArticleShowResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .palm.cms.v1.CommentIndexResponse.Item comments = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ArticleShowResponse, _impl_.comments_)}},
    // .palm.cms.v1.ArticleIndexResponse.Item item = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ArticleShowResponse, _impl_.item_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .palm.cms.v1.ArticleIndexResponse.Item item = 1;
    {PROTOBUF_FIELD_OFFSET(ArticleShowResponse, _impl_.item_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .palm.cms.v1.CommentIndexResponse.Item comments = 2;
    {PROTOBUF_FIELD_OFFSET(ArticleShowResponse, _impl_.comments_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::cms::v1::ArticleIndexResponse_Item>()},
    {::_pbi::TcParser::GetTable<::palm::cms::v1::CommentIndexResponse_Item>()},
  }}, {{
  }},
};

::uint8_t* ArticleShowResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.cms.v1.ArticleShowResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.cms.v1.ArticleIndexResponse.Item item = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  // repeated .palm.cms.v1.CommentIndexResponse.Item comments = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_comments_size()); i < n; i++) {
    const auto& repfield = this->_internal_comments().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.cms.v1.ArticleShowResponse)
  return target;
}

::size_t ArticleShowResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.cms.v1.ArticleShowResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.cms.v1.CommentIndexResponse.Item comments = 2;
  total_size += 1UL * this->_internal_comments_size();
  for (const auto& msg : this->_internal_comments()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .palm.cms.v1.ArticleIndexResponse.Item item = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ArticleShowResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ArticleShowResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*ArticleShowResponse::GetClassData() const { return &_class_data_; }


void ArticleShowResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ArticleShowResponse*>(&to_msg);
  auto& from = static_cast<const ArticleShowResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.cms.v1.ArticleShowResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_comments()->MergeFrom(from._internal_comments());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_item()->::palm::cms::v1::ArticleIndexResponse_Item::MergeFrom(
        from._internal_item());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ArticleShowResponse::CopyFrom(const ArticleShowResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.cms.v1.ArticleShowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ArticleShowResponse::IsInitialized() const {
  return true;
}

void ArticleShowResponse::InternalSwap(ArticleShowResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.comments_.InternalSwap(&other->_impl_.comments_);
  swap(_impl_.item_, other->_impl_.item_);
}

::google::protobuf::Metadata ArticleShowResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cms_2eproto_getter, &descriptor_table_cms_2eproto_once,
      file_level_metadata_cms_2eproto[4]);
}
// ===================================================================

class CommentCreateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CommentCreateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CommentCreateRequest, _impl_._has_bits_);
  static const ::palm::metasequoia::v1::MediaContent& body(const CommentCreateRequest* msg);
  static void set_has_body(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::metasequoia::v1::MediaContent& CommentCreateRequest::_Internal::body(const CommentCreateRequest* msg) {
  return *msg->_impl_.body_;
}
void CommentCreateRequest::clear_body() {
  if (_impl_.body_ != nullptr) _impl_.body_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CommentCreateRequest::CommentCreateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.cms.v1.CommentCreateRequest)
}
CommentCreateRequest::CommentCreateRequest(const CommentCreateRequest& from) : ::google::protobuf::Message() {
  CommentCreateRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.body_){nullptr},
      decltype(_impl_.article_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.body_ = new ::palm::metasequoia::v1::MediaContent(*from._impl_.body_);
  }
  _this->_impl_.article_ = from._impl_.article_;

  // @@protoc_insertion_point(copy_constructor:palm.cms.v1.CommentCreateRequest)
}
inline void CommentCreateRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.body_){nullptr},
      decltype(_impl_.article_){0},
  };
}
CommentCreateRequest::~CommentCreateRequest() {
  // @@protoc_insertion_point(destructor:palm.cms.v1.CommentCreateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommentCreateRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.body_;
}
void CommentCreateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CommentCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.cms.v1.CommentCreateRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.body_ != nullptr);
    _impl_.body_->Clear();
  }
  _impl_.article_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CommentCreateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CommentCreateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CommentCreateRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CommentCreateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .palm.metasequoia.v1.MediaContent body = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CommentCreateRequest, _impl_.body_)}},
    // int32 article = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommentCreateRequest, _impl_.article_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CommentCreateRequest, _impl_.article_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 article = 1;
    {PROTOBUF_FIELD_OFFSET(CommentCreateRequest, _impl_.article_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .palm.metasequoia.v1.MediaContent body = 2;
    {PROTOBUF_FIELD_OFFSET(CommentCreateRequest, _impl_.body_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::metasequoia::v1::MediaContent>()},
  }}, {{
  }},
};

::uint8_t* CommentCreateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.cms.v1.CommentCreateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 article = 1;
  if (this->_internal_article() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_article(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.metasequoia.v1.MediaContent body = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::body(this),
        _Internal::body(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.cms.v1.CommentCreateRequest)
  return target;
}

::size_t CommentCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.cms.v1.CommentCreateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .palm.metasequoia.v1.MediaContent body = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.body_);
  }

  // int32 article = 1;
  if (this->_internal_article() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_article());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CommentCreateRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CommentCreateRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*CommentCreateRequest::GetClassData() const { return &_class_data_; }


void CommentCreateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CommentCreateRequest*>(&to_msg);
  auto& from = static_cast<const CommentCreateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.cms.v1.CommentCreateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_body()->::palm::metasequoia::v1::MediaContent::MergeFrom(
        from._internal_body());
  }
  if (from._internal_article() != 0) {
    _this->_internal_set_article(from._internal_article());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommentCreateRequest::CopyFrom(const CommentCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.cms.v1.CommentCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CommentCreateRequest::IsInitialized() const {
  return true;
}

void CommentCreateRequest::InternalSwap(CommentCreateRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommentCreateRequest, _impl_.article_)
      + sizeof(CommentCreateRequest::_impl_.article_)
      - PROTOBUF_FIELD_OFFSET(CommentCreateRequest, _impl_.body_)>(
          reinterpret_cast<char*>(&_impl_.body_),
          reinterpret_cast<char*>(&other->_impl_.body_));
}

::google::protobuf::Metadata CommentCreateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cms_2eproto_getter, &descriptor_table_cms_2eproto_once,
      file_level_metadata_cms_2eproto[5]);
}
// ===================================================================

class CommentUpdateRequest::_Internal {
 public:
};

CommentUpdateRequest::CommentUpdateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.cms.v1.CommentUpdateRequest)
}
CommentUpdateRequest::CommentUpdateRequest(const CommentUpdateRequest& from) : ::google::protobuf::Message() {
  CommentUpdateRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.body_){},
      decltype(_impl_.id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.body_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.body_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_body().empty()) {
    _this->_impl_.body_.Set(from._internal_body(), _this->GetArenaForAllocation());
  }
  _this->_impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:palm.cms.v1.CommentUpdateRequest)
}
inline void CommentUpdateRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.body_){},
      decltype(_impl_.id_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.body_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.body_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CommentUpdateRequest::~CommentUpdateRequest() {
  // @@protoc_insertion_point(destructor:palm.cms.v1.CommentUpdateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommentUpdateRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.body_.Destroy();
}
void CommentUpdateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CommentUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.cms.v1.CommentUpdateRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.body_.ClearToEmpty();
  _impl_.id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CommentUpdateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 45, 2> CommentUpdateRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CommentUpdateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string body = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CommentUpdateRequest, _impl_.body_)}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommentUpdateRequest, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CommentUpdateRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(CommentUpdateRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string body = 2;
    {PROTOBUF_FIELD_OFFSET(CommentUpdateRequest, _impl_.body_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\0\4\0\0\0\0\0"
    "palm.cms.v1.CommentUpdateRequest"
    "body"
  }},
};

::uint8_t* CommentUpdateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.cms.v1.CommentUpdateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string body = 2;
  if (!this->_internal_body().empty()) {
    const std::string& _s = this->_internal_body();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.cms.v1.CommentUpdateRequest.body");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.cms.v1.CommentUpdateRequest)
  return target;
}

::size_t CommentUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.cms.v1.CommentUpdateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string body = 2;
  if (!this->_internal_body().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_body());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CommentUpdateRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CommentUpdateRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*CommentUpdateRequest::GetClassData() const { return &_class_data_; }


void CommentUpdateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CommentUpdateRequest*>(&to_msg);
  auto& from = static_cast<const CommentUpdateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.cms.v1.CommentUpdateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_body().empty()) {
    _this->_internal_set_body(from._internal_body());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommentUpdateRequest::CopyFrom(const CommentUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.cms.v1.CommentUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CommentUpdateRequest::IsInitialized() const {
  return true;
}

void CommentUpdateRequest::InternalSwap(CommentUpdateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, lhs_arena,
                                       &other->_impl_.body_, rhs_arena);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata CommentUpdateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cms_2eproto_getter, &descriptor_table_cms_2eproto_once,
      file_level_metadata_cms_2eproto[6]);
}
// ===================================================================

class CommentIndexResponse_Item::_Internal {
 public:
  using HasBits = decltype(std::declval<CommentIndexResponse_Item>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CommentIndexResponse_Item, _impl_._has_bits_);
  static const ::palm::metasequoia::v1::MediaContent& body(const CommentIndexResponse_Item* msg);
  static void set_has_body(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& updated_at(const CommentIndexResponse_Item* msg);
  static void set_has_updated_at(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::palm::metasequoia::v1::UserDetail& author(const CommentIndexResponse_Item* msg);
  static void set_has_author(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::palm::metasequoia::v1::MediaContent& CommentIndexResponse_Item::_Internal::body(const CommentIndexResponse_Item* msg) {
  return *msg->_impl_.body_;
}
const ::google::protobuf::Timestamp& CommentIndexResponse_Item::_Internal::updated_at(const CommentIndexResponse_Item* msg) {
  return *msg->_impl_.updated_at_;
}
const ::palm::metasequoia::v1::UserDetail& CommentIndexResponse_Item::_Internal::author(const CommentIndexResponse_Item* msg) {
  return *msg->_impl_.author_;
}
void CommentIndexResponse_Item::clear_body() {
  if (_impl_.body_ != nullptr) _impl_.body_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CommentIndexResponse_Item::clear_updated_at() {
  if (_impl_.updated_at_ != nullptr) _impl_.updated_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CommentIndexResponse_Item::clear_author() {
  if (_impl_.author_ != nullptr) _impl_.author_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
CommentIndexResponse_Item::CommentIndexResponse_Item(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.cms.v1.CommentIndexResponse.Item)
}
CommentIndexResponse_Item::CommentIndexResponse_Item(const CommentIndexResponse_Item& from) : ::google::protobuf::Message() {
  CommentIndexResponse_Item* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.body_){nullptr},
      decltype(_impl_.updated_at_){nullptr},
      decltype(_impl_.author_){nullptr},
      decltype(_impl_.id_){},
      decltype(_impl_.article_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.body_ = new ::palm::metasequoia::v1::MediaContent(*from._impl_.body_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.updated_at_ = new ::google::protobuf::Timestamp(*from._impl_.updated_at_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.author_ = new ::palm::metasequoia::v1::UserDetail(*from._impl_.author_);
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.article_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.article_));

  // @@protoc_insertion_point(copy_constructor:palm.cms.v1.CommentIndexResponse.Item)
}
inline void CommentIndexResponse_Item::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.body_){nullptr},
      decltype(_impl_.updated_at_){nullptr},
      decltype(_impl_.author_){nullptr},
      decltype(_impl_.id_){0},
      decltype(_impl_.article_){0},
  };
}
CommentIndexResponse_Item::~CommentIndexResponse_Item() {
  // @@protoc_insertion_point(destructor:palm.cms.v1.CommentIndexResponse.Item)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommentIndexResponse_Item::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.body_;
  if (this != internal_default_instance()) delete _impl_.updated_at_;
  if (this != internal_default_instance()) delete _impl_.author_;
}
void CommentIndexResponse_Item::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CommentIndexResponse_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.cms.v1.CommentIndexResponse.Item)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.body_ != nullptr);
      _impl_.body_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.updated_at_ != nullptr);
      _impl_.updated_at_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.author_ != nullptr);
      _impl_.author_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.article_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.article_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CommentIndexResponse_Item::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 3, 0, 2> CommentIndexResponse_Item::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CommentIndexResponse_Item, _impl_._has_bits_),
    0, // no _extensions_
    11, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966008,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CommentIndexResponse_Item_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommentIndexResponse_Item, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CommentIndexResponse_Item, _impl_.id_)}},
    // int32 article = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommentIndexResponse_Item, _impl_.article_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CommentIndexResponse_Item, _impl_.article_)}},
    // .palm.metasequoia.v1.MediaContent body = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CommentIndexResponse_Item, _impl_.body_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(CommentIndexResponse_Item, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 article = 2;
    {PROTOBUF_FIELD_OFFSET(CommentIndexResponse_Item, _impl_.article_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .palm.metasequoia.v1.MediaContent body = 3;
    {PROTOBUF_FIELD_OFFSET(CommentIndexResponse_Item, _impl_.body_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp updated_at = 9;
    {PROTOBUF_FIELD_OFFSET(CommentIndexResponse_Item, _impl_.updated_at_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .palm.metasequoia.v1.UserDetail author = 11;
    {PROTOBUF_FIELD_OFFSET(CommentIndexResponse_Item, _impl_.author_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::metasequoia::v1::MediaContent>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::palm::metasequoia::v1::UserDetail>()},
  }}, {{
  }},
};

::uint8_t* CommentIndexResponse_Item::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.cms.v1.CommentIndexResponse.Item)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // int32 article = 2;
  if (this->_internal_article() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_article(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.metasequoia.v1.MediaContent body = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::body(this),
        _Internal::body(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 9;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::updated_at(this),
        _Internal::updated_at(this).GetCachedSize(), target, stream);
  }

  // .palm.metasequoia.v1.UserDetail author = 11;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::author(this),
        _Internal::author(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.cms.v1.CommentIndexResponse.Item)
  return target;
}

::size_t CommentIndexResponse_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.cms.v1.CommentIndexResponse.Item)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .palm.metasequoia.v1.MediaContent body = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.body_);
    }

    // .google.protobuf.Timestamp updated_at = 9;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.updated_at_);
    }

    // .palm.metasequoia.v1.UserDetail author = 11;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.author_);
    }

  }
  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  // int32 article = 2;
  if (this->_internal_article() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_article());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CommentIndexResponse_Item::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CommentIndexResponse_Item::MergeImpl
};
const ::google::protobuf::Message::ClassData*CommentIndexResponse_Item::GetClassData() const { return &_class_data_; }


void CommentIndexResponse_Item::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CommentIndexResponse_Item*>(&to_msg);
  auto& from = static_cast<const CommentIndexResponse_Item&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.cms.v1.CommentIndexResponse.Item)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_body()->::palm::metasequoia::v1::MediaContent::MergeFrom(
          from._internal_body());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_updated_at()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_updated_at());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_author()->::palm::metasequoia::v1::UserDetail::MergeFrom(
          from._internal_author());
    }
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_article() != 0) {
    _this->_internal_set_article(from._internal_article());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommentIndexResponse_Item::CopyFrom(const CommentIndexResponse_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.cms.v1.CommentIndexResponse.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CommentIndexResponse_Item::IsInitialized() const {
  return true;
}

void CommentIndexResponse_Item::InternalSwap(CommentIndexResponse_Item* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommentIndexResponse_Item, _impl_.article_)
      + sizeof(CommentIndexResponse_Item::_impl_.article_)
      - PROTOBUF_FIELD_OFFSET(CommentIndexResponse_Item, _impl_.body_)>(
          reinterpret_cast<char*>(&_impl_.body_),
          reinterpret_cast<char*>(&other->_impl_.body_));
}

::google::protobuf::Metadata CommentIndexResponse_Item::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cms_2eproto_getter, &descriptor_table_cms_2eproto_once,
      file_level_metadata_cms_2eproto[7]);
}
// ===================================================================

class CommentIndexResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CommentIndexResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CommentIndexResponse, _impl_._has_bits_);
  static const ::palm::metasequoia::v1::Pagination& pagination(const CommentIndexResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::metasequoia::v1::Pagination& CommentIndexResponse::_Internal::pagination(const CommentIndexResponse* msg) {
  return *msg->_impl_.pagination_;
}
void CommentIndexResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CommentIndexResponse::CommentIndexResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.cms.v1.CommentIndexResponse)
}
CommentIndexResponse::CommentIndexResponse(const CommentIndexResponse& from) : ::google::protobuf::Message() {
  CommentIndexResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.items_){from._impl_.items_},
      decltype(_impl_.pagination_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::palm::metasequoia::v1::Pagination(*from._impl_.pagination_);
  }

  // @@protoc_insertion_point(copy_constructor:palm.cms.v1.CommentIndexResponse)
}
inline void CommentIndexResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.items_){arena},
      decltype(_impl_.pagination_){nullptr},
  };
}
CommentIndexResponse::~CommentIndexResponse() {
  // @@protoc_insertion_point(destructor:palm.cms.v1.CommentIndexResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommentIndexResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}
void CommentIndexResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CommentIndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.cms.v1.CommentIndexResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_items()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CommentIndexResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> CommentIndexResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CommentIndexResponse, _impl_._has_bits_),
    0, // no _extensions_
    9, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967038,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CommentIndexResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .palm.cms.v1.CommentIndexResponse.Item items = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CommentIndexResponse, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .palm.cms.v1.CommentIndexResponse.Item items = 1;
    {PROTOBUF_FIELD_OFFSET(CommentIndexResponse, _impl_.items_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .palm.metasequoia.v1.Pagination pagination = 9;
    {PROTOBUF_FIELD_OFFSET(CommentIndexResponse, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::cms::v1::CommentIndexResponse_Item>()},
    {::_pbi::TcParser::GetTable<::palm::metasequoia::v1::Pagination>()},
  }}, {{
  }},
};

::uint8_t* CommentIndexResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.cms.v1.CommentIndexResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .palm.cms.v1.CommentIndexResponse.Item items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.metasequoia.v1.Pagination pagination = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.cms.v1.CommentIndexResponse)
  return target;
}

::size_t CommentIndexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.cms.v1.CommentIndexResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.cms.v1.CommentIndexResponse.Item items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_internal_items()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .palm.metasequoia.v1.Pagination pagination = 9;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CommentIndexResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CommentIndexResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CommentIndexResponse::GetClassData() const { return &_class_data_; }


void CommentIndexResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CommentIndexResponse*>(&to_msg);
  auto& from = static_cast<const CommentIndexResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.cms.v1.CommentIndexResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(from._internal_items());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::palm::metasequoia::v1::Pagination::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommentIndexResponse::CopyFrom(const CommentIndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.cms.v1.CommentIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CommentIndexResponse::IsInitialized() const {
  return true;
}

void CommentIndexResponse::InternalSwap(CommentIndexResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata CommentIndexResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cms_2eproto_getter, &descriptor_table_cms_2eproto_once,
      file_level_metadata_cms_2eproto[8]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace cms
}  // namespace palm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
