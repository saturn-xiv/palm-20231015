// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metasequoia.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_metasequoia_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_metasequoia_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "google/protobuf/duration.pb.h"
#include "orchid.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_metasequoia_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_metasequoia_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_metasequoia_2eproto;
namespace palm {
namespace metasequoia {
namespace v1 {
class AttachmentIndexResponse;
struct AttachmentIndexResponseDefaultTypeInternal;
extern AttachmentIndexResponseDefaultTypeInternal _AttachmentIndexResponse_default_instance_;
class AttachmentIndexResponse_Item;
struct AttachmentIndexResponse_ItemDefaultTypeInternal;
extern AttachmentIndexResponse_ItemDefaultTypeInternal _AttachmentIndexResponse_Item_default_instance_;
class AttachmentShowRequest;
struct AttachmentShowRequestDefaultTypeInternal;
extern AttachmentShowRequestDefaultTypeInternal _AttachmentShowRequest_default_instance_;
class AttachmentShowResponse;
struct AttachmentShowResponseDefaultTypeInternal;
extern AttachmentShowResponseDefaultTypeInternal _AttachmentShowResponse_default_instance_;
class BaiduProfile;
struct BaiduProfileDefaultTypeInternal;
extern BaiduProfileDefaultTypeInternal _BaiduProfile_default_instance_;
class BaiduProfile_SiteVerify;
struct BaiduProfile_SiteVerifyDefaultTypeInternal;
extern BaiduProfile_SiteVerifyDefaultTypeInternal _BaiduProfile_SiteVerify_default_instance_;
class CategoryCreateRequest;
struct CategoryCreateRequestDefaultTypeInternal;
extern CategoryCreateRequestDefaultTypeInternal _CategoryCreateRequest_default_instance_;
class CategoryIndexResponse;
struct CategoryIndexResponseDefaultTypeInternal;
extern CategoryIndexResponseDefaultTypeInternal _CategoryIndexResponse_default_instance_;
class CategoryIndexResponse_Item;
struct CategoryIndexResponse_ItemDefaultTypeInternal;
extern CategoryIndexResponse_ItemDefaultTypeInternal _CategoryIndexResponse_Item_default_instance_;
class CategoryUpdateRequest;
struct CategoryUpdateRequestDefaultTypeInternal;
extern CategoryUpdateRequestDefaultTypeInternal _CategoryUpdateRequest_default_instance_;
class EmailTask;
struct EmailTaskDefaultTypeInternal;
extern EmailTaskDefaultTypeInternal _EmailTask_default_instance_;
class EmailTask_Address;
struct EmailTask_AddressDefaultTypeInternal;
extern EmailTask_AddressDefaultTypeInternal _EmailTask_Address_default_instance_;
class EmailTask_Attachment;
struct EmailTask_AttachmentDefaultTypeInternal;
extern EmailTask_AttachmentDefaultTypeInternal _EmailTask_Attachment_default_instance_;
class EmailTask_Body;
struct EmailTask_BodyDefaultTypeInternal;
extern EmailTask_BodyDefaultTypeInternal _EmailTask_Body_default_instance_;
class GoogleProfile;
struct GoogleProfileDefaultTypeInternal;
extern GoogleProfileDefaultTypeInternal _GoogleProfile_default_instance_;
class GoogleProfile_ReCaptcha;
struct GoogleProfile_ReCaptchaDefaultTypeInternal;
extern GoogleProfile_ReCaptchaDefaultTypeInternal _GoogleProfile_ReCaptcha_default_instance_;
class GoogleSignInUrlRequest;
struct GoogleSignInUrlRequestDefaultTypeInternal;
extern GoogleSignInUrlRequestDefaultTypeInternal _GoogleSignInUrlRequest_default_instance_;
class GoogleSignInUrlResponse;
struct GoogleSignInUrlResponseDefaultTypeInternal;
extern GoogleSignInUrlResponseDefaultTypeInternal _GoogleSignInUrlResponse_default_instance_;
class IdRequest;
struct IdRequestDefaultTypeInternal;
extern IdRequestDefaultTypeInternal _IdRequest_default_instance_;
class IndexNowPingRequest;
struct IndexNowPingRequestDefaultTypeInternal;
extern IndexNowPingRequestDefaultTypeInternal _IndexNowPingRequest_default_instance_;
class IndexNowProfile;
struct IndexNowProfileDefaultTypeInternal;
extern IndexNowProfileDefaultTypeInternal _IndexNowProfile_default_instance_;
class LeaveWordIndexResponse;
struct LeaveWordIndexResponseDefaultTypeInternal;
extern LeaveWordIndexResponseDefaultTypeInternal _LeaveWordIndexResponse_default_instance_;
class LeaveWordIndexResponse_Item;
struct LeaveWordIndexResponse_ItemDefaultTypeInternal;
extern LeaveWordIndexResponse_ItemDefaultTypeInternal _LeaveWordIndexResponse_Item_default_instance_;
class LocaleByLangRequest;
struct LocaleByLangRequestDefaultTypeInternal;
extern LocaleByLangRequestDefaultTypeInternal _LocaleByLangRequest_default_instance_;
class LocaleGetRequest;
struct LocaleGetRequestDefaultTypeInternal;
extern LocaleGetRequestDefaultTypeInternal _LocaleGetRequest_default_instance_;
class LocaleSetRequest;
struct LocaleSetRequestDefaultTypeInternal;
extern LocaleSetRequestDefaultTypeInternal _LocaleSetRequest_default_instance_;
class LocalesResponse;
struct LocalesResponseDefaultTypeInternal;
extern LocalesResponseDefaultTypeInternal _LocalesResponse_default_instance_;
class LocalesResponse_Item;
struct LocalesResponse_ItemDefaultTypeInternal;
extern LocalesResponse_ItemDefaultTypeInternal _LocalesResponse_Item_default_instance_;
class MediaContent;
struct MediaContentDefaultTypeInternal;
extern MediaContentDefaultTypeInternal _MediaContent_default_instance_;
class NotificationCreateRequest;
struct NotificationCreateRequestDefaultTypeInternal;
extern NotificationCreateRequestDefaultTypeInternal _NotificationCreateRequest_default_instance_;
class NotificationIndexResponse;
struct NotificationIndexResponseDefaultTypeInternal;
extern NotificationIndexResponseDefaultTypeInternal _NotificationIndexResponse_default_instance_;
class NotificationIndexResponse_Item;
struct NotificationIndexResponse_ItemDefaultTypeInternal;
extern NotificationIndexResponse_ItemDefaultTypeInternal _NotificationIndexResponse_Item_default_instance_;
class NotificationUpdateRequest;
struct NotificationUpdateRequestDefaultTypeInternal;
extern NotificationUpdateRequestDefaultTypeInternal _NotificationUpdateRequest_default_instance_;
class Oauth2State;
struct Oauth2StateDefaultTypeInternal;
extern Oauth2StateDefaultTypeInternal _Oauth2State_default_instance_;
class Pager;
struct PagerDefaultTypeInternal;
extern PagerDefaultTypeInternal _Pager_default_instance_;
class Pagination;
struct PaginationDefaultTypeInternal;
extern PaginationDefaultTypeInternal _Pagination_default_instance_;
class Permission;
struct PermissionDefaultTypeInternal;
extern PermissionDefaultTypeInternal _Permission_default_instance_;
class RbacCanRequest;
struct RbacCanRequestDefaultTypeInternal;
extern RbacCanRequestDefaultTypeInternal _RbacCanRequest_default_instance_;
class RbacHasRequest;
struct RbacHasRequestDefaultTypeInternal;
extern RbacHasRequestDefaultTypeInternal _RbacHasRequest_default_instance_;
class RbacPermissionItem;
struct RbacPermissionItemDefaultTypeInternal;
extern RbacPermissionItemDefaultTypeInternal _RbacPermissionItem_default_instance_;
class RbacPermissionsForRoleRequest;
struct RbacPermissionsForRoleRequestDefaultTypeInternal;
extern RbacPermissionsForRoleRequestDefaultTypeInternal _RbacPermissionsForRoleRequest_default_instance_;
class RbacPermissionsForUserRequest;
struct RbacPermissionsForUserRequestDefaultTypeInternal;
extern RbacPermissionsForUserRequestDefaultTypeInternal _RbacPermissionsForUserRequest_default_instance_;
class RbacPermissionsResponse;
struct RbacPermissionsResponseDefaultTypeInternal;
extern RbacPermissionsResponseDefaultTypeInternal _RbacPermissionsResponse_default_instance_;
class RbacRolesForUserRequest;
struct RbacRolesForUserRequestDefaultTypeInternal;
extern RbacRolesForUserRequestDefaultTypeInternal _RbacRolesForUserRequest_default_instance_;
class RbacRolesResponse;
struct RbacRolesResponseDefaultTypeInternal;
extern RbacRolesResponseDefaultTypeInternal _RbacRolesResponse_default_instance_;
class Resource;
struct ResourceDefaultTypeInternal;
extern ResourceDefaultTypeInternal _Resource_default_instance_;
class Role;
struct RoleDefaultTypeInternal;
extern RoleDefaultTypeInternal _Role_default_instance_;
class Role_Member;
struct Role_MemberDefaultTypeInternal;
extern Role_MemberDefaultTypeInternal _Role_Member_default_instance_;
class SettingByUserRequest;
struct SettingByUserRequestDefaultTypeInternal;
extern SettingByUserRequestDefaultTypeInternal _SettingByUserRequest_default_instance_;
class SettingGetRequest;
struct SettingGetRequestDefaultTypeInternal;
extern SettingGetRequestDefaultTypeInternal _SettingGetRequest_default_instance_;
class SettingSetRequest;
struct SettingSetRequestDefaultTypeInternal;
extern SettingSetRequestDefaultTypeInternal _SettingSetRequest_default_instance_;
class SettingsResponse;
struct SettingsResponseDefaultTypeInternal;
extern SettingsResponseDefaultTypeInternal _SettingsResponse_default_instance_;
class SettingsResponse_Item;
struct SettingsResponse_ItemDefaultTypeInternal;
extern SettingsResponse_ItemDefaultTypeInternal _SettingsResponse_Item_default_instance_;
class ShorterLinkCreateRequest;
struct ShorterLinkCreateRequestDefaultTypeInternal;
extern ShorterLinkCreateRequestDefaultTypeInternal _ShorterLinkCreateRequest_default_instance_;
class ShorterLinkIndexResponse;
struct ShorterLinkIndexResponseDefaultTypeInternal;
extern ShorterLinkIndexResponseDefaultTypeInternal _ShorterLinkIndexResponse_default_instance_;
class ShorterLinkIndexResponse_Item;
struct ShorterLinkIndexResponse_ItemDefaultTypeInternal;
extern ShorterLinkIndexResponse_ItemDefaultTypeInternal _ShorterLinkIndexResponse_Item_default_instance_;
class ShorterLinkUpdateRequest;
struct ShorterLinkUpdateRequestDefaultTypeInternal;
extern ShorterLinkUpdateRequestDefaultTypeInternal _ShorterLinkUpdateRequest_default_instance_;
class SignInByGoogleRequest;
struct SignInByGoogleRequestDefaultTypeInternal;
extern SignInByGoogleRequestDefaultTypeInternal _SignInByGoogleRequest_default_instance_;
class SignInByWechatOauth2Request;
struct SignInByWechatOauth2RequestDefaultTypeInternal;
extern SignInByWechatOauth2RequestDefaultTypeInternal _SignInByWechatOauth2Request_default_instance_;
class SiteInstallRequest;
struct SiteInstallRequestDefaultTypeInternal;
extern SiteInstallRequestDefaultTypeInternal _SiteInstallRequest_default_instance_;
class SiteLayoutResponse;
struct SiteLayoutResponseDefaultTypeInternal;
extern SiteLayoutResponseDefaultTypeInternal _SiteLayoutResponse_default_instance_;
class SiteLayoutResponse_Author;
struct SiteLayoutResponse_AuthorDefaultTypeInternal;
extern SiteLayoutResponse_AuthorDefaultTypeInternal _SiteLayoutResponse_Author_default_instance_;
class SiteMaintenanceModeRequest;
struct SiteMaintenanceModeRequestDefaultTypeInternal;
extern SiteMaintenanceModeRequestDefaultTypeInternal _SiteMaintenanceModeRequest_default_instance_;
class SiteSetCopyrightRequest;
struct SiteSetCopyrightRequestDefaultTypeInternal;
extern SiteSetCopyrightRequestDefaultTypeInternal _SiteSetCopyrightRequest_default_instance_;
class SiteSetInfoRequest;
struct SiteSetInfoRequestDefaultTypeInternal;
extern SiteSetInfoRequestDefaultTypeInternal _SiteSetInfoRequest_default_instance_;
class SiteSetKeywordsRequest;
struct SiteSetKeywordsRequestDefaultTypeInternal;
extern SiteSetKeywordsRequestDefaultTypeInternal _SiteSetKeywordsRequest_default_instance_;
class SiteSetLogoRequest;
struct SiteSetLogoRequestDefaultTypeInternal;
extern SiteSetLogoRequestDefaultTypeInternal _SiteSetLogoRequest_default_instance_;
class SiteSmtpPingRequest;
struct SiteSmtpPingRequestDefaultTypeInternal;
extern SiteSmtpPingRequestDefaultTypeInternal _SiteSmtpPingRequest_default_instance_;
class SiteStatusResponse;
struct SiteStatusResponseDefaultTypeInternal;
extern SiteStatusResponseDefaultTypeInternal _SiteStatusResponse_default_instance_;
class SiteStatusResponse_Database;
struct SiteStatusResponse_DatabaseDefaultTypeInternal;
extern SiteStatusResponse_DatabaseDefaultTypeInternal _SiteStatusResponse_Database_default_instance_;
class SiteStatusResponse_Health;
struct SiteStatusResponse_HealthDefaultTypeInternal;
extern SiteStatusResponse_HealthDefaultTypeInternal _SiteStatusResponse_Health_default_instance_;
class SiteStatusResponse_MySql;
struct SiteStatusResponse_MySqlDefaultTypeInternal;
extern SiteStatusResponse_MySqlDefaultTypeInternal _SiteStatusResponse_MySql_default_instance_;
class SiteStatusResponse_OpenSearch;
struct SiteStatusResponse_OpenSearchDefaultTypeInternal;
extern SiteStatusResponse_OpenSearchDefaultTypeInternal _SiteStatusResponse_OpenSearch_default_instance_;
class SiteStatusResponse_PostgreSql;
struct SiteStatusResponse_PostgreSqlDefaultTypeInternal;
extern SiteStatusResponse_PostgreSqlDefaultTypeInternal _SiteStatusResponse_PostgreSql_default_instance_;
class SiteStatusResponse_RabbitMq;
struct SiteStatusResponse_RabbitMqDefaultTypeInternal;
extern SiteStatusResponse_RabbitMqDefaultTypeInternal _SiteStatusResponse_RabbitMq_default_instance_;
class SiteStatusResponse_Redis;
struct SiteStatusResponse_RedisDefaultTypeInternal;
extern SiteStatusResponse_RedisDefaultTypeInternal _SiteStatusResponse_Redis_default_instance_;
class SiteStatusResponse_Redis_Item;
struct SiteStatusResponse_Redis_ItemDefaultTypeInternal;
extern SiteStatusResponse_Redis_ItemDefaultTypeInternal _SiteStatusResponse_Redis_Item_default_instance_;
class SiteStatusResponse_System;
struct SiteStatusResponse_SystemDefaultTypeInternal;
extern SiteStatusResponse_SystemDefaultTypeInternal _SiteStatusResponse_System_default_instance_;
class SiteTwilioPingRequest;
struct SiteTwilioPingRequestDefaultTypeInternal;
extern SiteTwilioPingRequestDefaultTypeInternal _SiteTwilioPingRequest_default_instance_;
class SitemapPingRequest;
struct SitemapPingRequestDefaultTypeInternal;
extern SitemapPingRequestDefaultTypeInternal _SitemapPingRequest_default_instance_;
class SmsTask;
struct SmsTaskDefaultTypeInternal;
extern SmsTaskDefaultTypeInternal _SmsTask_default_instance_;
class SmtpProfile;
struct SmtpProfileDefaultTypeInternal;
extern SmtpProfileDefaultTypeInternal _SmtpProfile_default_instance_;
class TagCreateRequest;
struct TagCreateRequestDefaultTypeInternal;
extern TagCreateRequestDefaultTypeInternal _TagCreateRequest_default_instance_;
class TagIndexResponse;
struct TagIndexResponseDefaultTypeInternal;
extern TagIndexResponseDefaultTypeInternal _TagIndexResponse_default_instance_;
class TagIndexResponse_Item;
struct TagIndexResponse_ItemDefaultTypeInternal;
extern TagIndexResponse_ItemDefaultTypeInternal _TagIndexResponse_Item_default_instance_;
class TagUpdateRequest;
struct TagUpdateRequestDefaultTypeInternal;
extern TagUpdateRequestDefaultTypeInternal _TagUpdateRequest_default_instance_;
class TwilioProfile;
struct TwilioProfileDefaultTypeInternal;
extern TwilioProfileDefaultTypeInternal _TwilioProfile_default_instance_;
class UserChangePasswordRequest;
struct UserChangePasswordRequestDefaultTypeInternal;
extern UserChangePasswordRequestDefaultTypeInternal _UserChangePasswordRequest_default_instance_;
class UserDetail;
struct UserDetailDefaultTypeInternal;
extern UserDetailDefaultTypeInternal _UserDetail_default_instance_;
class UserIndexResponse;
struct UserIndexResponseDefaultTypeInternal;
extern UserIndexResponseDefaultTypeInternal _UserIndexResponse_default_instance_;
class UserIndexResponse_Item;
struct UserIndexResponse_ItemDefaultTypeInternal;
extern UserIndexResponse_ItemDefaultTypeInternal _UserIndexResponse_Item_default_instance_;
class UserLogsRequest;
struct UserLogsRequestDefaultTypeInternal;
extern UserLogsRequestDefaultTypeInternal _UserLogsRequest_default_instance_;
class UserLogsResponse;
struct UserLogsResponseDefaultTypeInternal;
extern UserLogsResponseDefaultTypeInternal _UserLogsResponse_default_instance_;
class UserLogsResponse_Item;
struct UserLogsResponse_ItemDefaultTypeInternal;
extern UserLogsResponse_ItemDefaultTypeInternal _UserLogsResponse_Item_default_instance_;
class UserProfile;
struct UserProfileDefaultTypeInternal;
extern UserProfileDefaultTypeInternal _UserProfile_default_instance_;
class UserProfile_PayloadEntry_DoNotUse;
struct UserProfile_PayloadEntry_DoNotUseDefaultTypeInternal;
extern UserProfile_PayloadEntry_DoNotUseDefaultTypeInternal _UserProfile_PayloadEntry_DoNotUse_default_instance_;
class UserQueryRequest;
struct UserQueryRequestDefaultTypeInternal;
extern UserQueryRequestDefaultTypeInternal _UserQueryRequest_default_instance_;
class UserResetPasswordRequest;
struct UserResetPasswordRequestDefaultTypeInternal;
extern UserResetPasswordRequestDefaultTypeInternal _UserResetPasswordRequest_default_instance_;
class UserSetPasswordRequest;
struct UserSetPasswordRequestDefaultTypeInternal;
extern UserSetPasswordRequestDefaultTypeInternal _UserSetPasswordRequest_default_instance_;
class UserSignInByPasswordRequest;
struct UserSignInByPasswordRequestDefaultTypeInternal;
extern UserSignInByPasswordRequestDefaultTypeInternal _UserSignInByPasswordRequest_default_instance_;
class UserSignInResponse;
struct UserSignInResponseDefaultTypeInternal;
extern UserSignInResponseDefaultTypeInternal _UserSignInResponse_default_instance_;
class UserSignUpByEmailRequest;
struct UserSignUpByEmailRequestDefaultTypeInternal;
extern UserSignUpByEmailRequestDefaultTypeInternal _UserSignUpByEmailRequest_default_instance_;
class UserTokenRequest;
struct UserTokenRequestDefaultTypeInternal;
extern UserTokenRequestDefaultTypeInternal _UserTokenRequest_default_instance_;
class WechatAllMiniProgramUserResponse;
struct WechatAllMiniProgramUserResponseDefaultTypeInternal;
extern WechatAllMiniProgramUserResponseDefaultTypeInternal _WechatAllMiniProgramUserResponse_default_instance_;
class WechatAllMiniProgramUserResponse_Item;
struct WechatAllMiniProgramUserResponse_ItemDefaultTypeInternal;
extern WechatAllMiniProgramUserResponse_ItemDefaultTypeInternal _WechatAllMiniProgramUserResponse_Item_default_instance_;
class WechatAllOauth2UserResponse;
struct WechatAllOauth2UserResponseDefaultTypeInternal;
extern WechatAllOauth2UserResponseDefaultTypeInternal _WechatAllOauth2UserResponse_default_instance_;
class WechatAllOauth2UserResponse_Item;
struct WechatAllOauth2UserResponse_ItemDefaultTypeInternal;
extern WechatAllOauth2UserResponse_ItemDefaultTypeInternal _WechatAllOauth2UserResponse_Item_default_instance_;
class WechatMiniProgramUser;
struct WechatMiniProgramUserDefaultTypeInternal;
extern WechatMiniProgramUserDefaultTypeInternal _WechatMiniProgramUser_default_instance_;
class WechatOauth2SignInStateResponse;
struct WechatOauth2SignInStateResponseDefaultTypeInternal;
extern WechatOauth2SignInStateResponseDefaultTypeInternal _WechatOauth2SignInStateResponse_default_instance_;
class WechatOauth2SignInUrlRequest;
struct WechatOauth2SignInUrlRequestDefaultTypeInternal;
extern WechatOauth2SignInUrlRequestDefaultTypeInternal _WechatOauth2SignInUrlRequest_default_instance_;
class WechatUserBindByAccountRequest;
struct WechatUserBindByAccountRequestDefaultTypeInternal;
extern WechatUserBindByAccountRequestDefaultTypeInternal _WechatUserBindByAccountRequest_default_instance_;
class WechatUserBindByIdRequest;
struct WechatUserBindByIdRequestDefaultTypeInternal;
extern WechatUserBindByIdRequestDefaultTypeInternal _WechatUserBindByIdRequest_default_instance_;
class WechatUserQueryByOpenIdRequest;
struct WechatUserQueryByOpenIdRequestDefaultTypeInternal;
extern WechatUserQueryByOpenIdRequestDefaultTypeInternal _WechatUserQueryByOpenIdRequest_default_instance_;
class WechatUserQueryByUnionIdRequest;
struct WechatUserQueryByUnionIdRequestDefaultTypeInternal;
extern WechatUserQueryByUnionIdRequestDefaultTypeInternal _WechatUserQueryByUnionIdRequest_default_instance_;
}  // namespace v1
}  // namespace metasequoia
}  // namespace palm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace palm {
namespace metasequoia {
namespace v1 {
enum MediaContent_Editor : int {
  MediaContent_Editor_TEXTAREA = 0,
  MediaContent_Editor_QUILL = 1,
  MediaContent_Editor_MediaContent_Editor_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MediaContent_Editor_MediaContent_Editor_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MediaContent_Editor_IsValid(int value);
extern const uint32_t MediaContent_Editor_internal_data_[];
constexpr MediaContent_Editor MediaContent_Editor_Editor_MIN = static_cast<MediaContent_Editor>(0);
constexpr MediaContent_Editor MediaContent_Editor_Editor_MAX = static_cast<MediaContent_Editor>(1);
constexpr int MediaContent_Editor_Editor_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
MediaContent_Editor_descriptor();
template <typename T>
const std::string& MediaContent_Editor_Name(T value) {
  static_assert(std::is_same<T, MediaContent_Editor>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Editor_Name().");
  return MediaContent_Editor_Name(static_cast<MediaContent_Editor>(value));
}
template <>
inline const std::string& MediaContent_Editor_Name(MediaContent_Editor value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MediaContent_Editor_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool MediaContent_Editor_Parse(absl::string_view name, MediaContent_Editor* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MediaContent_Editor>(
      MediaContent_Editor_descriptor(), name, value);
}
enum MediaContent_Status : int {
  MediaContent_Status_Published = 0,
  MediaContent_Status_Draft = 1,
  MediaContent_Status_Pending = 2,
  MediaContent_Status_Private = 3,
  MediaContent_Status_Future = 4,
  MediaContent_Status_Trash = 99,
  MediaContent_Status_MediaContent_Status_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MediaContent_Status_MediaContent_Status_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MediaContent_Status_IsValid(int value);
extern const uint32_t MediaContent_Status_internal_data_[];
constexpr MediaContent_Status MediaContent_Status_Status_MIN = static_cast<MediaContent_Status>(0);
constexpr MediaContent_Status MediaContent_Status_Status_MAX = static_cast<MediaContent_Status>(99);
constexpr int MediaContent_Status_Status_ARRAYSIZE = 99 + 1;
const ::google::protobuf::EnumDescriptor*
MediaContent_Status_descriptor();
template <typename T>
const std::string& MediaContent_Status_Name(T value) {
  static_assert(std::is_same<T, MediaContent_Status>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Status_Name().");
  return ::google::protobuf::internal::NameOfEnum(MediaContent_Status_descriptor(), value);
}
inline bool MediaContent_Status_Parse(absl::string_view name, MediaContent_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MediaContent_Status>(
      MediaContent_Status_descriptor(), name, value);
}
enum UserLogsResponse_Item_Level : int {
  UserLogsResponse_Item_Level_DEBUG = 0,
  UserLogsResponse_Item_Level_INFO = 1,
  UserLogsResponse_Item_Level_WARNING = 2,
  UserLogsResponse_Item_Level_ERROR = 3,
  UserLogsResponse_Item_Level_UserLogsResponse_Item_Level_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  UserLogsResponse_Item_Level_UserLogsResponse_Item_Level_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool UserLogsResponse_Item_Level_IsValid(int value);
extern const uint32_t UserLogsResponse_Item_Level_internal_data_[];
constexpr UserLogsResponse_Item_Level UserLogsResponse_Item_Level_Level_MIN = static_cast<UserLogsResponse_Item_Level>(0);
constexpr UserLogsResponse_Item_Level UserLogsResponse_Item_Level_Level_MAX = static_cast<UserLogsResponse_Item_Level>(3);
constexpr int UserLogsResponse_Item_Level_Level_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
UserLogsResponse_Item_Level_descriptor();
template <typename T>
const std::string& UserLogsResponse_Item_Level_Name(T value) {
  static_assert(std::is_same<T, UserLogsResponse_Item_Level>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Level_Name().");
  return UserLogsResponse_Item_Level_Name(static_cast<UserLogsResponse_Item_Level>(value));
}
template <>
inline const std::string& UserLogsResponse_Item_Level_Name(UserLogsResponse_Item_Level value) {
  return ::google::protobuf::internal::NameOfDenseEnum<UserLogsResponse_Item_Level_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool UserLogsResponse_Item_Level_Parse(absl::string_view name, UserLogsResponse_Item_Level* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserLogsResponse_Item_Level>(
      UserLogsResponse_Item_Level_descriptor(), name, value);
}
enum UserSignInResponse_By : int {
  UserSignInResponse_By_Nickname = 0,
  UserSignInResponse_By_Email = 1,
  UserSignInResponse_By_Phone = 2,
  UserSignInResponse_By_WechatOauth2 = 11,
  UserSignInResponse_By_WechatMiniProgram = 12,
  UserSignInResponse_By_Facebook = 21,
  UserSignInResponse_By_Google = 22,
  UserSignInResponse_By_UserSignInResponse_By_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  UserSignInResponse_By_UserSignInResponse_By_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool UserSignInResponse_By_IsValid(int value);
extern const uint32_t UserSignInResponse_By_internal_data_[];
constexpr UserSignInResponse_By UserSignInResponse_By_By_MIN = static_cast<UserSignInResponse_By>(0);
constexpr UserSignInResponse_By UserSignInResponse_By_By_MAX = static_cast<UserSignInResponse_By>(22);
constexpr int UserSignInResponse_By_By_ARRAYSIZE = 22 + 1;
const ::google::protobuf::EnumDescriptor*
UserSignInResponse_By_descriptor();
template <typename T>
const std::string& UserSignInResponse_By_Name(T value) {
  static_assert(std::is_same<T, UserSignInResponse_By>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to By_Name().");
  return ::google::protobuf::internal::NameOfEnum(UserSignInResponse_By_descriptor(), value);
}
inline bool UserSignInResponse_By_Parse(absl::string_view name, UserSignInResponse_By* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserSignInResponse_By>(
      UserSignInResponse_By_descriptor(), name, value);
}
enum SmtpProfile_AuthMethod : int {
  SmtpProfile_AuthMethod_None = 0,
  SmtpProfile_AuthMethod_Login = 1,
  SmtpProfile_AuthMethod_StartTls = 2,
  SmtpProfile_AuthMethod_SmtpProfile_AuthMethod_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SmtpProfile_AuthMethod_SmtpProfile_AuthMethod_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SmtpProfile_AuthMethod_IsValid(int value);
extern const uint32_t SmtpProfile_AuthMethod_internal_data_[];
constexpr SmtpProfile_AuthMethod SmtpProfile_AuthMethod_AuthMethod_MIN = static_cast<SmtpProfile_AuthMethod>(0);
constexpr SmtpProfile_AuthMethod SmtpProfile_AuthMethod_AuthMethod_MAX = static_cast<SmtpProfile_AuthMethod>(2);
constexpr int SmtpProfile_AuthMethod_AuthMethod_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
SmtpProfile_AuthMethod_descriptor();
template <typename T>
const std::string& SmtpProfile_AuthMethod_Name(T value) {
  static_assert(std::is_same<T, SmtpProfile_AuthMethod>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AuthMethod_Name().");
  return SmtpProfile_AuthMethod_Name(static_cast<SmtpProfile_AuthMethod>(value));
}
template <>
inline const std::string& SmtpProfile_AuthMethod_Name(SmtpProfile_AuthMethod value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SmtpProfile_AuthMethod_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool SmtpProfile_AuthMethod_Parse(absl::string_view name, SmtpProfile_AuthMethod* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SmtpProfile_AuthMethod>(
      SmtpProfile_AuthMethod_descriptor(), name, value);
}
enum NotificationIndexResponse_Item_Level : int {
  NotificationIndexResponse_Item_Level_NOTE = 0,
  NotificationIndexResponse_Item_Level_INFO = 1,
  NotificationIndexResponse_Item_Level_NotificationIndexResponse_Item_Level_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  NotificationIndexResponse_Item_Level_NotificationIndexResponse_Item_Level_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool NotificationIndexResponse_Item_Level_IsValid(int value);
extern const uint32_t NotificationIndexResponse_Item_Level_internal_data_[];
constexpr NotificationIndexResponse_Item_Level NotificationIndexResponse_Item_Level_Level_MIN = static_cast<NotificationIndexResponse_Item_Level>(0);
constexpr NotificationIndexResponse_Item_Level NotificationIndexResponse_Item_Level_Level_MAX = static_cast<NotificationIndexResponse_Item_Level>(1);
constexpr int NotificationIndexResponse_Item_Level_Level_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
NotificationIndexResponse_Item_Level_descriptor();
template <typename T>
const std::string& NotificationIndexResponse_Item_Level_Name(T value) {
  static_assert(std::is_same<T, NotificationIndexResponse_Item_Level>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Level_Name().");
  return NotificationIndexResponse_Item_Level_Name(static_cast<NotificationIndexResponse_Item_Level>(value));
}
template <>
inline const std::string& NotificationIndexResponse_Item_Level_Name(NotificationIndexResponse_Item_Level value) {
  return ::google::protobuf::internal::NameOfDenseEnum<NotificationIndexResponse_Item_Level_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool NotificationIndexResponse_Item_Level_Parse(absl::string_view name, NotificationIndexResponse_Item_Level* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NotificationIndexResponse_Item_Level>(
      NotificationIndexResponse_Item_Level_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class WechatUserQueryByUnionIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.WechatUserQueryByUnionIdRequest) */ {
 public:
  inline WechatUserQueryByUnionIdRequest() : WechatUserQueryByUnionIdRequest(nullptr) {}
  ~WechatUserQueryByUnionIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatUserQueryByUnionIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatUserQueryByUnionIdRequest(const WechatUserQueryByUnionIdRequest& from)
      : WechatUserQueryByUnionIdRequest(nullptr, from) {}
  WechatUserQueryByUnionIdRequest(WechatUserQueryByUnionIdRequest&& from) noexcept
    : WechatUserQueryByUnionIdRequest() {
    *this = ::std::move(from);
  }

  inline WechatUserQueryByUnionIdRequest& operator=(const WechatUserQueryByUnionIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatUserQueryByUnionIdRequest& operator=(WechatUserQueryByUnionIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatUserQueryByUnionIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatUserQueryByUnionIdRequest* internal_default_instance() {
    return reinterpret_cast<const WechatUserQueryByUnionIdRequest*>(
               &_WechatUserQueryByUnionIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  friend void swap(WechatUserQueryByUnionIdRequest& a, WechatUserQueryByUnionIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatUserQueryByUnionIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatUserQueryByUnionIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatUserQueryByUnionIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatUserQueryByUnionIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatUserQueryByUnionIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatUserQueryByUnionIdRequest& from) {
    WechatUserQueryByUnionIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatUserQueryByUnionIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.WechatUserQueryByUnionIdRequest";
  }
  protected:
  explicit WechatUserQueryByUnionIdRequest(::google::protobuf::Arena* arena);
  WechatUserQueryByUnionIdRequest(::google::protobuf::Arena* arena, const WechatUserQueryByUnionIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnionIdFieldNumber = 1,
  };
  // string union_id = 1;
  void clear_union_id() ;
  const std::string& union_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_union_id(Arg_&& arg, Args_... args);
  std::string* mutable_union_id();
  PROTOBUF_NODISCARD std::string* release_union_id();
  void set_allocated_union_id(std::string* value);

  private:
  const std::string& _internal_union_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_union_id(
      const std::string& value);
  std::string* _internal_mutable_union_id();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.WechatUserQueryByUnionIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      68, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr union_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class WechatUserQueryByOpenIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.WechatUserQueryByOpenIdRequest) */ {
 public:
  inline WechatUserQueryByOpenIdRequest() : WechatUserQueryByOpenIdRequest(nullptr) {}
  ~WechatUserQueryByOpenIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatUserQueryByOpenIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatUserQueryByOpenIdRequest(const WechatUserQueryByOpenIdRequest& from)
      : WechatUserQueryByOpenIdRequest(nullptr, from) {}
  WechatUserQueryByOpenIdRequest(WechatUserQueryByOpenIdRequest&& from) noexcept
    : WechatUserQueryByOpenIdRequest() {
    *this = ::std::move(from);
  }

  inline WechatUserQueryByOpenIdRequest& operator=(const WechatUserQueryByOpenIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatUserQueryByOpenIdRequest& operator=(WechatUserQueryByOpenIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatUserQueryByOpenIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatUserQueryByOpenIdRequest* internal_default_instance() {
    return reinterpret_cast<const WechatUserQueryByOpenIdRequest*>(
               &_WechatUserQueryByOpenIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  friend void swap(WechatUserQueryByOpenIdRequest& a, WechatUserQueryByOpenIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatUserQueryByOpenIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatUserQueryByOpenIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatUserQueryByOpenIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatUserQueryByOpenIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatUserQueryByOpenIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatUserQueryByOpenIdRequest& from) {
    WechatUserQueryByOpenIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatUserQueryByOpenIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.WechatUserQueryByOpenIdRequest";
  }
  protected:
  explicit WechatUserQueryByOpenIdRequest(::google::protobuf::Arena* arena);
  WechatUserQueryByOpenIdRequest(::google::protobuf::Arena* arena, const WechatUserQueryByOpenIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppIdFieldNumber = 1,
    kOpenIdFieldNumber = 2,
  };
  // string app_id = 1;
  void clear_app_id() ;
  const std::string& app_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_id(Arg_&& arg, Args_... args);
  std::string* mutable_app_id();
  PROTOBUF_NODISCARD std::string* release_app_id();
  void set_allocated_app_id(std::string* value);

  private:
  const std::string& _internal_app_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_id(
      const std::string& value);
  std::string* _internal_mutable_app_id();

  public:
  // string open_id = 2;
  void clear_open_id() ;
  const std::string& open_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_open_id(Arg_&& arg, Args_... args);
  std::string* mutable_open_id();
  PROTOBUF_NODISCARD std::string* release_open_id();
  void set_allocated_open_id(std::string* value);

  private:
  const std::string& _internal_open_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_open_id(
      const std::string& value);
  std::string* _internal_mutable_open_id();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.WechatUserQueryByOpenIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      72, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr app_id_;
    ::google::protobuf::internal::ArenaStringPtr open_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class WechatUserBindByIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.WechatUserBindByIdRequest) */ {
 public:
  inline WechatUserBindByIdRequest() : WechatUserBindByIdRequest(nullptr) {}
  ~WechatUserBindByIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatUserBindByIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatUserBindByIdRequest(const WechatUserBindByIdRequest& from)
      : WechatUserBindByIdRequest(nullptr, from) {}
  WechatUserBindByIdRequest(WechatUserBindByIdRequest&& from) noexcept
    : WechatUserBindByIdRequest() {
    *this = ::std::move(from);
  }

  inline WechatUserBindByIdRequest& operator=(const WechatUserBindByIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatUserBindByIdRequest& operator=(WechatUserBindByIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatUserBindByIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatUserBindByIdRequest* internal_default_instance() {
    return reinterpret_cast<const WechatUserBindByIdRequest*>(
               &_WechatUserBindByIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  friend void swap(WechatUserBindByIdRequest& a, WechatUserBindByIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatUserBindByIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatUserBindByIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatUserBindByIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatUserBindByIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatUserBindByIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatUserBindByIdRequest& from) {
    WechatUserBindByIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatUserBindByIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.WechatUserBindByIdRequest";
  }
  protected:
  explicit WechatUserBindByIdRequest(::google::protobuf::Arena* arena);
  WechatUserBindByIdRequest(::google::protobuf::Arena* arena, const WechatUserBindByIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kWechatUserIdFieldNumber = 2,
  };
  // int32 user_id = 1;
  void clear_user_id() ;
  ::int32_t user_id() const;
  void set_user_id(::int32_t value);

  private:
  ::int32_t _internal_user_id() const;
  void _internal_set_user_id(::int32_t value);

  public:
  // int32 wechat_user_id = 2;
  void clear_wechat_user_id() ;
  ::int32_t wechat_user_id() const;
  void set_wechat_user_id(::int32_t value);

  private:
  ::int32_t _internal_wechat_user_id() const;
  void _internal_set_wechat_user_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.WechatUserBindByIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t user_id_;
    ::int32_t wechat_user_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class WechatUserBindByAccountRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.WechatUserBindByAccountRequest) */ {
 public:
  inline WechatUserBindByAccountRequest() : WechatUserBindByAccountRequest(nullptr) {}
  ~WechatUserBindByAccountRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatUserBindByAccountRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatUserBindByAccountRequest(const WechatUserBindByAccountRequest& from)
      : WechatUserBindByAccountRequest(nullptr, from) {}
  WechatUserBindByAccountRequest(WechatUserBindByAccountRequest&& from) noexcept
    : WechatUserBindByAccountRequest() {
    *this = ::std::move(from);
  }

  inline WechatUserBindByAccountRequest& operator=(const WechatUserBindByAccountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatUserBindByAccountRequest& operator=(WechatUserBindByAccountRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatUserBindByAccountRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatUserBindByAccountRequest* internal_default_instance() {
    return reinterpret_cast<const WechatUserBindByAccountRequest*>(
               &_WechatUserBindByAccountRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  friend void swap(WechatUserBindByAccountRequest& a, WechatUserBindByAccountRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatUserBindByAccountRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatUserBindByAccountRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatUserBindByAccountRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatUserBindByAccountRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatUserBindByAccountRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatUserBindByAccountRequest& from) {
    WechatUserBindByAccountRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatUserBindByAccountRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.WechatUserBindByAccountRequest";
  }
  protected:
  explicit WechatUserBindByAccountRequest(::google::protobuf::Arena* arena);
  WechatUserBindByAccountRequest(::google::protobuf::Arena* arena, const WechatUserBindByAccountRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNicknameFieldNumber = 1,
    kPasswordFieldNumber = 2,
  };
  // string nickname = 1;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string password = 2;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.WechatUserBindByAccountRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      75, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class WechatOauth2SignInUrlRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.WechatOauth2SignInUrlRequest) */ {
 public:
  inline WechatOauth2SignInUrlRequest() : WechatOauth2SignInUrlRequest(nullptr) {}
  ~WechatOauth2SignInUrlRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatOauth2SignInUrlRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatOauth2SignInUrlRequest(const WechatOauth2SignInUrlRequest& from)
      : WechatOauth2SignInUrlRequest(nullptr, from) {}
  WechatOauth2SignInUrlRequest(WechatOauth2SignInUrlRequest&& from) noexcept
    : WechatOauth2SignInUrlRequest() {
    *this = ::std::move(from);
  }

  inline WechatOauth2SignInUrlRequest& operator=(const WechatOauth2SignInUrlRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatOauth2SignInUrlRequest& operator=(WechatOauth2SignInUrlRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatOauth2SignInUrlRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatOauth2SignInUrlRequest* internal_default_instance() {
    return reinterpret_cast<const WechatOauth2SignInUrlRequest*>(
               &_WechatOauth2SignInUrlRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    112;

  friend void swap(WechatOauth2SignInUrlRequest& a, WechatOauth2SignInUrlRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatOauth2SignInUrlRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatOauth2SignInUrlRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatOauth2SignInUrlRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatOauth2SignInUrlRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatOauth2SignInUrlRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatOauth2SignInUrlRequest& from) {
    WechatOauth2SignInUrlRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatOauth2SignInUrlRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.WechatOauth2SignInUrlRequest";
  }
  protected:
  explicit WechatOauth2SignInUrlRequest(::google::protobuf::Arena* arena);
  WechatOauth2SignInUrlRequest(::google::protobuf::Arena* arena, const WechatOauth2SignInUrlRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppIdFieldNumber = 1,
    kRedirectUriFieldNumber = 2,
    kLanguageFieldNumber = 3,
  };
  // string app_id = 1;
  void clear_app_id() ;
  const std::string& app_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_id(Arg_&& arg, Args_... args);
  std::string* mutable_app_id();
  PROTOBUF_NODISCARD std::string* release_app_id();
  void set_allocated_app_id(std::string* value);

  private:
  const std::string& _internal_app_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_id(
      const std::string& value);
  std::string* _internal_mutable_app_id();

  public:
  // string redirect_uri = 2;
  void clear_redirect_uri() ;
  const std::string& redirect_uri() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_redirect_uri(Arg_&& arg, Args_... args);
  std::string* mutable_redirect_uri();
  PROTOBUF_NODISCARD std::string* release_redirect_uri();
  void set_allocated_redirect_uri(std::string* value);

  private:
  const std::string& _internal_redirect_uri() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_redirect_uri(
      const std::string& value);
  std::string* _internal_mutable_redirect_uri();

  public:
  // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 3;
  void clear_language() ;
  ::palm::orchid::v1::WechatOauth2QrConnectRequest_Language language() const;
  void set_language(::palm::orchid::v1::WechatOauth2QrConnectRequest_Language value);

  private:
  ::palm::orchid::v1::WechatOauth2QrConnectRequest_Language _internal_language() const;
  void _internal_set_language(::palm::orchid::v1::WechatOauth2QrConnectRequest_Language value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.WechatOauth2SignInUrlRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      75, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr app_id_;
    ::google::protobuf::internal::ArenaStringPtr redirect_uri_;
    int language_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class WechatOauth2SignInStateResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.WechatOauth2SignInStateResponse) */ {
 public:
  inline WechatOauth2SignInStateResponse() : WechatOauth2SignInStateResponse(nullptr) {}
  ~WechatOauth2SignInStateResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatOauth2SignInStateResponse(::google::protobuf::internal::ConstantInitialized);

  inline WechatOauth2SignInStateResponse(const WechatOauth2SignInStateResponse& from)
      : WechatOauth2SignInStateResponse(nullptr, from) {}
  WechatOauth2SignInStateResponse(WechatOauth2SignInStateResponse&& from) noexcept
    : WechatOauth2SignInStateResponse() {
    *this = ::std::move(from);
  }

  inline WechatOauth2SignInStateResponse& operator=(const WechatOauth2SignInStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatOauth2SignInStateResponse& operator=(WechatOauth2SignInStateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatOauth2SignInStateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatOauth2SignInStateResponse* internal_default_instance() {
    return reinterpret_cast<const WechatOauth2SignInStateResponse*>(
               &_WechatOauth2SignInStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  friend void swap(WechatOauth2SignInStateResponse& a, WechatOauth2SignInStateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatOauth2SignInStateResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatOauth2SignInStateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatOauth2SignInStateResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatOauth2SignInStateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatOauth2SignInStateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatOauth2SignInStateResponse& from) {
    WechatOauth2SignInStateResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatOauth2SignInStateResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.WechatOauth2SignInStateResponse";
  }
  protected:
  explicit WechatOauth2SignInStateResponse(::google::protobuf::Arena* arena);
  WechatOauth2SignInStateResponse(::google::protobuf::Arena* arena, const WechatOauth2SignInStateResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStateFieldNumber = 1,
  };
  // string state = 1;
  void clear_state() ;
  const std::string& state() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_state(Arg_&& arg, Args_... args);
  std::string* mutable_state();
  PROTOBUF_NODISCARD std::string* release_state();
  void set_allocated_state(std::string* value);

  private:
  const std::string& _internal_state() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_state(
      const std::string& value);
  std::string* _internal_mutable_state();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.WechatOauth2SignInStateResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      65, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr state_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class WechatMiniProgramUser final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.WechatMiniProgramUser) */ {
 public:
  inline WechatMiniProgramUser() : WechatMiniProgramUser(nullptr) {}
  ~WechatMiniProgramUser() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatMiniProgramUser(::google::protobuf::internal::ConstantInitialized);

  inline WechatMiniProgramUser(const WechatMiniProgramUser& from)
      : WechatMiniProgramUser(nullptr, from) {}
  WechatMiniProgramUser(WechatMiniProgramUser&& from) noexcept
    : WechatMiniProgramUser() {
    *this = ::std::move(from);
  }

  inline WechatMiniProgramUser& operator=(const WechatMiniProgramUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatMiniProgramUser& operator=(WechatMiniProgramUser&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatMiniProgramUser& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatMiniProgramUser* internal_default_instance() {
    return reinterpret_cast<const WechatMiniProgramUser*>(
               &_WechatMiniProgramUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    113;

  friend void swap(WechatMiniProgramUser& a, WechatMiniProgramUser& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatMiniProgramUser* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatMiniProgramUser* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatMiniProgramUser* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatMiniProgramUser>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatMiniProgramUser& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatMiniProgramUser& from) {
    WechatMiniProgramUser::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatMiniProgramUser* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.WechatMiniProgramUser";
  }
  protected:
  explicit WechatMiniProgramUser(::google::protobuf::Arena* arena);
  WechatMiniProgramUser(::google::protobuf::Arena* arena, const WechatMiniProgramUser& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppIdFieldNumber = 11,
    kOpenIdFieldNumber = 12,
    kUnionIdFieldNumber = 13,
    kNicknameFieldNumber = 21,
    kAvatarUrlFieldNumber = 22,
  };
  // string app_id = 11;
  void clear_app_id() ;
  const std::string& app_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_id(Arg_&& arg, Args_... args);
  std::string* mutable_app_id();
  PROTOBUF_NODISCARD std::string* release_app_id();
  void set_allocated_app_id(std::string* value);

  private:
  const std::string& _internal_app_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_id(
      const std::string& value);
  std::string* _internal_mutable_app_id();

  public:
  // string open_id = 12;
  void clear_open_id() ;
  const std::string& open_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_open_id(Arg_&& arg, Args_... args);
  std::string* mutable_open_id();
  PROTOBUF_NODISCARD std::string* release_open_id();
  void set_allocated_open_id(std::string* value);

  private:
  const std::string& _internal_open_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_open_id(
      const std::string& value);
  std::string* _internal_mutable_open_id();

  public:
  // string union_id = 13;
  void clear_union_id() ;
  const std::string& union_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_union_id(Arg_&& arg, Args_... args);
  std::string* mutable_union_id();
  PROTOBUF_NODISCARD std::string* release_union_id();
  void set_allocated_union_id(std::string* value);

  private:
  const std::string& _internal_union_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_union_id(
      const std::string& value);
  std::string* _internal_mutable_union_id();

  public:
  // optional string nickname = 21;
  bool has_nickname() const;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // optional string avatar_url = 22;
  bool has_avatar_url() const;
  void clear_avatar_url() ;
  const std::string& avatar_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_avatar_url(Arg_&& arg, Args_... args);
  std::string* mutable_avatar_url();
  PROTOBUF_NODISCARD std::string* release_avatar_url();
  void set_allocated_avatar_url(std::string* value);

  private:
  const std::string& _internal_avatar_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_avatar_url(
      const std::string& value);
  std::string* _internal_mutable_avatar_url();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.WechatMiniProgramUser)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 0,
      89, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr app_id_;
    ::google::protobuf::internal::ArenaStringPtr open_id_;
    ::google::protobuf::internal::ArenaStringPtr union_id_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr avatar_url_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class WechatAllOauth2UserResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item) */ {
 public:
  inline WechatAllOauth2UserResponse_Item() : WechatAllOauth2UserResponse_Item(nullptr) {}
  ~WechatAllOauth2UserResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatAllOauth2UserResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline WechatAllOauth2UserResponse_Item(const WechatAllOauth2UserResponse_Item& from)
      : WechatAllOauth2UserResponse_Item(nullptr, from) {}
  WechatAllOauth2UserResponse_Item(WechatAllOauth2UserResponse_Item&& from) noexcept
    : WechatAllOauth2UserResponse_Item() {
    *this = ::std::move(from);
  }

  inline WechatAllOauth2UserResponse_Item& operator=(const WechatAllOauth2UserResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatAllOauth2UserResponse_Item& operator=(WechatAllOauth2UserResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatAllOauth2UserResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatAllOauth2UserResponse_Item* internal_default_instance() {
    return reinterpret_cast<const WechatAllOauth2UserResponse_Item*>(
               &_WechatAllOauth2UserResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  friend void swap(WechatAllOauth2UserResponse_Item& a, WechatAllOauth2UserResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatAllOauth2UserResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatAllOauth2UserResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatAllOauth2UserResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatAllOauth2UserResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatAllOauth2UserResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatAllOauth2UserResponse_Item& from) {
    WechatAllOauth2UserResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatAllOauth2UserResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.WechatAllOauth2UserResponse.Item";
  }
  protected:
  explicit WechatAllOauth2UserResponse_Item(::google::protobuf::Arena* arena);
  WechatAllOauth2UserResponse_Item(::google::protobuf::Arena* arena, const WechatAllOauth2UserResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPrivilegeFieldNumber = 17,
    kUnionIdFieldNumber = 3,
    kAppIdFieldNumber = 4,
    kOpenIdFieldNumber = 5,
    kNicknameFieldNumber = 11,
    kCityFieldNumber = 13,
    kProvinceFieldNumber = 14,
    kCountryFieldNumber = 15,
    kHeadImgUrlFieldNumber = 16,
    kLangFieldNumber = 18,
    kIdFieldNumber = 1,
    kUserIdFieldNumber = 2,
    kSexFieldNumber = 12,
  };
  // repeated string privilege = 17;
  int privilege_size() const;
  private:
  int _internal_privilege_size() const;

  public:
  void clear_privilege() ;
  const std::string& privilege(int index) const;
  std::string* mutable_privilege(int index);
  void set_privilege(int index, const std::string& value);
  void set_privilege(int index, std::string&& value);
  void set_privilege(int index, const char* value);
  void set_privilege(int index, const char* value, std::size_t size);
  void set_privilege(int index, absl::string_view value);
  std::string* add_privilege();
  void add_privilege(const std::string& value);
  void add_privilege(std::string&& value);
  void add_privilege(const char* value);
  void add_privilege(const char* value, std::size_t size);
  void add_privilege(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& privilege() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_privilege();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_privilege() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_privilege();

  public:
  // string union_id = 3;
  void clear_union_id() ;
  const std::string& union_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_union_id(Arg_&& arg, Args_... args);
  std::string* mutable_union_id();
  PROTOBUF_NODISCARD std::string* release_union_id();
  void set_allocated_union_id(std::string* value);

  private:
  const std::string& _internal_union_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_union_id(
      const std::string& value);
  std::string* _internal_mutable_union_id();

  public:
  // string app_id = 4;
  void clear_app_id() ;
  const std::string& app_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_id(Arg_&& arg, Args_... args);
  std::string* mutable_app_id();
  PROTOBUF_NODISCARD std::string* release_app_id();
  void set_allocated_app_id(std::string* value);

  private:
  const std::string& _internal_app_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_id(
      const std::string& value);
  std::string* _internal_mutable_app_id();

  public:
  // string open_id = 5;
  void clear_open_id() ;
  const std::string& open_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_open_id(Arg_&& arg, Args_... args);
  std::string* mutable_open_id();
  PROTOBUF_NODISCARD std::string* release_open_id();
  void set_allocated_open_id(std::string* value);

  private:
  const std::string& _internal_open_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_open_id(
      const std::string& value);
  std::string* _internal_mutable_open_id();

  public:
  // string nickname = 11;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string city = 13;
  void clear_city() ;
  const std::string& city() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_city(Arg_&& arg, Args_... args);
  std::string* mutable_city();
  PROTOBUF_NODISCARD std::string* release_city();
  void set_allocated_city(std::string* value);

  private:
  const std::string& _internal_city() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_city(
      const std::string& value);
  std::string* _internal_mutable_city();

  public:
  // string province = 14;
  void clear_province() ;
  const std::string& province() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_province(Arg_&& arg, Args_... args);
  std::string* mutable_province();
  PROTOBUF_NODISCARD std::string* release_province();
  void set_allocated_province(std::string* value);

  private:
  const std::string& _internal_province() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_province(
      const std::string& value);
  std::string* _internal_mutable_province();

  public:
  // string country = 15;
  void clear_country() ;
  const std::string& country() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_country(Arg_&& arg, Args_... args);
  std::string* mutable_country();
  PROTOBUF_NODISCARD std::string* release_country();
  void set_allocated_country(std::string* value);

  private:
  const std::string& _internal_country() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_country(
      const std::string& value);
  std::string* _internal_mutable_country();

  public:
  // optional string head_img_url = 16;
  bool has_head_img_url() const;
  void clear_head_img_url() ;
  const std::string& head_img_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_head_img_url(Arg_&& arg, Args_... args);
  std::string* mutable_head_img_url();
  PROTOBUF_NODISCARD std::string* release_head_img_url();
  void set_allocated_head_img_url(std::string* value);

  private:
  const std::string& _internal_head_img_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_head_img_url(
      const std::string& value);
  std::string* _internal_mutable_head_img_url();

  public:
  // string lang = 18;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // int32 user_id = 2;
  void clear_user_id() ;
  ::int32_t user_id() const;
  void set_user_id(::int32_t value);

  private:
  ::int32_t _internal_user_id() const;
  void _internal_set_user_id(::int32_t value);

  public:
  // int32 sex = 12;
  void clear_sex() ;
  ::int32_t sex() const;
  void set_sex(::int32_t value);

  private:
  ::int32_t _internal_sex() const;
  void _internal_set_sex(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 13, 0,
      142, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> privilege_;
    ::google::protobuf::internal::ArenaStringPtr union_id_;
    ::google::protobuf::internal::ArenaStringPtr app_id_;
    ::google::protobuf::internal::ArenaStringPtr open_id_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr city_;
    ::google::protobuf::internal::ArenaStringPtr province_;
    ::google::protobuf::internal::ArenaStringPtr country_;
    ::google::protobuf::internal::ArenaStringPtr head_img_url_;
    ::google::protobuf::internal::ArenaStringPtr lang_;
    ::int32_t id_;
    ::int32_t user_id_;
    ::int32_t sex_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class WechatAllMiniProgramUserResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item) */ {
 public:
  inline WechatAllMiniProgramUserResponse_Item() : WechatAllMiniProgramUserResponse_Item(nullptr) {}
  ~WechatAllMiniProgramUserResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatAllMiniProgramUserResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline WechatAllMiniProgramUserResponse_Item(const WechatAllMiniProgramUserResponse_Item& from)
      : WechatAllMiniProgramUserResponse_Item(nullptr, from) {}
  WechatAllMiniProgramUserResponse_Item(WechatAllMiniProgramUserResponse_Item&& from) noexcept
    : WechatAllMiniProgramUserResponse_Item() {
    *this = ::std::move(from);
  }

  inline WechatAllMiniProgramUserResponse_Item& operator=(const WechatAllMiniProgramUserResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatAllMiniProgramUserResponse_Item& operator=(WechatAllMiniProgramUserResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatAllMiniProgramUserResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatAllMiniProgramUserResponse_Item* internal_default_instance() {
    return reinterpret_cast<const WechatAllMiniProgramUserResponse_Item*>(
               &_WechatAllMiniProgramUserResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  friend void swap(WechatAllMiniProgramUserResponse_Item& a, WechatAllMiniProgramUserResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatAllMiniProgramUserResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatAllMiniProgramUserResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatAllMiniProgramUserResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatAllMiniProgramUserResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatAllMiniProgramUserResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatAllMiniProgramUserResponse_Item& from) {
    WechatAllMiniProgramUserResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatAllMiniProgramUserResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item";
  }
  protected:
  explicit WechatAllMiniProgramUserResponse_Item(::google::protobuf::Arena* arena);
  WechatAllMiniProgramUserResponse_Item(::google::protobuf::Arena* arena, const WechatAllMiniProgramUserResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnionIdFieldNumber = 3,
    kAppIdFieldNumber = 4,
    kOpenIdFieldNumber = 5,
    kNicknameFieldNumber = 11,
    kAvatarUrlFieldNumber = 12,
    kIdFieldNumber = 1,
    kUserIdFieldNumber = 2,
  };
  // string union_id = 3;
  void clear_union_id() ;
  const std::string& union_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_union_id(Arg_&& arg, Args_... args);
  std::string* mutable_union_id();
  PROTOBUF_NODISCARD std::string* release_union_id();
  void set_allocated_union_id(std::string* value);

  private:
  const std::string& _internal_union_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_union_id(
      const std::string& value);
  std::string* _internal_mutable_union_id();

  public:
  // string app_id = 4;
  void clear_app_id() ;
  const std::string& app_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_id(Arg_&& arg, Args_... args);
  std::string* mutable_app_id();
  PROTOBUF_NODISCARD std::string* release_app_id();
  void set_allocated_app_id(std::string* value);

  private:
  const std::string& _internal_app_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_id(
      const std::string& value);
  std::string* _internal_mutable_app_id();

  public:
  // string open_id = 5;
  void clear_open_id() ;
  const std::string& open_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_open_id(Arg_&& arg, Args_... args);
  std::string* mutable_open_id();
  PROTOBUF_NODISCARD std::string* release_open_id();
  void set_allocated_open_id(std::string* value);

  private:
  const std::string& _internal_open_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_open_id(
      const std::string& value);
  std::string* _internal_mutable_open_id();

  public:
  // optional string nickname = 11;
  bool has_nickname() const;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // optional string avatar_url = 12;
  bool has_avatar_url() const;
  void clear_avatar_url() ;
  const std::string& avatar_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_avatar_url(Arg_&& arg, Args_... args);
  std::string* mutable_avatar_url();
  PROTOBUF_NODISCARD std::string* release_avatar_url();
  void set_allocated_avatar_url(std::string* value);

  private:
  const std::string& _internal_avatar_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_avatar_url(
      const std::string& value);
  std::string* _internal_mutable_avatar_url();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // int32 user_id = 2;
  void clear_user_id() ;
  ::int32_t user_id() const;
  void set_user_id(::int32_t value);

  private:
  ::int32_t _internal_user_id() const;
  void _internal_set_user_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      105, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr union_id_;
    ::google::protobuf::internal::ArenaStringPtr app_id_;
    ::google::protobuf::internal::ArenaStringPtr open_id_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr avatar_url_;
    ::int32_t id_;
    ::int32_t user_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class UserTokenRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.UserTokenRequest) */ {
 public:
  inline UserTokenRequest() : UserTokenRequest(nullptr) {}
  ~UserTokenRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserTokenRequest(::google::protobuf::internal::ConstantInitialized);

  inline UserTokenRequest(const UserTokenRequest& from)
      : UserTokenRequest(nullptr, from) {}
  UserTokenRequest(UserTokenRequest&& from) noexcept
    : UserTokenRequest() {
    *this = ::std::move(from);
  }

  inline UserTokenRequest& operator=(const UserTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserTokenRequest& operator=(UserTokenRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserTokenRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserTokenRequest* internal_default_instance() {
    return reinterpret_cast<const UserTokenRequest*>(
               &_UserTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(UserTokenRequest& a, UserTokenRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UserTokenRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserTokenRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserTokenRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserTokenRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserTokenRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserTokenRequest& from) {
    UserTokenRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserTokenRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.UserTokenRequest";
  }
  protected:
  explicit UserTokenRequest(::google::protobuf::Arena* arena);
  UserTokenRequest(::google::protobuf::Arena* arena, const UserTokenRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenFieldNumber = 1,
  };
  // string token = 1;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.UserTokenRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      50, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr token_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class UserSignUpByEmailRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.UserSignUpByEmailRequest) */ {
 public:
  inline UserSignUpByEmailRequest() : UserSignUpByEmailRequest(nullptr) {}
  ~UserSignUpByEmailRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserSignUpByEmailRequest(::google::protobuf::internal::ConstantInitialized);

  inline UserSignUpByEmailRequest(const UserSignUpByEmailRequest& from)
      : UserSignUpByEmailRequest(nullptr, from) {}
  UserSignUpByEmailRequest(UserSignUpByEmailRequest&& from) noexcept
    : UserSignUpByEmailRequest() {
    *this = ::std::move(from);
  }

  inline UserSignUpByEmailRequest& operator=(const UserSignUpByEmailRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserSignUpByEmailRequest& operator=(UserSignUpByEmailRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserSignUpByEmailRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserSignUpByEmailRequest* internal_default_instance() {
    return reinterpret_cast<const UserSignUpByEmailRequest*>(
               &_UserSignUpByEmailRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(UserSignUpByEmailRequest& a, UserSignUpByEmailRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UserSignUpByEmailRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserSignUpByEmailRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserSignUpByEmailRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserSignUpByEmailRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserSignUpByEmailRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserSignUpByEmailRequest& from) {
    UserSignUpByEmailRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserSignUpByEmailRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.UserSignUpByEmailRequest";
  }
  protected:
  explicit UserSignUpByEmailRequest(::google::protobuf::Arena* arena);
  UserSignUpByEmailRequest(::google::protobuf::Arena* arena, const UserSignUpByEmailRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNicknameFieldNumber = 1,
    kRealNameFieldNumber = 2,
    kEmailFieldNumber = 3,
    kPasswordFieldNumber = 4,
    kLocaleFieldNumber = 11,
    kTimezoneFieldNumber = 12,
    kHomeFieldNumber = 99,
  };
  // string nickname = 1;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string real_name = 2;
  void clear_real_name() ;
  const std::string& real_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_real_name(Arg_&& arg, Args_... args);
  std::string* mutable_real_name();
  PROTOBUF_NODISCARD std::string* release_real_name();
  void set_allocated_real_name(std::string* value);

  private:
  const std::string& _internal_real_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_real_name(
      const std::string& value);
  std::string* _internal_mutable_real_name();

  public:
  // string email = 3;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // string password = 4;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // string locale = 11;
  void clear_locale() ;
  const std::string& locale() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_locale(Arg_&& arg, Args_... args);
  std::string* mutable_locale();
  PROTOBUF_NODISCARD std::string* release_locale();
  void set_allocated_locale(std::string* value);

  private:
  const std::string& _internal_locale() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_locale(
      const std::string& value);
  std::string* _internal_mutable_locale();

  public:
  // string timezone = 12;
  void clear_timezone() ;
  const std::string& timezone() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timezone(Arg_&& arg, Args_... args);
  std::string* mutable_timezone();
  PROTOBUF_NODISCARD std::string* release_timezone();
  void set_allocated_timezone(std::string* value);

  private:
  const std::string& _internal_timezone() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timezone(
      const std::string& value);
  std::string* _internal_mutable_timezone();

  public:
  // string home = 99;
  void clear_home() ;
  const std::string& home() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_home(Arg_&& arg, Args_... args);
  std::string* mutable_home();
  PROTOBUF_NODISCARD std::string* release_home();
  void set_allocated_home(std::string* value);

  private:
  const std::string& _internal_home() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_home(
      const std::string& value);
  std::string* _internal_mutable_home();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.UserSignUpByEmailRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 7, 0,
      101, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr real_name_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::google::protobuf::internal::ArenaStringPtr locale_;
    ::google::protobuf::internal::ArenaStringPtr timezone_;
    ::google::protobuf::internal::ArenaStringPtr home_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class UserSetPasswordRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.UserSetPasswordRequest) */ {
 public:
  inline UserSetPasswordRequest() : UserSetPasswordRequest(nullptr) {}
  ~UserSetPasswordRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserSetPasswordRequest(::google::protobuf::internal::ConstantInitialized);

  inline UserSetPasswordRequest(const UserSetPasswordRequest& from)
      : UserSetPasswordRequest(nullptr, from) {}
  UserSetPasswordRequest(UserSetPasswordRequest&& from) noexcept
    : UserSetPasswordRequest() {
    *this = ::std::move(from);
  }

  inline UserSetPasswordRequest& operator=(const UserSetPasswordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserSetPasswordRequest& operator=(UserSetPasswordRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserSetPasswordRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserSetPasswordRequest* internal_default_instance() {
    return reinterpret_cast<const UserSetPasswordRequest*>(
               &_UserSetPasswordRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(UserSetPasswordRequest& a, UserSetPasswordRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UserSetPasswordRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserSetPasswordRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserSetPasswordRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserSetPasswordRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserSetPasswordRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserSetPasswordRequest& from) {
    UserSetPasswordRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserSetPasswordRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.UserSetPasswordRequest";
  }
  protected:
  explicit UserSetPasswordRequest(::google::protobuf::Arena* arena);
  UserSetPasswordRequest(::google::protobuf::Arena* arena, const UserSetPasswordRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPasswordFieldNumber = 1,
  };
  // string password = 1;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.UserSetPasswordRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      59, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr password_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class UserResetPasswordRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.UserResetPasswordRequest) */ {
 public:
  inline UserResetPasswordRequest() : UserResetPasswordRequest(nullptr) {}
  ~UserResetPasswordRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserResetPasswordRequest(::google::protobuf::internal::ConstantInitialized);

  inline UserResetPasswordRequest(const UserResetPasswordRequest& from)
      : UserResetPasswordRequest(nullptr, from) {}
  UserResetPasswordRequest(UserResetPasswordRequest&& from) noexcept
    : UserResetPasswordRequest() {
    *this = ::std::move(from);
  }

  inline UserResetPasswordRequest& operator=(const UserResetPasswordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserResetPasswordRequest& operator=(UserResetPasswordRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserResetPasswordRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserResetPasswordRequest* internal_default_instance() {
    return reinterpret_cast<const UserResetPasswordRequest*>(
               &_UserResetPasswordRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(UserResetPasswordRequest& a, UserResetPasswordRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UserResetPasswordRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserResetPasswordRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserResetPasswordRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserResetPasswordRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserResetPasswordRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserResetPasswordRequest& from) {
    UserResetPasswordRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserResetPasswordRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.UserResetPasswordRequest";
  }
  protected:
  explicit UserResetPasswordRequest(::google::protobuf::Arena* arena);
  UserResetPasswordRequest(::google::protobuf::Arena* arena, const UserResetPasswordRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenFieldNumber = 1,
    kPasswordFieldNumber = 2,
  };
  // string token = 1;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // string password = 2;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.UserResetPasswordRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      66, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class UserQueryRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.UserQueryRequest) */ {
 public:
  inline UserQueryRequest() : UserQueryRequest(nullptr) {}
  ~UserQueryRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserQueryRequest(::google::protobuf::internal::ConstantInitialized);

  inline UserQueryRequest(const UserQueryRequest& from)
      : UserQueryRequest(nullptr, from) {}
  UserQueryRequest(UserQueryRequest&& from) noexcept
    : UserQueryRequest() {
    *this = ::std::move(from);
  }

  inline UserQueryRequest& operator=(const UserQueryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserQueryRequest& operator=(UserQueryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserQueryRequest& default_instance() {
    return *internal_default_instance();
  }
  enum ByCase {
    kEmail = 1,
    kNickname = 2,
    kPhone = 3,
    kUid = 4,
    BY_NOT_SET = 0,
  };

  static inline const UserQueryRequest* internal_default_instance() {
    return reinterpret_cast<const UserQueryRequest*>(
               &_UserQueryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(UserQueryRequest& a, UserQueryRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UserQueryRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserQueryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserQueryRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserQueryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserQueryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserQueryRequest& from) {
    UserQueryRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserQueryRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.UserQueryRequest";
  }
  protected:
  explicit UserQueryRequest(::google::protobuf::Arena* arena);
  UserQueryRequest(::google::protobuf::Arena* arena, const UserQueryRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmailFieldNumber = 1,
    kNicknameFieldNumber = 2,
    kPhoneFieldNumber = 3,
    kUidFieldNumber = 4,
  };
  // string email = 1;
  bool has_email() const;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // string nickname = 2;
  bool has_nickname() const;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string phone = 3;
  bool has_phone() const;
  void clear_phone() ;
  const std::string& phone() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_phone(Arg_&& arg, Args_... args);
  std::string* mutable_phone();
  PROTOBUF_NODISCARD std::string* release_phone();
  void set_allocated_phone(std::string* value);

  private:
  const std::string& _internal_phone() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_phone(
      const std::string& value);
  std::string* _internal_mutable_phone();

  public:
  // string uid = 4;
  bool has_uid() const;
  void clear_uid() ;
  const std::string& uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uid(Arg_&& arg, Args_... args);
  std::string* mutable_uid();
  PROTOBUF_NODISCARD std::string* release_uid();
  void set_allocated_uid(std::string* value);

  private:
  const std::string& _internal_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uid(
      const std::string& value);
  std::string* _internal_mutable_uid();

  public:
  void clear_by();
  ByCase by_case() const;
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.UserQueryRequest)
 private:
  class _Internal;
  void set_has_email();
  void set_has_nickname();
  void set_has_phone();
  void set_has_uid();

  inline bool has_by() const;
  inline void clear_has_by();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 4, 0,
      66, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    union ByUnion {
      constexpr ByUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr email_;
      ::google::protobuf::internal::ArenaStringPtr nickname_;
      ::google::protobuf::internal::ArenaStringPtr phone_;
      ::google::protobuf::internal::ArenaStringPtr uid_;
    } by_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class UserProfile_PayloadEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          UserProfile_PayloadEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      UserProfile_PayloadEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  UserProfile_PayloadEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UserProfile_PayloadEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit UserProfile_PayloadEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const UserProfile_PayloadEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const UserProfile_PayloadEntry_DoNotUse*>(
        &_UserProfile_PayloadEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "palm.metasequoia.v1.UserProfile.PayloadEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "palm.metasequoia.v1.UserProfile.PayloadEntry.value");
 }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_metasequoia_2eproto;
};
// -------------------------------------------------------------------

class UserDetail final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.UserDetail) */ {
 public:
  inline UserDetail() : UserDetail(nullptr) {}
  ~UserDetail() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserDetail(::google::protobuf::internal::ConstantInitialized);

  inline UserDetail(const UserDetail& from)
      : UserDetail(nullptr, from) {}
  UserDetail(UserDetail&& from) noexcept
    : UserDetail() {
    *this = ::std::move(from);
  }

  inline UserDetail& operator=(const UserDetail& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserDetail& operator=(UserDetail&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserDetail& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserDetail* internal_default_instance() {
    return reinterpret_cast<const UserDetail*>(
               &_UserDetail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(UserDetail& a, UserDetail& b) {
    a.Swap(&b);
  }
  inline void Swap(UserDetail* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserDetail* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserDetail* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserDetail>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserDetail& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserDetail& from) {
    UserDetail::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserDetail* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.UserDetail";
  }
  protected:
  explicit UserDetail(::google::protobuf::Arena* arena);
  UserDetail(::google::protobuf::Arena* arena, const UserDetail& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNicknameFieldNumber = 1,
    kRealNameFieldNumber = 2,
  };
  // string nickname = 1;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string real_name = 2;
  void clear_real_name() ;
  const std::string& real_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_real_name(Arg_&& arg, Args_... args);
  std::string* mutable_real_name();
  PROTOBUF_NODISCARD std::string* release_real_name();
  void set_allocated_real_name(std::string* value);

  private:
  const std::string& _internal_real_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_real_name(
      const std::string& value);
  std::string* _internal_mutable_real_name();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.UserDetail)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      56, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr real_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class UserChangePasswordRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.UserChangePasswordRequest) */ {
 public:
  inline UserChangePasswordRequest() : UserChangePasswordRequest(nullptr) {}
  ~UserChangePasswordRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserChangePasswordRequest(::google::protobuf::internal::ConstantInitialized);

  inline UserChangePasswordRequest(const UserChangePasswordRequest& from)
      : UserChangePasswordRequest(nullptr, from) {}
  UserChangePasswordRequest(UserChangePasswordRequest&& from) noexcept
    : UserChangePasswordRequest() {
    *this = ::std::move(from);
  }

  inline UserChangePasswordRequest& operator=(const UserChangePasswordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserChangePasswordRequest& operator=(UserChangePasswordRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserChangePasswordRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserChangePasswordRequest* internal_default_instance() {
    return reinterpret_cast<const UserChangePasswordRequest*>(
               &_UserChangePasswordRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(UserChangePasswordRequest& a, UserChangePasswordRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UserChangePasswordRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserChangePasswordRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserChangePasswordRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserChangePasswordRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserChangePasswordRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserChangePasswordRequest& from) {
    UserChangePasswordRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserChangePasswordRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.UserChangePasswordRequest";
  }
  protected:
  explicit UserChangePasswordRequest(::google::protobuf::Arena* arena);
  UserChangePasswordRequest(::google::protobuf::Arena* arena, const UserChangePasswordRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurrentPasswordFieldNumber = 1,
    kNewPasswordFieldNumber = 2,
    kPasswordConfirmationFieldNumber = 3,
  };
  // string current_password = 1;
  void clear_current_password() ;
  const std::string& current_password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_current_password(Arg_&& arg, Args_... args);
  std::string* mutable_current_password();
  PROTOBUF_NODISCARD std::string* release_current_password();
  void set_allocated_current_password(std::string* value);

  private:
  const std::string& _internal_current_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_current_password(
      const std::string& value);
  std::string* _internal_mutable_current_password();

  public:
  // string new_password = 2;
  void clear_new_password() ;
  const std::string& new_password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_new_password(Arg_&& arg, Args_... args);
  std::string* mutable_new_password();
  PROTOBUF_NODISCARD std::string* release_new_password();
  void set_allocated_new_password(std::string* value);

  private:
  const std::string& _internal_new_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_new_password(
      const std::string& value);
  std::string* _internal_mutable_new_password();

  public:
  // string password_confirmation = 3;
  void clear_password_confirmation() ;
  const std::string& password_confirmation() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password_confirmation(Arg_&& arg, Args_... args);
  std::string* mutable_password_confirmation();
  PROTOBUF_NODISCARD std::string* release_password_confirmation();
  void set_allocated_password_confirmation(std::string* value);

  private:
  const std::string& _internal_password_confirmation() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password_confirmation(
      const std::string& value);
  std::string* _internal_mutable_password_confirmation();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.UserChangePasswordRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      103, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr current_password_;
    ::google::protobuf::internal::ArenaStringPtr new_password_;
    ::google::protobuf::internal::ArenaStringPtr password_confirmation_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class TwilioProfile final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.TwilioProfile) */ {
 public:
  inline TwilioProfile() : TwilioProfile(nullptr) {}
  ~TwilioProfile() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TwilioProfile(::google::protobuf::internal::ConstantInitialized);

  inline TwilioProfile(const TwilioProfile& from)
      : TwilioProfile(nullptr, from) {}
  TwilioProfile(TwilioProfile&& from) noexcept
    : TwilioProfile() {
    *this = ::std::move(from);
  }

  inline TwilioProfile& operator=(const TwilioProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline TwilioProfile& operator=(TwilioProfile&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TwilioProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const TwilioProfile* internal_default_instance() {
    return reinterpret_cast<const TwilioProfile*>(
               &_TwilioProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(TwilioProfile& a, TwilioProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(TwilioProfile* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TwilioProfile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TwilioProfile* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TwilioProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TwilioProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TwilioProfile& from) {
    TwilioProfile::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TwilioProfile* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.TwilioProfile";
  }
  protected:
  explicit TwilioProfile(::google::protobuf::Arena* arena);
  TwilioProfile(::google::protobuf::Arena* arena, const TwilioProfile& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFromFieldNumber = 1,
    kAccountSidFieldNumber = 2,
    kAuthTokenFieldNumber = 3,
    kSmsStatusCallbackFieldNumber = 9,
  };
  // string from = 1;
  void clear_from() ;
  const std::string& from() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from(Arg_&& arg, Args_... args);
  std::string* mutable_from();
  PROTOBUF_NODISCARD std::string* release_from();
  void set_allocated_from(std::string* value);

  private:
  const std::string& _internal_from() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from(
      const std::string& value);
  std::string* _internal_mutable_from();

  public:
  // string account_sid = 2;
  void clear_account_sid() ;
  const std::string& account_sid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_sid(Arg_&& arg, Args_... args);
  std::string* mutable_account_sid();
  PROTOBUF_NODISCARD std::string* release_account_sid();
  void set_allocated_account_sid(std::string* value);

  private:
  const std::string& _internal_account_sid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_sid(
      const std::string& value);
  std::string* _internal_mutable_account_sid();

  public:
  // string auth_token = 3;
  void clear_auth_token() ;
  const std::string& auth_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_auth_token(Arg_&& arg, Args_... args);
  std::string* mutable_auth_token();
  PROTOBUF_NODISCARD std::string* release_auth_token();
  void set_allocated_auth_token(std::string* value);

  private:
  const std::string& _internal_auth_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_auth_token(
      const std::string& value);
  std::string* _internal_mutable_auth_token();

  public:
  // optional string sms_status_callback = 9;
  bool has_sms_status_callback() const;
  void clear_sms_status_callback() ;
  const std::string& sms_status_callback() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sms_status_callback(Arg_&& arg, Args_... args);
  std::string* mutable_sms_status_callback();
  PROTOBUF_NODISCARD std::string* release_sms_status_callback();
  void set_allocated_sms_status_callback(std::string* value);

  private:
  const std::string& _internal_sms_status_callback() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sms_status_callback(
      const std::string& value);
  std::string* _internal_mutable_sms_status_callback();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.TwilioProfile)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      86, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr from_;
    ::google::protobuf::internal::ArenaStringPtr account_sid_;
    ::google::protobuf::internal::ArenaStringPtr auth_token_;
    ::google::protobuf::internal::ArenaStringPtr sms_status_callback_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class TagUpdateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.TagUpdateRequest) */ {
 public:
  inline TagUpdateRequest() : TagUpdateRequest(nullptr) {}
  ~TagUpdateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TagUpdateRequest(::google::protobuf::internal::ConstantInitialized);

  inline TagUpdateRequest(const TagUpdateRequest& from)
      : TagUpdateRequest(nullptr, from) {}
  TagUpdateRequest(TagUpdateRequest&& from) noexcept
    : TagUpdateRequest() {
    *this = ::std::move(from);
  }

  inline TagUpdateRequest& operator=(const TagUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TagUpdateRequest& operator=(TagUpdateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TagUpdateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TagUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const TagUpdateRequest*>(
               &_TagUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  friend void swap(TagUpdateRequest& a, TagUpdateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(TagUpdateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TagUpdateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TagUpdateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TagUpdateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TagUpdateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TagUpdateRequest& from) {
    TagUpdateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TagUpdateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.TagUpdateRequest";
  }
  protected:
  explicit TagUpdateRequest(::google::protobuf::Arena* arena);
  TagUpdateRequest(::google::protobuf::Arena* arena, const TagUpdateRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 2,
    kIdFieldNumber = 1,
    kPriorityFieldNumber = 11,
  };
  // string code = 2;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // int32 priority = 11;
  void clear_priority() ;
  ::int32_t priority() const;
  void set_priority(::int32_t value);

  private:
  ::int32_t _internal_priority() const;
  void _internal_set_priority(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.TagUpdateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::int32_t id_;
    ::int32_t priority_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class TagCreateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.TagCreateRequest) */ {
 public:
  inline TagCreateRequest() : TagCreateRequest(nullptr) {}
  ~TagCreateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TagCreateRequest(::google::protobuf::internal::ConstantInitialized);

  inline TagCreateRequest(const TagCreateRequest& from)
      : TagCreateRequest(nullptr, from) {}
  TagCreateRequest(TagCreateRequest&& from) noexcept
    : TagCreateRequest() {
    *this = ::std::move(from);
  }

  inline TagCreateRequest& operator=(const TagCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TagCreateRequest& operator=(TagCreateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TagCreateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TagCreateRequest* internal_default_instance() {
    return reinterpret_cast<const TagCreateRequest*>(
               &_TagCreateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  friend void swap(TagCreateRequest& a, TagCreateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(TagCreateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TagCreateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TagCreateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TagCreateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TagCreateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TagCreateRequest& from) {
    TagCreateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TagCreateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.TagCreateRequest";
  }
  protected:
  explicit TagCreateRequest(::google::protobuf::Arena* arena);
  TagCreateRequest(::google::protobuf::Arena* arena, const TagCreateRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 1,
    kPriorityFieldNumber = 11,
  };
  // string code = 1;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // int32 priority = 11;
  void clear_priority() ;
  ::int32_t priority() const;
  void set_priority(::int32_t value);

  private:
  ::int32_t _internal_priority() const;
  void _internal_set_priority(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.TagCreateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 0,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::int32_t priority_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SmsTask final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SmsTask) */ {
 public:
  inline SmsTask() : SmsTask(nullptr) {}
  ~SmsTask() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SmsTask(::google::protobuf::internal::ConstantInitialized);

  inline SmsTask(const SmsTask& from)
      : SmsTask(nullptr, from) {}
  SmsTask(SmsTask&& from) noexcept
    : SmsTask() {
    *this = ::std::move(from);
  }

  inline SmsTask& operator=(const SmsTask& from) {
    CopyFrom(from);
    return *this;
  }
  inline SmsTask& operator=(SmsTask&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SmsTask& default_instance() {
    return *internal_default_instance();
  }
  static inline const SmsTask* internal_default_instance() {
    return reinterpret_cast<const SmsTask*>(
               &_SmsTask_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(SmsTask& a, SmsTask& b) {
    a.Swap(&b);
  }
  inline void Swap(SmsTask* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SmsTask* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SmsTask* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SmsTask>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SmsTask& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SmsTask& from) {
    SmsTask::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SmsTask* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SmsTask";
  }
  protected:
  explicit SmsTask(::google::protobuf::Arena* arena);
  SmsTask(::google::protobuf::Arena* arena, const SmsTask& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kToFieldNumber = 2,
    kFromFieldNumber = 1,
    kBodyFieldNumber = 3,
  };
  // repeated string to = 2;
  int to_size() const;
  private:
  int _internal_to_size() const;

  public:
  void clear_to() ;
  const std::string& to(int index) const;
  std::string* mutable_to(int index);
  void set_to(int index, const std::string& value);
  void set_to(int index, std::string&& value);
  void set_to(int index, const char* value);
  void set_to(int index, const char* value, std::size_t size);
  void set_to(int index, absl::string_view value);
  std::string* add_to();
  void add_to(const std::string& value);
  void add_to(std::string&& value);
  void add_to(const char* value);
  void add_to(const char* value, std::size_t size);
  void add_to(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& to() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_to();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_to() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_to();

  public:
  // string from = 1;
  void clear_from() ;
  const std::string& from() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from(Arg_&& arg, Args_... args);
  std::string* mutable_from();
  PROTOBUF_NODISCARD std::string* release_from();
  void set_allocated_from(std::string* value);

  private:
  const std::string& _internal_from() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from(
      const std::string& value);
  std::string* _internal_mutable_from();

  public:
  // string body = 3;
  void clear_body() ;
  const std::string& body() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_body(Arg_&& arg, Args_... args);
  std::string* mutable_body();
  PROTOBUF_NODISCARD std::string* release_body();
  void set_allocated_body(std::string* value);

  private:
  const std::string& _internal_body() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_body(
      const std::string& value);
  std::string* _internal_mutable_body();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SmsTask)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      46, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> to_;
    ::google::protobuf::internal::ArenaStringPtr from_;
    ::google::protobuf::internal::ArenaStringPtr body_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SitemapPingRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SitemapPingRequest) */ {
 public:
  inline SitemapPingRequest() : SitemapPingRequest(nullptr) {}
  ~SitemapPingRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SitemapPingRequest(::google::protobuf::internal::ConstantInitialized);

  inline SitemapPingRequest(const SitemapPingRequest& from)
      : SitemapPingRequest(nullptr, from) {}
  SitemapPingRequest(SitemapPingRequest&& from) noexcept
    : SitemapPingRequest() {
    *this = ::std::move(from);
  }

  inline SitemapPingRequest& operator=(const SitemapPingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SitemapPingRequest& operator=(SitemapPingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SitemapPingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SitemapPingRequest* internal_default_instance() {
    return reinterpret_cast<const SitemapPingRequest*>(
               &_SitemapPingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(SitemapPingRequest& a, SitemapPingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SitemapPingRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SitemapPingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SitemapPingRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SitemapPingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SitemapPingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SitemapPingRequest& from) {
    SitemapPingRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SitemapPingRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SitemapPingRequest";
  }
  protected:
  explicit SitemapPingRequest(::google::protobuf::Arena* arena);
  SitemapPingRequest(::google::protobuf::Arena* arena, const SitemapPingRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHomeFieldNumber = 1,
  };
  // string home = 1;
  void clear_home() ;
  const std::string& home() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_home(Arg_&& arg, Args_... args);
  std::string* mutable_home();
  PROTOBUF_NODISCARD std::string* release_home();
  void set_allocated_home(std::string* value);

  private:
  const std::string& _internal_home() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_home(
      const std::string& value);
  std::string* _internal_mutable_home();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SitemapPingRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      51, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr home_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteStatusResponse_System final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteStatusResponse.System) */ {
 public:
  inline SiteStatusResponse_System() : SiteStatusResponse_System(nullptr) {}
  ~SiteStatusResponse_System() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteStatusResponse_System(::google::protobuf::internal::ConstantInitialized);

  inline SiteStatusResponse_System(const SiteStatusResponse_System& from)
      : SiteStatusResponse_System(nullptr, from) {}
  SiteStatusResponse_System(SiteStatusResponse_System&& from) noexcept
    : SiteStatusResponse_System() {
    *this = ::std::move(from);
  }

  inline SiteStatusResponse_System& operator=(const SiteStatusResponse_System& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteStatusResponse_System& operator=(SiteStatusResponse_System&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteStatusResponse_System& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteStatusResponse_System* internal_default_instance() {
    return reinterpret_cast<const SiteStatusResponse_System*>(
               &_SiteStatusResponse_System_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  friend void swap(SiteStatusResponse_System& a, SiteStatusResponse_System& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteStatusResponse_System* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteStatusResponse_System* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteStatusResponse_System* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteStatusResponse_System>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteStatusResponse_System& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteStatusResponse_System& from) {
    SiteStatusResponse_System::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteStatusResponse_System* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteStatusResponse.System";
  }
  protected:
  explicit SiteStatusResponse_System(::google::protobuf::Arena* arena);
  SiteStatusResponse_System(::google::protobuf::Arena* arena, const SiteStatusResponse_System& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 1,
    kCpuFieldNumber = 2,
    kMemoryFieldNumber = 3,
    kBootFieldNumber = 4,
    kDiskFieldNumber = 5,
    kLoadFieldNumber = 6,
    kFsFieldNumber = 7,
    kSwapFieldNumber = 8,
    kUptimeFieldNumber = 9,
    kNetworkFieldNumber = 10,
  };
  // string version = 1;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // string cpu = 2;
  void clear_cpu() ;
  const std::string& cpu() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cpu(Arg_&& arg, Args_... args);
  std::string* mutable_cpu();
  PROTOBUF_NODISCARD std::string* release_cpu();
  void set_allocated_cpu(std::string* value);

  private:
  const std::string& _internal_cpu() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cpu(
      const std::string& value);
  std::string* _internal_mutable_cpu();

  public:
  // string memory = 3;
  void clear_memory() ;
  const std::string& memory() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_memory(Arg_&& arg, Args_... args);
  std::string* mutable_memory();
  PROTOBUF_NODISCARD std::string* release_memory();
  void set_allocated_memory(std::string* value);

  private:
  const std::string& _internal_memory() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_memory(
      const std::string& value);
  std::string* _internal_mutable_memory();

  public:
  // string boot = 4;
  void clear_boot() ;
  const std::string& boot() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_boot(Arg_&& arg, Args_... args);
  std::string* mutable_boot();
  PROTOBUF_NODISCARD std::string* release_boot();
  void set_allocated_boot(std::string* value);

  private:
  const std::string& _internal_boot() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_boot(
      const std::string& value);
  std::string* _internal_mutable_boot();

  public:
  // string disk = 5;
  void clear_disk() ;
  const std::string& disk() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_disk(Arg_&& arg, Args_... args);
  std::string* mutable_disk();
  PROTOBUF_NODISCARD std::string* release_disk();
  void set_allocated_disk(std::string* value);

  private:
  const std::string& _internal_disk() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_disk(
      const std::string& value);
  std::string* _internal_mutable_disk();

  public:
  // string load = 6;
  void clear_load() ;
  const std::string& load() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_load(Arg_&& arg, Args_... args);
  std::string* mutable_load();
  PROTOBUF_NODISCARD std::string* release_load();
  void set_allocated_load(std::string* value);

  private:
  const std::string& _internal_load() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_load(
      const std::string& value);
  std::string* _internal_mutable_load();

  public:
  // string fs = 7;
  void clear_fs() ;
  const std::string& fs() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fs(Arg_&& arg, Args_... args);
  std::string* mutable_fs();
  PROTOBUF_NODISCARD std::string* release_fs();
  void set_allocated_fs(std::string* value);

  private:
  const std::string& _internal_fs() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fs(
      const std::string& value);
  std::string* _internal_mutable_fs();

  public:
  // string swap = 8;
  void clear_swap() ;
  const std::string& swap() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_swap(Arg_&& arg, Args_... args);
  std::string* mutable_swap();
  PROTOBUF_NODISCARD std::string* release_swap();
  void set_allocated_swap(std::string* value);

  private:
  const std::string& _internal_swap() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_swap(
      const std::string& value);
  std::string* _internal_mutable_swap();

  public:
  // string uptime = 9;
  void clear_uptime() ;
  const std::string& uptime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uptime(Arg_&& arg, Args_... args);
  std::string* mutable_uptime();
  PROTOBUF_NODISCARD std::string* release_uptime();
  void set_allocated_uptime(std::string* value);

  private:
  const std::string& _internal_uptime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uptime(
      const std::string& value);
  std::string* _internal_mutable_uptime();

  public:
  // string network = 10;
  void clear_network() ;
  const std::string& network() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_network(Arg_&& arg, Args_... args);
  std::string* mutable_network();
  PROTOBUF_NODISCARD std::string* release_network();
  void set_allocated_network(std::string* value);

  private:
  const std::string& _internal_network() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_network(
      const std::string& value);
  std::string* _internal_mutable_network();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteStatusResponse.System)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      109, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::ArenaStringPtr cpu_;
    ::google::protobuf::internal::ArenaStringPtr memory_;
    ::google::protobuf::internal::ArenaStringPtr boot_;
    ::google::protobuf::internal::ArenaStringPtr disk_;
    ::google::protobuf::internal::ArenaStringPtr load_;
    ::google::protobuf::internal::ArenaStringPtr fs_;
    ::google::protobuf::internal::ArenaStringPtr swap_;
    ::google::protobuf::internal::ArenaStringPtr uptime_;
    ::google::protobuf::internal::ArenaStringPtr network_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteStatusResponse_Redis_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteStatusResponse.Redis.Item) */ {
 public:
  inline SiteStatusResponse_Redis_Item() : SiteStatusResponse_Redis_Item(nullptr) {}
  ~SiteStatusResponse_Redis_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteStatusResponse_Redis_Item(::google::protobuf::internal::ConstantInitialized);

  inline SiteStatusResponse_Redis_Item(const SiteStatusResponse_Redis_Item& from)
      : SiteStatusResponse_Redis_Item(nullptr, from) {}
  SiteStatusResponse_Redis_Item(SiteStatusResponse_Redis_Item&& from) noexcept
    : SiteStatusResponse_Redis_Item() {
    *this = ::std::move(from);
  }

  inline SiteStatusResponse_Redis_Item& operator=(const SiteStatusResponse_Redis_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteStatusResponse_Redis_Item& operator=(SiteStatusResponse_Redis_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteStatusResponse_Redis_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteStatusResponse_Redis_Item* internal_default_instance() {
    return reinterpret_cast<const SiteStatusResponse_Redis_Item*>(
               &_SiteStatusResponse_Redis_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(SiteStatusResponse_Redis_Item& a, SiteStatusResponse_Redis_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteStatusResponse_Redis_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteStatusResponse_Redis_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteStatusResponse_Redis_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteStatusResponse_Redis_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteStatusResponse_Redis_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteStatusResponse_Redis_Item& from) {
    SiteStatusResponse_Redis_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteStatusResponse_Redis_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteStatusResponse.Redis.Item";
  }
  protected:
  explicit SiteStatusResponse_Redis_Item(::google::protobuf::Arena* arena);
  SiteStatusResponse_Redis_Item(::google::protobuf::Arena* arena, const SiteStatusResponse_Redis_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNodeFieldNumber = 1,
    kKeyFieldNumber = 2,
    kTtlFieldNumber = 3,
  };
  // string node = 1;
  void clear_node() ;
  const std::string& node() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_node(Arg_&& arg, Args_... args);
  std::string* mutable_node();
  PROTOBUF_NODISCARD std::string* release_node();
  void set_allocated_node(std::string* value);

  private:
  const std::string& _internal_node() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_node(
      const std::string& value);
  std::string* _internal_mutable_node();

  public:
  // string key = 2;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // int64 ttl = 3;
  void clear_ttl() ;
  ::int64_t ttl() const;
  void set_ttl(::int64_t value);

  private:
  ::int64_t _internal_ttl() const;
  void _internal_set_ttl(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteStatusResponse.Redis.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      65, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr node_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::int64_t ttl_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteStatusResponse_RabbitMq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteStatusResponse.RabbitMq) */ {
 public:
  inline SiteStatusResponse_RabbitMq() : SiteStatusResponse_RabbitMq(nullptr) {}
  ~SiteStatusResponse_RabbitMq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteStatusResponse_RabbitMq(::google::protobuf::internal::ConstantInitialized);

  inline SiteStatusResponse_RabbitMq(const SiteStatusResponse_RabbitMq& from)
      : SiteStatusResponse_RabbitMq(nullptr, from) {}
  SiteStatusResponse_RabbitMq(SiteStatusResponse_RabbitMq&& from) noexcept
    : SiteStatusResponse_RabbitMq() {
    *this = ::std::move(from);
  }

  inline SiteStatusResponse_RabbitMq& operator=(const SiteStatusResponse_RabbitMq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteStatusResponse_RabbitMq& operator=(SiteStatusResponse_RabbitMq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteStatusResponse_RabbitMq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteStatusResponse_RabbitMq* internal_default_instance() {
    return reinterpret_cast<const SiteStatusResponse_RabbitMq*>(
               &_SiteStatusResponse_RabbitMq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(SiteStatusResponse_RabbitMq& a, SiteStatusResponse_RabbitMq& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteStatusResponse_RabbitMq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteStatusResponse_RabbitMq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteStatusResponse_RabbitMq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteStatusResponse_RabbitMq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteStatusResponse_RabbitMq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteStatusResponse_RabbitMq& from) {
    SiteStatusResponse_RabbitMq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteStatusResponse_RabbitMq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteStatusResponse.RabbitMq";
  }
  protected:
  explicit SiteStatusResponse_RabbitMq(::google::protobuf::Arena* arena);
  SiteStatusResponse_RabbitMq(::google::protobuf::Arena* arena, const SiteStatusResponse_RabbitMq& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProtocolFieldNumber = 1,
    kHeartbeatFieldNumber = 2,
  };
  // string protocol = 1;
  void clear_protocol() ;
  const std::string& protocol() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_protocol(Arg_&& arg, Args_... args);
  std::string* mutable_protocol();
  PROTOBUF_NODISCARD std::string* release_protocol();
  void set_allocated_protocol(std::string* value);

  private:
  const std::string& _internal_protocol() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_protocol(
      const std::string& value);
  std::string* _internal_mutable_protocol();

  public:
  // uint32 heartbeat = 2;
  void clear_heartbeat() ;
  ::uint32_t heartbeat() const;
  void set_heartbeat(::uint32_t value);

  private:
  ::uint32_t _internal_heartbeat() const;
  void _internal_set_heartbeat(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteStatusResponse.RabbitMq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      64, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr protocol_;
    ::uint32_t heartbeat_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteStatusResponse_OpenSearch final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteStatusResponse.OpenSearch) */ {
 public:
  inline SiteStatusResponse_OpenSearch() : SiteStatusResponse_OpenSearch(nullptr) {}
  ~SiteStatusResponse_OpenSearch() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteStatusResponse_OpenSearch(::google::protobuf::internal::ConstantInitialized);

  inline SiteStatusResponse_OpenSearch(const SiteStatusResponse_OpenSearch& from)
      : SiteStatusResponse_OpenSearch(nullptr, from) {}
  SiteStatusResponse_OpenSearch(SiteStatusResponse_OpenSearch&& from) noexcept
    : SiteStatusResponse_OpenSearch() {
    *this = ::std::move(from);
  }

  inline SiteStatusResponse_OpenSearch& operator=(const SiteStatusResponse_OpenSearch& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteStatusResponse_OpenSearch& operator=(SiteStatusResponse_OpenSearch&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteStatusResponse_OpenSearch& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteStatusResponse_OpenSearch* internal_default_instance() {
    return reinterpret_cast<const SiteStatusResponse_OpenSearch*>(
               &_SiteStatusResponse_OpenSearch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(SiteStatusResponse_OpenSearch& a, SiteStatusResponse_OpenSearch& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteStatusResponse_OpenSearch* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteStatusResponse_OpenSearch* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteStatusResponse_OpenSearch* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteStatusResponse_OpenSearch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteStatusResponse_OpenSearch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteStatusResponse_OpenSearch& from) {
    SiteStatusResponse_OpenSearch::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteStatusResponse_OpenSearch* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteStatusResponse.OpenSearch";
  }
  protected:
  explicit SiteStatusResponse_OpenSearch(::google::protobuf::Arena* arena);
  SiteStatusResponse_OpenSearch(::google::protobuf::Arena* arena, const SiteStatusResponse_OpenSearch& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUrlFieldNumber = 1,
    kInfoFieldNumber = 2,
  };
  // string url = 1;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // string info = 2;
  void clear_info() ;
  const std::string& info() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_info(Arg_&& arg, Args_... args);
  std::string* mutable_info();
  PROTOBUF_NODISCARD std::string* release_info();
  void set_allocated_info(std::string* value);

  private:
  const std::string& _internal_info() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_info(
      const std::string& value);
  std::string* _internal_mutable_info();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteStatusResponse.OpenSearch)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      65, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr url_;
    ::google::protobuf::internal::ArenaStringPtr info_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteStatusResponse_MySql final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteStatusResponse.MySql) */ {
 public:
  inline SiteStatusResponse_MySql() : SiteStatusResponse_MySql(nullptr) {}
  ~SiteStatusResponse_MySql() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteStatusResponse_MySql(::google::protobuf::internal::ConstantInitialized);

  inline SiteStatusResponse_MySql(const SiteStatusResponse_MySql& from)
      : SiteStatusResponse_MySql(nullptr, from) {}
  SiteStatusResponse_MySql(SiteStatusResponse_MySql&& from) noexcept
    : SiteStatusResponse_MySql() {
    *this = ::std::move(from);
  }

  inline SiteStatusResponse_MySql& operator=(const SiteStatusResponse_MySql& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteStatusResponse_MySql& operator=(SiteStatusResponse_MySql&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteStatusResponse_MySql& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteStatusResponse_MySql* internal_default_instance() {
    return reinterpret_cast<const SiteStatusResponse_MySql*>(
               &_SiteStatusResponse_MySql_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(SiteStatusResponse_MySql& a, SiteStatusResponse_MySql& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteStatusResponse_MySql* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteStatusResponse_MySql* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteStatusResponse_MySql* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteStatusResponse_MySql>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteStatusResponse_MySql& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteStatusResponse_MySql& from) {
    SiteStatusResponse_MySql::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteStatusResponse_MySql* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteStatusResponse.MySql";
  }
  protected:
  explicit SiteStatusResponse_MySql(::google::protobuf::Arena* arena);
  SiteStatusResponse_MySql(::google::protobuf::Arena* arena, const SiteStatusResponse_MySql& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 2,
    kSizeFieldNumber = 1,
  };
  // string version = 2;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // uint64 size = 1;
  void clear_size() ;
  ::uint64_t size() const;
  void set_size(::uint64_t value);

  private:
  ::uint64_t _internal_size() const;
  void _internal_set_size(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteStatusResponse.MySql)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      60, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::uint64_t size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteStatusResponse_Health final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteStatusResponse.Health) */ {
 public:
  inline SiteStatusResponse_Health() : SiteStatusResponse_Health(nullptr) {}
  ~SiteStatusResponse_Health() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteStatusResponse_Health(::google::protobuf::internal::ConstantInitialized);

  inline SiteStatusResponse_Health(const SiteStatusResponse_Health& from)
      : SiteStatusResponse_Health(nullptr, from) {}
  SiteStatusResponse_Health(SiteStatusResponse_Health&& from) noexcept
    : SiteStatusResponse_Health() {
    *this = ::std::move(from);
  }

  inline SiteStatusResponse_Health& operator=(const SiteStatusResponse_Health& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteStatusResponse_Health& operator=(SiteStatusResponse_Health&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteStatusResponse_Health& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteStatusResponse_Health* internal_default_instance() {
    return reinterpret_cast<const SiteStatusResponse_Health*>(
               &_SiteStatusResponse_Health_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(SiteStatusResponse_Health& a, SiteStatusResponse_Health& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteStatusResponse_Health* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteStatusResponse_Health* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteStatusResponse_Health* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteStatusResponse_Health>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteStatusResponse_Health& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteStatusResponse_Health& from) {
    SiteStatusResponse_Health::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteStatusResponse_Health* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteStatusResponse.Health";
  }
  protected:
  explicit SiteStatusResponse_Health(::google::protobuf::Arena* arena);
  SiteStatusResponse_Health(::google::protobuf::Arena* arena, const SiteStatusResponse_Health& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string status = 2;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteStatusResponse.Health)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      64, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteStatusResponse_Database final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteStatusResponse.Database) */ {
 public:
  inline SiteStatusResponse_Database() : SiteStatusResponse_Database(nullptr) {}
  ~SiteStatusResponse_Database() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteStatusResponse_Database(::google::protobuf::internal::ConstantInitialized);

  inline SiteStatusResponse_Database(const SiteStatusResponse_Database& from)
      : SiteStatusResponse_Database(nullptr, from) {}
  SiteStatusResponse_Database(SiteStatusResponse_Database&& from) noexcept
    : SiteStatusResponse_Database() {
    *this = ::std::move(from);
  }

  inline SiteStatusResponse_Database& operator=(const SiteStatusResponse_Database& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteStatusResponse_Database& operator=(SiteStatusResponse_Database&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteStatusResponse_Database& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteStatusResponse_Database* internal_default_instance() {
    return reinterpret_cast<const SiteStatusResponse_Database*>(
               &_SiteStatusResponse_Database_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(SiteStatusResponse_Database& a, SiteStatusResponse_Database& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteStatusResponse_Database* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteStatusResponse_Database* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteStatusResponse_Database* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteStatusResponse_Database>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteStatusResponse_Database& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteStatusResponse_Database& from) {
    SiteStatusResponse_Database::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteStatusResponse_Database* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteStatusResponse.Database";
  }
  protected:
  explicit SiteStatusResponse_Database(::google::protobuf::Arena* arena);
  SiteStatusResponse_Database(::google::protobuf::Arena* arena, const SiteStatusResponse_Database& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kSizeFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string size = 2;
  void clear_size() ;
  const std::string& size() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_size(Arg_&& arg, Args_... args);
  std::string* mutable_size();
  PROTOBUF_NODISCARD std::string* release_size();
  void set_allocated_size(std::string* value);

  private:
  const std::string& _internal_size() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_size(
      const std::string& value);
  std::string* _internal_mutable_size();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteStatusResponse.Database)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      64, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteSetLogoRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteSetLogoRequest) */ {
 public:
  inline SiteSetLogoRequest() : SiteSetLogoRequest(nullptr) {}
  ~SiteSetLogoRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteSetLogoRequest(::google::protobuf::internal::ConstantInitialized);

  inline SiteSetLogoRequest(const SiteSetLogoRequest& from)
      : SiteSetLogoRequest(nullptr, from) {}
  SiteSetLogoRequest(SiteSetLogoRequest&& from) noexcept
    : SiteSetLogoRequest() {
    *this = ::std::move(from);
  }

  inline SiteSetLogoRequest& operator=(const SiteSetLogoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteSetLogoRequest& operator=(SiteSetLogoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteSetLogoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteSetLogoRequest* internal_default_instance() {
    return reinterpret_cast<const SiteSetLogoRequest*>(
               &_SiteSetLogoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(SiteSetLogoRequest& a, SiteSetLogoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteSetLogoRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteSetLogoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteSetLogoRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteSetLogoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteSetLogoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteSetLogoRequest& from) {
    SiteSetLogoRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteSetLogoRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteSetLogoRequest";
  }
  protected:
  explicit SiteSetLogoRequest(::google::protobuf::Arena* arena);
  SiteSetLogoRequest(::google::protobuf::Arena* arena, const SiteSetLogoRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUrlFieldNumber = 1,
  };
  // string url = 1;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteSetLogoRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      50, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr url_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteSetKeywordsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteSetKeywordsRequest) */ {
 public:
  inline SiteSetKeywordsRequest() : SiteSetKeywordsRequest(nullptr) {}
  ~SiteSetKeywordsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteSetKeywordsRequest(::google::protobuf::internal::ConstantInitialized);

  inline SiteSetKeywordsRequest(const SiteSetKeywordsRequest& from)
      : SiteSetKeywordsRequest(nullptr, from) {}
  SiteSetKeywordsRequest(SiteSetKeywordsRequest&& from) noexcept
    : SiteSetKeywordsRequest() {
    *this = ::std::move(from);
  }

  inline SiteSetKeywordsRequest& operator=(const SiteSetKeywordsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteSetKeywordsRequest& operator=(SiteSetKeywordsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteSetKeywordsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteSetKeywordsRequest* internal_default_instance() {
    return reinterpret_cast<const SiteSetKeywordsRequest*>(
               &_SiteSetKeywordsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(SiteSetKeywordsRequest& a, SiteSetKeywordsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteSetKeywordsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteSetKeywordsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteSetKeywordsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteSetKeywordsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteSetKeywordsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteSetKeywordsRequest& from) {
    SiteSetKeywordsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteSetKeywordsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteSetKeywordsRequest";
  }
  protected:
  explicit SiteSetKeywordsRequest(::google::protobuf::Arena* arena);
  SiteSetKeywordsRequest(::google::protobuf::Arena* arena, const SiteSetKeywordsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated string items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  const std::string& items(int index) const;
  std::string* mutable_items(int index);
  void set_items(int index, const std::string& value);
  void set_items(int index, std::string&& value);
  void set_items(int index, const char* value);
  void set_items(int index, const char* value, std::size_t size);
  void set_items(int index, absl::string_view value);
  std::string* add_items();
  void add_items(const std::string& value);
  void add_items(std::string&& value);
  void add_items(const char* value);
  void add_items(const char* value, std::size_t size);
  void add_items(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& items() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_items();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteSetKeywordsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      56, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteSetInfoRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteSetInfoRequest) */ {
 public:
  inline SiteSetInfoRequest() : SiteSetInfoRequest(nullptr) {}
  ~SiteSetInfoRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteSetInfoRequest(::google::protobuf::internal::ConstantInitialized);

  inline SiteSetInfoRequest(const SiteSetInfoRequest& from)
      : SiteSetInfoRequest(nullptr, from) {}
  SiteSetInfoRequest(SiteSetInfoRequest&& from) noexcept
    : SiteSetInfoRequest() {
    *this = ::std::move(from);
  }

  inline SiteSetInfoRequest& operator=(const SiteSetInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteSetInfoRequest& operator=(SiteSetInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteSetInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteSetInfoRequest* internal_default_instance() {
    return reinterpret_cast<const SiteSetInfoRequest*>(
               &_SiteSetInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(SiteSetInfoRequest& a, SiteSetInfoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteSetInfoRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteSetInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteSetInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteSetInfoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteSetInfoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteSetInfoRequest& from) {
    SiteSetInfoRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteSetInfoRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteSetInfoRequest";
  }
  protected:
  explicit SiteSetInfoRequest(::google::protobuf::Arena* arena);
  SiteSetInfoRequest(::google::protobuf::Arena* arena, const SiteSetInfoRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLangFieldNumber = 1,
    kTitleFieldNumber = 11,
    kSubheadFieldNumber = 12,
    kDescriptionFieldNumber = 13,
  };
  // string lang = 1;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // string title = 11;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string subhead = 12;
  void clear_subhead() ;
  const std::string& subhead() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subhead(Arg_&& arg, Args_... args);
  std::string* mutable_subhead();
  PROTOBUF_NODISCARD std::string* release_subhead();
  void set_allocated_subhead(std::string* value);

  private:
  const std::string& _internal_subhead() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subhead(
      const std::string& value);
  std::string* _internal_mutable_subhead();

  public:
  // string description = 13;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteSetInfoRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 0,
      74, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr lang_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr subhead_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteSetCopyrightRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteSetCopyrightRequest) */ {
 public:
  inline SiteSetCopyrightRequest() : SiteSetCopyrightRequest(nullptr) {}
  ~SiteSetCopyrightRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteSetCopyrightRequest(::google::protobuf::internal::ConstantInitialized);

  inline SiteSetCopyrightRequest(const SiteSetCopyrightRequest& from)
      : SiteSetCopyrightRequest(nullptr, from) {}
  SiteSetCopyrightRequest(SiteSetCopyrightRequest&& from) noexcept
    : SiteSetCopyrightRequest() {
    *this = ::std::move(from);
  }

  inline SiteSetCopyrightRequest& operator=(const SiteSetCopyrightRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteSetCopyrightRequest& operator=(SiteSetCopyrightRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteSetCopyrightRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteSetCopyrightRequest* internal_default_instance() {
    return reinterpret_cast<const SiteSetCopyrightRequest*>(
               &_SiteSetCopyrightRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(SiteSetCopyrightRequest& a, SiteSetCopyrightRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteSetCopyrightRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteSetCopyrightRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteSetCopyrightRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteSetCopyrightRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteSetCopyrightRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteSetCopyrightRequest& from) {
    SiteSetCopyrightRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteSetCopyrightRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteSetCopyrightRequest";
  }
  protected:
  explicit SiteSetCopyrightRequest(::google::protobuf::Arena* arena);
  SiteSetCopyrightRequest(::google::protobuf::Arena* arena, const SiteSetCopyrightRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadFieldNumber = 1,
  };
  // string payload = 1;
  void clear_payload() ;
  const std::string& payload() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payload(Arg_&& arg, Args_... args);
  std::string* mutable_payload();
  PROTOBUF_NODISCARD std::string* release_payload();
  void set_allocated_payload(std::string* value);

  private:
  const std::string& _internal_payload() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payload(
      const std::string& value);
  std::string* _internal_mutable_payload();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteSetCopyrightRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      59, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr payload_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteLayoutResponse_Author final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteLayoutResponse.Author) */ {
 public:
  inline SiteLayoutResponse_Author() : SiteLayoutResponse_Author(nullptr) {}
  ~SiteLayoutResponse_Author() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteLayoutResponse_Author(::google::protobuf::internal::ConstantInitialized);

  inline SiteLayoutResponse_Author(const SiteLayoutResponse_Author& from)
      : SiteLayoutResponse_Author(nullptr, from) {}
  SiteLayoutResponse_Author(SiteLayoutResponse_Author&& from) noexcept
    : SiteLayoutResponse_Author() {
    *this = ::std::move(from);
  }

  inline SiteLayoutResponse_Author& operator=(const SiteLayoutResponse_Author& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteLayoutResponse_Author& operator=(SiteLayoutResponse_Author&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteLayoutResponse_Author& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteLayoutResponse_Author* internal_default_instance() {
    return reinterpret_cast<const SiteLayoutResponse_Author*>(
               &_SiteLayoutResponse_Author_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(SiteLayoutResponse_Author& a, SiteLayoutResponse_Author& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteLayoutResponse_Author* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteLayoutResponse_Author* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteLayoutResponse_Author* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteLayoutResponse_Author>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteLayoutResponse_Author& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteLayoutResponse_Author& from) {
    SiteLayoutResponse_Author::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteLayoutResponse_Author* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteLayoutResponse.Author";
  }
  protected:
  explicit SiteLayoutResponse_Author(::google::protobuf::Arena* arena);
  SiteLayoutResponse_Author(::google::protobuf::Arena* arena, const SiteLayoutResponse_Author& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kEmailFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string email = 2;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteLayoutResponse.Author)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      63, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class ShorterLinkUpdateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.ShorterLinkUpdateRequest) */ {
 public:
  inline ShorterLinkUpdateRequest() : ShorterLinkUpdateRequest(nullptr) {}
  ~ShorterLinkUpdateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ShorterLinkUpdateRequest(::google::protobuf::internal::ConstantInitialized);

  inline ShorterLinkUpdateRequest(const ShorterLinkUpdateRequest& from)
      : ShorterLinkUpdateRequest(nullptr, from) {}
  ShorterLinkUpdateRequest(ShorterLinkUpdateRequest&& from) noexcept
    : ShorterLinkUpdateRequest() {
    *this = ::std::move(from);
  }

  inline ShorterLinkUpdateRequest& operator=(const ShorterLinkUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShorterLinkUpdateRequest& operator=(ShorterLinkUpdateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShorterLinkUpdateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShorterLinkUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const ShorterLinkUpdateRequest*>(
               &_ShorterLinkUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  friend void swap(ShorterLinkUpdateRequest& a, ShorterLinkUpdateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ShorterLinkUpdateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShorterLinkUpdateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShorterLinkUpdateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ShorterLinkUpdateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShorterLinkUpdateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ShorterLinkUpdateRequest& from) {
    ShorterLinkUpdateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ShorterLinkUpdateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.ShorterLinkUpdateRequest";
  }
  protected:
  explicit ShorterLinkUpdateRequest(::google::protobuf::Arena* arena);
  ShorterLinkUpdateRequest(::google::protobuf::Arena* arena, const ShorterLinkUpdateRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUrlFieldNumber = 2,
    kDetailsFieldNumber = 3,
    kIdFieldNumber = 1,
  };
  // string url = 2;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // string details = 3;
  void clear_details() ;
  const std::string& details() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_details(Arg_&& arg, Args_... args);
  std::string* mutable_details();
  PROTOBUF_NODISCARD std::string* release_details();
  void set_allocated_details(std::string* value);

  private:
  const std::string& _internal_details() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_details(
      const std::string& value);
  std::string* _internal_mutable_details();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.ShorterLinkUpdateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      63, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr url_;
    ::google::protobuf::internal::ArenaStringPtr details_;
    ::int32_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class ShorterLinkCreateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.ShorterLinkCreateRequest) */ {
 public:
  inline ShorterLinkCreateRequest() : ShorterLinkCreateRequest(nullptr) {}
  ~ShorterLinkCreateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ShorterLinkCreateRequest(::google::protobuf::internal::ConstantInitialized);

  inline ShorterLinkCreateRequest(const ShorterLinkCreateRequest& from)
      : ShorterLinkCreateRequest(nullptr, from) {}
  ShorterLinkCreateRequest(ShorterLinkCreateRequest&& from) noexcept
    : ShorterLinkCreateRequest() {
    *this = ::std::move(from);
  }

  inline ShorterLinkCreateRequest& operator=(const ShorterLinkCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShorterLinkCreateRequest& operator=(ShorterLinkCreateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShorterLinkCreateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShorterLinkCreateRequest* internal_default_instance() {
    return reinterpret_cast<const ShorterLinkCreateRequest*>(
               &_ShorterLinkCreateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  friend void swap(ShorterLinkCreateRequest& a, ShorterLinkCreateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ShorterLinkCreateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShorterLinkCreateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShorterLinkCreateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ShorterLinkCreateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShorterLinkCreateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ShorterLinkCreateRequest& from) {
    ShorterLinkCreateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ShorterLinkCreateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.ShorterLinkCreateRequest";
  }
  protected:
  explicit ShorterLinkCreateRequest(::google::protobuf::Arena* arena);
  ShorterLinkCreateRequest(::google::protobuf::Arena* arena, const ShorterLinkCreateRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUrlFieldNumber = 1,
    kDetailsFieldNumber = 2,
  };
  // string url = 1;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // string details = 2;
  void clear_details() ;
  const std::string& details() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_details(Arg_&& arg, Args_... args);
  std::string* mutable_details();
  PROTOBUF_NODISCARD std::string* release_details();
  void set_allocated_details(std::string* value);

  private:
  const std::string& _internal_details() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_details(
      const std::string& value);
  std::string* _internal_mutable_details();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.ShorterLinkCreateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      63, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr url_;
    ::google::protobuf::internal::ArenaStringPtr details_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SettingSetRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SettingSetRequest) */ {
 public:
  inline SettingSetRequest() : SettingSetRequest(nullptr) {}
  ~SettingSetRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SettingSetRequest(::google::protobuf::internal::ConstantInitialized);

  inline SettingSetRequest(const SettingSetRequest& from)
      : SettingSetRequest(nullptr, from) {}
  SettingSetRequest(SettingSetRequest&& from) noexcept
    : SettingSetRequest() {
    *this = ::std::move(from);
  }

  inline SettingSetRequest& operator=(const SettingSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SettingSetRequest& operator=(SettingSetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SettingSetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SettingSetRequest* internal_default_instance() {
    return reinterpret_cast<const SettingSetRequest*>(
               &_SettingSetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(SettingSetRequest& a, SettingSetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SettingSetRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SettingSetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SettingSetRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SettingSetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SettingSetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SettingSetRequest& from) {
    SettingSetRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SettingSetRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SettingSetRequest";
  }
  protected:
  explicit SettingSetRequest(::google::protobuf::Arena* arena);
  SettingSetRequest(::google::protobuf::Arena* arena, const SettingSetRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 2,
    kValueFieldNumber = 3,
    kGlobalFieldNumber = 1,
  };
  // string key = 2;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // bytes value = 3;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // bool global = 1;
  void clear_global() ;
  bool global() const;
  void set_global(bool value);

  private:
  bool _internal_global() const;
  void _internal_set_global(bool value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SettingSetRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    bool global_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SettingGetRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SettingGetRequest) */ {
 public:
  inline SettingGetRequest() : SettingGetRequest(nullptr) {}
  ~SettingGetRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SettingGetRequest(::google::protobuf::internal::ConstantInitialized);

  inline SettingGetRequest(const SettingGetRequest& from)
      : SettingGetRequest(nullptr, from) {}
  SettingGetRequest(SettingGetRequest&& from) noexcept
    : SettingGetRequest() {
    *this = ::std::move(from);
  }

  inline SettingGetRequest& operator=(const SettingGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SettingGetRequest& operator=(SettingGetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SettingGetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SettingGetRequest* internal_default_instance() {
    return reinterpret_cast<const SettingGetRequest*>(
               &_SettingGetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(SettingGetRequest& a, SettingGetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SettingGetRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SettingGetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SettingGetRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SettingGetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SettingGetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SettingGetRequest& from) {
    SettingGetRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SettingGetRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SettingGetRequest";
  }
  protected:
  explicit SettingGetRequest(::google::protobuf::Arena* arena);
  SettingGetRequest(::google::protobuf::Arena* arena, const SettingGetRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 2,
    kGlobalFieldNumber = 1,
  };
  // string key = 2;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // bool global = 1;
  void clear_global() ;
  bool global() const;
  void set_global(bool value);

  private:
  bool _internal_global() const;
  void _internal_set_global(bool value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SettingGetRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr key_;
    bool global_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SettingByUserRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SettingByUserRequest) */ {
 public:
  inline SettingByUserRequest() : SettingByUserRequest(nullptr) {}
  ~SettingByUserRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SettingByUserRequest(::google::protobuf::internal::ConstantInitialized);

  inline SettingByUserRequest(const SettingByUserRequest& from)
      : SettingByUserRequest(nullptr, from) {}
  SettingByUserRequest(SettingByUserRequest&& from) noexcept
    : SettingByUserRequest() {
    *this = ::std::move(from);
  }

  inline SettingByUserRequest& operator=(const SettingByUserRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SettingByUserRequest& operator=(SettingByUserRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SettingByUserRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SettingByUserRequest* internal_default_instance() {
    return reinterpret_cast<const SettingByUserRequest*>(
               &_SettingByUserRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(SettingByUserRequest& a, SettingByUserRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SettingByUserRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SettingByUserRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SettingByUserRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SettingByUserRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SettingByUserRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SettingByUserRequest& from) {
    SettingByUserRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SettingByUserRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SettingByUserRequest";
  }
  protected:
  explicit SettingByUserRequest(::google::protobuf::Arena* arena);
  SettingByUserRequest(::google::protobuf::Arena* arena, const SettingByUserRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserFieldNumber = 1,
  };
  // int32 user = 1;
  void clear_user() ;
  ::int32_t user() const;
  void set_user(::int32_t value);

  private:
  ::int32_t _internal_user() const;
  void _internal_set_user(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SettingByUserRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t user_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class Role_Member final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.Role.Member) */ {
 public:
  inline Role_Member() : Role_Member(nullptr) {}
  ~Role_Member() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Role_Member(::google::protobuf::internal::ConstantInitialized);

  inline Role_Member(const Role_Member& from)
      : Role_Member(nullptr, from) {}
  Role_Member(Role_Member&& from) noexcept
    : Role_Member() {
    *this = ::std::move(from);
  }

  inline Role_Member& operator=(const Role_Member& from) {
    CopyFrom(from);
    return *this;
  }
  inline Role_Member& operator=(Role_Member&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Role_Member& default_instance() {
    return *internal_default_instance();
  }
  static inline const Role_Member* internal_default_instance() {
    return reinterpret_cast<const Role_Member*>(
               &_Role_Member_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(Role_Member& a, Role_Member& b) {
    a.Swap(&b);
  }
  inline void Swap(Role_Member* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Role_Member* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Role_Member* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Role_Member>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Role_Member& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Role_Member& from) {
    Role_Member::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Role_Member* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.Role.Member";
  }
  protected:
  explicit Role_Member(::google::protobuf::Arena* arena);
  Role_Member(::google::protobuf::Arena* arena, const Role_Member& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.Role.Member)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      44, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class Resource final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.Resource) */ {
 public:
  inline Resource() : Resource(nullptr) {}
  ~Resource() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Resource(::google::protobuf::internal::ConstantInitialized);

  inline Resource(const Resource& from)
      : Resource(nullptr, from) {}
  Resource(Resource&& from) noexcept
    : Resource() {
    *this = ::std::move(from);
  }

  inline Resource& operator=(const Resource& from) {
    CopyFrom(from);
    return *this;
  }
  inline Resource& operator=(Resource&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Resource& default_instance() {
    return *internal_default_instance();
  }
  enum IdCase {
    kS = 1,
    kI = 2,
    ID_NOT_SET = 0,
  };

  static inline const Resource* internal_default_instance() {
    return reinterpret_cast<const Resource*>(
               &_Resource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(Resource& a, Resource& b) {
    a.Swap(&b);
  }
  inline void Swap(Resource* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Resource* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Resource* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Resource>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Resource& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Resource& from) {
    Resource::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Resource* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.Resource";
  }
  protected:
  explicit Resource(::google::protobuf::Arena* arena);
  Resource(::google::protobuf::Arena* arena, const Resource& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 11,
    kSFieldNumber = 1,
    kIFieldNumber = 2,
  };
  // string type = 11;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // string s = 1;
  bool has_s() const;
  void clear_s() ;
  const std::string& s() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_s(Arg_&& arg, Args_... args);
  std::string* mutable_s();
  PROTOBUF_NODISCARD std::string* release_s();
  void set_allocated_s(std::string* value);

  private:
  const std::string& _internal_s() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_s(
      const std::string& value);
  std::string* _internal_mutable_s();

  public:
  // int32 i = 2;
  bool has_i() const;
  void clear_i() ;
  ::int32_t i() const;
  void set_i(::int32_t value);

  private:
  ::int32_t _internal_i() const;
  void _internal_set_i(::int32_t value);

  public:
  void clear_id();
  IdCase id_case() const;
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.Resource)
 private:
  class _Internal;
  void set_has_s();
  void set_has_i();

  inline bool has_id() const;
  inline void clear_has_id();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 0,
      42, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr type_;
    union IdUnion {
      constexpr IdUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr s_;
      ::int32_t i_;
    } id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class Pagination final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.Pagination) */ {
 public:
  inline Pagination() : Pagination(nullptr) {}
  ~Pagination() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Pagination(::google::protobuf::internal::ConstantInitialized);

  inline Pagination(const Pagination& from)
      : Pagination(nullptr, from) {}
  Pagination(Pagination&& from) noexcept
    : Pagination() {
    *this = ::std::move(from);
  }

  inline Pagination& operator=(const Pagination& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pagination& operator=(Pagination&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Pagination& default_instance() {
    return *internal_default_instance();
  }
  static inline const Pagination* internal_default_instance() {
    return reinterpret_cast<const Pagination*>(
               &_Pagination_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Pagination& a, Pagination& b) {
    a.Swap(&b);
  }
  inline void Swap(Pagination* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pagination* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Pagination* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Pagination>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Pagination& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Pagination& from) {
    Pagination::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Pagination* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.Pagination";
  }
  protected:
  explicit Pagination(::google::protobuf::Arena* arena);
  Pagination(::google::protobuf::Arena* arena, const Pagination& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageFieldNumber = 1,
    kSizeFieldNumber = 2,
    kTotalFieldNumber = 3,
    kHasNextFieldNumber = 11,
    kHasPreviousFieldNumber = 12,
  };
  // int64 page = 1;
  void clear_page() ;
  ::int64_t page() const;
  void set_page(::int64_t value);

  private:
  ::int64_t _internal_page() const;
  void _internal_set_page(::int64_t value);

  public:
  // int64 size = 2;
  void clear_size() ;
  ::int64_t size() const;
  void set_size(::int64_t value);

  private:
  ::int64_t _internal_size() const;
  void _internal_set_size(::int64_t value);

  public:
  // int64 total = 3;
  void clear_total() ;
  ::int64_t total() const;
  void set_total(::int64_t value);

  private:
  ::int64_t _internal_total() const;
  void _internal_set_total(::int64_t value);

  public:
  // bool has_next = 11;
  void clear_has_next() ;
  bool has_next() const;
  void set_has_next(bool value);

  private:
  bool _internal_has_next() const;
  void _internal_set_has_next(bool value);

  public:
  // bool has_previous = 12;
  void clear_has_previous() ;
  bool has_previous() const;
  void set_has_previous(bool value);

  private:
  bool _internal_has_previous() const;
  void _internal_set_has_previous(bool value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.Pagination)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t page_;
    ::int64_t size_;
    ::int64_t total_;
    bool has_next_;
    bool has_previous_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class Pager final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.Pager) */ {
 public:
  inline Pager() : Pager(nullptr) {}
  ~Pager() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Pager(::google::protobuf::internal::ConstantInitialized);

  inline Pager(const Pager& from)
      : Pager(nullptr, from) {}
  Pager(Pager&& from) noexcept
    : Pager() {
    *this = ::std::move(from);
  }

  inline Pager& operator=(const Pager& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pager& operator=(Pager&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Pager& default_instance() {
    return *internal_default_instance();
  }
  static inline const Pager* internal_default_instance() {
    return reinterpret_cast<const Pager*>(
               &_Pager_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Pager& a, Pager& b) {
    a.Swap(&b);
  }
  inline void Swap(Pager* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pager* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Pager* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Pager>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Pager& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Pager& from) {
    Pager::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Pager* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.Pager";
  }
  protected:
  explicit Pager(::google::protobuf::Arena* arena);
  Pager(::google::protobuf::Arena* arena, const Pager& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageFieldNumber = 1,
    kSizeFieldNumber = 2,
  };
  // int64 page = 1;
  void clear_page() ;
  ::int64_t page() const;
  void set_page(::int64_t value);

  private:
  ::int64_t _internal_page() const;
  void _internal_set_page(::int64_t value);

  public:
  // int64 size = 2;
  void clear_size() ;
  ::int64_t size() const;
  void set_size(::int64_t value);

  private:
  ::int64_t _internal_size() const;
  void _internal_set_size(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.Pager)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t page_;
    ::int64_t size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class Oauth2State final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.Oauth2State) */ {
 public:
  inline Oauth2State() : Oauth2State(nullptr) {}
  ~Oauth2State() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Oauth2State(::google::protobuf::internal::ConstantInitialized);

  inline Oauth2State(const Oauth2State& from)
      : Oauth2State(nullptr, from) {}
  Oauth2State(Oauth2State&& from) noexcept
    : Oauth2State() {
    *this = ::std::move(from);
  }

  inline Oauth2State& operator=(const Oauth2State& from) {
    CopyFrom(from);
    return *this;
  }
  inline Oauth2State& operator=(Oauth2State&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Oauth2State& default_instance() {
    return *internal_default_instance();
  }
  static inline const Oauth2State* internal_default_instance() {
    return reinterpret_cast<const Oauth2State*>(
               &_Oauth2State_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Oauth2State& a, Oauth2State& b) {
    a.Swap(&b);
  }
  inline void Swap(Oauth2State* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Oauth2State* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Oauth2State* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Oauth2State>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Oauth2State& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Oauth2State& from) {
    Oauth2State::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Oauth2State* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.Oauth2State";
  }
  protected:
  explicit Oauth2State(::google::protobuf::Arena* arena);
  Oauth2State(::google::protobuf::Arena* arena, const Oauth2State& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGotoFieldNumber = 1,
    kHostFieldNumber = 2,
    kUserFieldNumber = 3,
    kIdFieldNumber = 9,
  };
  // string goto = 1;
  void clear_goto_() ;
  const std::string& goto_() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_goto_(Arg_&& arg, Args_... args);
  std::string* mutable_goto_();
  PROTOBUF_NODISCARD std::string* release_goto_();
  void set_allocated_goto_(std::string* value);

  private:
  const std::string& _internal_goto_() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_goto_(
      const std::string& value);
  std::string* _internal_mutable_goto_();

  public:
  // string host = 2;
  void clear_host() ;
  const std::string& host() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_host(Arg_&& arg, Args_... args);
  std::string* mutable_host();
  PROTOBUF_NODISCARD std::string* release_host();
  void set_allocated_host(std::string* value);

  private:
  const std::string& _internal_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_host(
      const std::string& value);
  std::string* _internal_mutable_host();

  public:
  // optional string user = 3;
  bool has_user() const;
  void clear_user() ;
  const std::string& user() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user(Arg_&& arg, Args_... args);
  std::string* mutable_user();
  PROTOBUF_NODISCARD std::string* release_user();
  void set_allocated_user(std::string* value);

  private:
  const std::string& _internal_user() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user(
      const std::string& value);
  std::string* _internal_mutable_user();

  public:
  // string id = 9;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.Oauth2State)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr goto__;
    ::google::protobuf::internal::ArenaStringPtr host_;
    ::google::protobuf::internal::ArenaStringPtr user_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class NotificationUpdateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.NotificationUpdateRequest) */ {
 public:
  inline NotificationUpdateRequest() : NotificationUpdateRequest(nullptr) {}
  ~NotificationUpdateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NotificationUpdateRequest(::google::protobuf::internal::ConstantInitialized);

  inline NotificationUpdateRequest(const NotificationUpdateRequest& from)
      : NotificationUpdateRequest(nullptr, from) {}
  NotificationUpdateRequest(NotificationUpdateRequest&& from) noexcept
    : NotificationUpdateRequest() {
    *this = ::std::move(from);
  }

  inline NotificationUpdateRequest& operator=(const NotificationUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotificationUpdateRequest& operator=(NotificationUpdateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotificationUpdateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotificationUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const NotificationUpdateRequest*>(
               &_NotificationUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  friend void swap(NotificationUpdateRequest& a, NotificationUpdateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(NotificationUpdateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotificationUpdateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotificationUpdateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NotificationUpdateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotificationUpdateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const NotificationUpdateRequest& from) {
    NotificationUpdateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotificationUpdateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.NotificationUpdateRequest";
  }
  protected:
  explicit NotificationUpdateRequest(::google::protobuf::Arena* arena);
  NotificationUpdateRequest(::google::protobuf::Arena* arena, const NotificationUpdateRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTitleFieldNumber = 3,
    kUrlFieldNumber = 4,
    kIdFieldNumber = 1,
    kLevelFieldNumber = 2,
  };
  // string title = 3;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string url = 4;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // .palm.metasequoia.v1.NotificationIndexResponse.Item.Level level = 2;
  void clear_level() ;
  ::palm::metasequoia::v1::NotificationIndexResponse_Item_Level level() const;
  void set_level(::palm::metasequoia::v1::NotificationIndexResponse_Item_Level value);

  private:
  ::palm::metasequoia::v1::NotificationIndexResponse_Item_Level _internal_level() const;
  void _internal_set_level(::palm::metasequoia::v1::NotificationIndexResponse_Item_Level value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.NotificationUpdateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      62, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr url_;
    ::int32_t id_;
    int level_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class NotificationCreateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.NotificationCreateRequest) */ {
 public:
  inline NotificationCreateRequest() : NotificationCreateRequest(nullptr) {}
  ~NotificationCreateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NotificationCreateRequest(::google::protobuf::internal::ConstantInitialized);

  inline NotificationCreateRequest(const NotificationCreateRequest& from)
      : NotificationCreateRequest(nullptr, from) {}
  NotificationCreateRequest(NotificationCreateRequest&& from) noexcept
    : NotificationCreateRequest() {
    *this = ::std::move(from);
  }

  inline NotificationCreateRequest& operator=(const NotificationCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotificationCreateRequest& operator=(NotificationCreateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotificationCreateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotificationCreateRequest* internal_default_instance() {
    return reinterpret_cast<const NotificationCreateRequest*>(
               &_NotificationCreateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  friend void swap(NotificationCreateRequest& a, NotificationCreateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(NotificationCreateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotificationCreateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotificationCreateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NotificationCreateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotificationCreateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const NotificationCreateRequest& from) {
    NotificationCreateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotificationCreateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.NotificationCreateRequest";
  }
  protected:
  explicit NotificationCreateRequest(::google::protobuf::Arena* arena);
  NotificationCreateRequest(::google::protobuf::Arena* arena, const NotificationCreateRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTitleFieldNumber = 2,
    kUrlFieldNumber = 3,
    kLangFieldNumber = 9,
    kLevelFieldNumber = 1,
  };
  // string title = 2;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string url = 3;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // string lang = 9;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // .palm.metasequoia.v1.NotificationIndexResponse.Item.Level level = 1;
  void clear_level() ;
  ::palm::metasequoia::v1::NotificationIndexResponse_Item_Level level() const;
  void set_level(::palm::metasequoia::v1::NotificationIndexResponse_Item_Level value);

  private:
  ::palm::metasequoia::v1::NotificationIndexResponse_Item_Level _internal_level() const;
  void _internal_set_level(::palm::metasequoia::v1::NotificationIndexResponse_Item_Level value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.NotificationCreateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      66, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr url_;
    ::google::protobuf::internal::ArenaStringPtr lang_;
    int level_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class LocaleSetRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.LocaleSetRequest) */ {
 public:
  inline LocaleSetRequest() : LocaleSetRequest(nullptr) {}
  ~LocaleSetRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LocaleSetRequest(::google::protobuf::internal::ConstantInitialized);

  inline LocaleSetRequest(const LocaleSetRequest& from)
      : LocaleSetRequest(nullptr, from) {}
  LocaleSetRequest(LocaleSetRequest&& from) noexcept
    : LocaleSetRequest() {
    *this = ::std::move(from);
  }

  inline LocaleSetRequest& operator=(const LocaleSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocaleSetRequest& operator=(LocaleSetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocaleSetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LocaleSetRequest* internal_default_instance() {
    return reinterpret_cast<const LocaleSetRequest*>(
               &_LocaleSetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(LocaleSetRequest& a, LocaleSetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LocaleSetRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocaleSetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocaleSetRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LocaleSetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocaleSetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LocaleSetRequest& from) {
    LocaleSetRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LocaleSetRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.LocaleSetRequest";
  }
  protected:
  explicit LocaleSetRequest(::google::protobuf::Arena* arena);
  LocaleSetRequest(::google::protobuf::Arena* arena, const LocaleSetRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLangFieldNumber = 1,
    kCodeFieldNumber = 2,
    kMessageFieldNumber = 3,
  };
  // string lang = 1;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // string code = 2;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // string message = 3;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.LocaleSetRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      60, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr lang_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class LocaleGetRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.LocaleGetRequest) */ {
 public:
  inline LocaleGetRequest() : LocaleGetRequest(nullptr) {}
  ~LocaleGetRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LocaleGetRequest(::google::protobuf::internal::ConstantInitialized);

  inline LocaleGetRequest(const LocaleGetRequest& from)
      : LocaleGetRequest(nullptr, from) {}
  LocaleGetRequest(LocaleGetRequest&& from) noexcept
    : LocaleGetRequest() {
    *this = ::std::move(from);
  }

  inline LocaleGetRequest& operator=(const LocaleGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocaleGetRequest& operator=(LocaleGetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocaleGetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LocaleGetRequest* internal_default_instance() {
    return reinterpret_cast<const LocaleGetRequest*>(
               &_LocaleGetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(LocaleGetRequest& a, LocaleGetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LocaleGetRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocaleGetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocaleGetRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LocaleGetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocaleGetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LocaleGetRequest& from) {
    LocaleGetRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LocaleGetRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.LocaleGetRequest";
  }
  protected:
  explicit LocaleGetRequest(::google::protobuf::Arena* arena);
  LocaleGetRequest(::google::protobuf::Arena* arena, const LocaleGetRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLangFieldNumber = 1,
    kCodeFieldNumber = 2,
  };
  // string lang = 1;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // string code = 2;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.LocaleGetRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      53, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr lang_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class LocaleByLangRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.LocaleByLangRequest) */ {
 public:
  inline LocaleByLangRequest() : LocaleByLangRequest(nullptr) {}
  ~LocaleByLangRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LocaleByLangRequest(::google::protobuf::internal::ConstantInitialized);

  inline LocaleByLangRequest(const LocaleByLangRequest& from)
      : LocaleByLangRequest(nullptr, from) {}
  LocaleByLangRequest(LocaleByLangRequest&& from) noexcept
    : LocaleByLangRequest() {
    *this = ::std::move(from);
  }

  inline LocaleByLangRequest& operator=(const LocaleByLangRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocaleByLangRequest& operator=(LocaleByLangRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocaleByLangRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LocaleByLangRequest* internal_default_instance() {
    return reinterpret_cast<const LocaleByLangRequest*>(
               &_LocaleByLangRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(LocaleByLangRequest& a, LocaleByLangRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LocaleByLangRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocaleByLangRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocaleByLangRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LocaleByLangRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocaleByLangRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LocaleByLangRequest& from) {
    LocaleByLangRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LocaleByLangRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.LocaleByLangRequest";
  }
  protected:
  explicit LocaleByLangRequest(::google::protobuf::Arena* arena);
  LocaleByLangRequest(::google::protobuf::Arena* arena, const LocaleByLangRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLangFieldNumber = 1,
  };
  // string lang = 1;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.LocaleByLangRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      52, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr lang_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class IndexNowProfile final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.IndexNowProfile) */ {
 public:
  inline IndexNowProfile() : IndexNowProfile(nullptr) {}
  ~IndexNowProfile() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IndexNowProfile(::google::protobuf::internal::ConstantInitialized);

  inline IndexNowProfile(const IndexNowProfile& from)
      : IndexNowProfile(nullptr, from) {}
  IndexNowProfile(IndexNowProfile&& from) noexcept
    : IndexNowProfile() {
    *this = ::std::move(from);
  }

  inline IndexNowProfile& operator=(const IndexNowProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline IndexNowProfile& operator=(IndexNowProfile&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IndexNowProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const IndexNowProfile* internal_default_instance() {
    return reinterpret_cast<const IndexNowProfile*>(
               &_IndexNowProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(IndexNowProfile& a, IndexNowProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(IndexNowProfile* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IndexNowProfile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IndexNowProfile* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IndexNowProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IndexNowProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IndexNowProfile& from) {
    IndexNowProfile::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IndexNowProfile* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.IndexNowProfile";
  }
  protected:
  explicit IndexNowProfile(::google::protobuf::Arena* arena);
  IndexNowProfile(::google::protobuf::Arena* arena, const IndexNowProfile& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
  };
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.IndexNowProfile)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      47, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class IndexNowPingRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.IndexNowPingRequest) */ {
 public:
  inline IndexNowPingRequest() : IndexNowPingRequest(nullptr) {}
  ~IndexNowPingRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IndexNowPingRequest(::google::protobuf::internal::ConstantInitialized);

  inline IndexNowPingRequest(const IndexNowPingRequest& from)
      : IndexNowPingRequest(nullptr, from) {}
  IndexNowPingRequest(IndexNowPingRequest&& from) noexcept
    : IndexNowPingRequest() {
    *this = ::std::move(from);
  }

  inline IndexNowPingRequest& operator=(const IndexNowPingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IndexNowPingRequest& operator=(IndexNowPingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IndexNowPingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const IndexNowPingRequest* internal_default_instance() {
    return reinterpret_cast<const IndexNowPingRequest*>(
               &_IndexNowPingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(IndexNowPingRequest& a, IndexNowPingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(IndexNowPingRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IndexNowPingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IndexNowPingRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IndexNowPingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IndexNowPingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IndexNowPingRequest& from) {
    IndexNowPingRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IndexNowPingRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.IndexNowPingRequest";
  }
  protected:
  explicit IndexNowPingRequest(::google::protobuf::Arena* arena);
  IndexNowPingRequest(::google::protobuf::Arena* arena, const IndexNowPingRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kHomeFieldNumber = 9,
  };
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // string home = 9;
  void clear_home() ;
  const std::string& home() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_home(Arg_&& arg, Args_... args);
  std::string* mutable_home();
  PROTOBUF_NODISCARD std::string* release_home();
  void set_allocated_home(std::string* value);

  private:
  const std::string& _internal_home() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_home(
      const std::string& value);
  std::string* _internal_mutable_home();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.IndexNowPingRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 0,
      55, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr home_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class IdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.IdRequest) */ {
 public:
  inline IdRequest() : IdRequest(nullptr) {}
  ~IdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IdRequest(::google::protobuf::internal::ConstantInitialized);

  inline IdRequest(const IdRequest& from)
      : IdRequest(nullptr, from) {}
  IdRequest(IdRequest&& from) noexcept
    : IdRequest() {
    *this = ::std::move(from);
  }

  inline IdRequest& operator=(const IdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IdRequest& operator=(IdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const IdRequest* internal_default_instance() {
    return reinterpret_cast<const IdRequest*>(
               &_IdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(IdRequest& a, IdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(IdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IdRequest& from) {
    IdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.IdRequest";
  }
  protected:
  explicit IdRequest(::google::protobuf::Arena* arena);
  IdRequest(::google::protobuf::Arena* arena, const IdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.IdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class GoogleSignInUrlResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.GoogleSignInUrlResponse) */ {
 public:
  inline GoogleSignInUrlResponse() : GoogleSignInUrlResponse(nullptr) {}
  ~GoogleSignInUrlResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GoogleSignInUrlResponse(::google::protobuf::internal::ConstantInitialized);

  inline GoogleSignInUrlResponse(const GoogleSignInUrlResponse& from)
      : GoogleSignInUrlResponse(nullptr, from) {}
  GoogleSignInUrlResponse(GoogleSignInUrlResponse&& from) noexcept
    : GoogleSignInUrlResponse() {
    *this = ::std::move(from);
  }

  inline GoogleSignInUrlResponse& operator=(const GoogleSignInUrlResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GoogleSignInUrlResponse& operator=(GoogleSignInUrlResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GoogleSignInUrlResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GoogleSignInUrlResponse* internal_default_instance() {
    return reinterpret_cast<const GoogleSignInUrlResponse*>(
               &_GoogleSignInUrlResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  friend void swap(GoogleSignInUrlResponse& a, GoogleSignInUrlResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GoogleSignInUrlResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GoogleSignInUrlResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GoogleSignInUrlResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GoogleSignInUrlResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GoogleSignInUrlResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GoogleSignInUrlResponse& from) {
    GoogleSignInUrlResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GoogleSignInUrlResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.GoogleSignInUrlResponse";
  }
  protected:
  explicit GoogleSignInUrlResponse(::google::protobuf::Arena* arena);
  GoogleSignInUrlResponse(::google::protobuf::Arena* arena, const GoogleSignInUrlResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUrlFieldNumber = 1,
    kNonceFieldNumber = 2,
  };
  // string url = 1;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // string nonce = 2;
  void clear_nonce() ;
  const std::string& nonce() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nonce(Arg_&& arg, Args_... args);
  std::string* mutable_nonce();
  PROTOBUF_NODISCARD std::string* release_nonce();
  void set_allocated_nonce(std::string* value);

  private:
  const std::string& _internal_nonce() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nonce(
      const std::string& value);
  std::string* _internal_mutable_nonce();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.GoogleSignInUrlResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      60, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr url_;
    ::google::protobuf::internal::ArenaStringPtr nonce_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class GoogleProfile_ReCaptcha final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.GoogleProfile.ReCaptcha) */ {
 public:
  inline GoogleProfile_ReCaptcha() : GoogleProfile_ReCaptcha(nullptr) {}
  ~GoogleProfile_ReCaptcha() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GoogleProfile_ReCaptcha(::google::protobuf::internal::ConstantInitialized);

  inline GoogleProfile_ReCaptcha(const GoogleProfile_ReCaptcha& from)
      : GoogleProfile_ReCaptcha(nullptr, from) {}
  GoogleProfile_ReCaptcha(GoogleProfile_ReCaptcha&& from) noexcept
    : GoogleProfile_ReCaptcha() {
    *this = ::std::move(from);
  }

  inline GoogleProfile_ReCaptcha& operator=(const GoogleProfile_ReCaptcha& from) {
    CopyFrom(from);
    return *this;
  }
  inline GoogleProfile_ReCaptcha& operator=(GoogleProfile_ReCaptcha&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GoogleProfile_ReCaptcha& default_instance() {
    return *internal_default_instance();
  }
  static inline const GoogleProfile_ReCaptcha* internal_default_instance() {
    return reinterpret_cast<const GoogleProfile_ReCaptcha*>(
               &_GoogleProfile_ReCaptcha_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(GoogleProfile_ReCaptcha& a, GoogleProfile_ReCaptcha& b) {
    a.Swap(&b);
  }
  inline void Swap(GoogleProfile_ReCaptcha* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GoogleProfile_ReCaptcha* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GoogleProfile_ReCaptcha* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GoogleProfile_ReCaptcha>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GoogleProfile_ReCaptcha& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GoogleProfile_ReCaptcha& from) {
    GoogleProfile_ReCaptcha::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GoogleProfile_ReCaptcha* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.GoogleProfile.ReCaptcha";
  }
  protected:
  explicit GoogleProfile_ReCaptcha(::google::protobuf::Arena* arena);
  GoogleProfile_ReCaptcha(::google::protobuf::Arena* arena, const GoogleProfile_ReCaptcha& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSiteKeyFieldNumber = 1,
    kSecretFieldNumber = 2,
  };
  // string site_key = 1;
  void clear_site_key() ;
  const std::string& site_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_site_key(Arg_&& arg, Args_... args);
  std::string* mutable_site_key();
  PROTOBUF_NODISCARD std::string* release_site_key();
  void set_allocated_site_key(std::string* value);

  private:
  const std::string& _internal_site_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_site_key(
      const std::string& value);
  std::string* _internal_mutable_site_key();

  public:
  // string secret = 2;
  void clear_secret() ;
  const std::string& secret() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_secret(Arg_&& arg, Args_... args);
  std::string* mutable_secret();
  PROTOBUF_NODISCARD std::string* release_secret();
  void set_allocated_secret(std::string* value);

  private:
  const std::string& _internal_secret() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_secret(
      const std::string& value);
  std::string* _internal_mutable_secret();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.GoogleProfile.ReCaptcha)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      66, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr site_key_;
    ::google::protobuf::internal::ArenaStringPtr secret_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class EmailTask_Body final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.EmailTask.Body) */ {
 public:
  inline EmailTask_Body() : EmailTask_Body(nullptr) {}
  ~EmailTask_Body() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EmailTask_Body(::google::protobuf::internal::ConstantInitialized);

  inline EmailTask_Body(const EmailTask_Body& from)
      : EmailTask_Body(nullptr, from) {}
  EmailTask_Body(EmailTask_Body&& from) noexcept
    : EmailTask_Body() {
    *this = ::std::move(from);
  }

  inline EmailTask_Body& operator=(const EmailTask_Body& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmailTask_Body& operator=(EmailTask_Body&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmailTask_Body& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmailTask_Body* internal_default_instance() {
    return reinterpret_cast<const EmailTask_Body*>(
               &_EmailTask_Body_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(EmailTask_Body& a, EmailTask_Body& b) {
    a.Swap(&b);
  }
  inline void Swap(EmailTask_Body* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmailTask_Body* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmailTask_Body* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EmailTask_Body>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EmailTask_Body& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EmailTask_Body& from) {
    EmailTask_Body::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EmailTask_Body* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.EmailTask.Body";
  }
  protected:
  explicit EmailTask_Body(::google::protobuf::Arena* arena);
  EmailTask_Body(::google::protobuf::Arena* arena, const EmailTask_Body& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 1,
    kHtmlFieldNumber = 2,
  };
  // string text = 1;
  void clear_text() ;
  const std::string& text() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_text(Arg_&& arg, Args_... args);
  std::string* mutable_text();
  PROTOBUF_NODISCARD std::string* release_text();
  void set_allocated_text(std::string* value);

  private:
  const std::string& _internal_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_text(
      const std::string& value);
  std::string* _internal_mutable_text();

  public:
  // bool html = 2;
  void clear_html() ;
  bool html() const;
  void set_html(bool value);

  private:
  bool _internal_html() const;
  void _internal_set_html(bool value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.EmailTask.Body)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      47, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr text_;
    bool html_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class EmailTask_Attachment final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.EmailTask.Attachment) */ {
 public:
  inline EmailTask_Attachment() : EmailTask_Attachment(nullptr) {}
  ~EmailTask_Attachment() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EmailTask_Attachment(::google::protobuf::internal::ConstantInitialized);

  inline EmailTask_Attachment(const EmailTask_Attachment& from)
      : EmailTask_Attachment(nullptr, from) {}
  EmailTask_Attachment(EmailTask_Attachment&& from) noexcept
    : EmailTask_Attachment() {
    *this = ::std::move(from);
  }

  inline EmailTask_Attachment& operator=(const EmailTask_Attachment& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmailTask_Attachment& operator=(EmailTask_Attachment&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmailTask_Attachment& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmailTask_Attachment* internal_default_instance() {
    return reinterpret_cast<const EmailTask_Attachment*>(
               &_EmailTask_Attachment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(EmailTask_Attachment& a, EmailTask_Attachment& b) {
    a.Swap(&b);
  }
  inline void Swap(EmailTask_Attachment* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmailTask_Attachment* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmailTask_Attachment* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EmailTask_Attachment>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EmailTask_Attachment& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EmailTask_Attachment& from) {
    EmailTask_Attachment::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EmailTask_Attachment* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.EmailTask.Attachment";
  }
  protected:
  explicit EmailTask_Attachment(::google::protobuf::Arena* arena);
  EmailTask_Attachment(::google::protobuf::Arena* arena, const EmailTask_Attachment& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kPayloadFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // bytes payload = 2;
  void clear_payload() ;
  const std::string& payload() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payload(Arg_&& arg, Args_... args);
  std::string* mutable_payload();
  PROTOBUF_NODISCARD std::string* release_payload();
  void set_allocated_payload(std::string* value);

  private:
  const std::string& _internal_payload() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payload(
      const std::string& value);
  std::string* _internal_mutable_payload();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.EmailTask.Attachment)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      53, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr payload_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class EmailTask_Address final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.EmailTask.Address) */ {
 public:
  inline EmailTask_Address() : EmailTask_Address(nullptr) {}
  ~EmailTask_Address() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EmailTask_Address(::google::protobuf::internal::ConstantInitialized);

  inline EmailTask_Address(const EmailTask_Address& from)
      : EmailTask_Address(nullptr, from) {}
  EmailTask_Address(EmailTask_Address&& from) noexcept
    : EmailTask_Address() {
    *this = ::std::move(from);
  }

  inline EmailTask_Address& operator=(const EmailTask_Address& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmailTask_Address& operator=(EmailTask_Address&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmailTask_Address& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmailTask_Address* internal_default_instance() {
    return reinterpret_cast<const EmailTask_Address*>(
               &_EmailTask_Address_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(EmailTask_Address& a, EmailTask_Address& b) {
    a.Swap(&b);
  }
  inline void Swap(EmailTask_Address* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmailTask_Address* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmailTask_Address* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EmailTask_Address>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EmailTask_Address& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EmailTask_Address& from) {
    EmailTask_Address::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EmailTask_Address* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.EmailTask.Address";
  }
  protected:
  explicit EmailTask_Address(::google::protobuf::Arena* arena);
  EmailTask_Address(::google::protobuf::Arena* arena, const EmailTask_Address& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kEmailFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string email = 2;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.EmailTask.Address)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      55, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class CategoryUpdateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.CategoryUpdateRequest) */ {
 public:
  inline CategoryUpdateRequest() : CategoryUpdateRequest(nullptr) {}
  ~CategoryUpdateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CategoryUpdateRequest(::google::protobuf::internal::ConstantInitialized);

  inline CategoryUpdateRequest(const CategoryUpdateRequest& from)
      : CategoryUpdateRequest(nullptr, from) {}
  CategoryUpdateRequest(CategoryUpdateRequest&& from) noexcept
    : CategoryUpdateRequest() {
    *this = ::std::move(from);
  }

  inline CategoryUpdateRequest& operator=(const CategoryUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CategoryUpdateRequest& operator=(CategoryUpdateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CategoryUpdateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CategoryUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const CategoryUpdateRequest*>(
               &_CategoryUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  friend void swap(CategoryUpdateRequest& a, CategoryUpdateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CategoryUpdateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CategoryUpdateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CategoryUpdateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CategoryUpdateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CategoryUpdateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CategoryUpdateRequest& from) {
    CategoryUpdateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CategoryUpdateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.CategoryUpdateRequest";
  }
  protected:
  explicit CategoryUpdateRequest(::google::protobuf::Arena* arena);
  CategoryUpdateRequest(::google::protobuf::Arena* arena, const CategoryUpdateRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // string code = 2;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.CategoryUpdateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::int32_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class CategoryCreateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.CategoryCreateRequest) */ {
 public:
  inline CategoryCreateRequest() : CategoryCreateRequest(nullptr) {}
  ~CategoryCreateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CategoryCreateRequest(::google::protobuf::internal::ConstantInitialized);

  inline CategoryCreateRequest(const CategoryCreateRequest& from)
      : CategoryCreateRequest(nullptr, from) {}
  CategoryCreateRequest(CategoryCreateRequest&& from) noexcept
    : CategoryCreateRequest() {
    *this = ::std::move(from);
  }

  inline CategoryCreateRequest& operator=(const CategoryCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CategoryCreateRequest& operator=(CategoryCreateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CategoryCreateRequest& default_instance() {
    return *internal_default_instance();
  }
  enum ByCase {
    kLeft = 2,
    kParent = 3,
    BY_NOT_SET = 0,
  };

  static inline const CategoryCreateRequest* internal_default_instance() {
    return reinterpret_cast<const CategoryCreateRequest*>(
               &_CategoryCreateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  friend void swap(CategoryCreateRequest& a, CategoryCreateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CategoryCreateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CategoryCreateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CategoryCreateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CategoryCreateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CategoryCreateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CategoryCreateRequest& from) {
    CategoryCreateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CategoryCreateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.CategoryCreateRequest";
  }
  protected:
  explicit CategoryCreateRequest(::google::protobuf::Arena* arena);
  CategoryCreateRequest(::google::protobuf::Arena* arena, const CategoryCreateRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 1,
    kLeftFieldNumber = 2,
    kParentFieldNumber = 3,
  };
  // string code = 1;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // int32 left = 2;
  bool has_left() const;
  void clear_left() ;
  ::int32_t left() const;
  void set_left(::int32_t value);

  private:
  ::int32_t _internal_left() const;
  void _internal_set_left(::int32_t value);

  public:
  // int32 parent = 3;
  bool has_parent() const;
  void clear_parent() ;
  ::int32_t parent() const;
  void set_parent(::int32_t value);

  private:
  ::int32_t _internal_parent() const;
  void _internal_set_parent(::int32_t value);

  public:
  void clear_by();
  ByCase by_case() const;
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.CategoryCreateRequest)
 private:
  class _Internal;
  void set_has_left();
  void set_has_parent();

  inline bool has_by() const;
  inline void clear_has_by();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 0,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr code_;
    union ByUnion {
      constexpr ByUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::int32_t left_;
      ::int32_t parent_;
    } by_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class BaiduProfile_SiteVerify final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.BaiduProfile.SiteVerify) */ {
 public:
  inline BaiduProfile_SiteVerify() : BaiduProfile_SiteVerify(nullptr) {}
  ~BaiduProfile_SiteVerify() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BaiduProfile_SiteVerify(::google::protobuf::internal::ConstantInitialized);

  inline BaiduProfile_SiteVerify(const BaiduProfile_SiteVerify& from)
      : BaiduProfile_SiteVerify(nullptr, from) {}
  BaiduProfile_SiteVerify(BaiduProfile_SiteVerify&& from) noexcept
    : BaiduProfile_SiteVerify() {
    *this = ::std::move(from);
  }

  inline BaiduProfile_SiteVerify& operator=(const BaiduProfile_SiteVerify& from) {
    CopyFrom(from);
    return *this;
  }
  inline BaiduProfile_SiteVerify& operator=(BaiduProfile_SiteVerify&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BaiduProfile_SiteVerify& default_instance() {
    return *internal_default_instance();
  }
  static inline const BaiduProfile_SiteVerify* internal_default_instance() {
    return reinterpret_cast<const BaiduProfile_SiteVerify*>(
               &_BaiduProfile_SiteVerify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(BaiduProfile_SiteVerify& a, BaiduProfile_SiteVerify& b) {
    a.Swap(&b);
  }
  inline void Swap(BaiduProfile_SiteVerify* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BaiduProfile_SiteVerify* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BaiduProfile_SiteVerify* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BaiduProfile_SiteVerify>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BaiduProfile_SiteVerify& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BaiduProfile_SiteVerify& from) {
    BaiduProfile_SiteVerify::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BaiduProfile_SiteVerify* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.BaiduProfile.SiteVerify";
  }
  protected:
  explicit BaiduProfile_SiteVerify(::google::protobuf::Arena* arena);
  BaiduProfile_SiteVerify(::google::protobuf::Arena* arena, const BaiduProfile_SiteVerify& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kContentFieldNumber = 2,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string content = 2;
  void clear_content() ;
  const std::string& content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* value);

  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(
      const std::string& value);
  std::string* _internal_mutable_content();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.BaiduProfile.SiteVerify)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      61, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr content_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class WechatAllOauth2UserResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.WechatAllOauth2UserResponse) */ {
 public:
  inline WechatAllOauth2UserResponse() : WechatAllOauth2UserResponse(nullptr) {}
  ~WechatAllOauth2UserResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatAllOauth2UserResponse(::google::protobuf::internal::ConstantInitialized);

  inline WechatAllOauth2UserResponse(const WechatAllOauth2UserResponse& from)
      : WechatAllOauth2UserResponse(nullptr, from) {}
  WechatAllOauth2UserResponse(WechatAllOauth2UserResponse&& from) noexcept
    : WechatAllOauth2UserResponse() {
    *this = ::std::move(from);
  }

  inline WechatAllOauth2UserResponse& operator=(const WechatAllOauth2UserResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatAllOauth2UserResponse& operator=(WechatAllOauth2UserResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatAllOauth2UserResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatAllOauth2UserResponse* internal_default_instance() {
    return reinterpret_cast<const WechatAllOauth2UserResponse*>(
               &_WechatAllOauth2UserResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  friend void swap(WechatAllOauth2UserResponse& a, WechatAllOauth2UserResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatAllOauth2UserResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatAllOauth2UserResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatAllOauth2UserResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatAllOauth2UserResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatAllOauth2UserResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatAllOauth2UserResponse& from) {
    WechatAllOauth2UserResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatAllOauth2UserResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.WechatAllOauth2UserResponse";
  }
  protected:
  explicit WechatAllOauth2UserResponse(::google::protobuf::Arena* arena);
  WechatAllOauth2UserResponse(::google::protobuf::Arena* arena, const WechatAllOauth2UserResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = WechatAllOauth2UserResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .palm.metasequoia.v1.WechatAllOauth2UserResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::metasequoia::v1::WechatAllOauth2UserResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::WechatAllOauth2UserResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::WechatAllOauth2UserResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::WechatAllOauth2UserResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::metasequoia::v1::WechatAllOauth2UserResponse_Item& items(int index) const;
  ::palm::metasequoia::v1::WechatAllOauth2UserResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::WechatAllOauth2UserResponse_Item >&
      items() const;
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.WechatAllOauth2UserResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::WechatAllOauth2UserResponse_Item > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class WechatAllMiniProgramUserResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.WechatAllMiniProgramUserResponse) */ {
 public:
  inline WechatAllMiniProgramUserResponse() : WechatAllMiniProgramUserResponse(nullptr) {}
  ~WechatAllMiniProgramUserResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatAllMiniProgramUserResponse(::google::protobuf::internal::ConstantInitialized);

  inline WechatAllMiniProgramUserResponse(const WechatAllMiniProgramUserResponse& from)
      : WechatAllMiniProgramUserResponse(nullptr, from) {}
  WechatAllMiniProgramUserResponse(WechatAllMiniProgramUserResponse&& from) noexcept
    : WechatAllMiniProgramUserResponse() {
    *this = ::std::move(from);
  }

  inline WechatAllMiniProgramUserResponse& operator=(const WechatAllMiniProgramUserResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatAllMiniProgramUserResponse& operator=(WechatAllMiniProgramUserResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatAllMiniProgramUserResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatAllMiniProgramUserResponse* internal_default_instance() {
    return reinterpret_cast<const WechatAllMiniProgramUserResponse*>(
               &_WechatAllMiniProgramUserResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  friend void swap(WechatAllMiniProgramUserResponse& a, WechatAllMiniProgramUserResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatAllMiniProgramUserResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatAllMiniProgramUserResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatAllMiniProgramUserResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatAllMiniProgramUserResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatAllMiniProgramUserResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatAllMiniProgramUserResponse& from) {
    WechatAllMiniProgramUserResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatAllMiniProgramUserResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.WechatAllMiniProgramUserResponse";
  }
  protected:
  explicit WechatAllMiniProgramUserResponse(::google::protobuf::Arena* arena);
  WechatAllMiniProgramUserResponse(::google::protobuf::Arena* arena, const WechatAllMiniProgramUserResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = WechatAllMiniProgramUserResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::metasequoia::v1::WechatAllMiniProgramUserResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::WechatAllMiniProgramUserResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::WechatAllMiniProgramUserResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::WechatAllMiniProgramUserResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::metasequoia::v1::WechatAllMiniProgramUserResponse_Item& items(int index) const;
  ::palm::metasequoia::v1::WechatAllMiniProgramUserResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::WechatAllMiniProgramUserResponse_Item >&
      items() const;
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.WechatAllMiniProgramUserResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::WechatAllMiniProgramUserResponse_Item > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class UserSignInByPasswordRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.UserSignInByPasswordRequest) */ {
 public:
  inline UserSignInByPasswordRequest() : UserSignInByPasswordRequest(nullptr) {}
  ~UserSignInByPasswordRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserSignInByPasswordRequest(::google::protobuf::internal::ConstantInitialized);

  inline UserSignInByPasswordRequest(const UserSignInByPasswordRequest& from)
      : UserSignInByPasswordRequest(nullptr, from) {}
  UserSignInByPasswordRequest(UserSignInByPasswordRequest&& from) noexcept
    : UserSignInByPasswordRequest() {
    *this = ::std::move(from);
  }

  inline UserSignInByPasswordRequest& operator=(const UserSignInByPasswordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserSignInByPasswordRequest& operator=(UserSignInByPasswordRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserSignInByPasswordRequest& default_instance() {
    return *internal_default_instance();
  }
  enum UserCase {
    kEmail = 1,
    kNickname = 2,
    kPhone = 3,
    USER_NOT_SET = 0,
  };

  static inline const UserSignInByPasswordRequest* internal_default_instance() {
    return reinterpret_cast<const UserSignInByPasswordRequest*>(
               &_UserSignInByPasswordRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(UserSignInByPasswordRequest& a, UserSignInByPasswordRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UserSignInByPasswordRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserSignInByPasswordRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserSignInByPasswordRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserSignInByPasswordRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserSignInByPasswordRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserSignInByPasswordRequest& from) {
    UserSignInByPasswordRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserSignInByPasswordRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.UserSignInByPasswordRequest";
  }
  protected:
  explicit UserSignInByPasswordRequest(::google::protobuf::Arena* arena);
  UserSignInByPasswordRequest(::google::protobuf::Arena* arena, const UserSignInByPasswordRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPasswordFieldNumber = 11,
    kTtlFieldNumber = 19,
    kEmailFieldNumber = 1,
    kNicknameFieldNumber = 2,
    kPhoneFieldNumber = 3,
  };
  // string password = 11;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // .google.protobuf.Duration ttl = 19;
  bool has_ttl() const;
  void clear_ttl() ;
  const ::google::protobuf::Duration& ttl() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_ttl();
  ::google::protobuf::Duration* mutable_ttl();
  void set_allocated_ttl(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_ttl(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_ttl();

  private:
  const ::google::protobuf::Duration& _internal_ttl() const;
  ::google::protobuf::Duration* _internal_mutable_ttl();

  public:
  // string email = 1;
  bool has_email() const;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // string nickname = 2;
  bool has_nickname() const;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string phone = 3;
  bool has_phone() const;
  void clear_phone() ;
  const std::string& phone() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_phone(Arg_&& arg, Args_... args);
  std::string* mutable_phone();
  PROTOBUF_NODISCARD std::string* release_phone();
  void set_allocated_phone(std::string* value);

  private:
  const std::string& _internal_phone() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_phone(
      const std::string& value);
  std::string* _internal_mutable_phone();

  public:
  void clear_user();
  UserCase user_case() const;
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.UserSignInByPasswordRequest)
 private:
  class _Internal;
  void set_has_email();
  void set_has_nickname();
  void set_has_phone();

  inline bool has_user() const;
  inline void clear_has_user();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 5, 1,
      82, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::google::protobuf::Duration* ttl_;
    union UserUnion {
      constexpr UserUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr email_;
      ::google::protobuf::internal::ArenaStringPtr nickname_;
      ::google::protobuf::internal::ArenaStringPtr phone_;
    } user_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class UserProfile final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.UserProfile) */ {
 public:
  inline UserProfile() : UserProfile(nullptr) {}
  ~UserProfile() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserProfile(::google::protobuf::internal::ConstantInitialized);

  inline UserProfile(const UserProfile& from)
      : UserProfile(nullptr, from) {}
  UserProfile(UserProfile&& from) noexcept
    : UserProfile() {
    *this = ::std::move(from);
  }

  inline UserProfile& operator=(const UserProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserProfile& operator=(UserProfile&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserProfile* internal_default_instance() {
    return reinterpret_cast<const UserProfile*>(
               &_UserProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(UserProfile& a, UserProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(UserProfile* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserProfile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserProfile* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserProfile& from) {
    UserProfile::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserProfile* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.UserProfile";
  }
  protected:
  explicit UserProfile(::google::protobuf::Arena* arena);
  UserProfile(::google::protobuf::Arena* arena, const UserProfile& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kPayloadFieldNumber = 1,
  };
  // map<string, string> payload = 1;
  int payload_size() const;
  private:
  int _internal_payload_size() const;

  public:
  void clear_payload() ;
  const ::google::protobuf::Map<std::string, std::string>& payload() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_payload();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_payload() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_payload();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.UserProfile)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      47, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<UserProfile_PayloadEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        payload_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class UserLogsResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.UserLogsResponse.Item) */ {
 public:
  inline UserLogsResponse_Item() : UserLogsResponse_Item(nullptr) {}
  ~UserLogsResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserLogsResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline UserLogsResponse_Item(const UserLogsResponse_Item& from)
      : UserLogsResponse_Item(nullptr, from) {}
  UserLogsResponse_Item(UserLogsResponse_Item&& from) noexcept
    : UserLogsResponse_Item() {
    *this = ::std::move(from);
  }

  inline UserLogsResponse_Item& operator=(const UserLogsResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserLogsResponse_Item& operator=(UserLogsResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserLogsResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserLogsResponse_Item* internal_default_instance() {
    return reinterpret_cast<const UserLogsResponse_Item*>(
               &_UserLogsResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(UserLogsResponse_Item& a, UserLogsResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(UserLogsResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserLogsResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserLogsResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserLogsResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserLogsResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserLogsResponse_Item& from) {
    UserLogsResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserLogsResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.UserLogsResponse.Item";
  }
  protected:
  explicit UserLogsResponse_Item(::google::protobuf::Arena* arena);
  UserLogsResponse_Item(::google::protobuf::Arena* arena, const UserLogsResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Level = UserLogsResponse_Item_Level;
  static constexpr Level DEBUG = UserLogsResponse_Item_Level_DEBUG;
  static constexpr Level INFO = UserLogsResponse_Item_Level_INFO;
  static constexpr Level WARNING = UserLogsResponse_Item_Level_WARNING;
  static constexpr Level ERROR = UserLogsResponse_Item_Level_ERROR;
  static inline bool Level_IsValid(int value) {
    return UserLogsResponse_Item_Level_IsValid(value);
  }
  static constexpr Level Level_MIN = UserLogsResponse_Item_Level_Level_MIN;
  static constexpr Level Level_MAX = UserLogsResponse_Item_Level_Level_MAX;
  static constexpr int Level_ARRAYSIZE = UserLogsResponse_Item_Level_Level_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Level_descriptor() {
    return UserLogsResponse_Item_Level_descriptor();
  }
  template <typename T>
  static inline const std::string& Level_Name(T value) {
    return UserLogsResponse_Item_Level_Name(value);
  }
  static inline bool Level_Parse(absl::string_view name, Level* value) {
    return UserLogsResponse_Item_Level_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kPluginFieldNumber = 3,
    kIpFieldNumber = 4,
    kMessageFieldNumber = 5,
    kCreatedAtFieldNumber = 9,
    kIdFieldNumber = 1,
    kLevelFieldNumber = 2,
  };
  // string plugin = 3;
  void clear_plugin() ;
  const std::string& plugin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_plugin(Arg_&& arg, Args_... args);
  std::string* mutable_plugin();
  PROTOBUF_NODISCARD std::string* release_plugin();
  void set_allocated_plugin(std::string* value);

  private:
  const std::string& _internal_plugin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_plugin(
      const std::string& value);
  std::string* _internal_mutable_plugin();

  public:
  // string ip = 4;
  void clear_ip() ;
  const std::string& ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ip(Arg_&& arg, Args_... args);
  std::string* mutable_ip();
  PROTOBUF_NODISCARD std::string* release_ip();
  void set_allocated_ip(std::string* value);

  private:
  const std::string& _internal_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ip(
      const std::string& value);
  std::string* _internal_mutable_ip();

  public:
  // string message = 5;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // .google.protobuf.Timestamp created_at = 9;
  bool has_created_at() const;
  void clear_created_at() ;
  const ::google::protobuf::Timestamp& created_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_at();
  ::google::protobuf::Timestamp* mutable_created_at();
  void set_allocated_created_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_at();

  private:
  const ::google::protobuf::Timestamp& _internal_created_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_at();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // .palm.metasequoia.v1.UserLogsResponse.Item.Level level = 2;
  void clear_level() ;
  ::palm::metasequoia::v1::UserLogsResponse_Item_Level level() const;
  void set_level(::palm::metasequoia::v1::UserLogsResponse_Item_Level value);

  private:
  ::palm::metasequoia::v1::UserLogsResponse_Item_Level _internal_level() const;
  void _internal_set_level(::palm::metasequoia::v1::UserLogsResponse_Item_Level value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.UserLogsResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      65, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr plugin_;
    ::google::protobuf::internal::ArenaStringPtr ip_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::Timestamp* created_at_;
    ::int32_t id_;
    int level_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class UserLogsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.UserLogsRequest) */ {
 public:
  inline UserLogsRequest() : UserLogsRequest(nullptr) {}
  ~UserLogsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserLogsRequest(::google::protobuf::internal::ConstantInitialized);

  inline UserLogsRequest(const UserLogsRequest& from)
      : UserLogsRequest(nullptr, from) {}
  UserLogsRequest(UserLogsRequest&& from) noexcept
    : UserLogsRequest() {
    *this = ::std::move(from);
  }

  inline UserLogsRequest& operator=(const UserLogsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserLogsRequest& operator=(UserLogsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserLogsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserLogsRequest* internal_default_instance() {
    return reinterpret_cast<const UserLogsRequest*>(
               &_UserLogsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(UserLogsRequest& a, UserLogsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UserLogsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserLogsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserLogsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserLogsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserLogsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserLogsRequest& from) {
    UserLogsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserLogsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.UserLogsRequest";
  }
  protected:
  explicit UserLogsRequest(::google::protobuf::Arena* arena);
  UserLogsRequest(::google::protobuf::Arena* arena, const UserLogsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPluginFieldNumber = 1,
    kFromFieldNumber = 2,
    kToFieldNumber = 3,
  };
  // optional string plugin = 1;
  bool has_plugin() const;
  void clear_plugin() ;
  const std::string& plugin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_plugin(Arg_&& arg, Args_... args);
  std::string* mutable_plugin();
  PROTOBUF_NODISCARD std::string* release_plugin();
  void set_allocated_plugin(std::string* value);

  private:
  const std::string& _internal_plugin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_plugin(
      const std::string& value);
  std::string* _internal_mutable_plugin();

  public:
  // .google.protobuf.Timestamp from = 2;
  bool has_from() const;
  void clear_from() ;
  const ::google::protobuf::Timestamp& from() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_from();
  ::google::protobuf::Timestamp* mutable_from();
  void set_allocated_from(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_from(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_from();

  private:
  const ::google::protobuf::Timestamp& _internal_from() const;
  ::google::protobuf::Timestamp* _internal_mutable_from();

  public:
  // .google.protobuf.Timestamp to = 3;
  bool has_to() const;
  void clear_to() ;
  const ::google::protobuf::Timestamp& to() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_to();
  ::google::protobuf::Timestamp* mutable_to();
  void set_allocated_to(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_to(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_to();

  private:
  const ::google::protobuf::Timestamp& _internal_to() const;
  ::google::protobuf::Timestamp* _internal_mutable_to();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.UserLogsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      50, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr plugin_;
    ::google::protobuf::Timestamp* from_;
    ::google::protobuf::Timestamp* to_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class UserIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.UserIndexResponse.Item) */ {
 public:
  inline UserIndexResponse_Item() : UserIndexResponse_Item(nullptr) {}
  ~UserIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline UserIndexResponse_Item(const UserIndexResponse_Item& from)
      : UserIndexResponse_Item(nullptr, from) {}
  UserIndexResponse_Item(UserIndexResponse_Item&& from) noexcept
    : UserIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline UserIndexResponse_Item& operator=(const UserIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserIndexResponse_Item& operator=(UserIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const UserIndexResponse_Item*>(
               &_UserIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(UserIndexResponse_Item& a, UserIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(UserIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserIndexResponse_Item& from) {
    UserIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.UserIndexResponse.Item";
  }
  protected:
  explicit UserIndexResponse_Item(::google::protobuf::Arena* arena);
  UserIndexResponse_Item(::google::protobuf::Arena* arena, const UserIndexResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNicknameFieldNumber = 1,
    kRealNameFieldNumber = 2,
    kEmailFieldNumber = 3,
    kLocaleFieldNumber = 18,
    kTimezoneFieldNumber = 19,
    kConfirmedAtFieldNumber = 91,
    kLockedAtFieldNumber = 92,
    kDeletedAtFieldNumber = 93,
    kByFieldNumber = 99,
  };
  // string nickname = 1;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string real_name = 2;
  void clear_real_name() ;
  const std::string& real_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_real_name(Arg_&& arg, Args_... args);
  std::string* mutable_real_name();
  PROTOBUF_NODISCARD std::string* release_real_name();
  void set_allocated_real_name(std::string* value);

  private:
  const std::string& _internal_real_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_real_name(
      const std::string& value);
  std::string* _internal_mutable_real_name();

  public:
  // string email = 3;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // string locale = 18;
  void clear_locale() ;
  const std::string& locale() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_locale(Arg_&& arg, Args_... args);
  std::string* mutable_locale();
  PROTOBUF_NODISCARD std::string* release_locale();
  void set_allocated_locale(std::string* value);

  private:
  const std::string& _internal_locale() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_locale(
      const std::string& value);
  std::string* _internal_mutable_locale();

  public:
  // string timezone = 19;
  void clear_timezone() ;
  const std::string& timezone() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timezone(Arg_&& arg, Args_... args);
  std::string* mutable_timezone();
  PROTOBUF_NODISCARD std::string* release_timezone();
  void set_allocated_timezone(std::string* value);

  private:
  const std::string& _internal_timezone() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timezone(
      const std::string& value);
  std::string* _internal_mutable_timezone();

  public:
  // optional .google.protobuf.Timestamp confirmed_at = 91;
  bool has_confirmed_at() const;
  void clear_confirmed_at() ;
  const ::google::protobuf::Timestamp& confirmed_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_confirmed_at();
  ::google::protobuf::Timestamp* mutable_confirmed_at();
  void set_allocated_confirmed_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_confirmed_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_confirmed_at();

  private:
  const ::google::protobuf::Timestamp& _internal_confirmed_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_confirmed_at();

  public:
  // optional .google.protobuf.Timestamp locked_at = 92;
  bool has_locked_at() const;
  void clear_locked_at() ;
  const ::google::protobuf::Timestamp& locked_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_locked_at();
  ::google::protobuf::Timestamp* mutable_locked_at();
  void set_allocated_locked_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_locked_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_locked_at();

  private:
  const ::google::protobuf::Timestamp& _internal_locked_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_locked_at();

  public:
  // optional .google.protobuf.Timestamp deleted_at = 93;
  bool has_deleted_at() const;
  void clear_deleted_at() ;
  const ::google::protobuf::Timestamp& deleted_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_deleted_at();
  ::google::protobuf::Timestamp* mutable_deleted_at();
  void set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_deleted_at();

  private:
  const ::google::protobuf::Timestamp& _internal_deleted_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_deleted_at();

  public:
  // .palm.metasequoia.v1.UserSignInResponse.By by = 99;
  void clear_by() ;
  ::palm::metasequoia::v1::UserSignInResponse_By by() const;
  void set_by(::palm::metasequoia::v1::UserSignInResponse_By value);

  private:
  ::palm::metasequoia::v1::UserSignInResponse_By _internal_by() const;
  void _internal_set_by(::palm::metasequoia::v1::UserSignInResponse_By value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.UserIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 3,
      95, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr real_name_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::internal::ArenaStringPtr locale_;
    ::google::protobuf::internal::ArenaStringPtr timezone_;
    ::google::protobuf::Timestamp* confirmed_at_;
    ::google::protobuf::Timestamp* locked_at_;
    ::google::protobuf::Timestamp* deleted_at_;
    int by_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class TagIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.TagIndexResponse.Item) */ {
 public:
  inline TagIndexResponse_Item() : TagIndexResponse_Item(nullptr) {}
  ~TagIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TagIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline TagIndexResponse_Item(const TagIndexResponse_Item& from)
      : TagIndexResponse_Item(nullptr, from) {}
  TagIndexResponse_Item(TagIndexResponse_Item&& from) noexcept
    : TagIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline TagIndexResponse_Item& operator=(const TagIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline TagIndexResponse_Item& operator=(TagIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TagIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const TagIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const TagIndexResponse_Item*>(
               &_TagIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  friend void swap(TagIndexResponse_Item& a, TagIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(TagIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TagIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TagIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TagIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TagIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TagIndexResponse_Item& from) {
    TagIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TagIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.TagIndexResponse.Item";
  }
  protected:
  explicit TagIndexResponse_Item(::google::protobuf::Arena* arena);
  TagIndexResponse_Item(::google::protobuf::Arena* arena, const TagIndexResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 2,
    kUpdatedAtFieldNumber = 11,
    kIdFieldNumber = 1,
    kPriorityFieldNumber = 3,
  };
  // string code = 2;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // .google.protobuf.Timestamp updated_at = 11;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // int32 priority = 3;
  void clear_priority() ;
  ::int32_t priority() const;
  void set_priority(::int32_t value);

  private:
  ::int32_t _internal_priority() const;
  void _internal_set_priority(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.TagIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::Timestamp* updated_at_;
    ::int32_t id_;
    ::int32_t priority_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SmtpProfile final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SmtpProfile) */ {
 public:
  inline SmtpProfile() : SmtpProfile(nullptr) {}
  ~SmtpProfile() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SmtpProfile(::google::protobuf::internal::ConstantInitialized);

  inline SmtpProfile(const SmtpProfile& from)
      : SmtpProfile(nullptr, from) {}
  SmtpProfile(SmtpProfile&& from) noexcept
    : SmtpProfile() {
    *this = ::std::move(from);
  }

  inline SmtpProfile& operator=(const SmtpProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline SmtpProfile& operator=(SmtpProfile&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SmtpProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const SmtpProfile* internal_default_instance() {
    return reinterpret_cast<const SmtpProfile*>(
               &_SmtpProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(SmtpProfile& a, SmtpProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(SmtpProfile* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SmtpProfile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SmtpProfile* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SmtpProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SmtpProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SmtpProfile& from) {
    SmtpProfile::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SmtpProfile* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SmtpProfile";
  }
  protected:
  explicit SmtpProfile(::google::protobuf::Arena* arena);
  SmtpProfile(::google::protobuf::Arena* arena, const SmtpProfile& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using AuthMethod = SmtpProfile_AuthMethod;
  static constexpr AuthMethod None = SmtpProfile_AuthMethod_None;
  static constexpr AuthMethod Login = SmtpProfile_AuthMethod_Login;
  static constexpr AuthMethod StartTls = SmtpProfile_AuthMethod_StartTls;
  static inline bool AuthMethod_IsValid(int value) {
    return SmtpProfile_AuthMethod_IsValid(value);
  }
  static constexpr AuthMethod AuthMethod_MIN = SmtpProfile_AuthMethod_AuthMethod_MIN;
  static constexpr AuthMethod AuthMethod_MAX = SmtpProfile_AuthMethod_AuthMethod_MAX;
  static constexpr int AuthMethod_ARRAYSIZE = SmtpProfile_AuthMethod_AuthMethod_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* AuthMethod_descriptor() {
    return SmtpProfile_AuthMethod_descriptor();
  }
  template <typename T>
  static inline const std::string& AuthMethod_Name(T value) {
    return SmtpProfile_AuthMethod_Name(value);
  }
  static inline bool AuthMethod_Parse(absl::string_view name, AuthMethod* value) {
    return SmtpProfile_AuthMethod_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kCcFieldNumber = 8,
    kBccFieldNumber = 9,
    kHostFieldNumber = 1,
    kPasswordFieldNumber = 12,
    kFromFieldNumber = 11,
    kPortFieldNumber = 2,
    kAuthMethodFieldNumber = 3,
  };
  // repeated .palm.metasequoia.v1.EmailTask.Address cc = 8;
  int cc_size() const;
  private:
  int _internal_cc_size() const;

  public:
  void clear_cc() ;
  ::palm::metasequoia::v1::EmailTask_Address* mutable_cc(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::EmailTask_Address >*
      mutable_cc();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>& _internal_cc() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>* _internal_mutable_cc();
  public:
  const ::palm::metasequoia::v1::EmailTask_Address& cc(int index) const;
  ::palm::metasequoia::v1::EmailTask_Address* add_cc();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::EmailTask_Address >&
      cc() const;
  // repeated .palm.metasequoia.v1.EmailTask.Address bcc = 9;
  int bcc_size() const;
  private:
  int _internal_bcc_size() const;

  public:
  void clear_bcc() ;
  ::palm::metasequoia::v1::EmailTask_Address* mutable_bcc(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::EmailTask_Address >*
      mutable_bcc();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>& _internal_bcc() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>* _internal_mutable_bcc();
  public:
  const ::palm::metasequoia::v1::EmailTask_Address& bcc(int index) const;
  ::palm::metasequoia::v1::EmailTask_Address* add_bcc();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::EmailTask_Address >&
      bcc() const;
  // string host = 1;
  void clear_host() ;
  const std::string& host() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_host(Arg_&& arg, Args_... args);
  std::string* mutable_host();
  PROTOBUF_NODISCARD std::string* release_host();
  void set_allocated_host(std::string* value);

  private:
  const std::string& _internal_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_host(
      const std::string& value);
  std::string* _internal_mutable_host();

  public:
  // string password = 12;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // .palm.metasequoia.v1.EmailTask.Address from = 11;
  bool has_from() const;
  void clear_from() ;
  const ::palm::metasequoia::v1::EmailTask_Address& from() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::EmailTask_Address* release_from();
  ::palm::metasequoia::v1::EmailTask_Address* mutable_from();
  void set_allocated_from(::palm::metasequoia::v1::EmailTask_Address* value);
  void unsafe_arena_set_allocated_from(::palm::metasequoia::v1::EmailTask_Address* value);
  ::palm::metasequoia::v1::EmailTask_Address* unsafe_arena_release_from();

  private:
  const ::palm::metasequoia::v1::EmailTask_Address& _internal_from() const;
  ::palm::metasequoia::v1::EmailTask_Address* _internal_mutable_from();

  public:
  // uint32 port = 2;
  void clear_port() ;
  ::uint32_t port() const;
  void set_port(::uint32_t value);

  private:
  ::uint32_t _internal_port() const;
  void _internal_set_port(::uint32_t value);

  public:
  // .palm.metasequoia.v1.SmtpProfile.AuthMethod auth_method = 3;
  void clear_auth_method() ;
  ::palm::metasequoia::v1::SmtpProfile_AuthMethod auth_method() const;
  void set_auth_method(::palm::metasequoia::v1::SmtpProfile_AuthMethod value);

  private:
  ::palm::metasequoia::v1::SmtpProfile_AuthMethod _internal_auth_method() const;
  void _internal_set_auth_method(::palm::metasequoia::v1::SmtpProfile_AuthMethod value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SmtpProfile)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 3,
      52, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::EmailTask_Address > cc_;
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::EmailTask_Address > bcc_;
    ::google::protobuf::internal::ArenaStringPtr host_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::palm::metasequoia::v1::EmailTask_Address* from_;
    ::uint32_t port_;
    int auth_method_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteTwilioPingRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteTwilioPingRequest) */ {
 public:
  inline SiteTwilioPingRequest() : SiteTwilioPingRequest(nullptr) {}
  ~SiteTwilioPingRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteTwilioPingRequest(::google::protobuf::internal::ConstantInitialized);

  inline SiteTwilioPingRequest(const SiteTwilioPingRequest& from)
      : SiteTwilioPingRequest(nullptr, from) {}
  SiteTwilioPingRequest(SiteTwilioPingRequest&& from) noexcept
    : SiteTwilioPingRequest() {
    *this = ::std::move(from);
  }

  inline SiteTwilioPingRequest& operator=(const SiteTwilioPingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteTwilioPingRequest& operator=(SiteTwilioPingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteTwilioPingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteTwilioPingRequest* internal_default_instance() {
    return reinterpret_cast<const SiteTwilioPingRequest*>(
               &_SiteTwilioPingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(SiteTwilioPingRequest& a, SiteTwilioPingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteTwilioPingRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteTwilioPingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteTwilioPingRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteTwilioPingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteTwilioPingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteTwilioPingRequest& from) {
    SiteTwilioPingRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteTwilioPingRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteTwilioPingRequest";
  }
  protected:
  explicit SiteTwilioPingRequest(::google::protobuf::Arena* arena);
  SiteTwilioPingRequest(::google::protobuf::Arena* arena, const SiteTwilioPingRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kToFieldNumber = 1,
    kMessageFieldNumber = 2,
    kProfileFieldNumber = 9,
  };
  // string to = 1;
  void clear_to() ;
  const std::string& to() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_to(Arg_&& arg, Args_... args);
  std::string* mutable_to();
  PROTOBUF_NODISCARD std::string* release_to();
  void set_allocated_to(std::string* value);

  private:
  const std::string& _internal_to() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_to(
      const std::string& value);
  std::string* _internal_mutable_to();

  public:
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // .palm.metasequoia.v1.TwilioProfile profile = 9;
  bool has_profile() const;
  void clear_profile() ;
  const ::palm::metasequoia::v1::TwilioProfile& profile() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::TwilioProfile* release_profile();
  ::palm::metasequoia::v1::TwilioProfile* mutable_profile();
  void set_allocated_profile(::palm::metasequoia::v1::TwilioProfile* value);
  void unsafe_arena_set_allocated_profile(::palm::metasequoia::v1::TwilioProfile* value);
  ::palm::metasequoia::v1::TwilioProfile* unsafe_arena_release_profile();

  private:
  const ::palm::metasequoia::v1::TwilioProfile& _internal_profile() const;
  ::palm::metasequoia::v1::TwilioProfile* _internal_mutable_profile();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteTwilioPingRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 1,
      59, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr to_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::palm::metasequoia::v1::TwilioProfile* profile_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteStatusResponse_Redis final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteStatusResponse.Redis) */ {
 public:
  inline SiteStatusResponse_Redis() : SiteStatusResponse_Redis(nullptr) {}
  ~SiteStatusResponse_Redis() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteStatusResponse_Redis(::google::protobuf::internal::ConstantInitialized);

  inline SiteStatusResponse_Redis(const SiteStatusResponse_Redis& from)
      : SiteStatusResponse_Redis(nullptr, from) {}
  SiteStatusResponse_Redis(SiteStatusResponse_Redis&& from) noexcept
    : SiteStatusResponse_Redis() {
    *this = ::std::move(from);
  }

  inline SiteStatusResponse_Redis& operator=(const SiteStatusResponse_Redis& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteStatusResponse_Redis& operator=(SiteStatusResponse_Redis&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteStatusResponse_Redis& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteStatusResponse_Redis* internal_default_instance() {
    return reinterpret_cast<const SiteStatusResponse_Redis*>(
               &_SiteStatusResponse_Redis_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(SiteStatusResponse_Redis& a, SiteStatusResponse_Redis& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteStatusResponse_Redis* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteStatusResponse_Redis* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteStatusResponse_Redis* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteStatusResponse_Redis>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteStatusResponse_Redis& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteStatusResponse_Redis& from) {
    SiteStatusResponse_Redis::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteStatusResponse_Redis* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteStatusResponse.Redis";
  }
  protected:
  explicit SiteStatusResponse_Redis(::google::protobuf::Arena* arena);
  SiteStatusResponse_Redis(::google::protobuf::Arena* arena, const SiteStatusResponse_Redis& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = SiteStatusResponse_Redis_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 2,
    kInfoFieldNumber = 1,
  };
  // repeated .palm.metasequoia.v1.SiteStatusResponse.Redis.Item items = 2;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::metasequoia::v1::SiteStatusResponse_Redis_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::SiteStatusResponse_Redis_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Redis_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Redis_Item>* _internal_mutable_items();
  public:
  const ::palm::metasequoia::v1::SiteStatusResponse_Redis_Item& items(int index) const;
  ::palm::metasequoia::v1::SiteStatusResponse_Redis_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::SiteStatusResponse_Redis_Item >&
      items() const;
  // string info = 1;
  void clear_info() ;
  const std::string& info() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_info(Arg_&& arg, Args_... args);
  std::string* mutable_info();
  PROTOBUF_NODISCARD std::string* release_info();
  void set_allocated_info(std::string* value);

  private:
  const std::string& _internal_info() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_info(
      const std::string& value);
  std::string* _internal_mutable_info();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteStatusResponse.Redis)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      57, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::SiteStatusResponse_Redis_Item > items_;
    ::google::protobuf::internal::ArenaStringPtr info_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteStatusResponse_PostgreSql final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteStatusResponse.PostgreSql) */ {
 public:
  inline SiteStatusResponse_PostgreSql() : SiteStatusResponse_PostgreSql(nullptr) {}
  ~SiteStatusResponse_PostgreSql() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteStatusResponse_PostgreSql(::google::protobuf::internal::ConstantInitialized);

  inline SiteStatusResponse_PostgreSql(const SiteStatusResponse_PostgreSql& from)
      : SiteStatusResponse_PostgreSql(nullptr, from) {}
  SiteStatusResponse_PostgreSql(SiteStatusResponse_PostgreSql&& from) noexcept
    : SiteStatusResponse_PostgreSql() {
    *this = ::std::move(from);
  }

  inline SiteStatusResponse_PostgreSql& operator=(const SiteStatusResponse_PostgreSql& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteStatusResponse_PostgreSql& operator=(SiteStatusResponse_PostgreSql&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteStatusResponse_PostgreSql& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteStatusResponse_PostgreSql* internal_default_instance() {
    return reinterpret_cast<const SiteStatusResponse_PostgreSql*>(
               &_SiteStatusResponse_PostgreSql_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(SiteStatusResponse_PostgreSql& a, SiteStatusResponse_PostgreSql& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteStatusResponse_PostgreSql* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteStatusResponse_PostgreSql* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteStatusResponse_PostgreSql* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteStatusResponse_PostgreSql>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteStatusResponse_PostgreSql& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteStatusResponse_PostgreSql& from) {
    SiteStatusResponse_PostgreSql::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteStatusResponse_PostgreSql* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteStatusResponse.PostgreSql";
  }
  protected:
  explicit SiteStatusResponse_PostgreSql(::google::protobuf::Arena* arena);
  SiteStatusResponse_PostgreSql(::google::protobuf::Arena* arena, const SiteStatusResponse_PostgreSql& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDatabasesFieldNumber = 9,
    kVersionFieldNumber = 1,
    kNowFieldNumber = 2,
  };
  // repeated .palm.metasequoia.v1.SiteStatusResponse.Database databases = 9;
  int databases_size() const;
  private:
  int _internal_databases_size() const;

  public:
  void clear_databases() ;
  ::palm::metasequoia::v1::SiteStatusResponse_Database* mutable_databases(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::SiteStatusResponse_Database >*
      mutable_databases();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Database>& _internal_databases() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Database>* _internal_mutable_databases();
  public:
  const ::palm::metasequoia::v1::SiteStatusResponse_Database& databases(int index) const;
  ::palm::metasequoia::v1::SiteStatusResponse_Database* add_databases();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::SiteStatusResponse_Database >&
      databases() const;
  // string version = 1;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // .google.protobuf.Timestamp now = 2;
  bool has_now() const;
  void clear_now() ;
  const ::google::protobuf::Timestamp& now() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_now();
  ::google::protobuf::Timestamp* mutable_now();
  void set_allocated_now(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_now(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_now();

  private:
  const ::google::protobuf::Timestamp& _internal_now() const;
  ::google::protobuf::Timestamp* _internal_mutable_now();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteStatusResponse.PostgreSql)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 2,
      65, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::SiteStatusResponse_Database > databases_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::Timestamp* now_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteMaintenanceModeRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteMaintenanceModeRequest) */ {
 public:
  inline SiteMaintenanceModeRequest() : SiteMaintenanceModeRequest(nullptr) {}
  ~SiteMaintenanceModeRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteMaintenanceModeRequest(::google::protobuf::internal::ConstantInitialized);

  inline SiteMaintenanceModeRequest(const SiteMaintenanceModeRequest& from)
      : SiteMaintenanceModeRequest(nullptr, from) {}
  SiteMaintenanceModeRequest(SiteMaintenanceModeRequest&& from) noexcept
    : SiteMaintenanceModeRequest() {
    *this = ::std::move(from);
  }

  inline SiteMaintenanceModeRequest& operator=(const SiteMaintenanceModeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteMaintenanceModeRequest& operator=(SiteMaintenanceModeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteMaintenanceModeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteMaintenanceModeRequest* internal_default_instance() {
    return reinterpret_cast<const SiteMaintenanceModeRequest*>(
               &_SiteMaintenanceModeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(SiteMaintenanceModeRequest& a, SiteMaintenanceModeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteMaintenanceModeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteMaintenanceModeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteMaintenanceModeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteMaintenanceModeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteMaintenanceModeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteMaintenanceModeRequest& from) {
    SiteMaintenanceModeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteMaintenanceModeRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteMaintenanceModeRequest";
  }
  protected:
  explicit SiteMaintenanceModeRequest(::google::protobuf::Arena* arena);
  SiteMaintenanceModeRequest(::google::protobuf::Arena* arena, const SiteMaintenanceModeRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReasonFieldNumber = 2,
    kTtlFieldNumber = 1,
  };
  // string reason = 2;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // .google.protobuf.Duration ttl = 1;
  bool has_ttl() const;
  void clear_ttl() ;
  const ::google::protobuf::Duration& ttl() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_ttl();
  ::google::protobuf::Duration* mutable_ttl();
  void set_allocated_ttl(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_ttl(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_ttl();

  private:
  const ::google::protobuf::Duration& _internal_ttl() const;
  ::google::protobuf::Duration* _internal_mutable_ttl();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteMaintenanceModeRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      61, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::google::protobuf::Duration* ttl_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteLayoutResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteLayoutResponse) */ {
 public:
  inline SiteLayoutResponse() : SiteLayoutResponse(nullptr) {}
  ~SiteLayoutResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteLayoutResponse(::google::protobuf::internal::ConstantInitialized);

  inline SiteLayoutResponse(const SiteLayoutResponse& from)
      : SiteLayoutResponse(nullptr, from) {}
  SiteLayoutResponse(SiteLayoutResponse&& from) noexcept
    : SiteLayoutResponse() {
    *this = ::std::move(from);
  }

  inline SiteLayoutResponse& operator=(const SiteLayoutResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteLayoutResponse& operator=(SiteLayoutResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteLayoutResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteLayoutResponse* internal_default_instance() {
    return reinterpret_cast<const SiteLayoutResponse*>(
               &_SiteLayoutResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(SiteLayoutResponse& a, SiteLayoutResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteLayoutResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteLayoutResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteLayoutResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteLayoutResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteLayoutResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteLayoutResponse& from) {
    SiteLayoutResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteLayoutResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteLayoutResponse";
  }
  protected:
  explicit SiteLayoutResponse(::google::protobuf::Arena* arena);
  SiteLayoutResponse(::google::protobuf::Arena* arena, const SiteLayoutResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Author = SiteLayoutResponse_Author;

  // accessors -------------------------------------------------------

  enum : int {
    kKeywordsFieldNumber = 3,
    kLanguagesFieldNumber = 9,
    kTitleFieldNumber = 1,
    kSubheadFieldNumber = 2,
    kDescriptionFieldNumber = 4,
    kCopyrightFieldNumber = 6,
    kLogoFieldNumber = 7,
    kAuthorFieldNumber = 5,
  };
  // repeated string keywords = 3;
  int keywords_size() const;
  private:
  int _internal_keywords_size() const;

  public:
  void clear_keywords() ;
  const std::string& keywords(int index) const;
  std::string* mutable_keywords(int index);
  void set_keywords(int index, const std::string& value);
  void set_keywords(int index, std::string&& value);
  void set_keywords(int index, const char* value);
  void set_keywords(int index, const char* value, std::size_t size);
  void set_keywords(int index, absl::string_view value);
  std::string* add_keywords();
  void add_keywords(const std::string& value);
  void add_keywords(std::string&& value);
  void add_keywords(const char* value);
  void add_keywords(const char* value, std::size_t size);
  void add_keywords(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& keywords() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_keywords();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_keywords() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_keywords();

  public:
  // repeated string languages = 9;
  int languages_size() const;
  private:
  int _internal_languages_size() const;

  public:
  void clear_languages() ;
  const std::string& languages(int index) const;
  std::string* mutable_languages(int index);
  void set_languages(int index, const std::string& value);
  void set_languages(int index, std::string&& value);
  void set_languages(int index, const char* value);
  void set_languages(int index, const char* value, std::size_t size);
  void set_languages(int index, absl::string_view value);
  std::string* add_languages();
  void add_languages(const std::string& value);
  void add_languages(std::string&& value);
  void add_languages(const char* value);
  void add_languages(const char* value, std::size_t size);
  void add_languages(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& languages() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_languages();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_languages() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_languages();

  public:
  // string title = 1;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string subhead = 2;
  void clear_subhead() ;
  const std::string& subhead() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subhead(Arg_&& arg, Args_... args);
  std::string* mutable_subhead();
  PROTOBUF_NODISCARD std::string* release_subhead();
  void set_allocated_subhead(std::string* value);

  private:
  const std::string& _internal_subhead() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subhead(
      const std::string& value);
  std::string* _internal_mutable_subhead();

  public:
  // string description = 4;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string copyright = 6;
  void clear_copyright() ;
  const std::string& copyright() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_copyright(Arg_&& arg, Args_... args);
  std::string* mutable_copyright();
  PROTOBUF_NODISCARD std::string* release_copyright();
  void set_allocated_copyright(std::string* value);

  private:
  const std::string& _internal_copyright() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_copyright(
      const std::string& value);
  std::string* _internal_mutable_copyright();

  public:
  // string logo = 7;
  void clear_logo() ;
  const std::string& logo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_logo(Arg_&& arg, Args_... args);
  std::string* mutable_logo();
  PROTOBUF_NODISCARD std::string* release_logo();
  void set_allocated_logo(std::string* value);

  private:
  const std::string& _internal_logo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_logo(
      const std::string& value);
  std::string* _internal_mutable_logo();

  public:
  // .palm.metasequoia.v1.SiteLayoutResponse.Author author = 5;
  bool has_author() const;
  void clear_author() ;
  const ::palm::metasequoia::v1::SiteLayoutResponse_Author& author() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::SiteLayoutResponse_Author* release_author();
  ::palm::metasequoia::v1::SiteLayoutResponse_Author* mutable_author();
  void set_allocated_author(::palm::metasequoia::v1::SiteLayoutResponse_Author* value);
  void unsafe_arena_set_allocated_author(::palm::metasequoia::v1::SiteLayoutResponse_Author* value);
  ::palm::metasequoia::v1::SiteLayoutResponse_Author* unsafe_arena_release_author();

  private:
  const ::palm::metasequoia::v1::SiteLayoutResponse_Author& _internal_author() const;
  ::palm::metasequoia::v1::SiteLayoutResponse_Author* _internal_mutable_author();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteLayoutResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 8, 1,
      108, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> keywords_;
    ::google::protobuf::RepeatedPtrField<std::string> languages_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr subhead_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr copyright_;
    ::google::protobuf::internal::ArenaStringPtr logo_;
    ::palm::metasequoia::v1::SiteLayoutResponse_Author* author_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteInstallRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteInstallRequest) */ {
 public:
  inline SiteInstallRequest() : SiteInstallRequest(nullptr) {}
  ~SiteInstallRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteInstallRequest(::google::protobuf::internal::ConstantInitialized);

  inline SiteInstallRequest(const SiteInstallRequest& from)
      : SiteInstallRequest(nullptr, from) {}
  SiteInstallRequest(SiteInstallRequest&& from) noexcept
    : SiteInstallRequest() {
    *this = ::std::move(from);
  }

  inline SiteInstallRequest& operator=(const SiteInstallRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteInstallRequest& operator=(SiteInstallRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteInstallRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteInstallRequest* internal_default_instance() {
    return reinterpret_cast<const SiteInstallRequest*>(
               &_SiteInstallRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(SiteInstallRequest& a, SiteInstallRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteInstallRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteInstallRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteInstallRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteInstallRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteInstallRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteInstallRequest& from) {
    SiteInstallRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteInstallRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteInstallRequest";
  }
  protected:
  explicit SiteInstallRequest(::google::protobuf::Arena* arena);
  SiteInstallRequest(::google::protobuf::Arena* arena, const SiteInstallRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserFieldNumber = 1,
  };
  // .palm.metasequoia.v1.UserSignUpByEmailRequest user = 1;
  bool has_user() const;
  void clear_user() ;
  const ::palm::metasequoia::v1::UserSignUpByEmailRequest& user() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::UserSignUpByEmailRequest* release_user();
  ::palm::metasequoia::v1::UserSignUpByEmailRequest* mutable_user();
  void set_allocated_user(::palm::metasequoia::v1::UserSignUpByEmailRequest* value);
  void unsafe_arena_set_allocated_user(::palm::metasequoia::v1::UserSignUpByEmailRequest* value);
  ::palm::metasequoia::v1::UserSignUpByEmailRequest* unsafe_arena_release_user();

  private:
  const ::palm::metasequoia::v1::UserSignUpByEmailRequest& _internal_user() const;
  ::palm::metasequoia::v1::UserSignUpByEmailRequest* _internal_mutable_user();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteInstallRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::palm::metasequoia::v1::UserSignUpByEmailRequest* user_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SignInByWechatOauth2Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SignInByWechatOauth2Request) */ {
 public:
  inline SignInByWechatOauth2Request() : SignInByWechatOauth2Request(nullptr) {}
  ~SignInByWechatOauth2Request() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SignInByWechatOauth2Request(::google::protobuf::internal::ConstantInitialized);

  inline SignInByWechatOauth2Request(const SignInByWechatOauth2Request& from)
      : SignInByWechatOauth2Request(nullptr, from) {}
  SignInByWechatOauth2Request(SignInByWechatOauth2Request&& from) noexcept
    : SignInByWechatOauth2Request() {
    *this = ::std::move(from);
  }

  inline SignInByWechatOauth2Request& operator=(const SignInByWechatOauth2Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignInByWechatOauth2Request& operator=(SignInByWechatOauth2Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SignInByWechatOauth2Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const SignInByWechatOauth2Request* internal_default_instance() {
    return reinterpret_cast<const SignInByWechatOauth2Request*>(
               &_SignInByWechatOauth2Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  friend void swap(SignInByWechatOauth2Request& a, SignInByWechatOauth2Request& b) {
    a.Swap(&b);
  }
  inline void Swap(SignInByWechatOauth2Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignInByWechatOauth2Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SignInByWechatOauth2Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SignInByWechatOauth2Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SignInByWechatOauth2Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SignInByWechatOauth2Request& from) {
    SignInByWechatOauth2Request::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SignInByWechatOauth2Request* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SignInByWechatOauth2Request";
  }
  protected:
  explicit SignInByWechatOauth2Request(::google::protobuf::Arena* arena);
  SignInByWechatOauth2Request(::google::protobuf::Arena* arena, const SignInByWechatOauth2Request& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStateFieldNumber = 1,
    kCodeFieldNumber = 2,
    kAppIdFieldNumber = 3,
    kTtlFieldNumber = 11,
    kLanguageFieldNumber = 8,
  };
  // string state = 1;
  void clear_state() ;
  const std::string& state() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_state(Arg_&& arg, Args_... args);
  std::string* mutable_state();
  PROTOBUF_NODISCARD std::string* release_state();
  void set_allocated_state(std::string* value);

  private:
  const std::string& _internal_state() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_state(
      const std::string& value);
  std::string* _internal_mutable_state();

  public:
  // string code = 2;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // string app_id = 3;
  void clear_app_id() ;
  const std::string& app_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_id(Arg_&& arg, Args_... args);
  std::string* mutable_app_id();
  PROTOBUF_NODISCARD std::string* release_app_id();
  void set_allocated_app_id(std::string* value);

  private:
  const std::string& _internal_app_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_id(
      const std::string& value);
  std::string* _internal_mutable_app_id();

  public:
  // .google.protobuf.Duration ttl = 11;
  bool has_ttl() const;
  void clear_ttl() ;
  const ::google::protobuf::Duration& ttl() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_ttl();
  ::google::protobuf::Duration* mutable_ttl();
  void set_allocated_ttl(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_ttl(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_ttl();

  private:
  const ::google::protobuf::Duration& _internal_ttl() const;
  ::google::protobuf::Duration* _internal_mutable_ttl();

  public:
  // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 8;
  void clear_language() ;
  ::palm::orchid::v1::WechatOauth2QrConnectRequest_Language language() const;
  void set_language(::palm::orchid::v1::WechatOauth2QrConnectRequest_Language value);

  private:
  ::palm::orchid::v1::WechatOauth2QrConnectRequest_Language _internal_language() const;
  void _internal_set_language(::palm::orchid::v1::WechatOauth2QrConnectRequest_Language value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SignInByWechatOauth2Request)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 1,
      71, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr state_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::internal::ArenaStringPtr app_id_;
    ::google::protobuf::Duration* ttl_;
    int language_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SignInByGoogleRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SignInByGoogleRequest) */ {
 public:
  inline SignInByGoogleRequest() : SignInByGoogleRequest(nullptr) {}
  ~SignInByGoogleRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SignInByGoogleRequest(::google::protobuf::internal::ConstantInitialized);

  inline SignInByGoogleRequest(const SignInByGoogleRequest& from)
      : SignInByGoogleRequest(nullptr, from) {}
  SignInByGoogleRequest(SignInByGoogleRequest&& from) noexcept
    : SignInByGoogleRequest() {
    *this = ::std::move(from);
  }

  inline SignInByGoogleRequest& operator=(const SignInByGoogleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignInByGoogleRequest& operator=(SignInByGoogleRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SignInByGoogleRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SignInByGoogleRequest* internal_default_instance() {
    return reinterpret_cast<const SignInByGoogleRequest*>(
               &_SignInByGoogleRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  friend void swap(SignInByGoogleRequest& a, SignInByGoogleRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SignInByGoogleRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignInByGoogleRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SignInByGoogleRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SignInByGoogleRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SignInByGoogleRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SignInByGoogleRequest& from) {
    SignInByGoogleRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SignInByGoogleRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SignInByGoogleRequest";
  }
  protected:
  explicit SignInByGoogleRequest(::google::protobuf::Arena* arena);
  SignInByGoogleRequest(::google::protobuf::Arena* arena, const SignInByGoogleRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScopesFieldNumber = 1,
    kCodeFieldNumber = 2,
    kStateFieldNumber = 3,
    kRedirectUriFieldNumber = 4,
    kNonceFieldNumber = 9,
    kTtlFieldNumber = 11,
  };
  // repeated string scopes = 1;
  int scopes_size() const;
  private:
  int _internal_scopes_size() const;

  public:
  void clear_scopes() ;
  const std::string& scopes(int index) const;
  std::string* mutable_scopes(int index);
  void set_scopes(int index, const std::string& value);
  void set_scopes(int index, std::string&& value);
  void set_scopes(int index, const char* value);
  void set_scopes(int index, const char* value, std::size_t size);
  void set_scopes(int index, absl::string_view value);
  std::string* add_scopes();
  void add_scopes(const std::string& value);
  void add_scopes(std::string&& value);
  void add_scopes(const char* value);
  void add_scopes(const char* value, std::size_t size);
  void add_scopes(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& scopes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_scopes();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_scopes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_scopes();

  public:
  // string code = 2;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // string state = 3;
  void clear_state() ;
  const std::string& state() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_state(Arg_&& arg, Args_... args);
  std::string* mutable_state();
  PROTOBUF_NODISCARD std::string* release_state();
  void set_allocated_state(std::string* value);

  private:
  const std::string& _internal_state() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_state(
      const std::string& value);
  std::string* _internal_mutable_state();

  public:
  // string redirect_uri = 4;
  void clear_redirect_uri() ;
  const std::string& redirect_uri() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_redirect_uri(Arg_&& arg, Args_... args);
  std::string* mutable_redirect_uri();
  PROTOBUF_NODISCARD std::string* release_redirect_uri();
  void set_allocated_redirect_uri(std::string* value);

  private:
  const std::string& _internal_redirect_uri() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_redirect_uri(
      const std::string& value);
  std::string* _internal_mutable_redirect_uri();

  public:
  // string nonce = 9;
  void clear_nonce() ;
  const std::string& nonce() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nonce(Arg_&& arg, Args_... args);
  std::string* mutable_nonce();
  PROTOBUF_NODISCARD std::string* release_nonce();
  void set_allocated_nonce(std::string* value);

  private:
  const std::string& _internal_nonce() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nonce(
      const std::string& value);
  std::string* _internal_mutable_nonce();

  public:
  // .google.protobuf.Duration ttl = 11;
  bool has_ttl() const;
  void clear_ttl() ;
  const ::google::protobuf::Duration& ttl() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_ttl();
  ::google::protobuf::Duration* mutable_ttl();
  void set_allocated_ttl(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_ttl(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_ttl();

  private:
  const ::google::protobuf::Duration& _internal_ttl() const;
  ::google::protobuf::Duration* _internal_mutable_ttl();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SignInByGoogleRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 6, 1,
      82, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> scopes_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::internal::ArenaStringPtr state_;
    ::google::protobuf::internal::ArenaStringPtr redirect_uri_;
    ::google::protobuf::internal::ArenaStringPtr nonce_;
    ::google::protobuf::Duration* ttl_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class ShorterLinkIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.ShorterLinkIndexResponse.Item) */ {
 public:
  inline ShorterLinkIndexResponse_Item() : ShorterLinkIndexResponse_Item(nullptr) {}
  ~ShorterLinkIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ShorterLinkIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline ShorterLinkIndexResponse_Item(const ShorterLinkIndexResponse_Item& from)
      : ShorterLinkIndexResponse_Item(nullptr, from) {}
  ShorterLinkIndexResponse_Item(ShorterLinkIndexResponse_Item&& from) noexcept
    : ShorterLinkIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline ShorterLinkIndexResponse_Item& operator=(const ShorterLinkIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShorterLinkIndexResponse_Item& operator=(ShorterLinkIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShorterLinkIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShorterLinkIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const ShorterLinkIndexResponse_Item*>(
               &_ShorterLinkIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  friend void swap(ShorterLinkIndexResponse_Item& a, ShorterLinkIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(ShorterLinkIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShorterLinkIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShorterLinkIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ShorterLinkIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShorterLinkIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ShorterLinkIndexResponse_Item& from) {
    ShorterLinkIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ShorterLinkIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.ShorterLinkIndexResponse.Item";
  }
  protected:
  explicit ShorterLinkIndexResponse_Item(::google::protobuf::Arena* arena);
  ShorterLinkIndexResponse_Item(::google::protobuf::Arena* arena, const ShorterLinkIndexResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUrlFieldNumber = 2,
    kDetailsFieldNumber = 3,
    kCodeFieldNumber = 9,
    kUpdatedAtFieldNumber = 11,
    kIdFieldNumber = 1,
  };
  // string url = 2;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // string details = 3;
  void clear_details() ;
  const std::string& details() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_details(Arg_&& arg, Args_... args);
  std::string* mutable_details();
  PROTOBUF_NODISCARD std::string* release_details();
  void set_allocated_details(std::string* value);

  private:
  const std::string& _internal_details() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_details(
      const std::string& value);
  std::string* _internal_mutable_details();

  public:
  // string code = 9;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // .google.protobuf.Timestamp updated_at = 11;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.ShorterLinkIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 1,
      72, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr url_;
    ::google::protobuf::internal::ArenaStringPtr details_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::Timestamp* updated_at_;
    ::int32_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SettingsResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SettingsResponse.Item) */ {
 public:
  inline SettingsResponse_Item() : SettingsResponse_Item(nullptr) {}
  ~SettingsResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SettingsResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline SettingsResponse_Item(const SettingsResponse_Item& from)
      : SettingsResponse_Item(nullptr, from) {}
  SettingsResponse_Item(SettingsResponse_Item&& from) noexcept
    : SettingsResponse_Item() {
    *this = ::std::move(from);
  }

  inline SettingsResponse_Item& operator=(const SettingsResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline SettingsResponse_Item& operator=(SettingsResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SettingsResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const SettingsResponse_Item* internal_default_instance() {
    return reinterpret_cast<const SettingsResponse_Item*>(
               &_SettingsResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(SettingsResponse_Item& a, SettingsResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(SettingsResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SettingsResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SettingsResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SettingsResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SettingsResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SettingsResponse_Item& from) {
    SettingsResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SettingsResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SettingsResponse.Item";
  }
  protected:
  explicit SettingsResponse_Item(::google::protobuf::Arena* arena);
  SettingsResponse_Item(::google::protobuf::Arena* arena, const SettingsResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 3,
    kValueFieldNumber = 4,
    kCreatedAtFieldNumber = 11,
    kUpdatedAtFieldNumber = 12,
    kIdFieldNumber = 1,
    kUserIdFieldNumber = 2,
  };
  // string key = 3;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // bytes value = 4;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // .google.protobuf.Timestamp created_at = 11;
  bool has_created_at() const;
  void clear_created_at() ;
  const ::google::protobuf::Timestamp& created_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_at();
  ::google::protobuf::Timestamp* mutable_created_at();
  void set_allocated_created_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_at();

  private:
  const ::google::protobuf::Timestamp& _internal_created_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_at();

  public:
  // .google.protobuf.Timestamp updated_at = 12;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // optional int32 user_id = 2;
  bool has_user_id() const;
  void clear_user_id() ;
  ::int32_t user_id() const;
  void set_user_id(::int32_t value);

  private:
  ::int32_t _internal_user_id() const;
  void _internal_set_user_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SettingsResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 6, 2,
      53, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::google::protobuf::Timestamp* created_at_;
    ::google::protobuf::Timestamp* updated_at_;
    ::int32_t id_;
    ::int32_t user_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class Role final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.Role) */ {
 public:
  inline Role() : Role(nullptr) {}
  ~Role() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Role(::google::protobuf::internal::ConstantInitialized);

  inline Role(const Role& from)
      : Role(nullptr, from) {}
  Role(Role&& from) noexcept
    : Role() {
    *this = ::std::move(from);
  }

  inline Role& operator=(const Role& from) {
    CopyFrom(from);
    return *this;
  }
  inline Role& operator=(Role&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Role& default_instance() {
    return *internal_default_instance();
  }
  enum ByCase {
    kAdministrator = 1,
    kRoot = 2,
    kMember = 3,
    BY_NOT_SET = 0,
  };

  static inline const Role* internal_default_instance() {
    return reinterpret_cast<const Role*>(
               &_Role_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(Role& a, Role& b) {
    a.Swap(&b);
  }
  inline void Swap(Role* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Role* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Role* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Role>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Role& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Role& from) {
    Role::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Role* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.Role";
  }
  protected:
  explicit Role(::google::protobuf::Arena* arena);
  Role(::google::protobuf::Arena* arena, const Role& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Member = Role_Member;

  // accessors -------------------------------------------------------

  enum : int {
    kAdministratorFieldNumber = 1,
    kRootFieldNumber = 2,
    kMemberFieldNumber = 3,
  };
  // .google.protobuf.Empty administrator = 1;
  bool has_administrator() const;
  private:
  bool _internal_has_administrator() const;

  public:
  void clear_administrator() ;
  const ::google::protobuf::Empty& administrator() const;
  PROTOBUF_NODISCARD ::google::protobuf::Empty* release_administrator();
  ::google::protobuf::Empty* mutable_administrator();
  void set_allocated_administrator(::google::protobuf::Empty* value);
  void unsafe_arena_set_allocated_administrator(::google::protobuf::Empty* value);
  ::google::protobuf::Empty* unsafe_arena_release_administrator();

  private:
  const ::google::protobuf::Empty& _internal_administrator() const;
  ::google::protobuf::Empty* _internal_mutable_administrator();

  public:
  // .google.protobuf.Empty root = 2;
  bool has_root() const;
  private:
  bool _internal_has_root() const;

  public:
  void clear_root() ;
  const ::google::protobuf::Empty& root() const;
  PROTOBUF_NODISCARD ::google::protobuf::Empty* release_root();
  ::google::protobuf::Empty* mutable_root();
  void set_allocated_root(::google::protobuf::Empty* value);
  void unsafe_arena_set_allocated_root(::google::protobuf::Empty* value);
  ::google::protobuf::Empty* unsafe_arena_release_root();

  private:
  const ::google::protobuf::Empty& _internal_root() const;
  ::google::protobuf::Empty* _internal_mutable_root();

  public:
  // .palm.metasequoia.v1.Role.Member member = 3;
  bool has_member() const;
  private:
  bool _internal_has_member() const;

  public:
  void clear_member() ;
  const ::palm::metasequoia::v1::Role_Member& member() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::Role_Member* release_member();
  ::palm::metasequoia::v1::Role_Member* mutable_member();
  void set_allocated_member(::palm::metasequoia::v1::Role_Member* value);
  void unsafe_arena_set_allocated_member(::palm::metasequoia::v1::Role_Member* value);
  ::palm::metasequoia::v1::Role_Member* unsafe_arena_release_member();

  private:
  const ::palm::metasequoia::v1::Role_Member& _internal_member() const;
  ::palm::metasequoia::v1::Role_Member* _internal_mutable_member();

  public:
  void clear_by();
  ByCase by_case() const;
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.Role)
 private:
  class _Internal;
  void set_has_administrator();
  void set_has_root();
  void set_has_member();

  inline bool has_by() const;
  inline void clear_has_by();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    union ByUnion {
      constexpr ByUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::Empty* administrator_;
      ::google::protobuf::Empty* root_;
      ::palm::metasequoia::v1::Role_Member* member_;
    } by_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class RbacPermissionItem final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.RbacPermissionItem) */ {
 public:
  inline RbacPermissionItem() : RbacPermissionItem(nullptr) {}
  ~RbacPermissionItem() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RbacPermissionItem(::google::protobuf::internal::ConstantInitialized);

  inline RbacPermissionItem(const RbacPermissionItem& from)
      : RbacPermissionItem(nullptr, from) {}
  RbacPermissionItem(RbacPermissionItem&& from) noexcept
    : RbacPermissionItem() {
    *this = ::std::move(from);
  }

  inline RbacPermissionItem& operator=(const RbacPermissionItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline RbacPermissionItem& operator=(RbacPermissionItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RbacPermissionItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const RbacPermissionItem* internal_default_instance() {
    return reinterpret_cast<const RbacPermissionItem*>(
               &_RbacPermissionItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(RbacPermissionItem& a, RbacPermissionItem& b) {
    a.Swap(&b);
  }
  inline void Swap(RbacPermissionItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RbacPermissionItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RbacPermissionItem* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RbacPermissionItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RbacPermissionItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RbacPermissionItem& from) {
    RbacPermissionItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RbacPermissionItem* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.RbacPermissionItem";
  }
  protected:
  explicit RbacPermissionItem(::google::protobuf::Arena* arena);
  RbacPermissionItem(::google::protobuf::Arena* arena, const RbacPermissionItem& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 1,
    kResourceFieldNumber = 2,
  };
  // string action = 1;
  void clear_action() ;
  const std::string& action() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_action(Arg_&& arg, Args_... args);
  std::string* mutable_action();
  PROTOBUF_NODISCARD std::string* release_action();
  void set_allocated_action(std::string* value);

  private:
  const std::string& _internal_action() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_action(
      const std::string& value);
  std::string* _internal_mutable_action();

  public:
  // .palm.metasequoia.v1.Resource resource = 2;
  bool has_resource() const;
  void clear_resource() ;
  const ::palm::metasequoia::v1::Resource& resource() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::Resource* release_resource();
  ::palm::metasequoia::v1::Resource* mutable_resource();
  void set_allocated_resource(::palm::metasequoia::v1::Resource* value);
  void unsafe_arena_set_allocated_resource(::palm::metasequoia::v1::Resource* value);
  ::palm::metasequoia::v1::Resource* unsafe_arena_release_resource();

  private:
  const ::palm::metasequoia::v1::Resource& _internal_resource() const;
  ::palm::metasequoia::v1::Resource* _internal_mutable_resource();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.RbacPermissionItem)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      53, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr action_;
    ::palm::metasequoia::v1::Resource* resource_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class RbacCanRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.RbacCanRequest) */ {
 public:
  inline RbacCanRequest() : RbacCanRequest(nullptr) {}
  ~RbacCanRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RbacCanRequest(::google::protobuf::internal::ConstantInitialized);

  inline RbacCanRequest(const RbacCanRequest& from)
      : RbacCanRequest(nullptr, from) {}
  RbacCanRequest(RbacCanRequest&& from) noexcept
    : RbacCanRequest() {
    *this = ::std::move(from);
  }

  inline RbacCanRequest& operator=(const RbacCanRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RbacCanRequest& operator=(RbacCanRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RbacCanRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RbacCanRequest* internal_default_instance() {
    return reinterpret_cast<const RbacCanRequest*>(
               &_RbacCanRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(RbacCanRequest& a, RbacCanRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RbacCanRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RbacCanRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RbacCanRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RbacCanRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RbacCanRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RbacCanRequest& from) {
    RbacCanRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RbacCanRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.RbacCanRequest";
  }
  protected:
  explicit RbacCanRequest(::google::protobuf::Arena* arena);
  RbacCanRequest(::google::protobuf::Arena* arena, const RbacCanRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 3,
    kObjectFieldNumber = 2,
    kUserFieldNumber = 1,
  };
  // string action = 3;
  void clear_action() ;
  const std::string& action() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_action(Arg_&& arg, Args_... args);
  std::string* mutable_action();
  PROTOBUF_NODISCARD std::string* release_action();
  void set_allocated_action(std::string* value);

  private:
  const std::string& _internal_action() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_action(
      const std::string& value);
  std::string* _internal_mutable_action();

  public:
  // .palm.metasequoia.v1.Resource object = 2;
  bool has_object() const;
  void clear_object() ;
  const ::palm::metasequoia::v1::Resource& object() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::Resource* release_object();
  ::palm::metasequoia::v1::Resource* mutable_object();
  void set_allocated_object(::palm::metasequoia::v1::Resource* value);
  void unsafe_arena_set_allocated_object(::palm::metasequoia::v1::Resource* value);
  ::palm::metasequoia::v1::Resource* unsafe_arena_release_object();

  private:
  const ::palm::metasequoia::v1::Resource& _internal_object() const;
  ::palm::metasequoia::v1::Resource* _internal_mutable_object();

  public:
  // int32 user = 1;
  void clear_user() ;
  ::int32_t user() const;
  void set_user(::int32_t value);

  private:
  ::int32_t _internal_user() const;
  void _internal_set_user(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.RbacCanRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr action_;
    ::palm::metasequoia::v1::Resource* object_;
    ::int32_t user_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class NotificationIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.NotificationIndexResponse.Item) */ {
 public:
  inline NotificationIndexResponse_Item() : NotificationIndexResponse_Item(nullptr) {}
  ~NotificationIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NotificationIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline NotificationIndexResponse_Item(const NotificationIndexResponse_Item& from)
      : NotificationIndexResponse_Item(nullptr, from) {}
  NotificationIndexResponse_Item(NotificationIndexResponse_Item&& from) noexcept
    : NotificationIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline NotificationIndexResponse_Item& operator=(const NotificationIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotificationIndexResponse_Item& operator=(NotificationIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotificationIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotificationIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const NotificationIndexResponse_Item*>(
               &_NotificationIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  friend void swap(NotificationIndexResponse_Item& a, NotificationIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(NotificationIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotificationIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotificationIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NotificationIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotificationIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const NotificationIndexResponse_Item& from) {
    NotificationIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotificationIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.NotificationIndexResponse.Item";
  }
  protected:
  explicit NotificationIndexResponse_Item(::google::protobuf::Arena* arena);
  NotificationIndexResponse_Item(::google::protobuf::Arena* arena, const NotificationIndexResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Level = NotificationIndexResponse_Item_Level;
  static constexpr Level NOTE = NotificationIndexResponse_Item_Level_NOTE;
  static constexpr Level INFO = NotificationIndexResponse_Item_Level_INFO;
  static inline bool Level_IsValid(int value) {
    return NotificationIndexResponse_Item_Level_IsValid(value);
  }
  static constexpr Level Level_MIN = NotificationIndexResponse_Item_Level_Level_MIN;
  static constexpr Level Level_MAX = NotificationIndexResponse_Item_Level_Level_MAX;
  static constexpr int Level_ARRAYSIZE = NotificationIndexResponse_Item_Level_Level_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Level_descriptor() {
    return NotificationIndexResponse_Item_Level_descriptor();
  }
  template <typename T>
  static inline const std::string& Level_Name(T value) {
    return NotificationIndexResponse_Item_Level_Name(value);
  }
  static inline bool Level_Parse(absl::string_view name, Level* value) {
    return NotificationIndexResponse_Item_Level_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kTitleFieldNumber = 3,
    kUrlFieldNumber = 4,
    kLangFieldNumber = 8,
    kUpdatedAtFieldNumber = 9,
    kIdFieldNumber = 1,
    kLevelFieldNumber = 2,
  };
  // string title = 3;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string url = 4;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // string lang = 8;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // .google.protobuf.Timestamp updated_at = 9;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // .palm.metasequoia.v1.NotificationIndexResponse.Item.Level level = 2;
  void clear_level() ;
  ::palm::metasequoia::v1::NotificationIndexResponse_Item_Level level() const;
  void set_level(::palm::metasequoia::v1::NotificationIndexResponse_Item_Level value);

  private:
  ::palm::metasequoia::v1::NotificationIndexResponse_Item_Level _internal_level() const;
  void _internal_set_level(::palm::metasequoia::v1::NotificationIndexResponse_Item_Level value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.NotificationIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      71, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr url_;
    ::google::protobuf::internal::ArenaStringPtr lang_;
    ::google::protobuf::Timestamp* updated_at_;
    ::int32_t id_;
    int level_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class MediaContent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.MediaContent) */ {
 public:
  inline MediaContent() : MediaContent(nullptr) {}
  ~MediaContent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MediaContent(::google::protobuf::internal::ConstantInitialized);

  inline MediaContent(const MediaContent& from)
      : MediaContent(nullptr, from) {}
  MediaContent(MediaContent&& from) noexcept
    : MediaContent() {
    *this = ::std::move(from);
  }

  inline MediaContent& operator=(const MediaContent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MediaContent& operator=(MediaContent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MediaContent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MediaContent* internal_default_instance() {
    return reinterpret_cast<const MediaContent*>(
               &_MediaContent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MediaContent& a, MediaContent& b) {
    a.Swap(&b);
  }
  inline void Swap(MediaContent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MediaContent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MediaContent* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MediaContent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MediaContent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MediaContent& from) {
    MediaContent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MediaContent* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.MediaContent";
  }
  protected:
  explicit MediaContent(::google::protobuf::Arena* arena);
  MediaContent(::google::protobuf::Arena* arena, const MediaContent& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Editor = MediaContent_Editor;
  static constexpr Editor TEXTAREA = MediaContent_Editor_TEXTAREA;
  static constexpr Editor QUILL = MediaContent_Editor_QUILL;
  static inline bool Editor_IsValid(int value) {
    return MediaContent_Editor_IsValid(value);
  }
  static constexpr Editor Editor_MIN = MediaContent_Editor_Editor_MIN;
  static constexpr Editor Editor_MAX = MediaContent_Editor_Editor_MAX;
  static constexpr int Editor_ARRAYSIZE = MediaContent_Editor_Editor_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Editor_descriptor() {
    return MediaContent_Editor_descriptor();
  }
  template <typename T>
  static inline const std::string& Editor_Name(T value) {
    return MediaContent_Editor_Name(value);
  }
  static inline bool Editor_Parse(absl::string_view name, Editor* value) {
    return MediaContent_Editor_Parse(name, value);
  }

  using Status = MediaContent_Status;
  static constexpr Status Published = MediaContent_Status_Published;
  static constexpr Status Draft = MediaContent_Status_Draft;
  static constexpr Status Pending = MediaContent_Status_Pending;
  static constexpr Status Private = MediaContent_Status_Private;
  static constexpr Status Future = MediaContent_Status_Future;
  static constexpr Status Trash = MediaContent_Status_Trash;
  static inline bool Status_IsValid(int value) {
    return MediaContent_Status_IsValid(value);
  }
  static constexpr Status Status_MIN = MediaContent_Status_Status_MIN;
  static constexpr Status Status_MAX = MediaContent_Status_Status_MAX;
  static constexpr int Status_ARRAYSIZE = MediaContent_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Status_descriptor() {
    return MediaContent_Status_descriptor();
  }
  template <typename T>
  static inline const std::string& Status_Name(T value) {
    return MediaContent_Status_Name(value);
  }
  static inline bool Status_Parse(absl::string_view name, Status* value) {
    return MediaContent_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kBodyFieldNumber = 2,
    kPublishedAtFieldNumber = 11,
    kEditorFieldNumber = 1,
    kStatusFieldNumber = 3,
  };
  // string body = 2;
  void clear_body() ;
  const std::string& body() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_body(Arg_&& arg, Args_... args);
  std::string* mutable_body();
  PROTOBUF_NODISCARD std::string* release_body();
  void set_allocated_body(std::string* value);

  private:
  const std::string& _internal_body() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_body(
      const std::string& value);
  std::string* _internal_mutable_body();

  public:
  // optional .google.protobuf.Timestamp published_at = 11;
  bool has_published_at() const;
  void clear_published_at() ;
  const ::google::protobuf::Timestamp& published_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_published_at();
  ::google::protobuf::Timestamp* mutable_published_at();
  void set_allocated_published_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_published_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_published_at();

  private:
  const ::google::protobuf::Timestamp& _internal_published_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_published_at();

  public:
  // .palm.metasequoia.v1.MediaContent.Editor editor = 1;
  void clear_editor() ;
  ::palm::metasequoia::v1::MediaContent_Editor editor() const;
  void set_editor(::palm::metasequoia::v1::MediaContent_Editor value);

  private:
  ::palm::metasequoia::v1::MediaContent_Editor _internal_editor() const;
  void _internal_set_editor(::palm::metasequoia::v1::MediaContent_Editor value);

  public:
  // .palm.metasequoia.v1.MediaContent.Status status = 3;
  void clear_status() ;
  ::palm::metasequoia::v1::MediaContent_Status status() const;
  void set_status(::palm::metasequoia::v1::MediaContent_Status value);

  private:
  ::palm::metasequoia::v1::MediaContent_Status _internal_status() const;
  void _internal_set_status(::palm::metasequoia::v1::MediaContent_Status value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.MediaContent)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      45, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr body_;
    ::google::protobuf::Timestamp* published_at_;
    int editor_;
    int status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class LocalesResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.LocalesResponse.Item) */ {
 public:
  inline LocalesResponse_Item() : LocalesResponse_Item(nullptr) {}
  ~LocalesResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LocalesResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline LocalesResponse_Item(const LocalesResponse_Item& from)
      : LocalesResponse_Item(nullptr, from) {}
  LocalesResponse_Item(LocalesResponse_Item&& from) noexcept
    : LocalesResponse_Item() {
    *this = ::std::move(from);
  }

  inline LocalesResponse_Item& operator=(const LocalesResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocalesResponse_Item& operator=(LocalesResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocalesResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const LocalesResponse_Item* internal_default_instance() {
    return reinterpret_cast<const LocalesResponse_Item*>(
               &_LocalesResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(LocalesResponse_Item& a, LocalesResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(LocalesResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocalesResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocalesResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LocalesResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocalesResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LocalesResponse_Item& from) {
    LocalesResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LocalesResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.LocalesResponse.Item";
  }
  protected:
  explicit LocalesResponse_Item(::google::protobuf::Arena* arena);
  LocalesResponse_Item(::google::protobuf::Arena* arena, const LocalesResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLangFieldNumber = 2,
    kCodeFieldNumber = 3,
    kMessageFieldNumber = 4,
    kCreatedAtFieldNumber = 11,
    kUpdatedAtFieldNumber = 12,
    kIdFieldNumber = 1,
  };
  // string lang = 2;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // string code = 3;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // string message = 4;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // .google.protobuf.Timestamp created_at = 11;
  bool has_created_at() const;
  void clear_created_at() ;
  const ::google::protobuf::Timestamp& created_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_at();
  ::google::protobuf::Timestamp* mutable_created_at();
  void set_allocated_created_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_at();

  private:
  const ::google::protobuf::Timestamp& _internal_created_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_at();

  public:
  // .google.protobuf.Timestamp updated_at = 12;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.LocalesResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 6, 2,
      64, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr lang_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::Timestamp* created_at_;
    ::google::protobuf::Timestamp* updated_at_;
    ::int32_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class GoogleSignInUrlRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.GoogleSignInUrlRequest) */ {
 public:
  inline GoogleSignInUrlRequest() : GoogleSignInUrlRequest(nullptr) {}
  ~GoogleSignInUrlRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GoogleSignInUrlRequest(::google::protobuf::internal::ConstantInitialized);

  inline GoogleSignInUrlRequest(const GoogleSignInUrlRequest& from)
      : GoogleSignInUrlRequest(nullptr, from) {}
  GoogleSignInUrlRequest(GoogleSignInUrlRequest&& from) noexcept
    : GoogleSignInUrlRequest() {
    *this = ::std::move(from);
  }

  inline GoogleSignInUrlRequest& operator=(const GoogleSignInUrlRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GoogleSignInUrlRequest& operator=(GoogleSignInUrlRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GoogleSignInUrlRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GoogleSignInUrlRequest* internal_default_instance() {
    return reinterpret_cast<const GoogleSignInUrlRequest*>(
               &_GoogleSignInUrlRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  friend void swap(GoogleSignInUrlRequest& a, GoogleSignInUrlRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GoogleSignInUrlRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GoogleSignInUrlRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GoogleSignInUrlRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GoogleSignInUrlRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GoogleSignInUrlRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GoogleSignInUrlRequest& from) {
    GoogleSignInUrlRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GoogleSignInUrlRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.GoogleSignInUrlRequest";
  }
  protected:
  explicit GoogleSignInUrlRequest(::google::protobuf::Arena* arena);
  GoogleSignInUrlRequest(::google::protobuf::Arena* arena, const GoogleSignInUrlRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRedirectUriFieldNumber = 1,
    kStateFieldNumber = 2,
  };
  // string redirect_uri = 1;
  void clear_redirect_uri() ;
  const std::string& redirect_uri() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_redirect_uri(Arg_&& arg, Args_... args);
  std::string* mutable_redirect_uri();
  PROTOBUF_NODISCARD std::string* release_redirect_uri();
  void set_allocated_redirect_uri(std::string* value);

  private:
  const std::string& _internal_redirect_uri() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_redirect_uri(
      const std::string& value);
  std::string* _internal_mutable_redirect_uri();

  public:
  // .palm.metasequoia.v1.Oauth2State state = 2;
  bool has_state() const;
  void clear_state() ;
  const ::palm::metasequoia::v1::Oauth2State& state() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::Oauth2State* release_state();
  ::palm::metasequoia::v1::Oauth2State* mutable_state();
  void set_allocated_state(::palm::metasequoia::v1::Oauth2State* value);
  void unsafe_arena_set_allocated_state(::palm::metasequoia::v1::Oauth2State* value);
  ::palm::metasequoia::v1::Oauth2State* unsafe_arena_release_state();

  private:
  const ::palm::metasequoia::v1::Oauth2State& _internal_state() const;
  ::palm::metasequoia::v1::Oauth2State* _internal_mutable_state();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.GoogleSignInUrlRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      63, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr redirect_uri_;
    ::palm::metasequoia::v1::Oauth2State* state_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class GoogleProfile final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.GoogleProfile) */ {
 public:
  inline GoogleProfile() : GoogleProfile(nullptr) {}
  ~GoogleProfile() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GoogleProfile(::google::protobuf::internal::ConstantInitialized);

  inline GoogleProfile(const GoogleProfile& from)
      : GoogleProfile(nullptr, from) {}
  GoogleProfile(GoogleProfile&& from) noexcept
    : GoogleProfile() {
    *this = ::std::move(from);
  }

  inline GoogleProfile& operator=(const GoogleProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline GoogleProfile& operator=(GoogleProfile&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GoogleProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const GoogleProfile* internal_default_instance() {
    return reinterpret_cast<const GoogleProfile*>(
               &_GoogleProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(GoogleProfile& a, GoogleProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(GoogleProfile* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GoogleProfile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GoogleProfile* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GoogleProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GoogleProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GoogleProfile& from) {
    GoogleProfile::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GoogleProfile* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.GoogleProfile";
  }
  protected:
  explicit GoogleProfile(::google::protobuf::Arena* arena);
  GoogleProfile(::google::protobuf::Arena* arena, const GoogleProfile& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using ReCaptcha = GoogleProfile_ReCaptcha;

  // accessors -------------------------------------------------------

  enum : int {
    kSiteVerifyIdFieldNumber = 1,
    kReCaptchaFieldNumber = 2,
  };
  // optional string site_verify_id = 1;
  bool has_site_verify_id() const;
  void clear_site_verify_id() ;
  const std::string& site_verify_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_site_verify_id(Arg_&& arg, Args_... args);
  std::string* mutable_site_verify_id();
  PROTOBUF_NODISCARD std::string* release_site_verify_id();
  void set_allocated_site_verify_id(std::string* value);

  private:
  const std::string& _internal_site_verify_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_site_verify_id(
      const std::string& value);
  std::string* _internal_mutable_site_verify_id();

  public:
  // optional .palm.metasequoia.v1.GoogleProfile.ReCaptcha re_captcha = 2;
  bool has_re_captcha() const;
  void clear_re_captcha() ;
  const ::palm::metasequoia::v1::GoogleProfile_ReCaptcha& re_captcha() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::GoogleProfile_ReCaptcha* release_re_captcha();
  ::palm::metasequoia::v1::GoogleProfile_ReCaptcha* mutable_re_captcha();
  void set_allocated_re_captcha(::palm::metasequoia::v1::GoogleProfile_ReCaptcha* value);
  void unsafe_arena_set_allocated_re_captcha(::palm::metasequoia::v1::GoogleProfile_ReCaptcha* value);
  ::palm::metasequoia::v1::GoogleProfile_ReCaptcha* unsafe_arena_release_re_captcha();

  private:
  const ::palm::metasequoia::v1::GoogleProfile_ReCaptcha& _internal_re_captcha() const;
  ::palm::metasequoia::v1::GoogleProfile_ReCaptcha* _internal_mutable_re_captcha();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.GoogleProfile)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      56, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr site_verify_id_;
    ::palm::metasequoia::v1::GoogleProfile_ReCaptcha* re_captcha_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class EmailTask final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.EmailTask) */ {
 public:
  inline EmailTask() : EmailTask(nullptr) {}
  ~EmailTask() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EmailTask(::google::protobuf::internal::ConstantInitialized);

  inline EmailTask(const EmailTask& from)
      : EmailTask(nullptr, from) {}
  EmailTask(EmailTask&& from) noexcept
    : EmailTask() {
    *this = ::std::move(from);
  }

  inline EmailTask& operator=(const EmailTask& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmailTask& operator=(EmailTask&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmailTask& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmailTask* internal_default_instance() {
    return reinterpret_cast<const EmailTask*>(
               &_EmailTask_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(EmailTask& a, EmailTask& b) {
    a.Swap(&b);
  }
  inline void Swap(EmailTask* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmailTask* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmailTask* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EmailTask>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EmailTask& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EmailTask& from) {
    EmailTask::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EmailTask* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.EmailTask";
  }
  protected:
  explicit EmailTask(::google::protobuf::Arena* arena);
  EmailTask(::google::protobuf::Arena* arena, const EmailTask& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Address = EmailTask_Address;
  using Body = EmailTask_Body;
  using Attachment = EmailTask_Attachment;

  // accessors -------------------------------------------------------

  enum : int {
    kCcFieldNumber = 2,
    kBccFieldNumber = 3,
    kAttachmentsFieldNumber = 13,
    kSubjectFieldNumber = 11,
    kToFieldNumber = 1,
    kBodyFieldNumber = 12,
  };
  // repeated .palm.metasequoia.v1.EmailTask.Address cc = 2;
  int cc_size() const;
  private:
  int _internal_cc_size() const;

  public:
  void clear_cc() ;
  ::palm::metasequoia::v1::EmailTask_Address* mutable_cc(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::EmailTask_Address >*
      mutable_cc();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>& _internal_cc() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>* _internal_mutable_cc();
  public:
  const ::palm::metasequoia::v1::EmailTask_Address& cc(int index) const;
  ::palm::metasequoia::v1::EmailTask_Address* add_cc();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::EmailTask_Address >&
      cc() const;
  // repeated .palm.metasequoia.v1.EmailTask.Address bcc = 3;
  int bcc_size() const;
  private:
  int _internal_bcc_size() const;

  public:
  void clear_bcc() ;
  ::palm::metasequoia::v1::EmailTask_Address* mutable_bcc(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::EmailTask_Address >*
      mutable_bcc();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>& _internal_bcc() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>* _internal_mutable_bcc();
  public:
  const ::palm::metasequoia::v1::EmailTask_Address& bcc(int index) const;
  ::palm::metasequoia::v1::EmailTask_Address* add_bcc();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::EmailTask_Address >&
      bcc() const;
  // repeated .palm.metasequoia.v1.EmailTask.Attachment attachments = 13;
  int attachments_size() const;
  private:
  int _internal_attachments_size() const;

  public:
  void clear_attachments() ;
  ::palm::metasequoia::v1::EmailTask_Attachment* mutable_attachments(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::EmailTask_Attachment >*
      mutable_attachments();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Attachment>& _internal_attachments() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Attachment>* _internal_mutable_attachments();
  public:
  const ::palm::metasequoia::v1::EmailTask_Attachment& attachments(int index) const;
  ::palm::metasequoia::v1::EmailTask_Attachment* add_attachments();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::EmailTask_Attachment >&
      attachments() const;
  // string subject = 11;
  void clear_subject() ;
  const std::string& subject() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subject(Arg_&& arg, Args_... args);
  std::string* mutable_subject();
  PROTOBUF_NODISCARD std::string* release_subject();
  void set_allocated_subject(std::string* value);

  private:
  const std::string& _internal_subject() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subject(
      const std::string& value);
  std::string* _internal_mutable_subject();

  public:
  // .palm.metasequoia.v1.EmailTask.Address to = 1;
  bool has_to() const;
  void clear_to() ;
  const ::palm::metasequoia::v1::EmailTask_Address& to() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::EmailTask_Address* release_to();
  ::palm::metasequoia::v1::EmailTask_Address* mutable_to();
  void set_allocated_to(::palm::metasequoia::v1::EmailTask_Address* value);
  void unsafe_arena_set_allocated_to(::palm::metasequoia::v1::EmailTask_Address* value);
  ::palm::metasequoia::v1::EmailTask_Address* unsafe_arena_release_to();

  private:
  const ::palm::metasequoia::v1::EmailTask_Address& _internal_to() const;
  ::palm::metasequoia::v1::EmailTask_Address* _internal_mutable_to();

  public:
  // .palm.metasequoia.v1.EmailTask.Body body = 12;
  bool has_body() const;
  void clear_body() ;
  const ::palm::metasequoia::v1::EmailTask_Body& body() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::EmailTask_Body* release_body();
  ::palm::metasequoia::v1::EmailTask_Body* mutable_body();
  void set_allocated_body(::palm::metasequoia::v1::EmailTask_Body* value);
  void unsafe_arena_set_allocated_body(::palm::metasequoia::v1::EmailTask_Body* value);
  ::palm::metasequoia::v1::EmailTask_Body* unsafe_arena_release_body();

  private:
  const ::palm::metasequoia::v1::EmailTask_Body& _internal_body() const;
  ::palm::metasequoia::v1::EmailTask_Body* _internal_mutable_body();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.EmailTask)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 5,
      45, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::EmailTask_Address > cc_;
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::EmailTask_Address > bcc_;
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::EmailTask_Attachment > attachments_;
    ::google::protobuf::internal::ArenaStringPtr subject_;
    ::palm::metasequoia::v1::EmailTask_Address* to_;
    ::palm::metasequoia::v1::EmailTask_Body* body_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class CategoryIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.CategoryIndexResponse.Item) */ {
 public:
  inline CategoryIndexResponse_Item() : CategoryIndexResponse_Item(nullptr) {}
  ~CategoryIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CategoryIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline CategoryIndexResponse_Item(const CategoryIndexResponse_Item& from)
      : CategoryIndexResponse_Item(nullptr, from) {}
  CategoryIndexResponse_Item(CategoryIndexResponse_Item&& from) noexcept
    : CategoryIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline CategoryIndexResponse_Item& operator=(const CategoryIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline CategoryIndexResponse_Item& operator=(CategoryIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CategoryIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const CategoryIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const CategoryIndexResponse_Item*>(
               &_CategoryIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  friend void swap(CategoryIndexResponse_Item& a, CategoryIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(CategoryIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CategoryIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CategoryIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CategoryIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CategoryIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CategoryIndexResponse_Item& from) {
    CategoryIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CategoryIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.CategoryIndexResponse.Item";
  }
  protected:
  explicit CategoryIndexResponse_Item(::google::protobuf::Arena* arena);
  CategoryIndexResponse_Item(::google::protobuf::Arena* arena, const CategoryIndexResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 2,
    kUpdatedAtFieldNumber = 11,
    kIdFieldNumber = 1,
    kLeftFieldNumber = 3,
    kRightFieldNumber = 4,
  };
  // string code = 2;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // .google.protobuf.Timestamp updated_at = 11;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // int32 left = 3;
  void clear_left() ;
  ::int32_t left() const;
  void set_left(::int32_t value);

  private:
  ::int32_t _internal_left() const;
  void _internal_set_left(::int32_t value);

  public:
  // int32 right = 4;
  void clear_right() ;
  ::int32_t right() const;
  void set_right(::int32_t value);

  private:
  ::int32_t _internal_right() const;
  void _internal_set_right(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.CategoryIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 1,
      59, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::Timestamp* updated_at_;
    ::int32_t id_;
    ::int32_t left_;
    ::int32_t right_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class BaiduProfile final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.BaiduProfile) */ {
 public:
  inline BaiduProfile() : BaiduProfile(nullptr) {}
  ~BaiduProfile() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BaiduProfile(::google::protobuf::internal::ConstantInitialized);

  inline BaiduProfile(const BaiduProfile& from)
      : BaiduProfile(nullptr, from) {}
  BaiduProfile(BaiduProfile&& from) noexcept
    : BaiduProfile() {
    *this = ::std::move(from);
  }

  inline BaiduProfile& operator=(const BaiduProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline BaiduProfile& operator=(BaiduProfile&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BaiduProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const BaiduProfile* internal_default_instance() {
    return reinterpret_cast<const BaiduProfile*>(
               &_BaiduProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(BaiduProfile& a, BaiduProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(BaiduProfile* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BaiduProfile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BaiduProfile* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BaiduProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BaiduProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BaiduProfile& from) {
    BaiduProfile::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BaiduProfile* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.BaiduProfile";
  }
  protected:
  explicit BaiduProfile(::google::protobuf::Arena* arena);
  BaiduProfile(::google::protobuf::Arena* arena, const BaiduProfile& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using SiteVerify = BaiduProfile_SiteVerify;

  // accessors -------------------------------------------------------

  enum : int {
    kSiteVerifyFieldNumber = 1,
  };
  // optional .palm.metasequoia.v1.BaiduProfile.SiteVerify site_verify = 1;
  bool has_site_verify() const;
  void clear_site_verify() ;
  const ::palm::metasequoia::v1::BaiduProfile_SiteVerify& site_verify() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::BaiduProfile_SiteVerify* release_site_verify();
  ::palm::metasequoia::v1::BaiduProfile_SiteVerify* mutable_site_verify();
  void set_allocated_site_verify(::palm::metasequoia::v1::BaiduProfile_SiteVerify* value);
  void unsafe_arena_set_allocated_site_verify(::palm::metasequoia::v1::BaiduProfile_SiteVerify* value);
  ::palm::metasequoia::v1::BaiduProfile_SiteVerify* unsafe_arena_release_site_verify();

  private:
  const ::palm::metasequoia::v1::BaiduProfile_SiteVerify& _internal_site_verify() const;
  ::palm::metasequoia::v1::BaiduProfile_SiteVerify* _internal_mutable_site_verify();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.BaiduProfile)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::palm::metasequoia::v1::BaiduProfile_SiteVerify* site_verify_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class AttachmentShowRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.AttachmentShowRequest) */ {
 public:
  inline AttachmentShowRequest() : AttachmentShowRequest(nullptr) {}
  ~AttachmentShowRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AttachmentShowRequest(::google::protobuf::internal::ConstantInitialized);

  inline AttachmentShowRequest(const AttachmentShowRequest& from)
      : AttachmentShowRequest(nullptr, from) {}
  AttachmentShowRequest(AttachmentShowRequest&& from) noexcept
    : AttachmentShowRequest() {
    *this = ::std::move(from);
  }

  inline AttachmentShowRequest& operator=(const AttachmentShowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttachmentShowRequest& operator=(AttachmentShowRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttachmentShowRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AttachmentShowRequest* internal_default_instance() {
    return reinterpret_cast<const AttachmentShowRequest*>(
               &_AttachmentShowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  friend void swap(AttachmentShowRequest& a, AttachmentShowRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AttachmentShowRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttachmentShowRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttachmentShowRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AttachmentShowRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AttachmentShowRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AttachmentShowRequest& from) {
    AttachmentShowRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AttachmentShowRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.AttachmentShowRequest";
  }
  protected:
  explicit AttachmentShowRequest(::google::protobuf::Arena* arena);
  AttachmentShowRequest(::google::protobuf::Arena* arena, const AttachmentShowRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTtlFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // .google.protobuf.Duration ttl = 2;
  bool has_ttl() const;
  void clear_ttl() ;
  const ::google::protobuf::Duration& ttl() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_ttl();
  ::google::protobuf::Duration* mutable_ttl();
  void set_allocated_ttl(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_ttl(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_ttl();

  private:
  const ::google::protobuf::Duration& _internal_ttl() const;
  ::google::protobuf::Duration* _internal_mutable_ttl();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.AttachmentShowRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Duration* ttl_;
    ::int32_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class AttachmentIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.AttachmentIndexResponse.Item) */ {
 public:
  inline AttachmentIndexResponse_Item() : AttachmentIndexResponse_Item(nullptr) {}
  ~AttachmentIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AttachmentIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline AttachmentIndexResponse_Item(const AttachmentIndexResponse_Item& from)
      : AttachmentIndexResponse_Item(nullptr, from) {}
  AttachmentIndexResponse_Item(AttachmentIndexResponse_Item&& from) noexcept
    : AttachmentIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline AttachmentIndexResponse_Item& operator=(const AttachmentIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttachmentIndexResponse_Item& operator=(AttachmentIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttachmentIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const AttachmentIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const AttachmentIndexResponse_Item*>(
               &_AttachmentIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  friend void swap(AttachmentIndexResponse_Item& a, AttachmentIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(AttachmentIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttachmentIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttachmentIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AttachmentIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AttachmentIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AttachmentIndexResponse_Item& from) {
    AttachmentIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AttachmentIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.AttachmentIndexResponse.Item";
  }
  protected:
  explicit AttachmentIndexResponse_Item(::google::protobuf::Arena* arena);
  AttachmentIndexResponse_Item(::google::protobuf::Arena* arena, const AttachmentIndexResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBucketFieldNumber = 2,
    kNameFieldNumber = 3,
    kTitleFieldNumber = 4,
    kContentTypeFieldNumber = 6,
    kUpdatedAtFieldNumber = 11,
    kIdFieldNumber = 1,
    kStatusFieldNumber = 7,
    kSizeFieldNumber = 5,
  };
  // string bucket = 2;
  void clear_bucket() ;
  const std::string& bucket() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bucket(Arg_&& arg, Args_... args);
  std::string* mutable_bucket();
  PROTOBUF_NODISCARD std::string* release_bucket();
  void set_allocated_bucket(std::string* value);

  private:
  const std::string& _internal_bucket() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bucket(
      const std::string& value);
  std::string* _internal_mutable_bucket();

  public:
  // string name = 3;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string title = 4;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string content_type = 6;
  void clear_content_type() ;
  const std::string& content_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content_type(Arg_&& arg, Args_... args);
  std::string* mutable_content_type();
  PROTOBUF_NODISCARD std::string* release_content_type();
  void set_allocated_content_type(std::string* value);

  private:
  const std::string& _internal_content_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content_type(
      const std::string& value);
  std::string* _internal_mutable_content_type();

  public:
  // .google.protobuf.Timestamp updated_at = 11;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // .palm.metasequoia.v1.MediaContent.Status status = 7;
  void clear_status() ;
  ::palm::metasequoia::v1::MediaContent_Status status() const;
  void set_status(::palm::metasequoia::v1::MediaContent_Status value);

  private:
  ::palm::metasequoia::v1::MediaContent_Status _internal_status() const;
  void _internal_set_status(::palm::metasequoia::v1::MediaContent_Status value);

  public:
  // int64 size = 5;
  void clear_size() ;
  ::int64_t size() const;
  void set_size(::int64_t value);

  private:
  ::int64_t _internal_size() const;
  void _internal_set_size(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.AttachmentIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 8, 1,
      92, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr bucket_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr content_type_;
    ::google::protobuf::Timestamp* updated_at_;
    ::int32_t id_;
    int status_;
    ::int64_t size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class UserLogsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.UserLogsResponse) */ {
 public:
  inline UserLogsResponse() : UserLogsResponse(nullptr) {}
  ~UserLogsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserLogsResponse(::google::protobuf::internal::ConstantInitialized);

  inline UserLogsResponse(const UserLogsResponse& from)
      : UserLogsResponse(nullptr, from) {}
  UserLogsResponse(UserLogsResponse&& from) noexcept
    : UserLogsResponse() {
    *this = ::std::move(from);
  }

  inline UserLogsResponse& operator=(const UserLogsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserLogsResponse& operator=(UserLogsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserLogsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserLogsResponse* internal_default_instance() {
    return reinterpret_cast<const UserLogsResponse*>(
               &_UserLogsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(UserLogsResponse& a, UserLogsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UserLogsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserLogsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserLogsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserLogsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserLogsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserLogsResponse& from) {
    UserLogsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserLogsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.UserLogsResponse";
  }
  protected:
  explicit UserLogsResponse(::google::protobuf::Arena* arena);
  UserLogsResponse(::google::protobuf::Arena* arena, const UserLogsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = UserLogsResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .palm.metasequoia.v1.UserLogsResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::metasequoia::v1::UserLogsResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::UserLogsResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::UserLogsResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::UserLogsResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::metasequoia::v1::UserLogsResponse_Item& items(int index) const;
  ::palm::metasequoia::v1::UserLogsResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::UserLogsResponse_Item >&
      items() const;
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.UserLogsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::UserLogsResponse_Item > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class UserIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.UserIndexResponse) */ {
 public:
  inline UserIndexResponse() : UserIndexResponse(nullptr) {}
  ~UserIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserIndexResponse(::google::protobuf::internal::ConstantInitialized);

  inline UserIndexResponse(const UserIndexResponse& from)
      : UserIndexResponse(nullptr, from) {}
  UserIndexResponse(UserIndexResponse&& from) noexcept
    : UserIndexResponse() {
    *this = ::std::move(from);
  }

  inline UserIndexResponse& operator=(const UserIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserIndexResponse& operator=(UserIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserIndexResponse* internal_default_instance() {
    return reinterpret_cast<const UserIndexResponse*>(
               &_UserIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(UserIndexResponse& a, UserIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UserIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserIndexResponse& from) {
    UserIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.UserIndexResponse";
  }
  protected:
  explicit UserIndexResponse(::google::protobuf::Arena* arena);
  UserIndexResponse(::google::protobuf::Arena* arena, const UserIndexResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = UserIndexResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .palm.metasequoia.v1.UserIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::metasequoia::v1::UserIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::UserIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::UserIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::UserIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::metasequoia::v1::UserIndexResponse_Item& items(int index) const;
  ::palm::metasequoia::v1::UserIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::UserIndexResponse_Item >&
      items() const;
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.UserIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::UserIndexResponse_Item > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class TagIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.TagIndexResponse) */ {
 public:
  inline TagIndexResponse() : TagIndexResponse(nullptr) {}
  ~TagIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TagIndexResponse(::google::protobuf::internal::ConstantInitialized);

  inline TagIndexResponse(const TagIndexResponse& from)
      : TagIndexResponse(nullptr, from) {}
  TagIndexResponse(TagIndexResponse&& from) noexcept
    : TagIndexResponse() {
    *this = ::std::move(from);
  }

  inline TagIndexResponse& operator=(const TagIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TagIndexResponse& operator=(TagIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TagIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TagIndexResponse* internal_default_instance() {
    return reinterpret_cast<const TagIndexResponse*>(
               &_TagIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  friend void swap(TagIndexResponse& a, TagIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(TagIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TagIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TagIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TagIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TagIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TagIndexResponse& from) {
    TagIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TagIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.TagIndexResponse";
  }
  protected:
  explicit TagIndexResponse(::google::protobuf::Arena* arena);
  TagIndexResponse(::google::protobuf::Arena* arena, const TagIndexResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = TagIndexResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .palm.metasequoia.v1.TagIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::metasequoia::v1::TagIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::TagIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::TagIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::TagIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::metasequoia::v1::TagIndexResponse_Item& items(int index) const;
  ::palm::metasequoia::v1::TagIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::TagIndexResponse_Item >&
      items() const;
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.TagIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::TagIndexResponse_Item > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteStatusResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteStatusResponse) */ {
 public:
  inline SiteStatusResponse() : SiteStatusResponse(nullptr) {}
  ~SiteStatusResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteStatusResponse(::google::protobuf::internal::ConstantInitialized);

  inline SiteStatusResponse(const SiteStatusResponse& from)
      : SiteStatusResponse(nullptr, from) {}
  SiteStatusResponse(SiteStatusResponse&& from) noexcept
    : SiteStatusResponse() {
    *this = ::std::move(from);
  }

  inline SiteStatusResponse& operator=(const SiteStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteStatusResponse& operator=(SiteStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteStatusResponse* internal_default_instance() {
    return reinterpret_cast<const SiteStatusResponse*>(
               &_SiteStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(SiteStatusResponse& a, SiteStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteStatusResponse& from) {
    SiteStatusResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteStatusResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteStatusResponse";
  }
  protected:
  explicit SiteStatusResponse(::google::protobuf::Arena* arena);
  SiteStatusResponse(::google::protobuf::Arena* arena, const SiteStatusResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Database = SiteStatusResponse_Database;
  using PostgreSql = SiteStatusResponse_PostgreSql;
  using MySql = SiteStatusResponse_MySql;
  using Redis = SiteStatusResponse_Redis;
  using RabbitMq = SiteStatusResponse_RabbitMq;
  using OpenSearch = SiteStatusResponse_OpenSearch;
  using Health = SiteStatusResponse_Health;
  using System = SiteStatusResponse_System;

  // accessors -------------------------------------------------------

  enum : int {
    kHealthesFieldNumber = 21,
    kPostgresqlFieldNumber = 1,
    kMysqlFieldNumber = 2,
    kRedisFieldNumber = 3,
    kRabbitmqFieldNumber = 4,
    kOpensearchFieldNumber = 5,
    kSystemFieldNumber = 11,
  };
  // repeated .palm.metasequoia.v1.SiteStatusResponse.Health healthes = 21;
  int healthes_size() const;
  private:
  int _internal_healthes_size() const;

  public:
  void clear_healthes() ;
  ::palm::metasequoia::v1::SiteStatusResponse_Health* mutable_healthes(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::SiteStatusResponse_Health >*
      mutable_healthes();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Health>& _internal_healthes() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Health>* _internal_mutable_healthes();
  public:
  const ::palm::metasequoia::v1::SiteStatusResponse_Health& healthes(int index) const;
  ::palm::metasequoia::v1::SiteStatusResponse_Health* add_healthes();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::SiteStatusResponse_Health >&
      healthes() const;
  // .palm.metasequoia.v1.SiteStatusResponse.PostgreSql postgresql = 1;
  bool has_postgresql() const;
  void clear_postgresql() ;
  const ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql& postgresql() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql* release_postgresql();
  ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql* mutable_postgresql();
  void set_allocated_postgresql(::palm::metasequoia::v1::SiteStatusResponse_PostgreSql* value);
  void unsafe_arena_set_allocated_postgresql(::palm::metasequoia::v1::SiteStatusResponse_PostgreSql* value);
  ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql* unsafe_arena_release_postgresql();

  private:
  const ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql& _internal_postgresql() const;
  ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql* _internal_mutable_postgresql();

  public:
  // .palm.metasequoia.v1.SiteStatusResponse.MySql mysql = 2;
  bool has_mysql() const;
  void clear_mysql() ;
  const ::palm::metasequoia::v1::SiteStatusResponse_MySql& mysql() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::SiteStatusResponse_MySql* release_mysql();
  ::palm::metasequoia::v1::SiteStatusResponse_MySql* mutable_mysql();
  void set_allocated_mysql(::palm::metasequoia::v1::SiteStatusResponse_MySql* value);
  void unsafe_arena_set_allocated_mysql(::palm::metasequoia::v1::SiteStatusResponse_MySql* value);
  ::palm::metasequoia::v1::SiteStatusResponse_MySql* unsafe_arena_release_mysql();

  private:
  const ::palm::metasequoia::v1::SiteStatusResponse_MySql& _internal_mysql() const;
  ::palm::metasequoia::v1::SiteStatusResponse_MySql* _internal_mutable_mysql();

  public:
  // .palm.metasequoia.v1.SiteStatusResponse.Redis redis = 3;
  bool has_redis() const;
  void clear_redis() ;
  const ::palm::metasequoia::v1::SiteStatusResponse_Redis& redis() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::SiteStatusResponse_Redis* release_redis();
  ::palm::metasequoia::v1::SiteStatusResponse_Redis* mutable_redis();
  void set_allocated_redis(::palm::metasequoia::v1::SiteStatusResponse_Redis* value);
  void unsafe_arena_set_allocated_redis(::palm::metasequoia::v1::SiteStatusResponse_Redis* value);
  ::palm::metasequoia::v1::SiteStatusResponse_Redis* unsafe_arena_release_redis();

  private:
  const ::palm::metasequoia::v1::SiteStatusResponse_Redis& _internal_redis() const;
  ::palm::metasequoia::v1::SiteStatusResponse_Redis* _internal_mutable_redis();

  public:
  // .palm.metasequoia.v1.SiteStatusResponse.RabbitMq rabbitmq = 4;
  bool has_rabbitmq() const;
  void clear_rabbitmq() ;
  const ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq& rabbitmq() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq* release_rabbitmq();
  ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq* mutable_rabbitmq();
  void set_allocated_rabbitmq(::palm::metasequoia::v1::SiteStatusResponse_RabbitMq* value);
  void unsafe_arena_set_allocated_rabbitmq(::palm::metasequoia::v1::SiteStatusResponse_RabbitMq* value);
  ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq* unsafe_arena_release_rabbitmq();

  private:
  const ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq& _internal_rabbitmq() const;
  ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq* _internal_mutable_rabbitmq();

  public:
  // .palm.metasequoia.v1.SiteStatusResponse.OpenSearch opensearch = 5;
  bool has_opensearch() const;
  void clear_opensearch() ;
  const ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch& opensearch() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch* release_opensearch();
  ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch* mutable_opensearch();
  void set_allocated_opensearch(::palm::metasequoia::v1::SiteStatusResponse_OpenSearch* value);
  void unsafe_arena_set_allocated_opensearch(::palm::metasequoia::v1::SiteStatusResponse_OpenSearch* value);
  ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch* unsafe_arena_release_opensearch();

  private:
  const ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch& _internal_opensearch() const;
  ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch* _internal_mutable_opensearch();

  public:
  // .palm.metasequoia.v1.SiteStatusResponse.System system = 11;
  bool has_system() const;
  void clear_system() ;
  const ::palm::metasequoia::v1::SiteStatusResponse_System& system() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::SiteStatusResponse_System* release_system();
  ::palm::metasequoia::v1::SiteStatusResponse_System* mutable_system();
  void set_allocated_system(::palm::metasequoia::v1::SiteStatusResponse_System* value);
  void unsafe_arena_set_allocated_system(::palm::metasequoia::v1::SiteStatusResponse_System* value);
  ::palm::metasequoia::v1::SiteStatusResponse_System* unsafe_arena_release_system();

  private:
  const ::palm::metasequoia::v1::SiteStatusResponse_System& _internal_system() const;
  ::palm::metasequoia::v1::SiteStatusResponse_System* _internal_mutable_system();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteStatusResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 7,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::SiteStatusResponse_Health > healthes_;
    ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql* postgresql_;
    ::palm::metasequoia::v1::SiteStatusResponse_MySql* mysql_;
    ::palm::metasequoia::v1::SiteStatusResponse_Redis* redis_;
    ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq* rabbitmq_;
    ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch* opensearch_;
    ::palm::metasequoia::v1::SiteStatusResponse_System* system_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SiteSmtpPingRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SiteSmtpPingRequest) */ {
 public:
  inline SiteSmtpPingRequest() : SiteSmtpPingRequest(nullptr) {}
  ~SiteSmtpPingRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteSmtpPingRequest(::google::protobuf::internal::ConstantInitialized);

  inline SiteSmtpPingRequest(const SiteSmtpPingRequest& from)
      : SiteSmtpPingRequest(nullptr, from) {}
  SiteSmtpPingRequest(SiteSmtpPingRequest&& from) noexcept
    : SiteSmtpPingRequest() {
    *this = ::std::move(from);
  }

  inline SiteSmtpPingRequest& operator=(const SiteSmtpPingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteSmtpPingRequest& operator=(SiteSmtpPingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteSmtpPingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteSmtpPingRequest* internal_default_instance() {
    return reinterpret_cast<const SiteSmtpPingRequest*>(
               &_SiteSmtpPingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(SiteSmtpPingRequest& a, SiteSmtpPingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteSmtpPingRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteSmtpPingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteSmtpPingRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteSmtpPingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteSmtpPingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteSmtpPingRequest& from) {
    SiteSmtpPingRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteSmtpPingRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SiteSmtpPingRequest";
  }
  protected:
  explicit SiteSmtpPingRequest(::google::protobuf::Arena* arena);
  SiteSmtpPingRequest(::google::protobuf::Arena* arena, const SiteSmtpPingRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubjectFieldNumber = 2,
    kContentFieldNumber = 3,
    kToFieldNumber = 1,
    kProfileFieldNumber = 9,
  };
  // string subject = 2;
  void clear_subject() ;
  const std::string& subject() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subject(Arg_&& arg, Args_... args);
  std::string* mutable_subject();
  PROTOBUF_NODISCARD std::string* release_subject();
  void set_allocated_subject(std::string* value);

  private:
  const std::string& _internal_subject() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subject(
      const std::string& value);
  std::string* _internal_mutable_subject();

  public:
  // string content = 3;
  void clear_content() ;
  const std::string& content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* value);

  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(
      const std::string& value);
  std::string* _internal_mutable_content();

  public:
  // .palm.metasequoia.v1.EmailTask.Address to = 1;
  bool has_to() const;
  void clear_to() ;
  const ::palm::metasequoia::v1::EmailTask_Address& to() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::EmailTask_Address* release_to();
  ::palm::metasequoia::v1::EmailTask_Address* mutable_to();
  void set_allocated_to(::palm::metasequoia::v1::EmailTask_Address* value);
  void unsafe_arena_set_allocated_to(::palm::metasequoia::v1::EmailTask_Address* value);
  ::palm::metasequoia::v1::EmailTask_Address* unsafe_arena_release_to();

  private:
  const ::palm::metasequoia::v1::EmailTask_Address& _internal_to() const;
  ::palm::metasequoia::v1::EmailTask_Address* _internal_mutable_to();

  public:
  // .palm.metasequoia.v1.SmtpProfile profile = 9;
  bool has_profile() const;
  void clear_profile() ;
  const ::palm::metasequoia::v1::SmtpProfile& profile() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::SmtpProfile* release_profile();
  ::palm::metasequoia::v1::SmtpProfile* mutable_profile();
  void set_allocated_profile(::palm::metasequoia::v1::SmtpProfile* value);
  void unsafe_arena_set_allocated_profile(::palm::metasequoia::v1::SmtpProfile* value);
  ::palm::metasequoia::v1::SmtpProfile* unsafe_arena_release_profile();

  private:
  const ::palm::metasequoia::v1::SmtpProfile& _internal_profile() const;
  ::palm::metasequoia::v1::SmtpProfile* _internal_mutable_profile();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SiteSmtpPingRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      62, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr subject_;
    ::google::protobuf::internal::ArenaStringPtr content_;
    ::palm::metasequoia::v1::EmailTask_Address* to_;
    ::palm::metasequoia::v1::SmtpProfile* profile_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class ShorterLinkIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.ShorterLinkIndexResponse) */ {
 public:
  inline ShorterLinkIndexResponse() : ShorterLinkIndexResponse(nullptr) {}
  ~ShorterLinkIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ShorterLinkIndexResponse(::google::protobuf::internal::ConstantInitialized);

  inline ShorterLinkIndexResponse(const ShorterLinkIndexResponse& from)
      : ShorterLinkIndexResponse(nullptr, from) {}
  ShorterLinkIndexResponse(ShorterLinkIndexResponse&& from) noexcept
    : ShorterLinkIndexResponse() {
    *this = ::std::move(from);
  }

  inline ShorterLinkIndexResponse& operator=(const ShorterLinkIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShorterLinkIndexResponse& operator=(ShorterLinkIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShorterLinkIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShorterLinkIndexResponse* internal_default_instance() {
    return reinterpret_cast<const ShorterLinkIndexResponse*>(
               &_ShorterLinkIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  friend void swap(ShorterLinkIndexResponse& a, ShorterLinkIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ShorterLinkIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShorterLinkIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShorterLinkIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ShorterLinkIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShorterLinkIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ShorterLinkIndexResponse& from) {
    ShorterLinkIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ShorterLinkIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.ShorterLinkIndexResponse";
  }
  protected:
  explicit ShorterLinkIndexResponse(::google::protobuf::Arena* arena);
  ShorterLinkIndexResponse(::google::protobuf::Arena* arena, const ShorterLinkIndexResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = ShorterLinkIndexResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 11,
    kPaginationFieldNumber = 1,
  };
  // repeated .palm.metasequoia.v1.ShorterLinkIndexResponse.Item items = 11;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::metasequoia::v1::ShorterLinkIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::ShorterLinkIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::ShorterLinkIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::ShorterLinkIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::metasequoia::v1::ShorterLinkIndexResponse_Item& items(int index) const;
  ::palm::metasequoia::v1::ShorterLinkIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::ShorterLinkIndexResponse_Item >&
      items() const;
  // .palm.metasequoia.v1.Pagination pagination = 1;
  bool has_pagination() const;
  void clear_pagination() ;
  const ::palm::metasequoia::v1::Pagination& pagination() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::Pagination* release_pagination();
  ::palm::metasequoia::v1::Pagination* mutable_pagination();
  void set_allocated_pagination(::palm::metasequoia::v1::Pagination* value);
  void unsafe_arena_set_allocated_pagination(::palm::metasequoia::v1::Pagination* value);
  ::palm::metasequoia::v1::Pagination* unsafe_arena_release_pagination();

  private:
  const ::palm::metasequoia::v1::Pagination& _internal_pagination() const;
  ::palm::metasequoia::v1::Pagination* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.ShorterLinkIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::ShorterLinkIndexResponse_Item > items_;
    ::palm::metasequoia::v1::Pagination* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class SettingsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.SettingsResponse) */ {
 public:
  inline SettingsResponse() : SettingsResponse(nullptr) {}
  ~SettingsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SettingsResponse(::google::protobuf::internal::ConstantInitialized);

  inline SettingsResponse(const SettingsResponse& from)
      : SettingsResponse(nullptr, from) {}
  SettingsResponse(SettingsResponse&& from) noexcept
    : SettingsResponse() {
    *this = ::std::move(from);
  }

  inline SettingsResponse& operator=(const SettingsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SettingsResponse& operator=(SettingsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SettingsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SettingsResponse* internal_default_instance() {
    return reinterpret_cast<const SettingsResponse*>(
               &_SettingsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(SettingsResponse& a, SettingsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SettingsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SettingsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SettingsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SettingsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SettingsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SettingsResponse& from) {
    SettingsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SettingsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.SettingsResponse";
  }
  protected:
  explicit SettingsResponse(::google::protobuf::Arena* arena);
  SettingsResponse(::google::protobuf::Arena* arena, const SettingsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = SettingsResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .palm.metasequoia.v1.SettingsResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::metasequoia::v1::SettingsResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::SettingsResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SettingsResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SettingsResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::metasequoia::v1::SettingsResponse_Item& items(int index) const;
  ::palm::metasequoia::v1::SettingsResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::SettingsResponse_Item >&
      items() const;
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.SettingsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::SettingsResponse_Item > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class RbacRolesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.RbacRolesResponse) */ {
 public:
  inline RbacRolesResponse() : RbacRolesResponse(nullptr) {}
  ~RbacRolesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RbacRolesResponse(::google::protobuf::internal::ConstantInitialized);

  inline RbacRolesResponse(const RbacRolesResponse& from)
      : RbacRolesResponse(nullptr, from) {}
  RbacRolesResponse(RbacRolesResponse&& from) noexcept
    : RbacRolesResponse() {
    *this = ::std::move(from);
  }

  inline RbacRolesResponse& operator=(const RbacRolesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RbacRolesResponse& operator=(RbacRolesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RbacRolesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RbacRolesResponse* internal_default_instance() {
    return reinterpret_cast<const RbacRolesResponse*>(
               &_RbacRolesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(RbacRolesResponse& a, RbacRolesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RbacRolesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RbacRolesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RbacRolesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RbacRolesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RbacRolesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RbacRolesResponse& from) {
    RbacRolesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RbacRolesResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.RbacRolesResponse";
  }
  protected:
  explicit RbacRolesResponse(::google::protobuf::Arena* arena);
  RbacRolesResponse(::google::protobuf::Arena* arena, const RbacRolesResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .palm.metasequoia.v1.Role items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::metasequoia::v1::Role* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::Role >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>* _internal_mutable_items();
  public:
  const ::palm::metasequoia::v1::Role& items(int index) const;
  ::palm::metasequoia::v1::Role* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::Role >&
      items() const;
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.RbacRolesResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::Role > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class RbacRolesForUserRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.RbacRolesForUserRequest) */ {
 public:
  inline RbacRolesForUserRequest() : RbacRolesForUserRequest(nullptr) {}
  ~RbacRolesForUserRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RbacRolesForUserRequest(::google::protobuf::internal::ConstantInitialized);

  inline RbacRolesForUserRequest(const RbacRolesForUserRequest& from)
      : RbacRolesForUserRequest(nullptr, from) {}
  RbacRolesForUserRequest(RbacRolesForUserRequest&& from) noexcept
    : RbacRolesForUserRequest() {
    *this = ::std::move(from);
  }

  inline RbacRolesForUserRequest& operator=(const RbacRolesForUserRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RbacRolesForUserRequest& operator=(RbacRolesForUserRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RbacRolesForUserRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RbacRolesForUserRequest* internal_default_instance() {
    return reinterpret_cast<const RbacRolesForUserRequest*>(
               &_RbacRolesForUserRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(RbacRolesForUserRequest& a, RbacRolesForUserRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RbacRolesForUserRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RbacRolesForUserRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RbacRolesForUserRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RbacRolesForUserRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RbacRolesForUserRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RbacRolesForUserRequest& from) {
    RbacRolesForUserRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RbacRolesForUserRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.RbacRolesForUserRequest";
  }
  protected:
  explicit RbacRolesForUserRequest(::google::protobuf::Arena* arena);
  RbacRolesForUserRequest(::google::protobuf::Arena* arena, const RbacRolesForUserRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRolesFieldNumber = 2,
    kUserFieldNumber = 1,
  };
  // repeated .palm.metasequoia.v1.Role roles = 2;
  int roles_size() const;
  private:
  int _internal_roles_size() const;

  public:
  void clear_roles() ;
  ::palm::metasequoia::v1::Role* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::Role >*
      mutable_roles();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>& _internal_roles() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>* _internal_mutable_roles();
  public:
  const ::palm::metasequoia::v1::Role& roles(int index) const;
  ::palm::metasequoia::v1::Role* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::Role >&
      roles() const;
  // int32 user = 1;
  void clear_user() ;
  ::int32_t user() const;
  void set_user(::int32_t value);

  private:
  ::int32_t _internal_user() const;
  void _internal_set_user(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.RbacRolesForUserRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::Role > roles_;
    ::int32_t user_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class RbacPermissionsForUserRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.RbacPermissionsForUserRequest) */ {
 public:
  inline RbacPermissionsForUserRequest() : RbacPermissionsForUserRequest(nullptr) {}
  ~RbacPermissionsForUserRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RbacPermissionsForUserRequest(::google::protobuf::internal::ConstantInitialized);

  inline RbacPermissionsForUserRequest(const RbacPermissionsForUserRequest& from)
      : RbacPermissionsForUserRequest(nullptr, from) {}
  RbacPermissionsForUserRequest(RbacPermissionsForUserRequest&& from) noexcept
    : RbacPermissionsForUserRequest() {
    *this = ::std::move(from);
  }

  inline RbacPermissionsForUserRequest& operator=(const RbacPermissionsForUserRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RbacPermissionsForUserRequest& operator=(RbacPermissionsForUserRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RbacPermissionsForUserRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RbacPermissionsForUserRequest* internal_default_instance() {
    return reinterpret_cast<const RbacPermissionsForUserRequest*>(
               &_RbacPermissionsForUserRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(RbacPermissionsForUserRequest& a, RbacPermissionsForUserRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RbacPermissionsForUserRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RbacPermissionsForUserRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RbacPermissionsForUserRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RbacPermissionsForUserRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RbacPermissionsForUserRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RbacPermissionsForUserRequest& from) {
    RbacPermissionsForUserRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RbacPermissionsForUserRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.RbacPermissionsForUserRequest";
  }
  protected:
  explicit RbacPermissionsForUserRequest(::google::protobuf::Arena* arena);
  RbacPermissionsForUserRequest(::google::protobuf::Arena* arena, const RbacPermissionsForUserRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPermissionsFieldNumber = 2,
    kUserFieldNumber = 1,
  };
  // repeated .palm.metasequoia.v1.RbacPermissionItem permissions = 2;
  int permissions_size() const;
  private:
  int _internal_permissions_size() const;

  public:
  void clear_permissions() ;
  ::palm::metasequoia::v1::RbacPermissionItem* mutable_permissions(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::RbacPermissionItem >*
      mutable_permissions();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::RbacPermissionItem>& _internal_permissions() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::RbacPermissionItem>* _internal_mutable_permissions();
  public:
  const ::palm::metasequoia::v1::RbacPermissionItem& permissions(int index) const;
  ::palm::metasequoia::v1::RbacPermissionItem* add_permissions();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::RbacPermissionItem >&
      permissions() const;
  // int32 user = 1;
  void clear_user() ;
  ::int32_t user() const;
  void set_user(::int32_t value);

  private:
  ::int32_t _internal_user() const;
  void _internal_set_user(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.RbacPermissionsForUserRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::RbacPermissionItem > permissions_;
    ::int32_t user_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class RbacPermissionsForRoleRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.RbacPermissionsForRoleRequest) */ {
 public:
  inline RbacPermissionsForRoleRequest() : RbacPermissionsForRoleRequest(nullptr) {}
  ~RbacPermissionsForRoleRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RbacPermissionsForRoleRequest(::google::protobuf::internal::ConstantInitialized);

  inline RbacPermissionsForRoleRequest(const RbacPermissionsForRoleRequest& from)
      : RbacPermissionsForRoleRequest(nullptr, from) {}
  RbacPermissionsForRoleRequest(RbacPermissionsForRoleRequest&& from) noexcept
    : RbacPermissionsForRoleRequest() {
    *this = ::std::move(from);
  }

  inline RbacPermissionsForRoleRequest& operator=(const RbacPermissionsForRoleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RbacPermissionsForRoleRequest& operator=(RbacPermissionsForRoleRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RbacPermissionsForRoleRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RbacPermissionsForRoleRequest* internal_default_instance() {
    return reinterpret_cast<const RbacPermissionsForRoleRequest*>(
               &_RbacPermissionsForRoleRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(RbacPermissionsForRoleRequest& a, RbacPermissionsForRoleRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RbacPermissionsForRoleRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RbacPermissionsForRoleRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RbacPermissionsForRoleRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RbacPermissionsForRoleRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RbacPermissionsForRoleRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RbacPermissionsForRoleRequest& from) {
    RbacPermissionsForRoleRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RbacPermissionsForRoleRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.RbacPermissionsForRoleRequest";
  }
  protected:
  explicit RbacPermissionsForRoleRequest(::google::protobuf::Arena* arena);
  RbacPermissionsForRoleRequest(::google::protobuf::Arena* arena, const RbacPermissionsForRoleRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPermissionsFieldNumber = 2,
    kRoleFieldNumber = 1,
  };
  // repeated .palm.metasequoia.v1.RbacPermissionItem permissions = 2;
  int permissions_size() const;
  private:
  int _internal_permissions_size() const;

  public:
  void clear_permissions() ;
  ::palm::metasequoia::v1::RbacPermissionItem* mutable_permissions(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::RbacPermissionItem >*
      mutable_permissions();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::RbacPermissionItem>& _internal_permissions() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::RbacPermissionItem>* _internal_mutable_permissions();
  public:
  const ::palm::metasequoia::v1::RbacPermissionItem& permissions(int index) const;
  ::palm::metasequoia::v1::RbacPermissionItem* add_permissions();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::RbacPermissionItem >&
      permissions() const;
  // .palm.metasequoia.v1.Role role = 1;
  bool has_role() const;
  void clear_role() ;
  const ::palm::metasequoia::v1::Role& role() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::Role* release_role();
  ::palm::metasequoia::v1::Role* mutable_role();
  void set_allocated_role(::palm::metasequoia::v1::Role* value);
  void unsafe_arena_set_allocated_role(::palm::metasequoia::v1::Role* value);
  ::palm::metasequoia::v1::Role* unsafe_arena_release_role();

  private:
  const ::palm::metasequoia::v1::Role& _internal_role() const;
  ::palm::metasequoia::v1::Role* _internal_mutable_role();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.RbacPermissionsForRoleRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::RbacPermissionItem > permissions_;
    ::palm::metasequoia::v1::Role* role_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class RbacHasRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.RbacHasRequest) */ {
 public:
  inline RbacHasRequest() : RbacHasRequest(nullptr) {}
  ~RbacHasRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RbacHasRequest(::google::protobuf::internal::ConstantInitialized);

  inline RbacHasRequest(const RbacHasRequest& from)
      : RbacHasRequest(nullptr, from) {}
  RbacHasRequest(RbacHasRequest&& from) noexcept
    : RbacHasRequest() {
    *this = ::std::move(from);
  }

  inline RbacHasRequest& operator=(const RbacHasRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RbacHasRequest& operator=(RbacHasRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RbacHasRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RbacHasRequest* internal_default_instance() {
    return reinterpret_cast<const RbacHasRequest*>(
               &_RbacHasRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(RbacHasRequest& a, RbacHasRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RbacHasRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RbacHasRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RbacHasRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RbacHasRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RbacHasRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RbacHasRequest& from) {
    RbacHasRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RbacHasRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.RbacHasRequest";
  }
  protected:
  explicit RbacHasRequest(::google::protobuf::Arena* arena);
  RbacHasRequest(::google::protobuf::Arena* arena, const RbacHasRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleFieldNumber = 2,
    kUserFieldNumber = 1,
  };
  // .palm.metasequoia.v1.Role role = 2;
  bool has_role() const;
  void clear_role() ;
  const ::palm::metasequoia::v1::Role& role() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::Role* release_role();
  ::palm::metasequoia::v1::Role* mutable_role();
  void set_allocated_role(::palm::metasequoia::v1::Role* value);
  void unsafe_arena_set_allocated_role(::palm::metasequoia::v1::Role* value);
  ::palm::metasequoia::v1::Role* unsafe_arena_release_role();

  private:
  const ::palm::metasequoia::v1::Role& _internal_role() const;
  ::palm::metasequoia::v1::Role* _internal_mutable_role();

  public:
  // int32 user = 1;
  void clear_user() ;
  ::int32_t user() const;
  void set_user(::int32_t value);

  private:
  ::int32_t _internal_user() const;
  void _internal_set_user(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.RbacHasRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::palm::metasequoia::v1::Role* role_;
    ::int32_t user_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class Permission final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.Permission) */ {
 public:
  inline Permission() : Permission(nullptr) {}
  ~Permission() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Permission(::google::protobuf::internal::ConstantInitialized);

  inline Permission(const Permission& from)
      : Permission(nullptr, from) {}
  Permission(Permission&& from) noexcept
    : Permission() {
    *this = ::std::move(from);
  }

  inline Permission& operator=(const Permission& from) {
    CopyFrom(from);
    return *this;
  }
  inline Permission& operator=(Permission&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Permission& default_instance() {
    return *internal_default_instance();
  }
  enum SubjectCase {
    kUser = 1,
    kRole = 2,
    SUBJECT_NOT_SET = 0,
  };

  static inline const Permission* internal_default_instance() {
    return reinterpret_cast<const Permission*>(
               &_Permission_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(Permission& a, Permission& b) {
    a.Swap(&b);
  }
  inline void Swap(Permission* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Permission* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Permission* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Permission>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Permission& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Permission& from) {
    Permission::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Permission* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.Permission";
  }
  protected:
  explicit Permission(::google::protobuf::Arena* arena);
  Permission(::google::protobuf::Arena* arena, const Permission& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 12,
    kObjectFieldNumber = 11,
    kUserFieldNumber = 1,
    kRoleFieldNumber = 2,
  };
  // string action = 12;
  void clear_action() ;
  const std::string& action() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_action(Arg_&& arg, Args_... args);
  std::string* mutable_action();
  PROTOBUF_NODISCARD std::string* release_action();
  void set_allocated_action(std::string* value);

  private:
  const std::string& _internal_action() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_action(
      const std::string& value);
  std::string* _internal_mutable_action();

  public:
  // .palm.metasequoia.v1.Resource object = 11;
  bool has_object() const;
  void clear_object() ;
  const ::palm::metasequoia::v1::Resource& object() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::Resource* release_object();
  ::palm::metasequoia::v1::Resource* mutable_object();
  void set_allocated_object(::palm::metasequoia::v1::Resource* value);
  void unsafe_arena_set_allocated_object(::palm::metasequoia::v1::Resource* value);
  ::palm::metasequoia::v1::Resource* unsafe_arena_release_object();

  private:
  const ::palm::metasequoia::v1::Resource& _internal_object() const;
  ::palm::metasequoia::v1::Resource* _internal_mutable_object();

  public:
  // int32 user = 1;
  bool has_user() const;
  void clear_user() ;
  ::int32_t user() const;
  void set_user(::int32_t value);

  private:
  ::int32_t _internal_user() const;
  void _internal_set_user(::int32_t value);

  public:
  // .palm.metasequoia.v1.Role role = 2;
  bool has_role() const;
  private:
  bool _internal_has_role() const;

  public:
  void clear_role() ;
  const ::palm::metasequoia::v1::Role& role() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::Role* release_role();
  ::palm::metasequoia::v1::Role* mutable_role();
  void set_allocated_role(::palm::metasequoia::v1::Role* value);
  void unsafe_arena_set_allocated_role(::palm::metasequoia::v1::Role* value);
  ::palm::metasequoia::v1::Role* unsafe_arena_release_role();

  private:
  const ::palm::metasequoia::v1::Role& _internal_role() const;
  ::palm::metasequoia::v1::Role* _internal_mutable_role();

  public:
  void clear_subject();
  SubjectCase subject_case() const;
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.Permission)
 private:
  class _Internal;
  void set_has_user();
  void set_has_role();

  inline bool has_subject() const;
  inline void clear_has_subject();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 4, 2,
      45, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr action_;
    ::palm::metasequoia::v1::Resource* object_;
    union SubjectUnion {
      constexpr SubjectUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::int32_t user_;
      ::palm::metasequoia::v1::Role* role_;
    } subject_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class NotificationIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.NotificationIndexResponse) */ {
 public:
  inline NotificationIndexResponse() : NotificationIndexResponse(nullptr) {}
  ~NotificationIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NotificationIndexResponse(::google::protobuf::internal::ConstantInitialized);

  inline NotificationIndexResponse(const NotificationIndexResponse& from)
      : NotificationIndexResponse(nullptr, from) {}
  NotificationIndexResponse(NotificationIndexResponse&& from) noexcept
    : NotificationIndexResponse() {
    *this = ::std::move(from);
  }

  inline NotificationIndexResponse& operator=(const NotificationIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotificationIndexResponse& operator=(NotificationIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotificationIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotificationIndexResponse* internal_default_instance() {
    return reinterpret_cast<const NotificationIndexResponse*>(
               &_NotificationIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  friend void swap(NotificationIndexResponse& a, NotificationIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(NotificationIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotificationIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotificationIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NotificationIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotificationIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const NotificationIndexResponse& from) {
    NotificationIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotificationIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.NotificationIndexResponse";
  }
  protected:
  explicit NotificationIndexResponse(::google::protobuf::Arena* arena);
  NotificationIndexResponse(::google::protobuf::Arena* arena, const NotificationIndexResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = NotificationIndexResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 9,
  };
  // repeated .palm.metasequoia.v1.NotificationIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::metasequoia::v1::NotificationIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::NotificationIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::NotificationIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::NotificationIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::metasequoia::v1::NotificationIndexResponse_Item& items(int index) const;
  ::palm::metasequoia::v1::NotificationIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::NotificationIndexResponse_Item >&
      items() const;
  // .palm.metasequoia.v1.Pagination pagination = 9;
  bool has_pagination() const;
  void clear_pagination() ;
  const ::palm::metasequoia::v1::Pagination& pagination() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::Pagination* release_pagination();
  ::palm::metasequoia::v1::Pagination* mutable_pagination();
  void set_allocated_pagination(::palm::metasequoia::v1::Pagination* value);
  void unsafe_arena_set_allocated_pagination(::palm::metasequoia::v1::Pagination* value);
  ::palm::metasequoia::v1::Pagination* unsafe_arena_release_pagination();

  private:
  const ::palm::metasequoia::v1::Pagination& _internal_pagination() const;
  ::palm::metasequoia::v1::Pagination* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.NotificationIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::NotificationIndexResponse_Item > items_;
    ::palm::metasequoia::v1::Pagination* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class LocalesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.LocalesResponse) */ {
 public:
  inline LocalesResponse() : LocalesResponse(nullptr) {}
  ~LocalesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LocalesResponse(::google::protobuf::internal::ConstantInitialized);

  inline LocalesResponse(const LocalesResponse& from)
      : LocalesResponse(nullptr, from) {}
  LocalesResponse(LocalesResponse&& from) noexcept
    : LocalesResponse() {
    *this = ::std::move(from);
  }

  inline LocalesResponse& operator=(const LocalesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocalesResponse& operator=(LocalesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocalesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LocalesResponse* internal_default_instance() {
    return reinterpret_cast<const LocalesResponse*>(
               &_LocalesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(LocalesResponse& a, LocalesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LocalesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocalesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocalesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LocalesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocalesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LocalesResponse& from) {
    LocalesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LocalesResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.LocalesResponse";
  }
  protected:
  explicit LocalesResponse(::google::protobuf::Arena* arena);
  LocalesResponse(::google::protobuf::Arena* arena, const LocalesResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = LocalesResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .palm.metasequoia.v1.LocalesResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::metasequoia::v1::LocalesResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::LocalesResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::LocalesResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::LocalesResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::metasequoia::v1::LocalesResponse_Item& items(int index) const;
  ::palm::metasequoia::v1::LocalesResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::LocalesResponse_Item >&
      items() const;
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.LocalesResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::LocalesResponse_Item > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class LeaveWordIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.LeaveWordIndexResponse.Item) */ {
 public:
  inline LeaveWordIndexResponse_Item() : LeaveWordIndexResponse_Item(nullptr) {}
  ~LeaveWordIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LeaveWordIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline LeaveWordIndexResponse_Item(const LeaveWordIndexResponse_Item& from)
      : LeaveWordIndexResponse_Item(nullptr, from) {}
  LeaveWordIndexResponse_Item(LeaveWordIndexResponse_Item&& from) noexcept
    : LeaveWordIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline LeaveWordIndexResponse_Item& operator=(const LeaveWordIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaveWordIndexResponse_Item& operator=(LeaveWordIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaveWordIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const LeaveWordIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const LeaveWordIndexResponse_Item*>(
               &_LeaveWordIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  friend void swap(LeaveWordIndexResponse_Item& a, LeaveWordIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(LeaveWordIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaveWordIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaveWordIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LeaveWordIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaveWordIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LeaveWordIndexResponse_Item& from) {
    LeaveWordIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LeaveWordIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.LeaveWordIndexResponse.Item";
  }
  protected:
  explicit LeaveWordIndexResponse_Item(::google::protobuf::Arena* arena);
  LeaveWordIndexResponse_Item(::google::protobuf::Arena* arena, const LeaveWordIndexResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLangFieldNumber = 2,
    kIpFieldNumber = 3,
    kContentFieldNumber = 8,
    kUpdatedAtFieldNumber = 11,
    kCreatedAtFieldNumber = 12,
    kIdFieldNumber = 1,
  };
  // string lang = 2;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // string ip = 3;
  void clear_ip() ;
  const std::string& ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ip(Arg_&& arg, Args_... args);
  std::string* mutable_ip();
  PROTOBUF_NODISCARD std::string* release_ip();
  void set_allocated_ip(std::string* value);

  private:
  const std::string& _internal_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ip(
      const std::string& value);
  std::string* _internal_mutable_ip();

  public:
  // .palm.metasequoia.v1.MediaContent content = 8;
  bool has_content() const;
  void clear_content() ;
  const ::palm::metasequoia::v1::MediaContent& content() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::MediaContent* release_content();
  ::palm::metasequoia::v1::MediaContent* mutable_content();
  void set_allocated_content(::palm::metasequoia::v1::MediaContent* value);
  void unsafe_arena_set_allocated_content(::palm::metasequoia::v1::MediaContent* value);
  ::palm::metasequoia::v1::MediaContent* unsafe_arena_release_content();

  private:
  const ::palm::metasequoia::v1::MediaContent& _internal_content() const;
  ::palm::metasequoia::v1::MediaContent* _internal_mutable_content();

  public:
  // .google.protobuf.Timestamp updated_at = 11;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // .google.protobuf.Timestamp created_at = 12;
  bool has_created_at() const;
  void clear_created_at() ;
  const ::google::protobuf::Timestamp& created_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_at();
  ::google::protobuf::Timestamp* mutable_created_at();
  void set_allocated_created_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_at();

  private:
  const ::google::protobuf::Timestamp& _internal_created_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_at();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.LeaveWordIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 3,
      62, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr lang_;
    ::google::protobuf::internal::ArenaStringPtr ip_;
    ::palm::metasequoia::v1::MediaContent* content_;
    ::google::protobuf::Timestamp* updated_at_;
    ::google::protobuf::Timestamp* created_at_;
    ::int32_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class CategoryIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.CategoryIndexResponse) */ {
 public:
  inline CategoryIndexResponse() : CategoryIndexResponse(nullptr) {}
  ~CategoryIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CategoryIndexResponse(::google::protobuf::internal::ConstantInitialized);

  inline CategoryIndexResponse(const CategoryIndexResponse& from)
      : CategoryIndexResponse(nullptr, from) {}
  CategoryIndexResponse(CategoryIndexResponse&& from) noexcept
    : CategoryIndexResponse() {
    *this = ::std::move(from);
  }

  inline CategoryIndexResponse& operator=(const CategoryIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CategoryIndexResponse& operator=(CategoryIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CategoryIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CategoryIndexResponse* internal_default_instance() {
    return reinterpret_cast<const CategoryIndexResponse*>(
               &_CategoryIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  friend void swap(CategoryIndexResponse& a, CategoryIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CategoryIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CategoryIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CategoryIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CategoryIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CategoryIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CategoryIndexResponse& from) {
    CategoryIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CategoryIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.CategoryIndexResponse";
  }
  protected:
  explicit CategoryIndexResponse(::google::protobuf::Arena* arena);
  CategoryIndexResponse(::google::protobuf::Arena* arena, const CategoryIndexResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = CategoryIndexResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .palm.metasequoia.v1.CategoryIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::metasequoia::v1::CategoryIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::CategoryIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::CategoryIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::CategoryIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::metasequoia::v1::CategoryIndexResponse_Item& items(int index) const;
  ::palm::metasequoia::v1::CategoryIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::CategoryIndexResponse_Item >&
      items() const;
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.CategoryIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::CategoryIndexResponse_Item > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class AttachmentShowResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.AttachmentShowResponse) */ {
 public:
  inline AttachmentShowResponse() : AttachmentShowResponse(nullptr) {}
  ~AttachmentShowResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AttachmentShowResponse(::google::protobuf::internal::ConstantInitialized);

  inline AttachmentShowResponse(const AttachmentShowResponse& from)
      : AttachmentShowResponse(nullptr, from) {}
  AttachmentShowResponse(AttachmentShowResponse&& from) noexcept
    : AttachmentShowResponse() {
    *this = ::std::move(from);
  }

  inline AttachmentShowResponse& operator=(const AttachmentShowResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttachmentShowResponse& operator=(AttachmentShowResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttachmentShowResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AttachmentShowResponse* internal_default_instance() {
    return reinterpret_cast<const AttachmentShowResponse*>(
               &_AttachmentShowResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  friend void swap(AttachmentShowResponse& a, AttachmentShowResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AttachmentShowResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttachmentShowResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttachmentShowResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AttachmentShowResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AttachmentShowResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AttachmentShowResponse& from) {
    AttachmentShowResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AttachmentShowResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.AttachmentShowResponse";
  }
  protected:
  explicit AttachmentShowResponse(::google::protobuf::Arena* arena);
  AttachmentShowResponse(::google::protobuf::Arena* arena, const AttachmentShowResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUrlFieldNumber = 2,
    kItemFieldNumber = 1,
  };
  // string url = 2;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // .palm.metasequoia.v1.AttachmentIndexResponse.Item item = 1;
  bool has_item() const;
  void clear_item() ;
  const ::palm::metasequoia::v1::AttachmentIndexResponse_Item& item() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::AttachmentIndexResponse_Item* release_item();
  ::palm::metasequoia::v1::AttachmentIndexResponse_Item* mutable_item();
  void set_allocated_item(::palm::metasequoia::v1::AttachmentIndexResponse_Item* value);
  void unsafe_arena_set_allocated_item(::palm::metasequoia::v1::AttachmentIndexResponse_Item* value);
  ::palm::metasequoia::v1::AttachmentIndexResponse_Item* unsafe_arena_release_item();

  private:
  const ::palm::metasequoia::v1::AttachmentIndexResponse_Item& _internal_item() const;
  ::palm::metasequoia::v1::AttachmentIndexResponse_Item* _internal_mutable_item();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.AttachmentShowResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr url_;
    ::palm::metasequoia::v1::AttachmentIndexResponse_Item* item_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class AttachmentIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.AttachmentIndexResponse) */ {
 public:
  inline AttachmentIndexResponse() : AttachmentIndexResponse(nullptr) {}
  ~AttachmentIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AttachmentIndexResponse(::google::protobuf::internal::ConstantInitialized);

  inline AttachmentIndexResponse(const AttachmentIndexResponse& from)
      : AttachmentIndexResponse(nullptr, from) {}
  AttachmentIndexResponse(AttachmentIndexResponse&& from) noexcept
    : AttachmentIndexResponse() {
    *this = ::std::move(from);
  }

  inline AttachmentIndexResponse& operator=(const AttachmentIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttachmentIndexResponse& operator=(AttachmentIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttachmentIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AttachmentIndexResponse* internal_default_instance() {
    return reinterpret_cast<const AttachmentIndexResponse*>(
               &_AttachmentIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  friend void swap(AttachmentIndexResponse& a, AttachmentIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AttachmentIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttachmentIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttachmentIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AttachmentIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AttachmentIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AttachmentIndexResponse& from) {
    AttachmentIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AttachmentIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.AttachmentIndexResponse";
  }
  protected:
  explicit AttachmentIndexResponse(::google::protobuf::Arena* arena);
  AttachmentIndexResponse(::google::protobuf::Arena* arena, const AttachmentIndexResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = AttachmentIndexResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 11,
    kPaginationFieldNumber = 1,
  };
  // repeated .palm.metasequoia.v1.AttachmentIndexResponse.Item items = 11;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::metasequoia::v1::AttachmentIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::AttachmentIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::AttachmentIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::AttachmentIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::metasequoia::v1::AttachmentIndexResponse_Item& items(int index) const;
  ::palm::metasequoia::v1::AttachmentIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::AttachmentIndexResponse_Item >&
      items() const;
  // .palm.metasequoia.v1.Pagination pagination = 1;
  bool has_pagination() const;
  void clear_pagination() ;
  const ::palm::metasequoia::v1::Pagination& pagination() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::Pagination* release_pagination();
  ::palm::metasequoia::v1::Pagination* mutable_pagination();
  void set_allocated_pagination(::palm::metasequoia::v1::Pagination* value);
  void unsafe_arena_set_allocated_pagination(::palm::metasequoia::v1::Pagination* value);
  ::palm::metasequoia::v1::Pagination* unsafe_arena_release_pagination();

  private:
  const ::palm::metasequoia::v1::Pagination& _internal_pagination() const;
  ::palm::metasequoia::v1::Pagination* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.AttachmentIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::AttachmentIndexResponse_Item > items_;
    ::palm::metasequoia::v1::Pagination* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class UserSignInResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.UserSignInResponse) */ {
 public:
  inline UserSignInResponse() : UserSignInResponse(nullptr) {}
  ~UserSignInResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserSignInResponse(::google::protobuf::internal::ConstantInitialized);

  inline UserSignInResponse(const UserSignInResponse& from)
      : UserSignInResponse(nullptr, from) {}
  UserSignInResponse(UserSignInResponse&& from) noexcept
    : UserSignInResponse() {
    *this = ::std::move(from);
  }

  inline UserSignInResponse& operator=(const UserSignInResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserSignInResponse& operator=(UserSignInResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserSignInResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserSignInResponse* internal_default_instance() {
    return reinterpret_cast<const UserSignInResponse*>(
               &_UserSignInResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(UserSignInResponse& a, UserSignInResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UserSignInResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserSignInResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserSignInResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserSignInResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserSignInResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserSignInResponse& from) {
    UserSignInResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserSignInResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.UserSignInResponse";
  }
  protected:
  explicit UserSignInResponse(::google::protobuf::Arena* arena);
  UserSignInResponse(::google::protobuf::Arena* arena, const UserSignInResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using By = UserSignInResponse_By;
  static constexpr By Nickname = UserSignInResponse_By_Nickname;
  static constexpr By Email = UserSignInResponse_By_Email;
  static constexpr By Phone = UserSignInResponse_By_Phone;
  static constexpr By WechatOauth2 = UserSignInResponse_By_WechatOauth2;
  static constexpr By WechatMiniProgram = UserSignInResponse_By_WechatMiniProgram;
  static constexpr By Facebook = UserSignInResponse_By_Facebook;
  static constexpr By Google = UserSignInResponse_By_Google;
  static inline bool By_IsValid(int value) {
    return UserSignInResponse_By_IsValid(value);
  }
  static constexpr By By_MIN = UserSignInResponse_By_By_MIN;
  static constexpr By By_MAX = UserSignInResponse_By_By_MAX;
  static constexpr int By_ARRAYSIZE = UserSignInResponse_By_By_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* By_descriptor() {
    return UserSignInResponse_By_descriptor();
  }
  template <typename T>
  static inline const std::string& By_Name(T value) {
    return UserSignInResponse_By_Name(value);
  }
  static inline bool By_Parse(absl::string_view name, By* value) {
    return UserSignInResponse_By_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kRolesFieldNumber = 12,
    kPermissionsFieldNumber = 13,
    kRealNameFieldNumber = 1,
    kTokenFieldNumber = 11,
    kByFieldNumber = 9,
  };
  // repeated .palm.metasequoia.v1.Role roles = 12;
  int roles_size() const;
  private:
  int _internal_roles_size() const;

  public:
  void clear_roles() ;
  ::palm::metasequoia::v1::Role* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::Role >*
      mutable_roles();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>& _internal_roles() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>* _internal_mutable_roles();
  public:
  const ::palm::metasequoia::v1::Role& roles(int index) const;
  ::palm::metasequoia::v1::Role* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::Role >&
      roles() const;
  // repeated .palm.metasequoia.v1.Permission permissions = 13;
  int permissions_size() const;
  private:
  int _internal_permissions_size() const;

  public:
  void clear_permissions() ;
  ::palm::metasequoia::v1::Permission* mutable_permissions(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::Permission >*
      mutable_permissions();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Permission>& _internal_permissions() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Permission>* _internal_mutable_permissions();
  public:
  const ::palm::metasequoia::v1::Permission& permissions(int index) const;
  ::palm::metasequoia::v1::Permission* add_permissions();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::Permission >&
      permissions() const;
  // string real_name = 1;
  void clear_real_name() ;
  const std::string& real_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_real_name(Arg_&& arg, Args_... args);
  std::string* mutable_real_name();
  PROTOBUF_NODISCARD std::string* release_real_name();
  void set_allocated_real_name(std::string* value);

  private:
  const std::string& _internal_real_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_real_name(
      const std::string& value);
  std::string* _internal_mutable_real_name();

  public:
  // string token = 11;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // .palm.metasequoia.v1.UserSignInResponse.By by = 9;
  void clear_by() ;
  ::palm::metasequoia::v1::UserSignInResponse_By by() const;
  void set_by(::palm::metasequoia::v1::UserSignInResponse_By value);

  private:
  ::palm::metasequoia::v1::UserSignInResponse_By _internal_by() const;
  void _internal_set_by(::palm::metasequoia::v1::UserSignInResponse_By value);

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.UserSignInResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      61, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::Role > roles_;
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::Permission > permissions_;
    ::google::protobuf::internal::ArenaStringPtr real_name_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    int by_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class RbacPermissionsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.RbacPermissionsResponse) */ {
 public:
  inline RbacPermissionsResponse() : RbacPermissionsResponse(nullptr) {}
  ~RbacPermissionsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RbacPermissionsResponse(::google::protobuf::internal::ConstantInitialized);

  inline RbacPermissionsResponse(const RbacPermissionsResponse& from)
      : RbacPermissionsResponse(nullptr, from) {}
  RbacPermissionsResponse(RbacPermissionsResponse&& from) noexcept
    : RbacPermissionsResponse() {
    *this = ::std::move(from);
  }

  inline RbacPermissionsResponse& operator=(const RbacPermissionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RbacPermissionsResponse& operator=(RbacPermissionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RbacPermissionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RbacPermissionsResponse* internal_default_instance() {
    return reinterpret_cast<const RbacPermissionsResponse*>(
               &_RbacPermissionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(RbacPermissionsResponse& a, RbacPermissionsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RbacPermissionsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RbacPermissionsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RbacPermissionsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RbacPermissionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RbacPermissionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RbacPermissionsResponse& from) {
    RbacPermissionsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RbacPermissionsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.RbacPermissionsResponse";
  }
  protected:
  explicit RbacPermissionsResponse(::google::protobuf::Arena* arena);
  RbacPermissionsResponse(::google::protobuf::Arena* arena, const RbacPermissionsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .palm.metasequoia.v1.Permission items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::metasequoia::v1::Permission* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::Permission >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Permission>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Permission>* _internal_mutable_items();
  public:
  const ::palm::metasequoia::v1::Permission& items(int index) const;
  ::palm::metasequoia::v1::Permission* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::Permission >&
      items() const;
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.RbacPermissionsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::Permission > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};// -------------------------------------------------------------------

class LeaveWordIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.metasequoia.v1.LeaveWordIndexResponse) */ {
 public:
  inline LeaveWordIndexResponse() : LeaveWordIndexResponse(nullptr) {}
  ~LeaveWordIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LeaveWordIndexResponse(::google::protobuf::internal::ConstantInitialized);

  inline LeaveWordIndexResponse(const LeaveWordIndexResponse& from)
      : LeaveWordIndexResponse(nullptr, from) {}
  LeaveWordIndexResponse(LeaveWordIndexResponse&& from) noexcept
    : LeaveWordIndexResponse() {
    *this = ::std::move(from);
  }

  inline LeaveWordIndexResponse& operator=(const LeaveWordIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaveWordIndexResponse& operator=(LeaveWordIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaveWordIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LeaveWordIndexResponse* internal_default_instance() {
    return reinterpret_cast<const LeaveWordIndexResponse*>(
               &_LeaveWordIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  friend void swap(LeaveWordIndexResponse& a, LeaveWordIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LeaveWordIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaveWordIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaveWordIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LeaveWordIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaveWordIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LeaveWordIndexResponse& from) {
    LeaveWordIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LeaveWordIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.metasequoia.v1.LeaveWordIndexResponse";
  }
  protected:
  explicit LeaveWordIndexResponse(::google::protobuf::Arena* arena);
  LeaveWordIndexResponse(::google::protobuf::Arena* arena, const LeaveWordIndexResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = LeaveWordIndexResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 9,
  };
  // repeated .palm.metasequoia.v1.LeaveWordIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::metasequoia::v1::LeaveWordIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::LeaveWordIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::LeaveWordIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::LeaveWordIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::metasequoia::v1::LeaveWordIndexResponse_Item& items(int index) const;
  ::palm::metasequoia::v1::LeaveWordIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::LeaveWordIndexResponse_Item >&
      items() const;
  // .palm.metasequoia.v1.Pagination pagination = 9;
  bool has_pagination() const;
  void clear_pagination() ;
  const ::palm::metasequoia::v1::Pagination& pagination() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::Pagination* release_pagination();
  ::palm::metasequoia::v1::Pagination* mutable_pagination();
  void set_allocated_pagination(::palm::metasequoia::v1::Pagination* value);
  void unsafe_arena_set_allocated_pagination(::palm::metasequoia::v1::Pagination* value);
  ::palm::metasequoia::v1::Pagination* unsafe_arena_release_pagination();

  private:
  const ::palm::metasequoia::v1::Pagination& _internal_pagination() const;
  ::palm::metasequoia::v1::Pagination* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:palm.metasequoia.v1.LeaveWordIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::LeaveWordIndexResponse_Item > items_;
    ::palm::metasequoia::v1::Pagination* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metasequoia_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// IdRequest

// int32 id = 1;
inline void IdRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t IdRequest::id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.IdRequest.id)
  return _internal_id();
}
inline void IdRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.IdRequest.id)
}
inline ::int32_t IdRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void IdRequest::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// Pager

// int64 page = 1;
inline void Pager::clear_page() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.page_ = ::int64_t{0};
}
inline ::int64_t Pager::page() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Pager.page)
  return _internal_page();
}
inline void Pager::set_page(::int64_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.Pager.page)
}
inline ::int64_t Pager::_internal_page() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.page_;
}
inline void Pager::_internal_set_page(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.page_ = value;
}

// int64 size = 2;
inline void Pager::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::int64_t{0};
}
inline ::int64_t Pager::size() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Pager.size)
  return _internal_size();
}
inline void Pager::set_size(::int64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.Pager.size)
}
inline ::int64_t Pager::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void Pager::_internal_set_size(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// -------------------------------------------------------------------

// Pagination

// int64 page = 1;
inline void Pagination::clear_page() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.page_ = ::int64_t{0};
}
inline ::int64_t Pagination::page() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Pagination.page)
  return _internal_page();
}
inline void Pagination::set_page(::int64_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.Pagination.page)
}
inline ::int64_t Pagination::_internal_page() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.page_;
}
inline void Pagination::_internal_set_page(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.page_ = value;
}

// int64 size = 2;
inline void Pagination::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::int64_t{0};
}
inline ::int64_t Pagination::size() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Pagination.size)
  return _internal_size();
}
inline void Pagination::set_size(::int64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.Pagination.size)
}
inline ::int64_t Pagination::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void Pagination::_internal_set_size(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// int64 total = 3;
inline void Pagination::clear_total() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.total_ = ::int64_t{0};
}
inline ::int64_t Pagination::total() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Pagination.total)
  return _internal_total();
}
inline void Pagination::set_total(::int64_t value) {
  _internal_set_total(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.Pagination.total)
}
inline ::int64_t Pagination::_internal_total() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_;
}
inline void Pagination::_internal_set_total(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_ = value;
}

// bool has_next = 11;
inline void Pagination::clear_has_next() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.has_next_ = false;
}
inline bool Pagination::has_next() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Pagination.has_next)
  return _internal_has_next();
}
inline void Pagination::set_has_next(bool value) {
  _internal_set_has_next(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.Pagination.has_next)
}
inline bool Pagination::_internal_has_next() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.has_next_;
}
inline void Pagination::_internal_set_has_next(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.has_next_ = value;
}

// bool has_previous = 12;
inline void Pagination::clear_has_previous() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.has_previous_ = false;
}
inline bool Pagination::has_previous() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Pagination.has_previous)
  return _internal_has_previous();
}
inline void Pagination::set_has_previous(bool value) {
  _internal_set_has_previous(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.Pagination.has_previous)
}
inline bool Pagination::_internal_has_previous() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.has_previous_;
}
inline void Pagination::_internal_set_has_previous(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.has_previous_ = value;
}

// -------------------------------------------------------------------

// MediaContent

// .palm.metasequoia.v1.MediaContent.Editor editor = 1;
inline void MediaContent::clear_editor() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.editor_ = 0;
}
inline ::palm::metasequoia::v1::MediaContent_Editor MediaContent::editor() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.MediaContent.editor)
  return _internal_editor();
}
inline void MediaContent::set_editor(::palm::metasequoia::v1::MediaContent_Editor value) {
  _internal_set_editor(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.MediaContent.editor)
}
inline ::palm::metasequoia::v1::MediaContent_Editor MediaContent::_internal_editor() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::metasequoia::v1::MediaContent_Editor>(_impl_.editor_);
}
inline void MediaContent::_internal_set_editor(::palm::metasequoia::v1::MediaContent_Editor value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.editor_ = value;
}

// string body = 2;
inline void MediaContent::clear_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.body_.ClearToEmpty();
}
inline const std::string& MediaContent::body() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.MediaContent.body)
  return _internal_body();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MediaContent::set_body(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.body_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.MediaContent.body)
}
inline std::string* MediaContent::mutable_body() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.MediaContent.body)
  return _s;
}
inline const std::string& MediaContent::_internal_body() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.body_.Get();
}
inline void MediaContent::_internal_set_body(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.body_.Set(value, GetArena());
}
inline std::string* MediaContent::_internal_mutable_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.body_.Mutable( GetArena());
}
inline std::string* MediaContent::release_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.MediaContent.body)
  return _impl_.body_.Release();
}
inline void MediaContent::set_allocated_body(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.body_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.body_.IsDefault()) {
          _impl_.body_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.MediaContent.body)
}

// .palm.metasequoia.v1.MediaContent.Status status = 3;
inline void MediaContent::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_ = 0;
}
inline ::palm::metasequoia::v1::MediaContent_Status MediaContent::status() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.MediaContent.status)
  return _internal_status();
}
inline void MediaContent::set_status(::palm::metasequoia::v1::MediaContent_Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.MediaContent.status)
}
inline ::palm::metasequoia::v1::MediaContent_Status MediaContent::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::metasequoia::v1::MediaContent_Status>(_impl_.status_);
}
inline void MediaContent::_internal_set_status(::palm::metasequoia::v1::MediaContent_Status value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// optional .google.protobuf.Timestamp published_at = 11;
inline bool MediaContent::has_published_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.published_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MediaContent::_internal_published_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.published_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MediaContent::published_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.MediaContent.published_at)
  return _internal_published_at();
}
inline void MediaContent::unsafe_arena_set_allocated_published_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.published_at_);
  }
  _impl_.published_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.MediaContent.published_at)
}
inline ::google::protobuf::Timestamp* MediaContent::release_published_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.published_at_;
  _impl_.published_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* MediaContent::unsafe_arena_release_published_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.MediaContent.published_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.published_at_;
  _impl_.published_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* MediaContent::_internal_mutable_published_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.published_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.published_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.published_at_;
}
inline ::google::protobuf::Timestamp* MediaContent::mutable_published_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_published_at();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.MediaContent.published_at)
  return _msg;
}
inline void MediaContent::set_allocated_published_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.published_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.published_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.MediaContent.published_at)
}

// -------------------------------------------------------------------

// UserDetail

// string nickname = 1;
inline void UserDetail::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& UserDetail::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserDetail.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserDetail::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserDetail.nickname)
}
inline std::string* UserDetail::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserDetail.nickname)
  return _s;
}
inline const std::string& UserDetail::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nickname_.Get();
}
inline void UserDetail::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* UserDetail::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* UserDetail::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserDetail.nickname)
  return _impl_.nickname_.Release();
}
inline void UserDetail::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserDetail.nickname)
}

// string real_name = 2;
inline void UserDetail::clear_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.real_name_.ClearToEmpty();
}
inline const std::string& UserDetail::real_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserDetail.real_name)
  return _internal_real_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserDetail::set_real_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.real_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserDetail.real_name)
}
inline std::string* UserDetail::mutable_real_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_real_name();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserDetail.real_name)
  return _s;
}
inline const std::string& UserDetail::_internal_real_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.real_name_.Get();
}
inline void UserDetail::_internal_set_real_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.real_name_.Set(value, GetArena());
}
inline std::string* UserDetail::_internal_mutable_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.real_name_.Mutable( GetArena());
}
inline std::string* UserDetail::release_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserDetail.real_name)
  return _impl_.real_name_.Release();
}
inline void UserDetail::set_allocated_real_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.real_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.real_name_.IsDefault()) {
          _impl_.real_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserDetail.real_name)
}

// -------------------------------------------------------------------

// Oauth2State

// string goto = 1;
inline void Oauth2State::clear_goto_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.goto__.ClearToEmpty();
}
inline const std::string& Oauth2State::goto_() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Oauth2State.goto)
  return _internal_goto_();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Oauth2State::set_goto_(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.goto__.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.Oauth2State.goto)
}
inline std::string* Oauth2State::mutable_goto_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_goto_();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.Oauth2State.goto)
  return _s;
}
inline const std::string& Oauth2State::_internal_goto_() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.goto__.Get();
}
inline void Oauth2State::_internal_set_goto_(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.goto__.Set(value, GetArena());
}
inline std::string* Oauth2State::_internal_mutable_goto_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.goto__.Mutable( GetArena());
}
inline std::string* Oauth2State::release_goto_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.Oauth2State.goto)
  return _impl_.goto__.Release();
}
inline void Oauth2State::set_allocated_goto_(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.goto__.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.goto__.IsDefault()) {
          _impl_.goto__.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.Oauth2State.goto)
}

// string host = 2;
inline void Oauth2State::clear_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.host_.ClearToEmpty();
}
inline const std::string& Oauth2State::host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Oauth2State.host)
  return _internal_host();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Oauth2State::set_host(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.Oauth2State.host)
}
inline std::string* Oauth2State::mutable_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_host();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.Oauth2State.host)
  return _s;
}
inline const std::string& Oauth2State::_internal_host() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.host_.Get();
}
inline void Oauth2State::_internal_set_host(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.host_.Set(value, GetArena());
}
inline std::string* Oauth2State::_internal_mutable_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.host_.Mutable( GetArena());
}
inline std::string* Oauth2State::release_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.Oauth2State.host)
  return _impl_.host_.Release();
}
inline void Oauth2State::set_allocated_host(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.host_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.host_.IsDefault()) {
          _impl_.host_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.Oauth2State.host)
}

// optional string user = 3;
inline bool Oauth2State::has_user() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Oauth2State::clear_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Oauth2State::user() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Oauth2State.user)
  return _internal_user();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Oauth2State::set_user(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.user_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.Oauth2State.user)
}
inline std::string* Oauth2State::mutable_user() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.Oauth2State.user)
  return _s;
}
inline const std::string& Oauth2State::_internal_user() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_.Get();
}
inline void Oauth2State::_internal_set_user(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.user_.Set(value, GetArena());
}
inline std::string* Oauth2State::_internal_mutable_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.user_.Mutable( GetArena());
}
inline std::string* Oauth2State::release_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.Oauth2State.user)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.user_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Oauth2State::set_allocated_user(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.user_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.user_.IsDefault()) {
          _impl_.user_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.Oauth2State.user)
}

// string id = 9;
inline void Oauth2State::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Oauth2State::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Oauth2State.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Oauth2State::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.Oauth2State.id)
}
inline std::string* Oauth2State::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.Oauth2State.id)
  return _s;
}
inline const std::string& Oauth2State::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void Oauth2State::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Oauth2State::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Oauth2State::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.Oauth2State.id)
  return _impl_.id_.Release();
}
inline void Oauth2State::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.Oauth2State.id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// UserProfile

// map<string, string> payload = 1;
inline int UserProfile::_internal_payload_size() const {
  return _internal_payload().size();
}
inline int UserProfile::payload_size() const {
  return _internal_payload_size();
}
inline void UserProfile::clear_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.payload_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& UserProfile::_internal_payload() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.payload_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& UserProfile::payload() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:palm.metasequoia.v1.UserProfile.payload)
  return _internal_payload();
}
inline ::google::protobuf::Map<std::string, std::string>* UserProfile::_internal_mutable_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.payload_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* UserProfile::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:palm.metasequoia.v1.UserProfile.payload)
  return _internal_mutable_payload();
}

// -------------------------------------------------------------------

// UserIndexResponse_Item

// string nickname = 1;
inline void UserIndexResponse_Item::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& UserIndexResponse_Item::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserIndexResponse.Item.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserIndexResponse_Item::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserIndexResponse.Item.nickname)
}
inline std::string* UserIndexResponse_Item::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserIndexResponse.Item.nickname)
  return _s;
}
inline const std::string& UserIndexResponse_Item::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nickname_.Get();
}
inline void UserIndexResponse_Item::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* UserIndexResponse_Item::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* UserIndexResponse_Item::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserIndexResponse.Item.nickname)
  return _impl_.nickname_.Release();
}
inline void UserIndexResponse_Item::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserIndexResponse.Item.nickname)
}

// string real_name = 2;
inline void UserIndexResponse_Item::clear_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.real_name_.ClearToEmpty();
}
inline const std::string& UserIndexResponse_Item::real_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserIndexResponse.Item.real_name)
  return _internal_real_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserIndexResponse_Item::set_real_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.real_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserIndexResponse.Item.real_name)
}
inline std::string* UserIndexResponse_Item::mutable_real_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_real_name();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserIndexResponse.Item.real_name)
  return _s;
}
inline const std::string& UserIndexResponse_Item::_internal_real_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.real_name_.Get();
}
inline void UserIndexResponse_Item::_internal_set_real_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.real_name_.Set(value, GetArena());
}
inline std::string* UserIndexResponse_Item::_internal_mutable_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.real_name_.Mutable( GetArena());
}
inline std::string* UserIndexResponse_Item::release_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserIndexResponse.Item.real_name)
  return _impl_.real_name_.Release();
}
inline void UserIndexResponse_Item::set_allocated_real_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.real_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.real_name_.IsDefault()) {
          _impl_.real_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserIndexResponse.Item.real_name)
}

// string email = 3;
inline void UserIndexResponse_Item::clear_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.ClearToEmpty();
}
inline const std::string& UserIndexResponse_Item::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserIndexResponse.Item.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserIndexResponse_Item::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserIndexResponse.Item.email)
}
inline std::string* UserIndexResponse_Item::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserIndexResponse.Item.email)
  return _s;
}
inline const std::string& UserIndexResponse_Item::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_.Get();
}
inline void UserIndexResponse_Item::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(value, GetArena());
}
inline std::string* UserIndexResponse_Item::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* UserIndexResponse_Item::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserIndexResponse.Item.email)
  return _impl_.email_.Release();
}
inline void UserIndexResponse_Item::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserIndexResponse.Item.email)
}

// string locale = 18;
inline void UserIndexResponse_Item::clear_locale() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.locale_.ClearToEmpty();
}
inline const std::string& UserIndexResponse_Item::locale() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserIndexResponse.Item.locale)
  return _internal_locale();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserIndexResponse_Item::set_locale(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.locale_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserIndexResponse.Item.locale)
}
inline std::string* UserIndexResponse_Item::mutable_locale() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_locale();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserIndexResponse.Item.locale)
  return _s;
}
inline const std::string& UserIndexResponse_Item::_internal_locale() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.locale_.Get();
}
inline void UserIndexResponse_Item::_internal_set_locale(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.locale_.Set(value, GetArena());
}
inline std::string* UserIndexResponse_Item::_internal_mutable_locale() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.locale_.Mutable( GetArena());
}
inline std::string* UserIndexResponse_Item::release_locale() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserIndexResponse.Item.locale)
  return _impl_.locale_.Release();
}
inline void UserIndexResponse_Item::set_allocated_locale(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.locale_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.locale_.IsDefault()) {
          _impl_.locale_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserIndexResponse.Item.locale)
}

// string timezone = 19;
inline void UserIndexResponse_Item::clear_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timezone_.ClearToEmpty();
}
inline const std::string& UserIndexResponse_Item::timezone() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserIndexResponse.Item.timezone)
  return _internal_timezone();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserIndexResponse_Item::set_timezone(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timezone_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserIndexResponse.Item.timezone)
}
inline std::string* UserIndexResponse_Item::mutable_timezone() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timezone();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserIndexResponse.Item.timezone)
  return _s;
}
inline const std::string& UserIndexResponse_Item::_internal_timezone() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timezone_.Get();
}
inline void UserIndexResponse_Item::_internal_set_timezone(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timezone_.Set(value, GetArena());
}
inline std::string* UserIndexResponse_Item::_internal_mutable_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.timezone_.Mutable( GetArena());
}
inline std::string* UserIndexResponse_Item::release_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserIndexResponse.Item.timezone)
  return _impl_.timezone_.Release();
}
inline void UserIndexResponse_Item::set_allocated_timezone(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timezone_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.timezone_.IsDefault()) {
          _impl_.timezone_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserIndexResponse.Item.timezone)
}

// optional .google.protobuf.Timestamp confirmed_at = 91;
inline bool UserIndexResponse_Item::has_confirmed_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.confirmed_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& UserIndexResponse_Item::_internal_confirmed_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.confirmed_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& UserIndexResponse_Item::confirmed_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserIndexResponse.Item.confirmed_at)
  return _internal_confirmed_at();
}
inline void UserIndexResponse_Item::unsafe_arena_set_allocated_confirmed_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.confirmed_at_);
  }
  _impl_.confirmed_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.UserIndexResponse.Item.confirmed_at)
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::release_confirmed_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.confirmed_at_;
  _impl_.confirmed_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::unsafe_arena_release_confirmed_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserIndexResponse.Item.confirmed_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.confirmed_at_;
  _impl_.confirmed_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::_internal_mutable_confirmed_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.confirmed_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.confirmed_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.confirmed_at_;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::mutable_confirmed_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_confirmed_at();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserIndexResponse.Item.confirmed_at)
  return _msg;
}
inline void UserIndexResponse_Item::set_allocated_confirmed_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.confirmed_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.confirmed_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserIndexResponse.Item.confirmed_at)
}

// optional .google.protobuf.Timestamp locked_at = 92;
inline bool UserIndexResponse_Item::has_locked_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.locked_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& UserIndexResponse_Item::_internal_locked_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.locked_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& UserIndexResponse_Item::locked_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserIndexResponse.Item.locked_at)
  return _internal_locked_at();
}
inline void UserIndexResponse_Item::unsafe_arena_set_allocated_locked_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.locked_at_);
  }
  _impl_.locked_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.UserIndexResponse.Item.locked_at)
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::release_locked_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.locked_at_;
  _impl_.locked_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::unsafe_arena_release_locked_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserIndexResponse.Item.locked_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.locked_at_;
  _impl_.locked_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::_internal_mutable_locked_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.locked_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.locked_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.locked_at_;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::mutable_locked_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_locked_at();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserIndexResponse.Item.locked_at)
  return _msg;
}
inline void UserIndexResponse_Item::set_allocated_locked_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.locked_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.locked_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserIndexResponse.Item.locked_at)
}

// optional .google.protobuf.Timestamp deleted_at = 93;
inline bool UserIndexResponse_Item::has_deleted_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.deleted_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& UserIndexResponse_Item::_internal_deleted_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.deleted_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& UserIndexResponse_Item::deleted_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserIndexResponse.Item.deleted_at)
  return _internal_deleted_at();
}
inline void UserIndexResponse_Item::unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }
  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.UserIndexResponse.Item.deleted_at)
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::unsafe_arena_release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserIndexResponse.Item.deleted_at)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::_internal_mutable_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.deleted_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.deleted_at_;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::mutable_deleted_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_deleted_at();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserIndexResponse.Item.deleted_at)
  return _msg;
}
inline void UserIndexResponse_Item::set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserIndexResponse.Item.deleted_at)
}

// .palm.metasequoia.v1.UserSignInResponse.By by = 99;
inline void UserIndexResponse_Item::clear_by() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.by_ = 0;
}
inline ::palm::metasequoia::v1::UserSignInResponse_By UserIndexResponse_Item::by() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserIndexResponse.Item.by)
  return _internal_by();
}
inline void UserIndexResponse_Item::set_by(::palm::metasequoia::v1::UserSignInResponse_By value) {
  _internal_set_by(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserIndexResponse.Item.by)
}
inline ::palm::metasequoia::v1::UserSignInResponse_By UserIndexResponse_Item::_internal_by() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::metasequoia::v1::UserSignInResponse_By>(_impl_.by_);
}
inline void UserIndexResponse_Item::_internal_set_by(::palm::metasequoia::v1::UserSignInResponse_By value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.by_ = value;
}

// -------------------------------------------------------------------

// UserIndexResponse

// repeated .palm.metasequoia.v1.UserIndexResponse.Item items = 1;
inline int UserIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int UserIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void UserIndexResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::metasequoia::v1::UserIndexResponse_Item* UserIndexResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::UserIndexResponse_Item>* UserIndexResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.UserIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::metasequoia::v1::UserIndexResponse_Item& UserIndexResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserIndexResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::metasequoia::v1::UserIndexResponse_Item* UserIndexResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::UserIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.UserIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::UserIndexResponse_Item>& UserIndexResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.UserIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::UserIndexResponse_Item>&
UserIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::UserIndexResponse_Item>*
UserIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// UserSetPasswordRequest

// string password = 1;
inline void UserSetPasswordRequest::clear_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& UserSetPasswordRequest::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSetPasswordRequest.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSetPasswordRequest::set_password(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserSetPasswordRequest.password)
}
inline std::string* UserSetPasswordRequest::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserSetPasswordRequest.password)
  return _s;
}
inline const std::string& UserSetPasswordRequest::_internal_password() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.password_.Get();
}
inline void UserSetPasswordRequest::_internal_set_password(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(value, GetArena());
}
inline std::string* UserSetPasswordRequest::_internal_mutable_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* UserSetPasswordRequest::release_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserSetPasswordRequest.password)
  return _impl_.password_.Release();
}
inline void UserSetPasswordRequest::set_allocated_password(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.password_.IsDefault()) {
          _impl_.password_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserSetPasswordRequest.password)
}

// -------------------------------------------------------------------

// UserChangePasswordRequest

// string current_password = 1;
inline void UserChangePasswordRequest::clear_current_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.current_password_.ClearToEmpty();
}
inline const std::string& UserChangePasswordRequest::current_password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserChangePasswordRequest.current_password)
  return _internal_current_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserChangePasswordRequest::set_current_password(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.current_password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserChangePasswordRequest.current_password)
}
inline std::string* UserChangePasswordRequest::mutable_current_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_current_password();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserChangePasswordRequest.current_password)
  return _s;
}
inline const std::string& UserChangePasswordRequest::_internal_current_password() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.current_password_.Get();
}
inline void UserChangePasswordRequest::_internal_set_current_password(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.current_password_.Set(value, GetArena());
}
inline std::string* UserChangePasswordRequest::_internal_mutable_current_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.current_password_.Mutable( GetArena());
}
inline std::string* UserChangePasswordRequest::release_current_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserChangePasswordRequest.current_password)
  return _impl_.current_password_.Release();
}
inline void UserChangePasswordRequest::set_allocated_current_password(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.current_password_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.current_password_.IsDefault()) {
          _impl_.current_password_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserChangePasswordRequest.current_password)
}

// string new_password = 2;
inline void UserChangePasswordRequest::clear_new_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.new_password_.ClearToEmpty();
}
inline const std::string& UserChangePasswordRequest::new_password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserChangePasswordRequest.new_password)
  return _internal_new_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserChangePasswordRequest::set_new_password(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.new_password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserChangePasswordRequest.new_password)
}
inline std::string* UserChangePasswordRequest::mutable_new_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_new_password();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserChangePasswordRequest.new_password)
  return _s;
}
inline const std::string& UserChangePasswordRequest::_internal_new_password() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.new_password_.Get();
}
inline void UserChangePasswordRequest::_internal_set_new_password(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.new_password_.Set(value, GetArena());
}
inline std::string* UserChangePasswordRequest::_internal_mutable_new_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.new_password_.Mutable( GetArena());
}
inline std::string* UserChangePasswordRequest::release_new_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserChangePasswordRequest.new_password)
  return _impl_.new_password_.Release();
}
inline void UserChangePasswordRequest::set_allocated_new_password(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.new_password_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.new_password_.IsDefault()) {
          _impl_.new_password_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserChangePasswordRequest.new_password)
}

// string password_confirmation = 3;
inline void UserChangePasswordRequest::clear_password_confirmation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_confirmation_.ClearToEmpty();
}
inline const std::string& UserChangePasswordRequest::password_confirmation() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserChangePasswordRequest.password_confirmation)
  return _internal_password_confirmation();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserChangePasswordRequest::set_password_confirmation(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_confirmation_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserChangePasswordRequest.password_confirmation)
}
inline std::string* UserChangePasswordRequest::mutable_password_confirmation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password_confirmation();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserChangePasswordRequest.password_confirmation)
  return _s;
}
inline const std::string& UserChangePasswordRequest::_internal_password_confirmation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.password_confirmation_.Get();
}
inline void UserChangePasswordRequest::_internal_set_password_confirmation(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_confirmation_.Set(value, GetArena());
}
inline std::string* UserChangePasswordRequest::_internal_mutable_password_confirmation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.password_confirmation_.Mutable( GetArena());
}
inline std::string* UserChangePasswordRequest::release_password_confirmation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserChangePasswordRequest.password_confirmation)
  return _impl_.password_confirmation_.Release();
}
inline void UserChangePasswordRequest::set_allocated_password_confirmation(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_confirmation_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.password_confirmation_.IsDefault()) {
          _impl_.password_confirmation_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserChangePasswordRequest.password_confirmation)
}

// -------------------------------------------------------------------

// UserLogsRequest

// optional string plugin = 1;
inline bool UserLogsRequest::has_plugin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void UserLogsRequest::clear_plugin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.plugin_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UserLogsRequest::plugin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserLogsRequest.plugin)
  return _internal_plugin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserLogsRequest::set_plugin(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.plugin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserLogsRequest.plugin)
}
inline std::string* UserLogsRequest::mutable_plugin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_plugin();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserLogsRequest.plugin)
  return _s;
}
inline const std::string& UserLogsRequest::_internal_plugin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.plugin_.Get();
}
inline void UserLogsRequest::_internal_set_plugin(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.plugin_.Set(value, GetArena());
}
inline std::string* UserLogsRequest::_internal_mutable_plugin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.plugin_.Mutable( GetArena());
}
inline std::string* UserLogsRequest::release_plugin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserLogsRequest.plugin)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.plugin_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.plugin_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UserLogsRequest::set_allocated_plugin(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.plugin_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.plugin_.IsDefault()) {
          _impl_.plugin_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserLogsRequest.plugin)
}

// .google.protobuf.Timestamp from = 2;
inline bool UserLogsRequest::has_from() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.from_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& UserLogsRequest::_internal_from() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.from_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& UserLogsRequest::from() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserLogsRequest.from)
  return _internal_from();
}
inline void UserLogsRequest::unsafe_arena_set_allocated_from(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.from_);
  }
  _impl_.from_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.UserLogsRequest.from)
}
inline ::google::protobuf::Timestamp* UserLogsRequest::release_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.from_;
  _impl_.from_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* UserLogsRequest::unsafe_arena_release_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserLogsRequest.from)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.from_;
  _impl_.from_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* UserLogsRequest::_internal_mutable_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.from_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.from_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.from_;
}
inline ::google::protobuf::Timestamp* UserLogsRequest::mutable_from() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_from();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserLogsRequest.from)
  return _msg;
}
inline void UserLogsRequest::set_allocated_from(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.from_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.from_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserLogsRequest.from)
}

// .google.protobuf.Timestamp to = 3;
inline bool UserLogsRequest::has_to() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.to_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& UserLogsRequest::_internal_to() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.to_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& UserLogsRequest::to() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserLogsRequest.to)
  return _internal_to();
}
inline void UserLogsRequest::unsafe_arena_set_allocated_to(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.to_);
  }
  _impl_.to_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.UserLogsRequest.to)
}
inline ::google::protobuf::Timestamp* UserLogsRequest::release_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.to_;
  _impl_.to_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* UserLogsRequest::unsafe_arena_release_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserLogsRequest.to)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.to_;
  _impl_.to_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* UserLogsRequest::_internal_mutable_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.to_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.to_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.to_;
}
inline ::google::protobuf::Timestamp* UserLogsRequest::mutable_to() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_to();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserLogsRequest.to)
  return _msg;
}
inline void UserLogsRequest::set_allocated_to(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.to_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.to_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserLogsRequest.to)
}

// -------------------------------------------------------------------

// UserLogsResponse_Item

// int32 id = 1;
inline void UserLogsResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t UserLogsResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserLogsResponse.Item.id)
  return _internal_id();
}
inline void UserLogsResponse_Item::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserLogsResponse.Item.id)
}
inline ::int32_t UserLogsResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void UserLogsResponse_Item::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// .palm.metasequoia.v1.UserLogsResponse.Item.Level level = 2;
inline void UserLogsResponse_Item::clear_level() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.level_ = 0;
}
inline ::palm::metasequoia::v1::UserLogsResponse_Item_Level UserLogsResponse_Item::level() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserLogsResponse.Item.level)
  return _internal_level();
}
inline void UserLogsResponse_Item::set_level(::palm::metasequoia::v1::UserLogsResponse_Item_Level value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserLogsResponse.Item.level)
}
inline ::palm::metasequoia::v1::UserLogsResponse_Item_Level UserLogsResponse_Item::_internal_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::metasequoia::v1::UserLogsResponse_Item_Level>(_impl_.level_);
}
inline void UserLogsResponse_Item::_internal_set_level(::palm::metasequoia::v1::UserLogsResponse_Item_Level value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.level_ = value;
}

// string plugin = 3;
inline void UserLogsResponse_Item::clear_plugin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.plugin_.ClearToEmpty();
}
inline const std::string& UserLogsResponse_Item::plugin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserLogsResponse.Item.plugin)
  return _internal_plugin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserLogsResponse_Item::set_plugin(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plugin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserLogsResponse.Item.plugin)
}
inline std::string* UserLogsResponse_Item::mutable_plugin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_plugin();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserLogsResponse.Item.plugin)
  return _s;
}
inline const std::string& UserLogsResponse_Item::_internal_plugin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.plugin_.Get();
}
inline void UserLogsResponse_Item::_internal_set_plugin(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plugin_.Set(value, GetArena());
}
inline std::string* UserLogsResponse_Item::_internal_mutable_plugin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.plugin_.Mutable( GetArena());
}
inline std::string* UserLogsResponse_Item::release_plugin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserLogsResponse.Item.plugin)
  return _impl_.plugin_.Release();
}
inline void UserLogsResponse_Item::set_allocated_plugin(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.plugin_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.plugin_.IsDefault()) {
          _impl_.plugin_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserLogsResponse.Item.plugin)
}

// string ip = 4;
inline void UserLogsResponse_Item::clear_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_.ClearToEmpty();
}
inline const std::string& UserLogsResponse_Item::ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserLogsResponse.Item.ip)
  return _internal_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserLogsResponse_Item::set_ip(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserLogsResponse.Item.ip)
}
inline std::string* UserLogsResponse_Item::mutable_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ip();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserLogsResponse.Item.ip)
  return _s;
}
inline const std::string& UserLogsResponse_Item::_internal_ip() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ip_.Get();
}
inline void UserLogsResponse_Item::_internal_set_ip(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(value, GetArena());
}
inline std::string* UserLogsResponse_Item::_internal_mutable_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ip_.Mutable( GetArena());
}
inline std::string* UserLogsResponse_Item::release_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserLogsResponse.Item.ip)
  return _impl_.ip_.Release();
}
inline void UserLogsResponse_Item::set_allocated_ip(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ip_.IsDefault()) {
          _impl_.ip_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserLogsResponse.Item.ip)
}

// string message = 5;
inline void UserLogsResponse_Item::clear_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& UserLogsResponse_Item::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserLogsResponse.Item.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserLogsResponse_Item::set_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserLogsResponse.Item.message)
}
inline std::string* UserLogsResponse_Item::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserLogsResponse.Item.message)
  return _s;
}
inline const std::string& UserLogsResponse_Item::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.message_.Get();
}
inline void UserLogsResponse_Item::_internal_set_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(value, GetArena());
}
inline std::string* UserLogsResponse_Item::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* UserLogsResponse_Item::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserLogsResponse.Item.message)
  return _impl_.message_.Release();
}
inline void UserLogsResponse_Item::set_allocated_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserLogsResponse.Item.message)
}

// .google.protobuf.Timestamp created_at = 9;
inline bool UserLogsResponse_Item::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& UserLogsResponse_Item::_internal_created_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.created_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& UserLogsResponse_Item::created_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserLogsResponse.Item.created_at)
  return _internal_created_at();
}
inline void UserLogsResponse_Item::unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }
  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.UserLogsResponse.Item.created_at)
}
inline ::google::protobuf::Timestamp* UserLogsResponse_Item::release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* UserLogsResponse_Item::unsafe_arena_release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserLogsResponse.Item.created_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* UserLogsResponse_Item::_internal_mutable_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.created_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_at_;
}
inline ::google::protobuf::Timestamp* UserLogsResponse_Item::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserLogsResponse.Item.created_at)
  return _msg;
}
inline void UserLogsResponse_Item::set_allocated_created_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserLogsResponse.Item.created_at)
}

// -------------------------------------------------------------------

// UserLogsResponse

// repeated .palm.metasequoia.v1.UserLogsResponse.Item items = 1;
inline int UserLogsResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int UserLogsResponse::items_size() const {
  return _internal_items_size();
}
inline void UserLogsResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::metasequoia::v1::UserLogsResponse_Item* UserLogsResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserLogsResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::UserLogsResponse_Item>* UserLogsResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.UserLogsResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::metasequoia::v1::UserLogsResponse_Item& UserLogsResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserLogsResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::metasequoia::v1::UserLogsResponse_Item* UserLogsResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::UserLogsResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.UserLogsResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::UserLogsResponse_Item>& UserLogsResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.UserLogsResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::UserLogsResponse_Item>&
UserLogsResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::UserLogsResponse_Item>*
UserLogsResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// UserResetPasswordRequest

// string token = 1;
inline void UserResetPasswordRequest::clear_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& UserResetPasswordRequest::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserResetPasswordRequest.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserResetPasswordRequest::set_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserResetPasswordRequest.token)
}
inline std::string* UserResetPasswordRequest::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserResetPasswordRequest.token)
  return _s;
}
inline const std::string& UserResetPasswordRequest::_internal_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.token_.Get();
}
inline void UserResetPasswordRequest::_internal_set_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(value, GetArena());
}
inline std::string* UserResetPasswordRequest::_internal_mutable_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* UserResetPasswordRequest::release_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserResetPasswordRequest.token)
  return _impl_.token_.Release();
}
inline void UserResetPasswordRequest::set_allocated_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserResetPasswordRequest.token)
}

// string password = 2;
inline void UserResetPasswordRequest::clear_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& UserResetPasswordRequest::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserResetPasswordRequest.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserResetPasswordRequest::set_password(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserResetPasswordRequest.password)
}
inline std::string* UserResetPasswordRequest::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserResetPasswordRequest.password)
  return _s;
}
inline const std::string& UserResetPasswordRequest::_internal_password() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.password_.Get();
}
inline void UserResetPasswordRequest::_internal_set_password(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(value, GetArena());
}
inline std::string* UserResetPasswordRequest::_internal_mutable_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* UserResetPasswordRequest::release_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserResetPasswordRequest.password)
  return _impl_.password_.Release();
}
inline void UserResetPasswordRequest::set_allocated_password(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.password_.IsDefault()) {
          _impl_.password_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserResetPasswordRequest.password)
}

// -------------------------------------------------------------------

// UserTokenRequest

// string token = 1;
inline void UserTokenRequest::clear_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& UserTokenRequest::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserTokenRequest.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserTokenRequest::set_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserTokenRequest.token)
}
inline std::string* UserTokenRequest::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserTokenRequest.token)
  return _s;
}
inline const std::string& UserTokenRequest::_internal_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.token_.Get();
}
inline void UserTokenRequest::_internal_set_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(value, GetArena());
}
inline std::string* UserTokenRequest::_internal_mutable_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* UserTokenRequest::release_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserTokenRequest.token)
  return _impl_.token_.Release();
}
inline void UserTokenRequest::set_allocated_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserTokenRequest.token)
}

// -------------------------------------------------------------------

// UserQueryRequest

// string email = 1;
inline bool UserQueryRequest::has_email() const {
  return by_case() == kEmail;
}
inline void UserQueryRequest::set_has_email() {
  _impl_._oneof_case_[0] = kEmail;
}
inline void UserQueryRequest::clear_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() == kEmail) {
    _impl_.by_.email_.Destroy();
    clear_has_by();
  }
}
inline const std::string& UserQueryRequest::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserQueryRequest.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserQueryRequest::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() != kEmail) {
    clear_by();

    set_has_email();
    _impl_.by_.email_.InitDefault();
  }
  _impl_.by_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserQueryRequest.email)
}
inline std::string* UserQueryRequest::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserQueryRequest.email)
  return _s;
}
inline const std::string& UserQueryRequest::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (by_case() != kEmail) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.by_.email_.Get();
}
inline void UserQueryRequest::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() != kEmail) {
    clear_by();

    set_has_email();
    _impl_.by_.email_.InitDefault();
  }
  _impl_.by_.email_.Set(value, GetArena());
}
inline std::string* UserQueryRequest::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() != kEmail) {
    clear_by();

    set_has_email();
    _impl_.by_.email_.InitDefault();
  }
  return _impl_.by_.email_.Mutable( GetArena());
}
inline std::string* UserQueryRequest::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserQueryRequest.email)
  if (by_case() != kEmail) {
    return nullptr;
  }
  clear_has_by();
  return _impl_.by_.email_.Release();
}
inline void UserQueryRequest::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_by()) {
    clear_by();
  }
  if (value != nullptr) {
    set_has_email();
    _impl_.by_.email_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserQueryRequest.email)
}

// string nickname = 2;
inline bool UserQueryRequest::has_nickname() const {
  return by_case() == kNickname;
}
inline void UserQueryRequest::set_has_nickname() {
  _impl_._oneof_case_[0] = kNickname;
}
inline void UserQueryRequest::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() == kNickname) {
    _impl_.by_.nickname_.Destroy();
    clear_has_by();
  }
}
inline const std::string& UserQueryRequest::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserQueryRequest.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserQueryRequest::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() != kNickname) {
    clear_by();

    set_has_nickname();
    _impl_.by_.nickname_.InitDefault();
  }
  _impl_.by_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserQueryRequest.nickname)
}
inline std::string* UserQueryRequest::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserQueryRequest.nickname)
  return _s;
}
inline const std::string& UserQueryRequest::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (by_case() != kNickname) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.by_.nickname_.Get();
}
inline void UserQueryRequest::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() != kNickname) {
    clear_by();

    set_has_nickname();
    _impl_.by_.nickname_.InitDefault();
  }
  _impl_.by_.nickname_.Set(value, GetArena());
}
inline std::string* UserQueryRequest::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() != kNickname) {
    clear_by();

    set_has_nickname();
    _impl_.by_.nickname_.InitDefault();
  }
  return _impl_.by_.nickname_.Mutable( GetArena());
}
inline std::string* UserQueryRequest::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserQueryRequest.nickname)
  if (by_case() != kNickname) {
    return nullptr;
  }
  clear_has_by();
  return _impl_.by_.nickname_.Release();
}
inline void UserQueryRequest::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_by()) {
    clear_by();
  }
  if (value != nullptr) {
    set_has_nickname();
    _impl_.by_.nickname_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserQueryRequest.nickname)
}

// string phone = 3;
inline bool UserQueryRequest::has_phone() const {
  return by_case() == kPhone;
}
inline void UserQueryRequest::set_has_phone() {
  _impl_._oneof_case_[0] = kPhone;
}
inline void UserQueryRequest::clear_phone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() == kPhone) {
    _impl_.by_.phone_.Destroy();
    clear_has_by();
  }
}
inline const std::string& UserQueryRequest::phone() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserQueryRequest.phone)
  return _internal_phone();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserQueryRequest::set_phone(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() != kPhone) {
    clear_by();

    set_has_phone();
    _impl_.by_.phone_.InitDefault();
  }
  _impl_.by_.phone_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserQueryRequest.phone)
}
inline std::string* UserQueryRequest::mutable_phone() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_phone();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserQueryRequest.phone)
  return _s;
}
inline const std::string& UserQueryRequest::_internal_phone() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (by_case() != kPhone) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.by_.phone_.Get();
}
inline void UserQueryRequest::_internal_set_phone(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() != kPhone) {
    clear_by();

    set_has_phone();
    _impl_.by_.phone_.InitDefault();
  }
  _impl_.by_.phone_.Set(value, GetArena());
}
inline std::string* UserQueryRequest::_internal_mutable_phone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() != kPhone) {
    clear_by();

    set_has_phone();
    _impl_.by_.phone_.InitDefault();
  }
  return _impl_.by_.phone_.Mutable( GetArena());
}
inline std::string* UserQueryRequest::release_phone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserQueryRequest.phone)
  if (by_case() != kPhone) {
    return nullptr;
  }
  clear_has_by();
  return _impl_.by_.phone_.Release();
}
inline void UserQueryRequest::set_allocated_phone(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_by()) {
    clear_by();
  }
  if (value != nullptr) {
    set_has_phone();
    _impl_.by_.phone_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserQueryRequest.phone)
}

// string uid = 4;
inline bool UserQueryRequest::has_uid() const {
  return by_case() == kUid;
}
inline void UserQueryRequest::set_has_uid() {
  _impl_._oneof_case_[0] = kUid;
}
inline void UserQueryRequest::clear_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() == kUid) {
    _impl_.by_.uid_.Destroy();
    clear_has_by();
  }
}
inline const std::string& UserQueryRequest::uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserQueryRequest.uid)
  return _internal_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserQueryRequest::set_uid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() != kUid) {
    clear_by();

    set_has_uid();
    _impl_.by_.uid_.InitDefault();
  }
  _impl_.by_.uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserQueryRequest.uid)
}
inline std::string* UserQueryRequest::mutable_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uid();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserQueryRequest.uid)
  return _s;
}
inline const std::string& UserQueryRequest::_internal_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (by_case() != kUid) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.by_.uid_.Get();
}
inline void UserQueryRequest::_internal_set_uid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() != kUid) {
    clear_by();

    set_has_uid();
    _impl_.by_.uid_.InitDefault();
  }
  _impl_.by_.uid_.Set(value, GetArena());
}
inline std::string* UserQueryRequest::_internal_mutable_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() != kUid) {
    clear_by();

    set_has_uid();
    _impl_.by_.uid_.InitDefault();
  }
  return _impl_.by_.uid_.Mutable( GetArena());
}
inline std::string* UserQueryRequest::release_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserQueryRequest.uid)
  if (by_case() != kUid) {
    return nullptr;
  }
  clear_has_by();
  return _impl_.by_.uid_.Release();
}
inline void UserQueryRequest::set_allocated_uid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_by()) {
    clear_by();
  }
  if (value != nullptr) {
    set_has_uid();
    _impl_.by_.uid_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserQueryRequest.uid)
}

inline bool UserQueryRequest::has_by() const {
  return by_case() != BY_NOT_SET;
}
inline void UserQueryRequest::clear_has_by() {
  _impl_._oneof_case_[0] = BY_NOT_SET;
}
inline UserQueryRequest::ByCase UserQueryRequest::by_case() const {
  return UserQueryRequest::ByCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// UserSignUpByEmailRequest

// string nickname = 1;
inline void UserSignUpByEmailRequest::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& UserSignUpByEmailRequest::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSignUpByEmailRequest.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignUpByEmailRequest::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserSignUpByEmailRequest.nickname)
}
inline std::string* UserSignUpByEmailRequest::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserSignUpByEmailRequest.nickname)
  return _s;
}
inline const std::string& UserSignUpByEmailRequest::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nickname_.Get();
}
inline void UserSignUpByEmailRequest::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* UserSignUpByEmailRequest::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* UserSignUpByEmailRequest::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserSignUpByEmailRequest.nickname)
  return _impl_.nickname_.Release();
}
inline void UserSignUpByEmailRequest::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserSignUpByEmailRequest.nickname)
}

// string real_name = 2;
inline void UserSignUpByEmailRequest::clear_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.real_name_.ClearToEmpty();
}
inline const std::string& UserSignUpByEmailRequest::real_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSignUpByEmailRequest.real_name)
  return _internal_real_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignUpByEmailRequest::set_real_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.real_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserSignUpByEmailRequest.real_name)
}
inline std::string* UserSignUpByEmailRequest::mutable_real_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_real_name();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserSignUpByEmailRequest.real_name)
  return _s;
}
inline const std::string& UserSignUpByEmailRequest::_internal_real_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.real_name_.Get();
}
inline void UserSignUpByEmailRequest::_internal_set_real_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.real_name_.Set(value, GetArena());
}
inline std::string* UserSignUpByEmailRequest::_internal_mutable_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.real_name_.Mutable( GetArena());
}
inline std::string* UserSignUpByEmailRequest::release_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserSignUpByEmailRequest.real_name)
  return _impl_.real_name_.Release();
}
inline void UserSignUpByEmailRequest::set_allocated_real_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.real_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.real_name_.IsDefault()) {
          _impl_.real_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserSignUpByEmailRequest.real_name)
}

// string email = 3;
inline void UserSignUpByEmailRequest::clear_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.ClearToEmpty();
}
inline const std::string& UserSignUpByEmailRequest::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSignUpByEmailRequest.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignUpByEmailRequest::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserSignUpByEmailRequest.email)
}
inline std::string* UserSignUpByEmailRequest::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserSignUpByEmailRequest.email)
  return _s;
}
inline const std::string& UserSignUpByEmailRequest::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_.Get();
}
inline void UserSignUpByEmailRequest::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(value, GetArena());
}
inline std::string* UserSignUpByEmailRequest::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* UserSignUpByEmailRequest::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserSignUpByEmailRequest.email)
  return _impl_.email_.Release();
}
inline void UserSignUpByEmailRequest::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserSignUpByEmailRequest.email)
}

// string password = 4;
inline void UserSignUpByEmailRequest::clear_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& UserSignUpByEmailRequest::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSignUpByEmailRequest.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignUpByEmailRequest::set_password(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserSignUpByEmailRequest.password)
}
inline std::string* UserSignUpByEmailRequest::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserSignUpByEmailRequest.password)
  return _s;
}
inline const std::string& UserSignUpByEmailRequest::_internal_password() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.password_.Get();
}
inline void UserSignUpByEmailRequest::_internal_set_password(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(value, GetArena());
}
inline std::string* UserSignUpByEmailRequest::_internal_mutable_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* UserSignUpByEmailRequest::release_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserSignUpByEmailRequest.password)
  return _impl_.password_.Release();
}
inline void UserSignUpByEmailRequest::set_allocated_password(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.password_.IsDefault()) {
          _impl_.password_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserSignUpByEmailRequest.password)
}

// string locale = 11;
inline void UserSignUpByEmailRequest::clear_locale() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.locale_.ClearToEmpty();
}
inline const std::string& UserSignUpByEmailRequest::locale() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSignUpByEmailRequest.locale)
  return _internal_locale();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignUpByEmailRequest::set_locale(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.locale_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserSignUpByEmailRequest.locale)
}
inline std::string* UserSignUpByEmailRequest::mutable_locale() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_locale();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserSignUpByEmailRequest.locale)
  return _s;
}
inline const std::string& UserSignUpByEmailRequest::_internal_locale() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.locale_.Get();
}
inline void UserSignUpByEmailRequest::_internal_set_locale(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.locale_.Set(value, GetArena());
}
inline std::string* UserSignUpByEmailRequest::_internal_mutable_locale() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.locale_.Mutable( GetArena());
}
inline std::string* UserSignUpByEmailRequest::release_locale() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserSignUpByEmailRequest.locale)
  return _impl_.locale_.Release();
}
inline void UserSignUpByEmailRequest::set_allocated_locale(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.locale_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.locale_.IsDefault()) {
          _impl_.locale_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserSignUpByEmailRequest.locale)
}

// string timezone = 12;
inline void UserSignUpByEmailRequest::clear_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timezone_.ClearToEmpty();
}
inline const std::string& UserSignUpByEmailRequest::timezone() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSignUpByEmailRequest.timezone)
  return _internal_timezone();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignUpByEmailRequest::set_timezone(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timezone_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserSignUpByEmailRequest.timezone)
}
inline std::string* UserSignUpByEmailRequest::mutable_timezone() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timezone();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserSignUpByEmailRequest.timezone)
  return _s;
}
inline const std::string& UserSignUpByEmailRequest::_internal_timezone() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timezone_.Get();
}
inline void UserSignUpByEmailRequest::_internal_set_timezone(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timezone_.Set(value, GetArena());
}
inline std::string* UserSignUpByEmailRequest::_internal_mutable_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.timezone_.Mutable( GetArena());
}
inline std::string* UserSignUpByEmailRequest::release_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserSignUpByEmailRequest.timezone)
  return _impl_.timezone_.Release();
}
inline void UserSignUpByEmailRequest::set_allocated_timezone(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timezone_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.timezone_.IsDefault()) {
          _impl_.timezone_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserSignUpByEmailRequest.timezone)
}

// string home = 99;
inline void UserSignUpByEmailRequest::clear_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.home_.ClearToEmpty();
}
inline const std::string& UserSignUpByEmailRequest::home() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSignUpByEmailRequest.home)
  return _internal_home();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignUpByEmailRequest::set_home(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.home_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserSignUpByEmailRequest.home)
}
inline std::string* UserSignUpByEmailRequest::mutable_home() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_home();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserSignUpByEmailRequest.home)
  return _s;
}
inline const std::string& UserSignUpByEmailRequest::_internal_home() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.home_.Get();
}
inline void UserSignUpByEmailRequest::_internal_set_home(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.home_.Set(value, GetArena());
}
inline std::string* UserSignUpByEmailRequest::_internal_mutable_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.home_.Mutable( GetArena());
}
inline std::string* UserSignUpByEmailRequest::release_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserSignUpByEmailRequest.home)
  return _impl_.home_.Release();
}
inline void UserSignUpByEmailRequest::set_allocated_home(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.home_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.home_.IsDefault()) {
          _impl_.home_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserSignUpByEmailRequest.home)
}

// -------------------------------------------------------------------

// UserSignInByPasswordRequest

// string email = 1;
inline bool UserSignInByPasswordRequest::has_email() const {
  return user_case() == kEmail;
}
inline void UserSignInByPasswordRequest::set_has_email() {
  _impl_._oneof_case_[0] = kEmail;
}
inline void UserSignInByPasswordRequest::clear_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() == kEmail) {
    _impl_.user_.email_.Destroy();
    clear_has_user();
  }
}
inline const std::string& UserSignInByPasswordRequest::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSignInByPasswordRequest.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInByPasswordRequest::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kEmail) {
    clear_user();

    set_has_email();
    _impl_.user_.email_.InitDefault();
  }
  _impl_.user_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserSignInByPasswordRequest.email)
}
inline std::string* UserSignInByPasswordRequest::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserSignInByPasswordRequest.email)
  return _s;
}
inline const std::string& UserSignInByPasswordRequest::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (user_case() != kEmail) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.user_.email_.Get();
}
inline void UserSignInByPasswordRequest::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kEmail) {
    clear_user();

    set_has_email();
    _impl_.user_.email_.InitDefault();
  }
  _impl_.user_.email_.Set(value, GetArena());
}
inline std::string* UserSignInByPasswordRequest::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kEmail) {
    clear_user();

    set_has_email();
    _impl_.user_.email_.InitDefault();
  }
  return _impl_.user_.email_.Mutable( GetArena());
}
inline std::string* UserSignInByPasswordRequest::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserSignInByPasswordRequest.email)
  if (user_case() != kEmail) {
    return nullptr;
  }
  clear_has_user();
  return _impl_.user_.email_.Release();
}
inline void UserSignInByPasswordRequest::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_user()) {
    clear_user();
  }
  if (value != nullptr) {
    set_has_email();
    _impl_.user_.email_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserSignInByPasswordRequest.email)
}

// string nickname = 2;
inline bool UserSignInByPasswordRequest::has_nickname() const {
  return user_case() == kNickname;
}
inline void UserSignInByPasswordRequest::set_has_nickname() {
  _impl_._oneof_case_[0] = kNickname;
}
inline void UserSignInByPasswordRequest::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() == kNickname) {
    _impl_.user_.nickname_.Destroy();
    clear_has_user();
  }
}
inline const std::string& UserSignInByPasswordRequest::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSignInByPasswordRequest.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInByPasswordRequest::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kNickname) {
    clear_user();

    set_has_nickname();
    _impl_.user_.nickname_.InitDefault();
  }
  _impl_.user_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserSignInByPasswordRequest.nickname)
}
inline std::string* UserSignInByPasswordRequest::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserSignInByPasswordRequest.nickname)
  return _s;
}
inline const std::string& UserSignInByPasswordRequest::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (user_case() != kNickname) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.user_.nickname_.Get();
}
inline void UserSignInByPasswordRequest::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kNickname) {
    clear_user();

    set_has_nickname();
    _impl_.user_.nickname_.InitDefault();
  }
  _impl_.user_.nickname_.Set(value, GetArena());
}
inline std::string* UserSignInByPasswordRequest::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kNickname) {
    clear_user();

    set_has_nickname();
    _impl_.user_.nickname_.InitDefault();
  }
  return _impl_.user_.nickname_.Mutable( GetArena());
}
inline std::string* UserSignInByPasswordRequest::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserSignInByPasswordRequest.nickname)
  if (user_case() != kNickname) {
    return nullptr;
  }
  clear_has_user();
  return _impl_.user_.nickname_.Release();
}
inline void UserSignInByPasswordRequest::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_user()) {
    clear_user();
  }
  if (value != nullptr) {
    set_has_nickname();
    _impl_.user_.nickname_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserSignInByPasswordRequest.nickname)
}

// string phone = 3;
inline bool UserSignInByPasswordRequest::has_phone() const {
  return user_case() == kPhone;
}
inline void UserSignInByPasswordRequest::set_has_phone() {
  _impl_._oneof_case_[0] = kPhone;
}
inline void UserSignInByPasswordRequest::clear_phone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() == kPhone) {
    _impl_.user_.phone_.Destroy();
    clear_has_user();
  }
}
inline const std::string& UserSignInByPasswordRequest::phone() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSignInByPasswordRequest.phone)
  return _internal_phone();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInByPasswordRequest::set_phone(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kPhone) {
    clear_user();

    set_has_phone();
    _impl_.user_.phone_.InitDefault();
  }
  _impl_.user_.phone_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserSignInByPasswordRequest.phone)
}
inline std::string* UserSignInByPasswordRequest::mutable_phone() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_phone();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserSignInByPasswordRequest.phone)
  return _s;
}
inline const std::string& UserSignInByPasswordRequest::_internal_phone() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (user_case() != kPhone) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.user_.phone_.Get();
}
inline void UserSignInByPasswordRequest::_internal_set_phone(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kPhone) {
    clear_user();

    set_has_phone();
    _impl_.user_.phone_.InitDefault();
  }
  _impl_.user_.phone_.Set(value, GetArena());
}
inline std::string* UserSignInByPasswordRequest::_internal_mutable_phone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kPhone) {
    clear_user();

    set_has_phone();
    _impl_.user_.phone_.InitDefault();
  }
  return _impl_.user_.phone_.Mutable( GetArena());
}
inline std::string* UserSignInByPasswordRequest::release_phone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserSignInByPasswordRequest.phone)
  if (user_case() != kPhone) {
    return nullptr;
  }
  clear_has_user();
  return _impl_.user_.phone_.Release();
}
inline void UserSignInByPasswordRequest::set_allocated_phone(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_user()) {
    clear_user();
  }
  if (value != nullptr) {
    set_has_phone();
    _impl_.user_.phone_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserSignInByPasswordRequest.phone)
}

// string password = 11;
inline void UserSignInByPasswordRequest::clear_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& UserSignInByPasswordRequest::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSignInByPasswordRequest.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInByPasswordRequest::set_password(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserSignInByPasswordRequest.password)
}
inline std::string* UserSignInByPasswordRequest::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserSignInByPasswordRequest.password)
  return _s;
}
inline const std::string& UserSignInByPasswordRequest::_internal_password() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.password_.Get();
}
inline void UserSignInByPasswordRequest::_internal_set_password(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(value, GetArena());
}
inline std::string* UserSignInByPasswordRequest::_internal_mutable_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* UserSignInByPasswordRequest::release_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserSignInByPasswordRequest.password)
  return _impl_.password_.Release();
}
inline void UserSignInByPasswordRequest::set_allocated_password(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.password_.IsDefault()) {
          _impl_.password_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserSignInByPasswordRequest.password)
}

// .google.protobuf.Duration ttl = 19;
inline bool UserSignInByPasswordRequest::has_ttl() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ttl_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& UserSignInByPasswordRequest::_internal_ttl() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Duration* p = _impl_.ttl_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& UserSignInByPasswordRequest::ttl() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSignInByPasswordRequest.ttl)
  return _internal_ttl();
}
inline void UserSignInByPasswordRequest::unsafe_arena_set_allocated_ttl(::google::protobuf::Duration* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ttl_);
  }
  _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.UserSignInByPasswordRequest.ttl)
}
inline ::google::protobuf::Duration* UserSignInByPasswordRequest::release_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.ttl_;
  _impl_.ttl_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Duration* UserSignInByPasswordRequest::unsafe_arena_release_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserSignInByPasswordRequest.ttl)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.ttl_;
  _impl_.ttl_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* UserSignInByPasswordRequest::_internal_mutable_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ttl_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArena());
    _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.ttl_;
}
inline ::google::protobuf::Duration* UserSignInByPasswordRequest::mutable_ttl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Duration* _msg = _internal_mutable_ttl();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserSignInByPasswordRequest.ttl)
  return _msg;
}
inline void UserSignInByPasswordRequest::set_allocated_ttl(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ttl_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserSignInByPasswordRequest.ttl)
}

inline bool UserSignInByPasswordRequest::has_user() const {
  return user_case() != USER_NOT_SET;
}
inline void UserSignInByPasswordRequest::clear_has_user() {
  _impl_._oneof_case_[0] = USER_NOT_SET;
}
inline UserSignInByPasswordRequest::UserCase UserSignInByPasswordRequest::user_case() const {
  return UserSignInByPasswordRequest::UserCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// UserSignInResponse

// string real_name = 1;
inline void UserSignInResponse::clear_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.real_name_.ClearToEmpty();
}
inline const std::string& UserSignInResponse::real_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSignInResponse.real_name)
  return _internal_real_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInResponse::set_real_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.real_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserSignInResponse.real_name)
}
inline std::string* UserSignInResponse::mutable_real_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_real_name();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserSignInResponse.real_name)
  return _s;
}
inline const std::string& UserSignInResponse::_internal_real_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.real_name_.Get();
}
inline void UserSignInResponse::_internal_set_real_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.real_name_.Set(value, GetArena());
}
inline std::string* UserSignInResponse::_internal_mutable_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.real_name_.Mutable( GetArena());
}
inline std::string* UserSignInResponse::release_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserSignInResponse.real_name)
  return _impl_.real_name_.Release();
}
inline void UserSignInResponse::set_allocated_real_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.real_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.real_name_.IsDefault()) {
          _impl_.real_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserSignInResponse.real_name)
}

// .palm.metasequoia.v1.UserSignInResponse.By by = 9;
inline void UserSignInResponse::clear_by() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.by_ = 0;
}
inline ::palm::metasequoia::v1::UserSignInResponse_By UserSignInResponse::by() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSignInResponse.by)
  return _internal_by();
}
inline void UserSignInResponse::set_by(::palm::metasequoia::v1::UserSignInResponse_By value) {
  _internal_set_by(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserSignInResponse.by)
}
inline ::palm::metasequoia::v1::UserSignInResponse_By UserSignInResponse::_internal_by() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::metasequoia::v1::UserSignInResponse_By>(_impl_.by_);
}
inline void UserSignInResponse::_internal_set_by(::palm::metasequoia::v1::UserSignInResponse_By value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.by_ = value;
}

// string token = 11;
inline void UserSignInResponse::clear_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& UserSignInResponse::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSignInResponse.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInResponse::set_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.UserSignInResponse.token)
}
inline std::string* UserSignInResponse::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserSignInResponse.token)
  return _s;
}
inline const std::string& UserSignInResponse::_internal_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.token_.Get();
}
inline void UserSignInResponse::_internal_set_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(value, GetArena());
}
inline std::string* UserSignInResponse::_internal_mutable_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* UserSignInResponse::release_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.UserSignInResponse.token)
  return _impl_.token_.Release();
}
inline void UserSignInResponse::set_allocated_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.UserSignInResponse.token)
}

// repeated .palm.metasequoia.v1.Role roles = 12;
inline int UserSignInResponse::_internal_roles_size() const {
  return _internal_roles().size();
}
inline int UserSignInResponse::roles_size() const {
  return _internal_roles_size();
}
inline void UserSignInResponse::clear_roles() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.roles_.Clear();
}
inline ::palm::metasequoia::v1::Role* UserSignInResponse::mutable_roles(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserSignInResponse.roles)
  return _internal_mutable_roles()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>* UserSignInResponse::mutable_roles()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.UserSignInResponse.roles)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_roles();
}
inline const ::palm::metasequoia::v1::Role& UserSignInResponse::roles(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSignInResponse.roles)
  return _internal_roles().Get(index);
}
inline ::palm::metasequoia::v1::Role* UserSignInResponse::add_roles() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::Role* _add = _internal_mutable_roles()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.UserSignInResponse.roles)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>& UserSignInResponse::roles() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.UserSignInResponse.roles)
  return _internal_roles();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>&
UserSignInResponse::_internal_roles() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.roles_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>*
UserSignInResponse::_internal_mutable_roles() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.roles_;
}

// repeated .palm.metasequoia.v1.Permission permissions = 13;
inline int UserSignInResponse::_internal_permissions_size() const {
  return _internal_permissions().size();
}
inline int UserSignInResponse::permissions_size() const {
  return _internal_permissions_size();
}
inline void UserSignInResponse::clear_permissions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.permissions_.Clear();
}
inline ::palm::metasequoia::v1::Permission* UserSignInResponse::mutable_permissions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.UserSignInResponse.permissions)
  return _internal_mutable_permissions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Permission>* UserSignInResponse::mutable_permissions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.UserSignInResponse.permissions)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_permissions();
}
inline const ::palm::metasequoia::v1::Permission& UserSignInResponse::permissions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.UserSignInResponse.permissions)
  return _internal_permissions().Get(index);
}
inline ::palm::metasequoia::v1::Permission* UserSignInResponse::add_permissions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::Permission* _add = _internal_mutable_permissions()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.UserSignInResponse.permissions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Permission>& UserSignInResponse::permissions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.UserSignInResponse.permissions)
  return _internal_permissions();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Permission>&
UserSignInResponse::_internal_permissions() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.permissions_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Permission>*
UserSignInResponse::_internal_mutable_permissions() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.permissions_;
}

// -------------------------------------------------------------------

// Permission

// int32 user = 1;
inline bool Permission::has_user() const {
  return subject_case() == kUser;
}
inline void Permission::set_has_user() {
  _impl_._oneof_case_[0] = kUser;
}
inline void Permission::clear_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (subject_case() == kUser) {
    _impl_.subject_.user_ = 0;
    clear_has_subject();
  }
}
inline ::int32_t Permission::user() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Permission.user)
  return _internal_user();
}
inline void Permission::set_user(::int32_t value) {
  _internal_set_user(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.Permission.user)
}
inline ::int32_t Permission::_internal_user() const {
  if (subject_case() == kUser) {
    return _impl_.subject_.user_;
  }
  return 0;
}
inline void Permission::_internal_set_user(::int32_t value) {
  if (subject_case() != kUser) {
    clear_subject();
    set_has_user();
  }
  _impl_.subject_.user_ = value;
}

// .palm.metasequoia.v1.Role role = 2;
inline bool Permission::has_role() const {
  return subject_case() == kRole;
}
inline bool Permission::_internal_has_role() const {
  return subject_case() == kRole;
}
inline void Permission::set_has_role() {
  _impl_._oneof_case_[0] = kRole;
}
inline void Permission::clear_role() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (subject_case() == kRole) {
    if (GetArena() == nullptr) {
      delete _impl_.subject_.role_;
    }
    clear_has_subject();
  }
}
inline ::palm::metasequoia::v1::Role* Permission::release_role() {
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.Permission.role)
  if (subject_case() == kRole) {
    clear_has_subject();
    auto* temp = _impl_.subject_.role_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.subject_.role_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::palm::metasequoia::v1::Role& Permission::_internal_role() const {
  return subject_case() == kRole ? *_impl_.subject_.role_ : reinterpret_cast<::palm::metasequoia::v1::Role&>(::palm::metasequoia::v1::_Role_default_instance_);
}
inline const ::palm::metasequoia::v1::Role& Permission::role() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Permission.role)
  return _internal_role();
}
inline ::palm::metasequoia::v1::Role* Permission::unsafe_arena_release_role() {
  // @@protoc_insertion_point(field_unsafe_arena_release:palm.metasequoia.v1.Permission.role)
  if (subject_case() == kRole) {
    clear_has_subject();
    auto* temp = _impl_.subject_.role_;
    _impl_.subject_.role_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Permission::unsafe_arena_set_allocated_role(::palm::metasequoia::v1::Role* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_subject();
  if (value) {
    set_has_role();
    _impl_.subject_.role_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.Permission.role)
}
inline ::palm::metasequoia::v1::Role* Permission::_internal_mutable_role() {
  if (subject_case() != kRole) {
    clear_subject();
    set_has_role();
    _impl_.subject_.role_ = CreateMaybeMessage<::palm::metasequoia::v1::Role>(GetArena());
  }
  return _impl_.subject_.role_;
}
inline ::palm::metasequoia::v1::Role* Permission::mutable_role() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::Role* _msg = _internal_mutable_role();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.Permission.role)
  return _msg;
}

// .palm.metasequoia.v1.Resource object = 11;
inline bool Permission::has_object() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.object_ != nullptr);
  return value;
}
inline void Permission::clear_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.object_ != nullptr) _impl_.object_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::Resource& Permission::_internal_object() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::Resource* p = _impl_.object_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::Resource&>(::palm::metasequoia::v1::_Resource_default_instance_);
}
inline const ::palm::metasequoia::v1::Resource& Permission::object() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Permission.object)
  return _internal_object();
}
inline void Permission::unsafe_arena_set_allocated_object(::palm::metasequoia::v1::Resource* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.object_);
  }
  _impl_.object_ = reinterpret_cast<::palm::metasequoia::v1::Resource*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.Permission.object)
}
inline ::palm::metasequoia::v1::Resource* Permission::release_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Resource* released = _impl_.object_;
  _impl_.object_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::Resource* Permission::unsafe_arena_release_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.Permission.object)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Resource* temp = _impl_.object_;
  _impl_.object_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::Resource* Permission::_internal_mutable_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.object_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::Resource>(GetArena());
    _impl_.object_ = reinterpret_cast<::palm::metasequoia::v1::Resource*>(p);
  }
  return _impl_.object_;
}
inline ::palm::metasequoia::v1::Resource* Permission::mutable_object() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::Resource* _msg = _internal_mutable_object();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.Permission.object)
  return _msg;
}
inline void Permission::set_allocated_object(::palm::metasequoia::v1::Resource* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::Resource*>(_impl_.object_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::Resource*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.object_ = reinterpret_cast<::palm::metasequoia::v1::Resource*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.Permission.object)
}

// string action = 12;
inline void Permission::clear_action() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.action_.ClearToEmpty();
}
inline const std::string& Permission::action() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Permission.action)
  return _internal_action();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Permission::set_action(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.action_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.Permission.action)
}
inline std::string* Permission::mutable_action() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_action();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.Permission.action)
  return _s;
}
inline const std::string& Permission::_internal_action() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.action_.Get();
}
inline void Permission::_internal_set_action(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.action_.Set(value, GetArena());
}
inline std::string* Permission::_internal_mutable_action() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.action_.Mutable( GetArena());
}
inline std::string* Permission::release_action() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.Permission.action)
  return _impl_.action_.Release();
}
inline void Permission::set_allocated_action(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.action_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.action_.IsDefault()) {
          _impl_.action_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.Permission.action)
}

inline bool Permission::has_subject() const {
  return subject_case() != SUBJECT_NOT_SET;
}
inline void Permission::clear_has_subject() {
  _impl_._oneof_case_[0] = SUBJECT_NOT_SET;
}
inline Permission::SubjectCase Permission::subject_case() const {
  return Permission::SubjectCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Resource

// string s = 1;
inline bool Resource::has_s() const {
  return id_case() == kS;
}
inline void Resource::set_has_s() {
  _impl_._oneof_case_[0] = kS;
}
inline void Resource::clear_s() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_case() == kS) {
    _impl_.id_.s_.Destroy();
    clear_has_id();
  }
}
inline const std::string& Resource::s() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Resource.s)
  return _internal_s();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Resource::set_s(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_case() != kS) {
    clear_id();

    set_has_s();
    _impl_.id_.s_.InitDefault();
  }
  _impl_.id_.s_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.Resource.s)
}
inline std::string* Resource::mutable_s() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_s();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.Resource.s)
  return _s;
}
inline const std::string& Resource::_internal_s() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (id_case() != kS) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.id_.s_.Get();
}
inline void Resource::_internal_set_s(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_case() != kS) {
    clear_id();

    set_has_s();
    _impl_.id_.s_.InitDefault();
  }
  _impl_.id_.s_.Set(value, GetArena());
}
inline std::string* Resource::_internal_mutable_s() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_case() != kS) {
    clear_id();

    set_has_s();
    _impl_.id_.s_.InitDefault();
  }
  return _impl_.id_.s_.Mutable( GetArena());
}
inline std::string* Resource::release_s() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.Resource.s)
  if (id_case() != kS) {
    return nullptr;
  }
  clear_has_id();
  return _impl_.id_.s_.Release();
}
inline void Resource::set_allocated_s(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_id()) {
    clear_id();
  }
  if (value != nullptr) {
    set_has_s();
    _impl_.id_.s_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.Resource.s)
}

// int32 i = 2;
inline bool Resource::has_i() const {
  return id_case() == kI;
}
inline void Resource::set_has_i() {
  _impl_._oneof_case_[0] = kI;
}
inline void Resource::clear_i() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_case() == kI) {
    _impl_.id_.i_ = 0;
    clear_has_id();
  }
}
inline ::int32_t Resource::i() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Resource.i)
  return _internal_i();
}
inline void Resource::set_i(::int32_t value) {
  _internal_set_i(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.Resource.i)
}
inline ::int32_t Resource::_internal_i() const {
  if (id_case() == kI) {
    return _impl_.id_.i_;
  }
  return 0;
}
inline void Resource::_internal_set_i(::int32_t value) {
  if (id_case() != kI) {
    clear_id();
    set_has_i();
  }
  _impl_.id_.i_ = value;
}

// string type = 11;
inline void Resource::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& Resource::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Resource.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Resource::set_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.Resource.type)
}
inline std::string* Resource::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.Resource.type)
  return _s;
}
inline const std::string& Resource::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_.Get();
}
inline void Resource::_internal_set_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(value, GetArena());
}
inline std::string* Resource::_internal_mutable_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* Resource::release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.Resource.type)
  return _impl_.type_.Release();
}
inline void Resource::set_allocated_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.Resource.type)
}

inline bool Resource::has_id() const {
  return id_case() != ID_NOT_SET;
}
inline void Resource::clear_has_id() {
  _impl_._oneof_case_[0] = ID_NOT_SET;
}
inline Resource::IdCase Resource::id_case() const {
  return Resource::IdCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Role_Member

// string name = 1;
inline void Role_Member::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Role_Member::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Role.Member.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Role_Member::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.Role.Member.name)
}
inline std::string* Role_Member::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.Role.Member.name)
  return _s;
}
inline const std::string& Role_Member::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void Role_Member::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Role_Member::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Role_Member::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.Role.Member.name)
  return _impl_.name_.Release();
}
inline void Role_Member::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.Role.Member.name)
}

// -------------------------------------------------------------------

// Role

// .google.protobuf.Empty administrator = 1;
inline bool Role::has_administrator() const {
  return by_case() == kAdministrator;
}
inline bool Role::_internal_has_administrator() const {
  return by_case() == kAdministrator;
}
inline void Role::set_has_administrator() {
  _impl_._oneof_case_[0] = kAdministrator;
}
inline ::google::protobuf::Empty* Role::release_administrator() {
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.Role.administrator)
  if (by_case() == kAdministrator) {
    clear_has_by();
    auto* temp = _impl_.by_.administrator_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.by_.administrator_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::protobuf::Empty& Role::_internal_administrator() const {
  return by_case() == kAdministrator ? *_impl_.by_.administrator_ : reinterpret_cast<::google::protobuf::Empty&>(::google::protobuf::_Empty_default_instance_);
}
inline const ::google::protobuf::Empty& Role::administrator() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Role.administrator)
  return _internal_administrator();
}
inline ::google::protobuf::Empty* Role::unsafe_arena_release_administrator() {
  // @@protoc_insertion_point(field_unsafe_arena_release:palm.metasequoia.v1.Role.administrator)
  if (by_case() == kAdministrator) {
    clear_has_by();
    auto* temp = _impl_.by_.administrator_;
    _impl_.by_.administrator_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Role::unsafe_arena_set_allocated_administrator(::google::protobuf::Empty* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_by();
  if (value) {
    set_has_administrator();
    _impl_.by_.administrator_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.Role.administrator)
}
inline ::google::protobuf::Empty* Role::_internal_mutable_administrator() {
  if (by_case() != kAdministrator) {
    clear_by();
    set_has_administrator();
    _impl_.by_.administrator_ = CreateMaybeMessage<::google::protobuf::Empty>(GetArena());
  }
  return _impl_.by_.administrator_;
}
inline ::google::protobuf::Empty* Role::mutable_administrator() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Empty* _msg = _internal_mutable_administrator();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.Role.administrator)
  return _msg;
}

// .google.protobuf.Empty root = 2;
inline bool Role::has_root() const {
  return by_case() == kRoot;
}
inline bool Role::_internal_has_root() const {
  return by_case() == kRoot;
}
inline void Role::set_has_root() {
  _impl_._oneof_case_[0] = kRoot;
}
inline ::google::protobuf::Empty* Role::release_root() {
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.Role.root)
  if (by_case() == kRoot) {
    clear_has_by();
    auto* temp = _impl_.by_.root_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.by_.root_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::protobuf::Empty& Role::_internal_root() const {
  return by_case() == kRoot ? *_impl_.by_.root_ : reinterpret_cast<::google::protobuf::Empty&>(::google::protobuf::_Empty_default_instance_);
}
inline const ::google::protobuf::Empty& Role::root() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Role.root)
  return _internal_root();
}
inline ::google::protobuf::Empty* Role::unsafe_arena_release_root() {
  // @@protoc_insertion_point(field_unsafe_arena_release:palm.metasequoia.v1.Role.root)
  if (by_case() == kRoot) {
    clear_has_by();
    auto* temp = _impl_.by_.root_;
    _impl_.by_.root_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Role::unsafe_arena_set_allocated_root(::google::protobuf::Empty* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_by();
  if (value) {
    set_has_root();
    _impl_.by_.root_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.Role.root)
}
inline ::google::protobuf::Empty* Role::_internal_mutable_root() {
  if (by_case() != kRoot) {
    clear_by();
    set_has_root();
    _impl_.by_.root_ = CreateMaybeMessage<::google::protobuf::Empty>(GetArena());
  }
  return _impl_.by_.root_;
}
inline ::google::protobuf::Empty* Role::mutable_root() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Empty* _msg = _internal_mutable_root();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.Role.root)
  return _msg;
}

// .palm.metasequoia.v1.Role.Member member = 3;
inline bool Role::has_member() const {
  return by_case() == kMember;
}
inline bool Role::_internal_has_member() const {
  return by_case() == kMember;
}
inline void Role::set_has_member() {
  _impl_._oneof_case_[0] = kMember;
}
inline void Role::clear_member() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() == kMember) {
    if (GetArena() == nullptr) {
      delete _impl_.by_.member_;
    }
    clear_has_by();
  }
}
inline ::palm::metasequoia::v1::Role_Member* Role::release_member() {
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.Role.member)
  if (by_case() == kMember) {
    clear_has_by();
    auto* temp = _impl_.by_.member_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.by_.member_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::palm::metasequoia::v1::Role_Member& Role::_internal_member() const {
  return by_case() == kMember ? *_impl_.by_.member_ : reinterpret_cast<::palm::metasequoia::v1::Role_Member&>(::palm::metasequoia::v1::_Role_Member_default_instance_);
}
inline const ::palm::metasequoia::v1::Role_Member& Role::member() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.Role.member)
  return _internal_member();
}
inline ::palm::metasequoia::v1::Role_Member* Role::unsafe_arena_release_member() {
  // @@protoc_insertion_point(field_unsafe_arena_release:palm.metasequoia.v1.Role.member)
  if (by_case() == kMember) {
    clear_has_by();
    auto* temp = _impl_.by_.member_;
    _impl_.by_.member_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Role::unsafe_arena_set_allocated_member(::palm::metasequoia::v1::Role_Member* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_by();
  if (value) {
    set_has_member();
    _impl_.by_.member_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.Role.member)
}
inline ::palm::metasequoia::v1::Role_Member* Role::_internal_mutable_member() {
  if (by_case() != kMember) {
    clear_by();
    set_has_member();
    _impl_.by_.member_ = CreateMaybeMessage<::palm::metasequoia::v1::Role_Member>(GetArena());
  }
  return _impl_.by_.member_;
}
inline ::palm::metasequoia::v1::Role_Member* Role::mutable_member() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::Role_Member* _msg = _internal_mutable_member();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.Role.member)
  return _msg;
}

inline bool Role::has_by() const {
  return by_case() != BY_NOT_SET;
}
inline void Role::clear_has_by() {
  _impl_._oneof_case_[0] = BY_NOT_SET;
}
inline Role::ByCase Role::by_case() const {
  return Role::ByCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// RbacCanRequest

// int32 user = 1;
inline void RbacCanRequest::clear_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_ = 0;
}
inline ::int32_t RbacCanRequest::user() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.RbacCanRequest.user)
  return _internal_user();
}
inline void RbacCanRequest::set_user(::int32_t value) {
  _internal_set_user(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.RbacCanRequest.user)
}
inline ::int32_t RbacCanRequest::_internal_user() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_;
}
inline void RbacCanRequest::_internal_set_user(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_ = value;
}

// .palm.metasequoia.v1.Resource object = 2;
inline bool RbacCanRequest::has_object() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.object_ != nullptr);
  return value;
}
inline void RbacCanRequest::clear_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.object_ != nullptr) _impl_.object_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::Resource& RbacCanRequest::_internal_object() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::Resource* p = _impl_.object_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::Resource&>(::palm::metasequoia::v1::_Resource_default_instance_);
}
inline const ::palm::metasequoia::v1::Resource& RbacCanRequest::object() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.RbacCanRequest.object)
  return _internal_object();
}
inline void RbacCanRequest::unsafe_arena_set_allocated_object(::palm::metasequoia::v1::Resource* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.object_);
  }
  _impl_.object_ = reinterpret_cast<::palm::metasequoia::v1::Resource*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.RbacCanRequest.object)
}
inline ::palm::metasequoia::v1::Resource* RbacCanRequest::release_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Resource* released = _impl_.object_;
  _impl_.object_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::Resource* RbacCanRequest::unsafe_arena_release_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.RbacCanRequest.object)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Resource* temp = _impl_.object_;
  _impl_.object_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::Resource* RbacCanRequest::_internal_mutable_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.object_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::Resource>(GetArena());
    _impl_.object_ = reinterpret_cast<::palm::metasequoia::v1::Resource*>(p);
  }
  return _impl_.object_;
}
inline ::palm::metasequoia::v1::Resource* RbacCanRequest::mutable_object() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::Resource* _msg = _internal_mutable_object();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.RbacCanRequest.object)
  return _msg;
}
inline void RbacCanRequest::set_allocated_object(::palm::metasequoia::v1::Resource* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::Resource*>(_impl_.object_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::Resource*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.object_ = reinterpret_cast<::palm::metasequoia::v1::Resource*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.RbacCanRequest.object)
}

// string action = 3;
inline void RbacCanRequest::clear_action() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.action_.ClearToEmpty();
}
inline const std::string& RbacCanRequest::action() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.RbacCanRequest.action)
  return _internal_action();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RbacCanRequest::set_action(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.action_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.RbacCanRequest.action)
}
inline std::string* RbacCanRequest::mutable_action() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_action();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.RbacCanRequest.action)
  return _s;
}
inline const std::string& RbacCanRequest::_internal_action() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.action_.Get();
}
inline void RbacCanRequest::_internal_set_action(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.action_.Set(value, GetArena());
}
inline std::string* RbacCanRequest::_internal_mutable_action() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.action_.Mutable( GetArena());
}
inline std::string* RbacCanRequest::release_action() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.RbacCanRequest.action)
  return _impl_.action_.Release();
}
inline void RbacCanRequest::set_allocated_action(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.action_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.action_.IsDefault()) {
          _impl_.action_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.RbacCanRequest.action)
}

// -------------------------------------------------------------------

// RbacHasRequest

// int32 user = 1;
inline void RbacHasRequest::clear_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_ = 0;
}
inline ::int32_t RbacHasRequest::user() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.RbacHasRequest.user)
  return _internal_user();
}
inline void RbacHasRequest::set_user(::int32_t value) {
  _internal_set_user(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.RbacHasRequest.user)
}
inline ::int32_t RbacHasRequest::_internal_user() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_;
}
inline void RbacHasRequest::_internal_set_user(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_ = value;
}

// .palm.metasequoia.v1.Role role = 2;
inline bool RbacHasRequest::has_role() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.role_ != nullptr);
  return value;
}
inline void RbacHasRequest::clear_role() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.role_ != nullptr) _impl_.role_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::Role& RbacHasRequest::_internal_role() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::Role* p = _impl_.role_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::Role&>(::palm::metasequoia::v1::_Role_default_instance_);
}
inline const ::palm::metasequoia::v1::Role& RbacHasRequest::role() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.RbacHasRequest.role)
  return _internal_role();
}
inline void RbacHasRequest::unsafe_arena_set_allocated_role(::palm::metasequoia::v1::Role* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.role_);
  }
  _impl_.role_ = reinterpret_cast<::palm::metasequoia::v1::Role*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.RbacHasRequest.role)
}
inline ::palm::metasequoia::v1::Role* RbacHasRequest::release_role() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Role* released = _impl_.role_;
  _impl_.role_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::Role* RbacHasRequest::unsafe_arena_release_role() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.RbacHasRequest.role)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Role* temp = _impl_.role_;
  _impl_.role_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::Role* RbacHasRequest::_internal_mutable_role() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.role_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::Role>(GetArena());
    _impl_.role_ = reinterpret_cast<::palm::metasequoia::v1::Role*>(p);
  }
  return _impl_.role_;
}
inline ::palm::metasequoia::v1::Role* RbacHasRequest::mutable_role() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::Role* _msg = _internal_mutable_role();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.RbacHasRequest.role)
  return _msg;
}
inline void RbacHasRequest::set_allocated_role(::palm::metasequoia::v1::Role* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::Role*>(_impl_.role_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::Role*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.role_ = reinterpret_cast<::palm::metasequoia::v1::Role*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.RbacHasRequest.role)
}

// -------------------------------------------------------------------

// RbacPermissionItem

// string action = 1;
inline void RbacPermissionItem::clear_action() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.action_.ClearToEmpty();
}
inline const std::string& RbacPermissionItem::action() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.RbacPermissionItem.action)
  return _internal_action();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RbacPermissionItem::set_action(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.action_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.RbacPermissionItem.action)
}
inline std::string* RbacPermissionItem::mutable_action() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_action();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.RbacPermissionItem.action)
  return _s;
}
inline const std::string& RbacPermissionItem::_internal_action() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.action_.Get();
}
inline void RbacPermissionItem::_internal_set_action(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.action_.Set(value, GetArena());
}
inline std::string* RbacPermissionItem::_internal_mutable_action() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.action_.Mutable( GetArena());
}
inline std::string* RbacPermissionItem::release_action() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.RbacPermissionItem.action)
  return _impl_.action_.Release();
}
inline void RbacPermissionItem::set_allocated_action(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.action_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.action_.IsDefault()) {
          _impl_.action_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.RbacPermissionItem.action)
}

// .palm.metasequoia.v1.Resource resource = 2;
inline bool RbacPermissionItem::has_resource() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.resource_ != nullptr);
  return value;
}
inline void RbacPermissionItem::clear_resource() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.resource_ != nullptr) _impl_.resource_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::Resource& RbacPermissionItem::_internal_resource() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::Resource* p = _impl_.resource_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::Resource&>(::palm::metasequoia::v1::_Resource_default_instance_);
}
inline const ::palm::metasequoia::v1::Resource& RbacPermissionItem::resource() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.RbacPermissionItem.resource)
  return _internal_resource();
}
inline void RbacPermissionItem::unsafe_arena_set_allocated_resource(::palm::metasequoia::v1::Resource* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resource_);
  }
  _impl_.resource_ = reinterpret_cast<::palm::metasequoia::v1::Resource*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.RbacPermissionItem.resource)
}
inline ::palm::metasequoia::v1::Resource* RbacPermissionItem::release_resource() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Resource* released = _impl_.resource_;
  _impl_.resource_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::Resource* RbacPermissionItem::unsafe_arena_release_resource() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.RbacPermissionItem.resource)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Resource* temp = _impl_.resource_;
  _impl_.resource_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::Resource* RbacPermissionItem::_internal_mutable_resource() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.resource_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::Resource>(GetArena());
    _impl_.resource_ = reinterpret_cast<::palm::metasequoia::v1::Resource*>(p);
  }
  return _impl_.resource_;
}
inline ::palm::metasequoia::v1::Resource* RbacPermissionItem::mutable_resource() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::Resource* _msg = _internal_mutable_resource();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.RbacPermissionItem.resource)
  return _msg;
}
inline void RbacPermissionItem::set_allocated_resource(::palm::metasequoia::v1::Resource* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::Resource*>(_impl_.resource_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::Resource*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.resource_ = reinterpret_cast<::palm::metasequoia::v1::Resource*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.RbacPermissionItem.resource)
}

// -------------------------------------------------------------------

// RbacPermissionsForUserRequest

// int32 user = 1;
inline void RbacPermissionsForUserRequest::clear_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_ = 0;
}
inline ::int32_t RbacPermissionsForUserRequest::user() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.RbacPermissionsForUserRequest.user)
  return _internal_user();
}
inline void RbacPermissionsForUserRequest::set_user(::int32_t value) {
  _internal_set_user(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.RbacPermissionsForUserRequest.user)
}
inline ::int32_t RbacPermissionsForUserRequest::_internal_user() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_;
}
inline void RbacPermissionsForUserRequest::_internal_set_user(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_ = value;
}

// repeated .palm.metasequoia.v1.RbacPermissionItem permissions = 2;
inline int RbacPermissionsForUserRequest::_internal_permissions_size() const {
  return _internal_permissions().size();
}
inline int RbacPermissionsForUserRequest::permissions_size() const {
  return _internal_permissions_size();
}
inline void RbacPermissionsForUserRequest::clear_permissions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.permissions_.Clear();
}
inline ::palm::metasequoia::v1::RbacPermissionItem* RbacPermissionsForUserRequest::mutable_permissions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.RbacPermissionsForUserRequest.permissions)
  return _internal_mutable_permissions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::RbacPermissionItem>* RbacPermissionsForUserRequest::mutable_permissions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.RbacPermissionsForUserRequest.permissions)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_permissions();
}
inline const ::palm::metasequoia::v1::RbacPermissionItem& RbacPermissionsForUserRequest::permissions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.RbacPermissionsForUserRequest.permissions)
  return _internal_permissions().Get(index);
}
inline ::palm::metasequoia::v1::RbacPermissionItem* RbacPermissionsForUserRequest::add_permissions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::RbacPermissionItem* _add = _internal_mutable_permissions()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.RbacPermissionsForUserRequest.permissions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::RbacPermissionItem>& RbacPermissionsForUserRequest::permissions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.RbacPermissionsForUserRequest.permissions)
  return _internal_permissions();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::RbacPermissionItem>&
RbacPermissionsForUserRequest::_internal_permissions() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.permissions_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::RbacPermissionItem>*
RbacPermissionsForUserRequest::_internal_mutable_permissions() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.permissions_;
}

// -------------------------------------------------------------------

// RbacPermissionsForRoleRequest

// .palm.metasequoia.v1.Role role = 1;
inline bool RbacPermissionsForRoleRequest::has_role() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.role_ != nullptr);
  return value;
}
inline void RbacPermissionsForRoleRequest::clear_role() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.role_ != nullptr) _impl_.role_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::Role& RbacPermissionsForRoleRequest::_internal_role() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::Role* p = _impl_.role_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::Role&>(::palm::metasequoia::v1::_Role_default_instance_);
}
inline const ::palm::metasequoia::v1::Role& RbacPermissionsForRoleRequest::role() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.RbacPermissionsForRoleRequest.role)
  return _internal_role();
}
inline void RbacPermissionsForRoleRequest::unsafe_arena_set_allocated_role(::palm::metasequoia::v1::Role* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.role_);
  }
  _impl_.role_ = reinterpret_cast<::palm::metasequoia::v1::Role*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.RbacPermissionsForRoleRequest.role)
}
inline ::palm::metasequoia::v1::Role* RbacPermissionsForRoleRequest::release_role() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Role* released = _impl_.role_;
  _impl_.role_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::Role* RbacPermissionsForRoleRequest::unsafe_arena_release_role() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.RbacPermissionsForRoleRequest.role)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Role* temp = _impl_.role_;
  _impl_.role_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::Role* RbacPermissionsForRoleRequest::_internal_mutable_role() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.role_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::Role>(GetArena());
    _impl_.role_ = reinterpret_cast<::palm::metasequoia::v1::Role*>(p);
  }
  return _impl_.role_;
}
inline ::palm::metasequoia::v1::Role* RbacPermissionsForRoleRequest::mutable_role() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::Role* _msg = _internal_mutable_role();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.RbacPermissionsForRoleRequest.role)
  return _msg;
}
inline void RbacPermissionsForRoleRequest::set_allocated_role(::palm::metasequoia::v1::Role* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::Role*>(_impl_.role_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::Role*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.role_ = reinterpret_cast<::palm::metasequoia::v1::Role*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.RbacPermissionsForRoleRequest.role)
}

// repeated .palm.metasequoia.v1.RbacPermissionItem permissions = 2;
inline int RbacPermissionsForRoleRequest::_internal_permissions_size() const {
  return _internal_permissions().size();
}
inline int RbacPermissionsForRoleRequest::permissions_size() const {
  return _internal_permissions_size();
}
inline void RbacPermissionsForRoleRequest::clear_permissions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.permissions_.Clear();
}
inline ::palm::metasequoia::v1::RbacPermissionItem* RbacPermissionsForRoleRequest::mutable_permissions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.RbacPermissionsForRoleRequest.permissions)
  return _internal_mutable_permissions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::RbacPermissionItem>* RbacPermissionsForRoleRequest::mutable_permissions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.RbacPermissionsForRoleRequest.permissions)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_permissions();
}
inline const ::palm::metasequoia::v1::RbacPermissionItem& RbacPermissionsForRoleRequest::permissions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.RbacPermissionsForRoleRequest.permissions)
  return _internal_permissions().Get(index);
}
inline ::palm::metasequoia::v1::RbacPermissionItem* RbacPermissionsForRoleRequest::add_permissions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::RbacPermissionItem* _add = _internal_mutable_permissions()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.RbacPermissionsForRoleRequest.permissions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::RbacPermissionItem>& RbacPermissionsForRoleRequest::permissions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.RbacPermissionsForRoleRequest.permissions)
  return _internal_permissions();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::RbacPermissionItem>&
RbacPermissionsForRoleRequest::_internal_permissions() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.permissions_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::RbacPermissionItem>*
RbacPermissionsForRoleRequest::_internal_mutable_permissions() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.permissions_;
}

// -------------------------------------------------------------------

// RbacRolesForUserRequest

// int32 user = 1;
inline void RbacRolesForUserRequest::clear_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_ = 0;
}
inline ::int32_t RbacRolesForUserRequest::user() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.RbacRolesForUserRequest.user)
  return _internal_user();
}
inline void RbacRolesForUserRequest::set_user(::int32_t value) {
  _internal_set_user(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.RbacRolesForUserRequest.user)
}
inline ::int32_t RbacRolesForUserRequest::_internal_user() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_;
}
inline void RbacRolesForUserRequest::_internal_set_user(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_ = value;
}

// repeated .palm.metasequoia.v1.Role roles = 2;
inline int RbacRolesForUserRequest::_internal_roles_size() const {
  return _internal_roles().size();
}
inline int RbacRolesForUserRequest::roles_size() const {
  return _internal_roles_size();
}
inline void RbacRolesForUserRequest::clear_roles() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.roles_.Clear();
}
inline ::palm::metasequoia::v1::Role* RbacRolesForUserRequest::mutable_roles(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.RbacRolesForUserRequest.roles)
  return _internal_mutable_roles()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>* RbacRolesForUserRequest::mutable_roles()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.RbacRolesForUserRequest.roles)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_roles();
}
inline const ::palm::metasequoia::v1::Role& RbacRolesForUserRequest::roles(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.RbacRolesForUserRequest.roles)
  return _internal_roles().Get(index);
}
inline ::palm::metasequoia::v1::Role* RbacRolesForUserRequest::add_roles() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::Role* _add = _internal_mutable_roles()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.RbacRolesForUserRequest.roles)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>& RbacRolesForUserRequest::roles() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.RbacRolesForUserRequest.roles)
  return _internal_roles();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>&
RbacRolesForUserRequest::_internal_roles() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.roles_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>*
RbacRolesForUserRequest::_internal_mutable_roles() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.roles_;
}

// -------------------------------------------------------------------

// RbacRolesResponse

// repeated .palm.metasequoia.v1.Role items = 1;
inline int RbacRolesResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int RbacRolesResponse::items_size() const {
  return _internal_items_size();
}
inline void RbacRolesResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::metasequoia::v1::Role* RbacRolesResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.RbacRolesResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>* RbacRolesResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.RbacRolesResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::metasequoia::v1::Role& RbacRolesResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.RbacRolesResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::metasequoia::v1::Role* RbacRolesResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::Role* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.RbacRolesResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>& RbacRolesResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.RbacRolesResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>&
RbacRolesResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Role>*
RbacRolesResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// RbacPermissionsResponse

// repeated .palm.metasequoia.v1.Permission items = 1;
inline int RbacPermissionsResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int RbacPermissionsResponse::items_size() const {
  return _internal_items_size();
}
inline void RbacPermissionsResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::metasequoia::v1::Permission* RbacPermissionsResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.RbacPermissionsResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Permission>* RbacPermissionsResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.RbacPermissionsResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::metasequoia::v1::Permission& RbacPermissionsResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.RbacPermissionsResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::metasequoia::v1::Permission* RbacPermissionsResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::Permission* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.RbacPermissionsResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Permission>& RbacPermissionsResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.RbacPermissionsResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Permission>&
RbacPermissionsResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::Permission>*
RbacPermissionsResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// SettingSetRequest

// bool global = 1;
inline void SettingSetRequest::clear_global() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.global_ = false;
}
inline bool SettingSetRequest::global() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SettingSetRequest.global)
  return _internal_global();
}
inline void SettingSetRequest::set_global(bool value) {
  _internal_set_global(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SettingSetRequest.global)
}
inline bool SettingSetRequest::_internal_global() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.global_;
}
inline void SettingSetRequest::_internal_set_global(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.global_ = value;
}

// string key = 2;
inline void SettingSetRequest::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& SettingSetRequest::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SettingSetRequest.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SettingSetRequest::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SettingSetRequest.key)
}
inline std::string* SettingSetRequest::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SettingSetRequest.key)
  return _s;
}
inline const std::string& SettingSetRequest::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void SettingSetRequest::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* SettingSetRequest::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* SettingSetRequest::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SettingSetRequest.key)
  return _impl_.key_.Release();
}
inline void SettingSetRequest::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SettingSetRequest.key)
}

// bytes value = 3;
inline void SettingSetRequest::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& SettingSetRequest::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SettingSetRequest.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SettingSetRequest::set_value(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SettingSetRequest.value)
}
inline std::string* SettingSetRequest::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SettingSetRequest.value)
  return _s;
}
inline const std::string& SettingSetRequest::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_.Get();
}
inline void SettingSetRequest::_internal_set_value(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_.Set(value, GetArena());
}
inline std::string* SettingSetRequest::_internal_mutable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* SettingSetRequest::release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SettingSetRequest.value)
  return _impl_.value_.Release();
}
inline void SettingSetRequest::set_allocated_value(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SettingSetRequest.value)
}

// -------------------------------------------------------------------

// SettingGetRequest

// bool global = 1;
inline void SettingGetRequest::clear_global() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.global_ = false;
}
inline bool SettingGetRequest::global() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SettingGetRequest.global)
  return _internal_global();
}
inline void SettingGetRequest::set_global(bool value) {
  _internal_set_global(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SettingGetRequest.global)
}
inline bool SettingGetRequest::_internal_global() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.global_;
}
inline void SettingGetRequest::_internal_set_global(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.global_ = value;
}

// string key = 2;
inline void SettingGetRequest::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& SettingGetRequest::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SettingGetRequest.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SettingGetRequest::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SettingGetRequest.key)
}
inline std::string* SettingGetRequest::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SettingGetRequest.key)
  return _s;
}
inline const std::string& SettingGetRequest::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void SettingGetRequest::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* SettingGetRequest::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* SettingGetRequest::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SettingGetRequest.key)
  return _impl_.key_.Release();
}
inline void SettingGetRequest::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SettingGetRequest.key)
}

// -------------------------------------------------------------------

// SettingByUserRequest

// int32 user = 1;
inline void SettingByUserRequest::clear_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_ = 0;
}
inline ::int32_t SettingByUserRequest::user() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SettingByUserRequest.user)
  return _internal_user();
}
inline void SettingByUserRequest::set_user(::int32_t value) {
  _internal_set_user(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SettingByUserRequest.user)
}
inline ::int32_t SettingByUserRequest::_internal_user() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_;
}
inline void SettingByUserRequest::_internal_set_user(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_ = value;
}

// -------------------------------------------------------------------

// SettingsResponse_Item

// int32 id = 1;
inline void SettingsResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t SettingsResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SettingsResponse.Item.id)
  return _internal_id();
}
inline void SettingsResponse_Item::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SettingsResponse.Item.id)
}
inline ::int32_t SettingsResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SettingsResponse_Item::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// optional int32 user_id = 2;
inline bool SettingsResponse_Item::has_user_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void SettingsResponse_Item::clear_user_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t SettingsResponse_Item::user_id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SettingsResponse.Item.user_id)
  return _internal_user_id();
}
inline void SettingsResponse_Item::set_user_id(::int32_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SettingsResponse.Item.user_id)
}
inline ::int32_t SettingsResponse_Item::_internal_user_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_id_;
}
inline void SettingsResponse_Item::_internal_set_user_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.user_id_ = value;
}

// string key = 3;
inline void SettingsResponse_Item::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& SettingsResponse_Item::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SettingsResponse.Item.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SettingsResponse_Item::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SettingsResponse.Item.key)
}
inline std::string* SettingsResponse_Item::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SettingsResponse.Item.key)
  return _s;
}
inline const std::string& SettingsResponse_Item::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void SettingsResponse_Item::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* SettingsResponse_Item::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* SettingsResponse_Item::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SettingsResponse.Item.key)
  return _impl_.key_.Release();
}
inline void SettingsResponse_Item::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SettingsResponse.Item.key)
}

// bytes value = 4;
inline void SettingsResponse_Item::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& SettingsResponse_Item::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SettingsResponse.Item.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SettingsResponse_Item::set_value(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SettingsResponse.Item.value)
}
inline std::string* SettingsResponse_Item::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SettingsResponse.Item.value)
  return _s;
}
inline const std::string& SettingsResponse_Item::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_.Get();
}
inline void SettingsResponse_Item::_internal_set_value(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_.Set(value, GetArena());
}
inline std::string* SettingsResponse_Item::_internal_mutable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* SettingsResponse_Item::release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SettingsResponse.Item.value)
  return _impl_.value_.Release();
}
inline void SettingsResponse_Item::set_allocated_value(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SettingsResponse.Item.value)
}

// .google.protobuf.Timestamp created_at = 11;
inline bool SettingsResponse_Item::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& SettingsResponse_Item::_internal_created_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.created_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& SettingsResponse_Item::created_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SettingsResponse.Item.created_at)
  return _internal_created_at();
}
inline void SettingsResponse_Item::unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }
  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SettingsResponse.Item.created_at)
}
inline ::google::protobuf::Timestamp* SettingsResponse_Item::release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* SettingsResponse_Item::unsafe_arena_release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SettingsResponse.Item.created_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* SettingsResponse_Item::_internal_mutable_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.created_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_at_;
}
inline ::google::protobuf::Timestamp* SettingsResponse_Item::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SettingsResponse.Item.created_at)
  return _msg;
}
inline void SettingsResponse_Item::set_allocated_created_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SettingsResponse.Item.created_at)
}

// .google.protobuf.Timestamp updated_at = 12;
inline bool SettingsResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& SettingsResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& SettingsResponse_Item::updated_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SettingsResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void SettingsResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SettingsResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* SettingsResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* SettingsResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SettingsResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* SettingsResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* SettingsResponse_Item::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SettingsResponse.Item.updated_at)
  return _msg;
}
inline void SettingsResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SettingsResponse.Item.updated_at)
}

// -------------------------------------------------------------------

// SettingsResponse

// repeated .palm.metasequoia.v1.SettingsResponse.Item items = 1;
inline int SettingsResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int SettingsResponse::items_size() const {
  return _internal_items_size();
}
inline void SettingsResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::metasequoia::v1::SettingsResponse_Item* SettingsResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SettingsResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SettingsResponse_Item>* SettingsResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.SettingsResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::metasequoia::v1::SettingsResponse_Item& SettingsResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SettingsResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::metasequoia::v1::SettingsResponse_Item* SettingsResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::SettingsResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.SettingsResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SettingsResponse_Item>& SettingsResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.SettingsResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SettingsResponse_Item>&
SettingsResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SettingsResponse_Item>*
SettingsResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// LocaleByLangRequest

// string lang = 1;
inline void LocaleByLangRequest::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& LocaleByLangRequest::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LocaleByLangRequest.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LocaleByLangRequest::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.LocaleByLangRequest.lang)
}
inline std::string* LocaleByLangRequest::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LocaleByLangRequest.lang)
  return _s;
}
inline const std::string& LocaleByLangRequest::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void LocaleByLangRequest::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* LocaleByLangRequest::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* LocaleByLangRequest::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.LocaleByLangRequest.lang)
  return _impl_.lang_.Release();
}
inline void LocaleByLangRequest::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.LocaleByLangRequest.lang)
}

// -------------------------------------------------------------------

// LocaleGetRequest

// string lang = 1;
inline void LocaleGetRequest::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& LocaleGetRequest::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LocaleGetRequest.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LocaleGetRequest::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.LocaleGetRequest.lang)
}
inline std::string* LocaleGetRequest::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LocaleGetRequest.lang)
  return _s;
}
inline const std::string& LocaleGetRequest::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void LocaleGetRequest::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* LocaleGetRequest::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* LocaleGetRequest::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.LocaleGetRequest.lang)
  return _impl_.lang_.Release();
}
inline void LocaleGetRequest::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.LocaleGetRequest.lang)
}

// string code = 2;
inline void LocaleGetRequest::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& LocaleGetRequest::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LocaleGetRequest.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LocaleGetRequest::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.LocaleGetRequest.code)
}
inline std::string* LocaleGetRequest::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LocaleGetRequest.code)
  return _s;
}
inline const std::string& LocaleGetRequest::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void LocaleGetRequest::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* LocaleGetRequest::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* LocaleGetRequest::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.LocaleGetRequest.code)
  return _impl_.code_.Release();
}
inline void LocaleGetRequest::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.LocaleGetRequest.code)
}

// -------------------------------------------------------------------

// LocalesResponse_Item

// int32 id = 1;
inline void LocalesResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t LocalesResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LocalesResponse.Item.id)
  return _internal_id();
}
inline void LocalesResponse_Item::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.LocalesResponse.Item.id)
}
inline ::int32_t LocalesResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void LocalesResponse_Item::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string lang = 2;
inline void LocalesResponse_Item::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& LocalesResponse_Item::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LocalesResponse.Item.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LocalesResponse_Item::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.LocalesResponse.Item.lang)
}
inline std::string* LocalesResponse_Item::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LocalesResponse.Item.lang)
  return _s;
}
inline const std::string& LocalesResponse_Item::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void LocalesResponse_Item::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* LocalesResponse_Item::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* LocalesResponse_Item::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.LocalesResponse.Item.lang)
  return _impl_.lang_.Release();
}
inline void LocalesResponse_Item::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.LocalesResponse.Item.lang)
}

// string code = 3;
inline void LocalesResponse_Item::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& LocalesResponse_Item::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LocalesResponse.Item.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LocalesResponse_Item::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.LocalesResponse.Item.code)
}
inline std::string* LocalesResponse_Item::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LocalesResponse.Item.code)
  return _s;
}
inline const std::string& LocalesResponse_Item::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void LocalesResponse_Item::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* LocalesResponse_Item::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* LocalesResponse_Item::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.LocalesResponse.Item.code)
  return _impl_.code_.Release();
}
inline void LocalesResponse_Item::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.LocalesResponse.Item.code)
}

// string message = 4;
inline void LocalesResponse_Item::clear_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& LocalesResponse_Item::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LocalesResponse.Item.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LocalesResponse_Item::set_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.LocalesResponse.Item.message)
}
inline std::string* LocalesResponse_Item::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LocalesResponse.Item.message)
  return _s;
}
inline const std::string& LocalesResponse_Item::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.message_.Get();
}
inline void LocalesResponse_Item::_internal_set_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(value, GetArena());
}
inline std::string* LocalesResponse_Item::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* LocalesResponse_Item::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.LocalesResponse.Item.message)
  return _impl_.message_.Release();
}
inline void LocalesResponse_Item::set_allocated_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.LocalesResponse.Item.message)
}

// .google.protobuf.Timestamp created_at = 11;
inline bool LocalesResponse_Item::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& LocalesResponse_Item::_internal_created_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.created_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& LocalesResponse_Item::created_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LocalesResponse.Item.created_at)
  return _internal_created_at();
}
inline void LocalesResponse_Item::unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }
  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.LocalesResponse.Item.created_at)
}
inline ::google::protobuf::Timestamp* LocalesResponse_Item::release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* LocalesResponse_Item::unsafe_arena_release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.LocalesResponse.Item.created_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* LocalesResponse_Item::_internal_mutable_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.created_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_at_;
}
inline ::google::protobuf::Timestamp* LocalesResponse_Item::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LocalesResponse.Item.created_at)
  return _msg;
}
inline void LocalesResponse_Item::set_allocated_created_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.LocalesResponse.Item.created_at)
}

// .google.protobuf.Timestamp updated_at = 12;
inline bool LocalesResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& LocalesResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& LocalesResponse_Item::updated_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LocalesResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void LocalesResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.LocalesResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* LocalesResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* LocalesResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.LocalesResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* LocalesResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* LocalesResponse_Item::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LocalesResponse.Item.updated_at)
  return _msg;
}
inline void LocalesResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.LocalesResponse.Item.updated_at)
}

// -------------------------------------------------------------------

// LocalesResponse

// repeated .palm.metasequoia.v1.LocalesResponse.Item items = 1;
inline int LocalesResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int LocalesResponse::items_size() const {
  return _internal_items_size();
}
inline void LocalesResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::metasequoia::v1::LocalesResponse_Item* LocalesResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LocalesResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::LocalesResponse_Item>* LocalesResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.LocalesResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::metasequoia::v1::LocalesResponse_Item& LocalesResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LocalesResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::metasequoia::v1::LocalesResponse_Item* LocalesResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::LocalesResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.LocalesResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::LocalesResponse_Item>& LocalesResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.LocalesResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::LocalesResponse_Item>&
LocalesResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::LocalesResponse_Item>*
LocalesResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// LocaleSetRequest

// string lang = 1;
inline void LocaleSetRequest::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& LocaleSetRequest::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LocaleSetRequest.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LocaleSetRequest::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.LocaleSetRequest.lang)
}
inline std::string* LocaleSetRequest::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LocaleSetRequest.lang)
  return _s;
}
inline const std::string& LocaleSetRequest::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void LocaleSetRequest::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* LocaleSetRequest::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* LocaleSetRequest::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.LocaleSetRequest.lang)
  return _impl_.lang_.Release();
}
inline void LocaleSetRequest::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.LocaleSetRequest.lang)
}

// string code = 2;
inline void LocaleSetRequest::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& LocaleSetRequest::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LocaleSetRequest.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LocaleSetRequest::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.LocaleSetRequest.code)
}
inline std::string* LocaleSetRequest::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LocaleSetRequest.code)
  return _s;
}
inline const std::string& LocaleSetRequest::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void LocaleSetRequest::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* LocaleSetRequest::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* LocaleSetRequest::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.LocaleSetRequest.code)
  return _impl_.code_.Release();
}
inline void LocaleSetRequest::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.LocaleSetRequest.code)
}

// string message = 3;
inline void LocaleSetRequest::clear_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& LocaleSetRequest::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LocaleSetRequest.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LocaleSetRequest::set_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.LocaleSetRequest.message)
}
inline std::string* LocaleSetRequest::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LocaleSetRequest.message)
  return _s;
}
inline const std::string& LocaleSetRequest::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.message_.Get();
}
inline void LocaleSetRequest::_internal_set_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(value, GetArena());
}
inline std::string* LocaleSetRequest::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* LocaleSetRequest::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.LocaleSetRequest.message)
  return _impl_.message_.Release();
}
inline void LocaleSetRequest::set_allocated_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.LocaleSetRequest.message)
}

// -------------------------------------------------------------------

// IndexNowProfile

// string key = 1;
inline void IndexNowProfile::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& IndexNowProfile::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.IndexNowProfile.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IndexNowProfile::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.IndexNowProfile.key)
}
inline std::string* IndexNowProfile::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.IndexNowProfile.key)
  return _s;
}
inline const std::string& IndexNowProfile::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void IndexNowProfile::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* IndexNowProfile::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* IndexNowProfile::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.IndexNowProfile.key)
  return _impl_.key_.Release();
}
inline void IndexNowProfile::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.IndexNowProfile.key)
}

// -------------------------------------------------------------------

// IndexNowPingRequest

// string key = 1;
inline void IndexNowPingRequest::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& IndexNowPingRequest::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.IndexNowPingRequest.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IndexNowPingRequest::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.IndexNowPingRequest.key)
}
inline std::string* IndexNowPingRequest::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.IndexNowPingRequest.key)
  return _s;
}
inline const std::string& IndexNowPingRequest::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void IndexNowPingRequest::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* IndexNowPingRequest::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* IndexNowPingRequest::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.IndexNowPingRequest.key)
  return _impl_.key_.Release();
}
inline void IndexNowPingRequest::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.IndexNowPingRequest.key)
}

// string home = 9;
inline void IndexNowPingRequest::clear_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.home_.ClearToEmpty();
}
inline const std::string& IndexNowPingRequest::home() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.IndexNowPingRequest.home)
  return _internal_home();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IndexNowPingRequest::set_home(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.home_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.IndexNowPingRequest.home)
}
inline std::string* IndexNowPingRequest::mutable_home() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_home();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.IndexNowPingRequest.home)
  return _s;
}
inline const std::string& IndexNowPingRequest::_internal_home() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.home_.Get();
}
inline void IndexNowPingRequest::_internal_set_home(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.home_.Set(value, GetArena());
}
inline std::string* IndexNowPingRequest::_internal_mutable_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.home_.Mutable( GetArena());
}
inline std::string* IndexNowPingRequest::release_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.IndexNowPingRequest.home)
  return _impl_.home_.Release();
}
inline void IndexNowPingRequest::set_allocated_home(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.home_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.home_.IsDefault()) {
          _impl_.home_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.IndexNowPingRequest.home)
}

// -------------------------------------------------------------------

// SitemapPingRequest

// string home = 1;
inline void SitemapPingRequest::clear_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.home_.ClearToEmpty();
}
inline const std::string& SitemapPingRequest::home() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SitemapPingRequest.home)
  return _internal_home();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SitemapPingRequest::set_home(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.home_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SitemapPingRequest.home)
}
inline std::string* SitemapPingRequest::mutable_home() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_home();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SitemapPingRequest.home)
  return _s;
}
inline const std::string& SitemapPingRequest::_internal_home() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.home_.Get();
}
inline void SitemapPingRequest::_internal_set_home(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.home_.Set(value, GetArena());
}
inline std::string* SitemapPingRequest::_internal_mutable_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.home_.Mutable( GetArena());
}
inline std::string* SitemapPingRequest::release_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SitemapPingRequest.home)
  return _impl_.home_.Release();
}
inline void SitemapPingRequest::set_allocated_home(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.home_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.home_.IsDefault()) {
          _impl_.home_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SitemapPingRequest.home)
}

// -------------------------------------------------------------------

// SiteMaintenanceModeRequest

// .google.protobuf.Duration ttl = 1;
inline bool SiteMaintenanceModeRequest::has_ttl() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ttl_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& SiteMaintenanceModeRequest::_internal_ttl() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Duration* p = _impl_.ttl_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& SiteMaintenanceModeRequest::ttl() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteMaintenanceModeRequest.ttl)
  return _internal_ttl();
}
inline void SiteMaintenanceModeRequest::unsafe_arena_set_allocated_ttl(::google::protobuf::Duration* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ttl_);
  }
  _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SiteMaintenanceModeRequest.ttl)
}
inline ::google::protobuf::Duration* SiteMaintenanceModeRequest::release_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.ttl_;
  _impl_.ttl_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Duration* SiteMaintenanceModeRequest::unsafe_arena_release_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteMaintenanceModeRequest.ttl)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.ttl_;
  _impl_.ttl_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* SiteMaintenanceModeRequest::_internal_mutable_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ttl_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArena());
    _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.ttl_;
}
inline ::google::protobuf::Duration* SiteMaintenanceModeRequest::mutable_ttl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Duration* _msg = _internal_mutable_ttl();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteMaintenanceModeRequest.ttl)
  return _msg;
}
inline void SiteMaintenanceModeRequest::set_allocated_ttl(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ttl_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteMaintenanceModeRequest.ttl)
}

// string reason = 2;
inline void SiteMaintenanceModeRequest::clear_reason() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& SiteMaintenanceModeRequest::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteMaintenanceModeRequest.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteMaintenanceModeRequest::set_reason(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteMaintenanceModeRequest.reason)
}
inline std::string* SiteMaintenanceModeRequest::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteMaintenanceModeRequest.reason)
  return _s;
}
inline const std::string& SiteMaintenanceModeRequest::_internal_reason() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.reason_.Get();
}
inline void SiteMaintenanceModeRequest::_internal_set_reason(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* SiteMaintenanceModeRequest::_internal_mutable_reason() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* SiteMaintenanceModeRequest::release_reason() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteMaintenanceModeRequest.reason)
  return _impl_.reason_.Release();
}
inline void SiteMaintenanceModeRequest::set_allocated_reason(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reason_.IsDefault()) {
          _impl_.reason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteMaintenanceModeRequest.reason)
}

// -------------------------------------------------------------------

// SiteInstallRequest

// .palm.metasequoia.v1.UserSignUpByEmailRequest user = 1;
inline bool SiteInstallRequest::has_user() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.user_ != nullptr);
  return value;
}
inline void SiteInstallRequest::clear_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.user_ != nullptr) _impl_.user_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::UserSignUpByEmailRequest& SiteInstallRequest::_internal_user() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::UserSignUpByEmailRequest* p = _impl_.user_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::UserSignUpByEmailRequest&>(::palm::metasequoia::v1::_UserSignUpByEmailRequest_default_instance_);
}
inline const ::palm::metasequoia::v1::UserSignUpByEmailRequest& SiteInstallRequest::user() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteInstallRequest.user)
  return _internal_user();
}
inline void SiteInstallRequest::unsafe_arena_set_allocated_user(::palm::metasequoia::v1::UserSignUpByEmailRequest* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.user_);
  }
  _impl_.user_ = reinterpret_cast<::palm::metasequoia::v1::UserSignUpByEmailRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SiteInstallRequest.user)
}
inline ::palm::metasequoia::v1::UserSignUpByEmailRequest* SiteInstallRequest::release_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::UserSignUpByEmailRequest* released = _impl_.user_;
  _impl_.user_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::UserSignUpByEmailRequest* SiteInstallRequest::unsafe_arena_release_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteInstallRequest.user)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::UserSignUpByEmailRequest* temp = _impl_.user_;
  _impl_.user_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::UserSignUpByEmailRequest* SiteInstallRequest::_internal_mutable_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.user_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::UserSignUpByEmailRequest>(GetArena());
    _impl_.user_ = reinterpret_cast<::palm::metasequoia::v1::UserSignUpByEmailRequest*>(p);
  }
  return _impl_.user_;
}
inline ::palm::metasequoia::v1::UserSignUpByEmailRequest* SiteInstallRequest::mutable_user() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::UserSignUpByEmailRequest* _msg = _internal_mutable_user();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteInstallRequest.user)
  return _msg;
}
inline void SiteInstallRequest::set_allocated_user(::palm::metasequoia::v1::UserSignUpByEmailRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::UserSignUpByEmailRequest*>(_impl_.user_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::UserSignUpByEmailRequest*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.user_ = reinterpret_cast<::palm::metasequoia::v1::UserSignUpByEmailRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteInstallRequest.user)
}

// -------------------------------------------------------------------

// TwilioProfile

// string from = 1;
inline void TwilioProfile::clear_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.from_.ClearToEmpty();
}
inline const std::string& TwilioProfile::from() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.TwilioProfile.from)
  return _internal_from();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TwilioProfile::set_from(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.from_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.TwilioProfile.from)
}
inline std::string* TwilioProfile::mutable_from() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.TwilioProfile.from)
  return _s;
}
inline const std::string& TwilioProfile::_internal_from() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.from_.Get();
}
inline void TwilioProfile::_internal_set_from(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.from_.Set(value, GetArena());
}
inline std::string* TwilioProfile::_internal_mutable_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.from_.Mutable( GetArena());
}
inline std::string* TwilioProfile::release_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.TwilioProfile.from)
  return _impl_.from_.Release();
}
inline void TwilioProfile::set_allocated_from(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.from_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.from_.IsDefault()) {
          _impl_.from_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.TwilioProfile.from)
}

// string account_sid = 2;
inline void TwilioProfile::clear_account_sid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.account_sid_.ClearToEmpty();
}
inline const std::string& TwilioProfile::account_sid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.TwilioProfile.account_sid)
  return _internal_account_sid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TwilioProfile::set_account_sid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.account_sid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.TwilioProfile.account_sid)
}
inline std::string* TwilioProfile::mutable_account_sid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_sid();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.TwilioProfile.account_sid)
  return _s;
}
inline const std::string& TwilioProfile::_internal_account_sid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.account_sid_.Get();
}
inline void TwilioProfile::_internal_set_account_sid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.account_sid_.Set(value, GetArena());
}
inline std::string* TwilioProfile::_internal_mutable_account_sid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.account_sid_.Mutable( GetArena());
}
inline std::string* TwilioProfile::release_account_sid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.TwilioProfile.account_sid)
  return _impl_.account_sid_.Release();
}
inline void TwilioProfile::set_allocated_account_sid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.account_sid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.account_sid_.IsDefault()) {
          _impl_.account_sid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.TwilioProfile.account_sid)
}

// string auth_token = 3;
inline void TwilioProfile::clear_auth_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.auth_token_.ClearToEmpty();
}
inline const std::string& TwilioProfile::auth_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.TwilioProfile.auth_token)
  return _internal_auth_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TwilioProfile::set_auth_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.auth_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.TwilioProfile.auth_token)
}
inline std::string* TwilioProfile::mutable_auth_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_auth_token();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.TwilioProfile.auth_token)
  return _s;
}
inline const std::string& TwilioProfile::_internal_auth_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.auth_token_.Get();
}
inline void TwilioProfile::_internal_set_auth_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.auth_token_.Set(value, GetArena());
}
inline std::string* TwilioProfile::_internal_mutable_auth_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.auth_token_.Mutable( GetArena());
}
inline std::string* TwilioProfile::release_auth_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.TwilioProfile.auth_token)
  return _impl_.auth_token_.Release();
}
inline void TwilioProfile::set_allocated_auth_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.auth_token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.auth_token_.IsDefault()) {
          _impl_.auth_token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.TwilioProfile.auth_token)
}

// optional string sms_status_callback = 9;
inline bool TwilioProfile::has_sms_status_callback() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TwilioProfile::clear_sms_status_callback() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sms_status_callback_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TwilioProfile::sms_status_callback() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.TwilioProfile.sms_status_callback)
  return _internal_sms_status_callback();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TwilioProfile::set_sms_status_callback(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.sms_status_callback_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.TwilioProfile.sms_status_callback)
}
inline std::string* TwilioProfile::mutable_sms_status_callback() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sms_status_callback();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.TwilioProfile.sms_status_callback)
  return _s;
}
inline const std::string& TwilioProfile::_internal_sms_status_callback() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sms_status_callback_.Get();
}
inline void TwilioProfile::_internal_set_sms_status_callback(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.sms_status_callback_.Set(value, GetArena());
}
inline std::string* TwilioProfile::_internal_mutable_sms_status_callback() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.sms_status_callback_.Mutable( GetArena());
}
inline std::string* TwilioProfile::release_sms_status_callback() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.TwilioProfile.sms_status_callback)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.sms_status_callback_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.sms_status_callback_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TwilioProfile::set_allocated_sms_status_callback(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.sms_status_callback_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sms_status_callback_.IsDefault()) {
          _impl_.sms_status_callback_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.TwilioProfile.sms_status_callback)
}

// -------------------------------------------------------------------

// SmtpProfile

// string host = 1;
inline void SmtpProfile::clear_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.host_.ClearToEmpty();
}
inline const std::string& SmtpProfile::host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SmtpProfile.host)
  return _internal_host();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SmtpProfile::set_host(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SmtpProfile.host)
}
inline std::string* SmtpProfile::mutable_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_host();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SmtpProfile.host)
  return _s;
}
inline const std::string& SmtpProfile::_internal_host() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.host_.Get();
}
inline void SmtpProfile::_internal_set_host(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.host_.Set(value, GetArena());
}
inline std::string* SmtpProfile::_internal_mutable_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.host_.Mutable( GetArena());
}
inline std::string* SmtpProfile::release_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SmtpProfile.host)
  return _impl_.host_.Release();
}
inline void SmtpProfile::set_allocated_host(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.host_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.host_.IsDefault()) {
          _impl_.host_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SmtpProfile.host)
}

// uint32 port = 2;
inline void SmtpProfile::clear_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.port_ = 0u;
}
inline ::uint32_t SmtpProfile::port() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SmtpProfile.port)
  return _internal_port();
}
inline void SmtpProfile::set_port(::uint32_t value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SmtpProfile.port)
}
inline ::uint32_t SmtpProfile::_internal_port() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.port_;
}
inline void SmtpProfile::_internal_set_port(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.port_ = value;
}

// .palm.metasequoia.v1.SmtpProfile.AuthMethod auth_method = 3;
inline void SmtpProfile::clear_auth_method() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.auth_method_ = 0;
}
inline ::palm::metasequoia::v1::SmtpProfile_AuthMethod SmtpProfile::auth_method() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SmtpProfile.auth_method)
  return _internal_auth_method();
}
inline void SmtpProfile::set_auth_method(::palm::metasequoia::v1::SmtpProfile_AuthMethod value) {
  _internal_set_auth_method(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SmtpProfile.auth_method)
}
inline ::palm::metasequoia::v1::SmtpProfile_AuthMethod SmtpProfile::_internal_auth_method() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::metasequoia::v1::SmtpProfile_AuthMethod>(_impl_.auth_method_);
}
inline void SmtpProfile::_internal_set_auth_method(::palm::metasequoia::v1::SmtpProfile_AuthMethod value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.auth_method_ = value;
}

// repeated .palm.metasequoia.v1.EmailTask.Address cc = 8;
inline int SmtpProfile::_internal_cc_size() const {
  return _internal_cc().size();
}
inline int SmtpProfile::cc_size() const {
  return _internal_cc_size();
}
inline void SmtpProfile::clear_cc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cc_.Clear();
}
inline ::palm::metasequoia::v1::EmailTask_Address* SmtpProfile::mutable_cc(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SmtpProfile.cc)
  return _internal_mutable_cc()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>* SmtpProfile::mutable_cc()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.SmtpProfile.cc)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cc();
}
inline const ::palm::metasequoia::v1::EmailTask_Address& SmtpProfile::cc(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SmtpProfile.cc)
  return _internal_cc().Get(index);
}
inline ::palm::metasequoia::v1::EmailTask_Address* SmtpProfile::add_cc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::EmailTask_Address* _add = _internal_mutable_cc()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.SmtpProfile.cc)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>& SmtpProfile::cc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.SmtpProfile.cc)
  return _internal_cc();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>&
SmtpProfile::_internal_cc() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cc_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>*
SmtpProfile::_internal_mutable_cc() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cc_;
}

// repeated .palm.metasequoia.v1.EmailTask.Address bcc = 9;
inline int SmtpProfile::_internal_bcc_size() const {
  return _internal_bcc().size();
}
inline int SmtpProfile::bcc_size() const {
  return _internal_bcc_size();
}
inline void SmtpProfile::clear_bcc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bcc_.Clear();
}
inline ::palm::metasequoia::v1::EmailTask_Address* SmtpProfile::mutable_bcc(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SmtpProfile.bcc)
  return _internal_mutable_bcc()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>* SmtpProfile::mutable_bcc()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.SmtpProfile.bcc)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_bcc();
}
inline const ::palm::metasequoia::v1::EmailTask_Address& SmtpProfile::bcc(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SmtpProfile.bcc)
  return _internal_bcc().Get(index);
}
inline ::palm::metasequoia::v1::EmailTask_Address* SmtpProfile::add_bcc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::EmailTask_Address* _add = _internal_mutable_bcc()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.SmtpProfile.bcc)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>& SmtpProfile::bcc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.SmtpProfile.bcc)
  return _internal_bcc();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>&
SmtpProfile::_internal_bcc() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bcc_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>*
SmtpProfile::_internal_mutable_bcc() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.bcc_;
}

// .palm.metasequoia.v1.EmailTask.Address from = 11;
inline bool SmtpProfile::has_from() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.from_ != nullptr);
  return value;
}
inline void SmtpProfile::clear_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.from_ != nullptr) _impl_.from_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::EmailTask_Address& SmtpProfile::_internal_from() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::EmailTask_Address* p = _impl_.from_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::EmailTask_Address&>(::palm::metasequoia::v1::_EmailTask_Address_default_instance_);
}
inline const ::palm::metasequoia::v1::EmailTask_Address& SmtpProfile::from() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SmtpProfile.from)
  return _internal_from();
}
inline void SmtpProfile::unsafe_arena_set_allocated_from(::palm::metasequoia::v1::EmailTask_Address* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.from_);
  }
  _impl_.from_ = reinterpret_cast<::palm::metasequoia::v1::EmailTask_Address*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SmtpProfile.from)
}
inline ::palm::metasequoia::v1::EmailTask_Address* SmtpProfile::release_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::EmailTask_Address* released = _impl_.from_;
  _impl_.from_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::EmailTask_Address* SmtpProfile::unsafe_arena_release_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SmtpProfile.from)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::EmailTask_Address* temp = _impl_.from_;
  _impl_.from_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::EmailTask_Address* SmtpProfile::_internal_mutable_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.from_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::EmailTask_Address>(GetArena());
    _impl_.from_ = reinterpret_cast<::palm::metasequoia::v1::EmailTask_Address*>(p);
  }
  return _impl_.from_;
}
inline ::palm::metasequoia::v1::EmailTask_Address* SmtpProfile::mutable_from() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::EmailTask_Address* _msg = _internal_mutable_from();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SmtpProfile.from)
  return _msg;
}
inline void SmtpProfile::set_allocated_from(::palm::metasequoia::v1::EmailTask_Address* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::EmailTask_Address*>(_impl_.from_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::EmailTask_Address*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.from_ = reinterpret_cast<::palm::metasequoia::v1::EmailTask_Address*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SmtpProfile.from)
}

// string password = 12;
inline void SmtpProfile::clear_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& SmtpProfile::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SmtpProfile.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SmtpProfile::set_password(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SmtpProfile.password)
}
inline std::string* SmtpProfile::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SmtpProfile.password)
  return _s;
}
inline const std::string& SmtpProfile::_internal_password() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.password_.Get();
}
inline void SmtpProfile::_internal_set_password(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(value, GetArena());
}
inline std::string* SmtpProfile::_internal_mutable_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* SmtpProfile::release_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SmtpProfile.password)
  return _impl_.password_.Release();
}
inline void SmtpProfile::set_allocated_password(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.password_.IsDefault()) {
          _impl_.password_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SmtpProfile.password)
}

// -------------------------------------------------------------------

// EmailTask_Address

// string name = 1;
inline void EmailTask_Address::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& EmailTask_Address::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.EmailTask.Address.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmailTask_Address::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.EmailTask.Address.name)
}
inline std::string* EmailTask_Address::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.EmailTask.Address.name)
  return _s;
}
inline const std::string& EmailTask_Address::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void EmailTask_Address::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* EmailTask_Address::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* EmailTask_Address::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.EmailTask.Address.name)
  return _impl_.name_.Release();
}
inline void EmailTask_Address::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.EmailTask.Address.name)
}

// string email = 2;
inline void EmailTask_Address::clear_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.ClearToEmpty();
}
inline const std::string& EmailTask_Address::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.EmailTask.Address.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmailTask_Address::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.EmailTask.Address.email)
}
inline std::string* EmailTask_Address::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.EmailTask.Address.email)
  return _s;
}
inline const std::string& EmailTask_Address::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_.Get();
}
inline void EmailTask_Address::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(value, GetArena());
}
inline std::string* EmailTask_Address::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* EmailTask_Address::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.EmailTask.Address.email)
  return _impl_.email_.Release();
}
inline void EmailTask_Address::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.EmailTask.Address.email)
}

// -------------------------------------------------------------------

// EmailTask_Body

// string text = 1;
inline void EmailTask_Body::clear_text() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.text_.ClearToEmpty();
}
inline const std::string& EmailTask_Body::text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.EmailTask.Body.text)
  return _internal_text();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmailTask_Body::set_text(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.EmailTask.Body.text)
}
inline std::string* EmailTask_Body::mutable_text() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_text();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.EmailTask.Body.text)
  return _s;
}
inline const std::string& EmailTask_Body::_internal_text() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.text_.Get();
}
inline void EmailTask_Body::_internal_set_text(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.text_.Set(value, GetArena());
}
inline std::string* EmailTask_Body::_internal_mutable_text() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.text_.Mutable( GetArena());
}
inline std::string* EmailTask_Body::release_text() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.EmailTask.Body.text)
  return _impl_.text_.Release();
}
inline void EmailTask_Body::set_allocated_text(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.text_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.text_.IsDefault()) {
          _impl_.text_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.EmailTask.Body.text)
}

// bool html = 2;
inline void EmailTask_Body::clear_html() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.html_ = false;
}
inline bool EmailTask_Body::html() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.EmailTask.Body.html)
  return _internal_html();
}
inline void EmailTask_Body::set_html(bool value) {
  _internal_set_html(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.EmailTask.Body.html)
}
inline bool EmailTask_Body::_internal_html() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.html_;
}
inline void EmailTask_Body::_internal_set_html(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.html_ = value;
}

// -------------------------------------------------------------------

// EmailTask_Attachment

// string name = 1;
inline void EmailTask_Attachment::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& EmailTask_Attachment::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.EmailTask.Attachment.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmailTask_Attachment::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.EmailTask.Attachment.name)
}
inline std::string* EmailTask_Attachment::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.EmailTask.Attachment.name)
  return _s;
}
inline const std::string& EmailTask_Attachment::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void EmailTask_Attachment::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* EmailTask_Attachment::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* EmailTask_Attachment::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.EmailTask.Attachment.name)
  return _impl_.name_.Release();
}
inline void EmailTask_Attachment::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.EmailTask.Attachment.name)
}

// bytes payload = 2;
inline void EmailTask_Attachment::clear_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.payload_.ClearToEmpty();
}
inline const std::string& EmailTask_Attachment::payload() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.EmailTask.Attachment.payload)
  return _internal_payload();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmailTask_Attachment::set_payload(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.payload_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.EmailTask.Attachment.payload)
}
inline std::string* EmailTask_Attachment::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.EmailTask.Attachment.payload)
  return _s;
}
inline const std::string& EmailTask_Attachment::_internal_payload() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.payload_.Get();
}
inline void EmailTask_Attachment::_internal_set_payload(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.payload_.Set(value, GetArena());
}
inline std::string* EmailTask_Attachment::_internal_mutable_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.payload_.Mutable( GetArena());
}
inline std::string* EmailTask_Attachment::release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.EmailTask.Attachment.payload)
  return _impl_.payload_.Release();
}
inline void EmailTask_Attachment::set_allocated_payload(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.payload_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payload_.IsDefault()) {
          _impl_.payload_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.EmailTask.Attachment.payload)
}

// -------------------------------------------------------------------

// EmailTask

// .palm.metasequoia.v1.EmailTask.Address to = 1;
inline bool EmailTask::has_to() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.to_ != nullptr);
  return value;
}
inline void EmailTask::clear_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.to_ != nullptr) _impl_.to_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::EmailTask_Address& EmailTask::_internal_to() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::EmailTask_Address* p = _impl_.to_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::EmailTask_Address&>(::palm::metasequoia::v1::_EmailTask_Address_default_instance_);
}
inline const ::palm::metasequoia::v1::EmailTask_Address& EmailTask::to() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.EmailTask.to)
  return _internal_to();
}
inline void EmailTask::unsafe_arena_set_allocated_to(::palm::metasequoia::v1::EmailTask_Address* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.to_);
  }
  _impl_.to_ = reinterpret_cast<::palm::metasequoia::v1::EmailTask_Address*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.EmailTask.to)
}
inline ::palm::metasequoia::v1::EmailTask_Address* EmailTask::release_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::EmailTask_Address* released = _impl_.to_;
  _impl_.to_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::EmailTask_Address* EmailTask::unsafe_arena_release_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.EmailTask.to)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::EmailTask_Address* temp = _impl_.to_;
  _impl_.to_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::EmailTask_Address* EmailTask::_internal_mutable_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.to_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::EmailTask_Address>(GetArena());
    _impl_.to_ = reinterpret_cast<::palm::metasequoia::v1::EmailTask_Address*>(p);
  }
  return _impl_.to_;
}
inline ::palm::metasequoia::v1::EmailTask_Address* EmailTask::mutable_to() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::EmailTask_Address* _msg = _internal_mutable_to();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.EmailTask.to)
  return _msg;
}
inline void EmailTask::set_allocated_to(::palm::metasequoia::v1::EmailTask_Address* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::EmailTask_Address*>(_impl_.to_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::EmailTask_Address*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.to_ = reinterpret_cast<::palm::metasequoia::v1::EmailTask_Address*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.EmailTask.to)
}

// repeated .palm.metasequoia.v1.EmailTask.Address cc = 2;
inline int EmailTask::_internal_cc_size() const {
  return _internal_cc().size();
}
inline int EmailTask::cc_size() const {
  return _internal_cc_size();
}
inline void EmailTask::clear_cc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cc_.Clear();
}
inline ::palm::metasequoia::v1::EmailTask_Address* EmailTask::mutable_cc(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.EmailTask.cc)
  return _internal_mutable_cc()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>* EmailTask::mutable_cc()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.EmailTask.cc)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cc();
}
inline const ::palm::metasequoia::v1::EmailTask_Address& EmailTask::cc(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.EmailTask.cc)
  return _internal_cc().Get(index);
}
inline ::palm::metasequoia::v1::EmailTask_Address* EmailTask::add_cc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::EmailTask_Address* _add = _internal_mutable_cc()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.EmailTask.cc)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>& EmailTask::cc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.EmailTask.cc)
  return _internal_cc();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>&
EmailTask::_internal_cc() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cc_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>*
EmailTask::_internal_mutable_cc() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cc_;
}

// repeated .palm.metasequoia.v1.EmailTask.Address bcc = 3;
inline int EmailTask::_internal_bcc_size() const {
  return _internal_bcc().size();
}
inline int EmailTask::bcc_size() const {
  return _internal_bcc_size();
}
inline void EmailTask::clear_bcc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bcc_.Clear();
}
inline ::palm::metasequoia::v1::EmailTask_Address* EmailTask::mutable_bcc(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.EmailTask.bcc)
  return _internal_mutable_bcc()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>* EmailTask::mutable_bcc()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.EmailTask.bcc)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_bcc();
}
inline const ::palm::metasequoia::v1::EmailTask_Address& EmailTask::bcc(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.EmailTask.bcc)
  return _internal_bcc().Get(index);
}
inline ::palm::metasequoia::v1::EmailTask_Address* EmailTask::add_bcc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::EmailTask_Address* _add = _internal_mutable_bcc()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.EmailTask.bcc)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>& EmailTask::bcc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.EmailTask.bcc)
  return _internal_bcc();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>&
EmailTask::_internal_bcc() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bcc_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Address>*
EmailTask::_internal_mutable_bcc() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.bcc_;
}

// string subject = 11;
inline void EmailTask::clear_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subject_.ClearToEmpty();
}
inline const std::string& EmailTask::subject() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.EmailTask.subject)
  return _internal_subject();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmailTask::set_subject(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subject_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.EmailTask.subject)
}
inline std::string* EmailTask::mutable_subject() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subject();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.EmailTask.subject)
  return _s;
}
inline const std::string& EmailTask::_internal_subject() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subject_.Get();
}
inline void EmailTask::_internal_set_subject(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subject_.Set(value, GetArena());
}
inline std::string* EmailTask::_internal_mutable_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.subject_.Mutable( GetArena());
}
inline std::string* EmailTask::release_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.EmailTask.subject)
  return _impl_.subject_.Release();
}
inline void EmailTask::set_allocated_subject(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subject_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subject_.IsDefault()) {
          _impl_.subject_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.EmailTask.subject)
}

// .palm.metasequoia.v1.EmailTask.Body body = 12;
inline bool EmailTask::has_body() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.body_ != nullptr);
  return value;
}
inline void EmailTask::clear_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.body_ != nullptr) _impl_.body_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::palm::metasequoia::v1::EmailTask_Body& EmailTask::_internal_body() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::EmailTask_Body* p = _impl_.body_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::EmailTask_Body&>(::palm::metasequoia::v1::_EmailTask_Body_default_instance_);
}
inline const ::palm::metasequoia::v1::EmailTask_Body& EmailTask::body() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.EmailTask.body)
  return _internal_body();
}
inline void EmailTask::unsafe_arena_set_allocated_body(::palm::metasequoia::v1::EmailTask_Body* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.body_);
  }
  _impl_.body_ = reinterpret_cast<::palm::metasequoia::v1::EmailTask_Body*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.EmailTask.body)
}
inline ::palm::metasequoia::v1::EmailTask_Body* EmailTask::release_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::palm::metasequoia::v1::EmailTask_Body* released = _impl_.body_;
  _impl_.body_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::EmailTask_Body* EmailTask::unsafe_arena_release_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.EmailTask.body)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::palm::metasequoia::v1::EmailTask_Body* temp = _impl_.body_;
  _impl_.body_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::EmailTask_Body* EmailTask::_internal_mutable_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.body_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::EmailTask_Body>(GetArena());
    _impl_.body_ = reinterpret_cast<::palm::metasequoia::v1::EmailTask_Body*>(p);
  }
  return _impl_.body_;
}
inline ::palm::metasequoia::v1::EmailTask_Body* EmailTask::mutable_body() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::EmailTask_Body* _msg = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.EmailTask.body)
  return _msg;
}
inline void EmailTask::set_allocated_body(::palm::metasequoia::v1::EmailTask_Body* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::EmailTask_Body*>(_impl_.body_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::EmailTask_Body*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.body_ = reinterpret_cast<::palm::metasequoia::v1::EmailTask_Body*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.EmailTask.body)
}

// repeated .palm.metasequoia.v1.EmailTask.Attachment attachments = 13;
inline int EmailTask::_internal_attachments_size() const {
  return _internal_attachments().size();
}
inline int EmailTask::attachments_size() const {
  return _internal_attachments_size();
}
inline void EmailTask::clear_attachments() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.attachments_.Clear();
}
inline ::palm::metasequoia::v1::EmailTask_Attachment* EmailTask::mutable_attachments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.EmailTask.attachments)
  return _internal_mutable_attachments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Attachment>* EmailTask::mutable_attachments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.EmailTask.attachments)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_attachments();
}
inline const ::palm::metasequoia::v1::EmailTask_Attachment& EmailTask::attachments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.EmailTask.attachments)
  return _internal_attachments().Get(index);
}
inline ::palm::metasequoia::v1::EmailTask_Attachment* EmailTask::add_attachments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::EmailTask_Attachment* _add = _internal_mutable_attachments()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.EmailTask.attachments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Attachment>& EmailTask::attachments() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.EmailTask.attachments)
  return _internal_attachments();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Attachment>&
EmailTask::_internal_attachments() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.attachments_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::EmailTask_Attachment>*
EmailTask::_internal_mutable_attachments() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.attachments_;
}

// -------------------------------------------------------------------

// SiteTwilioPingRequest

// string to = 1;
inline void SiteTwilioPingRequest::clear_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.to_.ClearToEmpty();
}
inline const std::string& SiteTwilioPingRequest::to() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteTwilioPingRequest.to)
  return _internal_to();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteTwilioPingRequest::set_to(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.to_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteTwilioPingRequest.to)
}
inline std::string* SiteTwilioPingRequest::mutable_to() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_to();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteTwilioPingRequest.to)
  return _s;
}
inline const std::string& SiteTwilioPingRequest::_internal_to() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.to_.Get();
}
inline void SiteTwilioPingRequest::_internal_set_to(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.to_.Set(value, GetArena());
}
inline std::string* SiteTwilioPingRequest::_internal_mutable_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.to_.Mutable( GetArena());
}
inline std::string* SiteTwilioPingRequest::release_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteTwilioPingRequest.to)
  return _impl_.to_.Release();
}
inline void SiteTwilioPingRequest::set_allocated_to(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.to_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.to_.IsDefault()) {
          _impl_.to_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteTwilioPingRequest.to)
}

// string message = 2;
inline void SiteTwilioPingRequest::clear_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& SiteTwilioPingRequest::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteTwilioPingRequest.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteTwilioPingRequest::set_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteTwilioPingRequest.message)
}
inline std::string* SiteTwilioPingRequest::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteTwilioPingRequest.message)
  return _s;
}
inline const std::string& SiteTwilioPingRequest::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.message_.Get();
}
inline void SiteTwilioPingRequest::_internal_set_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(value, GetArena());
}
inline std::string* SiteTwilioPingRequest::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* SiteTwilioPingRequest::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteTwilioPingRequest.message)
  return _impl_.message_.Release();
}
inline void SiteTwilioPingRequest::set_allocated_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteTwilioPingRequest.message)
}

// .palm.metasequoia.v1.TwilioProfile profile = 9;
inline bool SiteTwilioPingRequest::has_profile() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.profile_ != nullptr);
  return value;
}
inline void SiteTwilioPingRequest::clear_profile() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.profile_ != nullptr) _impl_.profile_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::TwilioProfile& SiteTwilioPingRequest::_internal_profile() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::TwilioProfile* p = _impl_.profile_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::TwilioProfile&>(::palm::metasequoia::v1::_TwilioProfile_default_instance_);
}
inline const ::palm::metasequoia::v1::TwilioProfile& SiteTwilioPingRequest::profile() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteTwilioPingRequest.profile)
  return _internal_profile();
}
inline void SiteTwilioPingRequest::unsafe_arena_set_allocated_profile(::palm::metasequoia::v1::TwilioProfile* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.profile_);
  }
  _impl_.profile_ = reinterpret_cast<::palm::metasequoia::v1::TwilioProfile*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SiteTwilioPingRequest.profile)
}
inline ::palm::metasequoia::v1::TwilioProfile* SiteTwilioPingRequest::release_profile() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::TwilioProfile* released = _impl_.profile_;
  _impl_.profile_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::TwilioProfile* SiteTwilioPingRequest::unsafe_arena_release_profile() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteTwilioPingRequest.profile)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::TwilioProfile* temp = _impl_.profile_;
  _impl_.profile_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::TwilioProfile* SiteTwilioPingRequest::_internal_mutable_profile() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.profile_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::TwilioProfile>(GetArena());
    _impl_.profile_ = reinterpret_cast<::palm::metasequoia::v1::TwilioProfile*>(p);
  }
  return _impl_.profile_;
}
inline ::palm::metasequoia::v1::TwilioProfile* SiteTwilioPingRequest::mutable_profile() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::TwilioProfile* _msg = _internal_mutable_profile();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteTwilioPingRequest.profile)
  return _msg;
}
inline void SiteTwilioPingRequest::set_allocated_profile(::palm::metasequoia::v1::TwilioProfile* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::TwilioProfile*>(_impl_.profile_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::TwilioProfile*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.profile_ = reinterpret_cast<::palm::metasequoia::v1::TwilioProfile*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteTwilioPingRequest.profile)
}

// -------------------------------------------------------------------

// SiteSmtpPingRequest

// .palm.metasequoia.v1.EmailTask.Address to = 1;
inline bool SiteSmtpPingRequest::has_to() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.to_ != nullptr);
  return value;
}
inline void SiteSmtpPingRequest::clear_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.to_ != nullptr) _impl_.to_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::EmailTask_Address& SiteSmtpPingRequest::_internal_to() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::EmailTask_Address* p = _impl_.to_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::EmailTask_Address&>(::palm::metasequoia::v1::_EmailTask_Address_default_instance_);
}
inline const ::palm::metasequoia::v1::EmailTask_Address& SiteSmtpPingRequest::to() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteSmtpPingRequest.to)
  return _internal_to();
}
inline void SiteSmtpPingRequest::unsafe_arena_set_allocated_to(::palm::metasequoia::v1::EmailTask_Address* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.to_);
  }
  _impl_.to_ = reinterpret_cast<::palm::metasequoia::v1::EmailTask_Address*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SiteSmtpPingRequest.to)
}
inline ::palm::metasequoia::v1::EmailTask_Address* SiteSmtpPingRequest::release_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::EmailTask_Address* released = _impl_.to_;
  _impl_.to_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::EmailTask_Address* SiteSmtpPingRequest::unsafe_arena_release_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteSmtpPingRequest.to)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::EmailTask_Address* temp = _impl_.to_;
  _impl_.to_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::EmailTask_Address* SiteSmtpPingRequest::_internal_mutable_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.to_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::EmailTask_Address>(GetArena());
    _impl_.to_ = reinterpret_cast<::palm::metasequoia::v1::EmailTask_Address*>(p);
  }
  return _impl_.to_;
}
inline ::palm::metasequoia::v1::EmailTask_Address* SiteSmtpPingRequest::mutable_to() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::EmailTask_Address* _msg = _internal_mutable_to();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteSmtpPingRequest.to)
  return _msg;
}
inline void SiteSmtpPingRequest::set_allocated_to(::palm::metasequoia::v1::EmailTask_Address* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::EmailTask_Address*>(_impl_.to_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::EmailTask_Address*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.to_ = reinterpret_cast<::palm::metasequoia::v1::EmailTask_Address*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteSmtpPingRequest.to)
}

// string subject = 2;
inline void SiteSmtpPingRequest::clear_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subject_.ClearToEmpty();
}
inline const std::string& SiteSmtpPingRequest::subject() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteSmtpPingRequest.subject)
  return _internal_subject();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteSmtpPingRequest::set_subject(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subject_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteSmtpPingRequest.subject)
}
inline std::string* SiteSmtpPingRequest::mutable_subject() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subject();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteSmtpPingRequest.subject)
  return _s;
}
inline const std::string& SiteSmtpPingRequest::_internal_subject() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subject_.Get();
}
inline void SiteSmtpPingRequest::_internal_set_subject(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subject_.Set(value, GetArena());
}
inline std::string* SiteSmtpPingRequest::_internal_mutable_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.subject_.Mutable( GetArena());
}
inline std::string* SiteSmtpPingRequest::release_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteSmtpPingRequest.subject)
  return _impl_.subject_.Release();
}
inline void SiteSmtpPingRequest::set_allocated_subject(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subject_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subject_.IsDefault()) {
          _impl_.subject_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteSmtpPingRequest.subject)
}

// string content = 3;
inline void SiteSmtpPingRequest::clear_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_.ClearToEmpty();
}
inline const std::string& SiteSmtpPingRequest::content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteSmtpPingRequest.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteSmtpPingRequest::set_content(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteSmtpPingRequest.content)
}
inline std::string* SiteSmtpPingRequest::mutable_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteSmtpPingRequest.content)
  return _s;
}
inline const std::string& SiteSmtpPingRequest::_internal_content() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.content_.Get();
}
inline void SiteSmtpPingRequest::_internal_set_content(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_.Set(value, GetArena());
}
inline std::string* SiteSmtpPingRequest::_internal_mutable_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.content_.Mutable( GetArena());
}
inline std::string* SiteSmtpPingRequest::release_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteSmtpPingRequest.content)
  return _impl_.content_.Release();
}
inline void SiteSmtpPingRequest::set_allocated_content(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.content_.IsDefault()) {
          _impl_.content_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteSmtpPingRequest.content)
}

// .palm.metasequoia.v1.SmtpProfile profile = 9;
inline bool SiteSmtpPingRequest::has_profile() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.profile_ != nullptr);
  return value;
}
inline void SiteSmtpPingRequest::clear_profile() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.profile_ != nullptr) _impl_.profile_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::palm::metasequoia::v1::SmtpProfile& SiteSmtpPingRequest::_internal_profile() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::SmtpProfile* p = _impl_.profile_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::SmtpProfile&>(::palm::metasequoia::v1::_SmtpProfile_default_instance_);
}
inline const ::palm::metasequoia::v1::SmtpProfile& SiteSmtpPingRequest::profile() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteSmtpPingRequest.profile)
  return _internal_profile();
}
inline void SiteSmtpPingRequest::unsafe_arena_set_allocated_profile(::palm::metasequoia::v1::SmtpProfile* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.profile_);
  }
  _impl_.profile_ = reinterpret_cast<::palm::metasequoia::v1::SmtpProfile*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SiteSmtpPingRequest.profile)
}
inline ::palm::metasequoia::v1::SmtpProfile* SiteSmtpPingRequest::release_profile() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::palm::metasequoia::v1::SmtpProfile* released = _impl_.profile_;
  _impl_.profile_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::SmtpProfile* SiteSmtpPingRequest::unsafe_arena_release_profile() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteSmtpPingRequest.profile)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::palm::metasequoia::v1::SmtpProfile* temp = _impl_.profile_;
  _impl_.profile_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::SmtpProfile* SiteSmtpPingRequest::_internal_mutable_profile() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.profile_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::SmtpProfile>(GetArena());
    _impl_.profile_ = reinterpret_cast<::palm::metasequoia::v1::SmtpProfile*>(p);
  }
  return _impl_.profile_;
}
inline ::palm::metasequoia::v1::SmtpProfile* SiteSmtpPingRequest::mutable_profile() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::SmtpProfile* _msg = _internal_mutable_profile();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteSmtpPingRequest.profile)
  return _msg;
}
inline void SiteSmtpPingRequest::set_allocated_profile(::palm::metasequoia::v1::SmtpProfile* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::SmtpProfile*>(_impl_.profile_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::SmtpProfile*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.profile_ = reinterpret_cast<::palm::metasequoia::v1::SmtpProfile*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteSmtpPingRequest.profile)
}

// -------------------------------------------------------------------

// SiteSetLogoRequest

// string url = 1;
inline void SiteSetLogoRequest::clear_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& SiteSetLogoRequest::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteSetLogoRequest.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteSetLogoRequest::set_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteSetLogoRequest.url)
}
inline std::string* SiteSetLogoRequest::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteSetLogoRequest.url)
  return _s;
}
inline const std::string& SiteSetLogoRequest::_internal_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.url_.Get();
}
inline void SiteSetLogoRequest::_internal_set_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(value, GetArena());
}
inline std::string* SiteSetLogoRequest::_internal_mutable_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* SiteSetLogoRequest::release_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteSetLogoRequest.url)
  return _impl_.url_.Release();
}
inline void SiteSetLogoRequest::set_allocated_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteSetLogoRequest.url)
}

// -------------------------------------------------------------------

// SiteSetCopyrightRequest

// string payload = 1;
inline void SiteSetCopyrightRequest::clear_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.payload_.ClearToEmpty();
}
inline const std::string& SiteSetCopyrightRequest::payload() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteSetCopyrightRequest.payload)
  return _internal_payload();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteSetCopyrightRequest::set_payload(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.payload_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteSetCopyrightRequest.payload)
}
inline std::string* SiteSetCopyrightRequest::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteSetCopyrightRequest.payload)
  return _s;
}
inline const std::string& SiteSetCopyrightRequest::_internal_payload() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.payload_.Get();
}
inline void SiteSetCopyrightRequest::_internal_set_payload(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.payload_.Set(value, GetArena());
}
inline std::string* SiteSetCopyrightRequest::_internal_mutable_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.payload_.Mutable( GetArena());
}
inline std::string* SiteSetCopyrightRequest::release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteSetCopyrightRequest.payload)
  return _impl_.payload_.Release();
}
inline void SiteSetCopyrightRequest::set_allocated_payload(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.payload_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payload_.IsDefault()) {
          _impl_.payload_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteSetCopyrightRequest.payload)
}

// -------------------------------------------------------------------

// SiteSetKeywordsRequest

// repeated string items = 1;
inline int SiteSetKeywordsRequest::_internal_items_size() const {
  return _internal_items().size();
}
inline int SiteSetKeywordsRequest::items_size() const {
  return _internal_items_size();
}
inline void SiteSetKeywordsRequest::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline std::string* SiteSetKeywordsRequest::add_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add_mutable:palm.metasequoia.v1.SiteSetKeywordsRequest.items)
  return _s;
}
inline const std::string& SiteSetKeywordsRequest::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteSetKeywordsRequest.items)
  return _internal_items().Get(index);
}
inline std::string* SiteSetKeywordsRequest::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteSetKeywordsRequest.items)
  return _internal_mutable_items()->Mutable(index);
}
inline void SiteSetKeywordsRequest::set_items(int index, const std::string& value) {
  _internal_mutable_items()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteSetKeywordsRequest.items)
}
inline void SiteSetKeywordsRequest::set_items(int index, std::string&& value) {
  _internal_mutable_items()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteSetKeywordsRequest.items)
}
inline void SiteSetKeywordsRequest::set_items(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_items()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:palm.metasequoia.v1.SiteSetKeywordsRequest.items)
}
inline void SiteSetKeywordsRequest::set_items(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_items()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:palm.metasequoia.v1.SiteSetKeywordsRequest.items)
}
inline void SiteSetKeywordsRequest::set_items(int index, absl::string_view value) {
  _internal_mutable_items()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:palm.metasequoia.v1.SiteSetKeywordsRequest.items)
}
inline void SiteSetKeywordsRequest::add_items(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_items()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.SiteSetKeywordsRequest.items)
}
inline void SiteSetKeywordsRequest::add_items(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_items()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.SiteSetKeywordsRequest.items)
}
inline void SiteSetKeywordsRequest::add_items(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_items()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:palm.metasequoia.v1.SiteSetKeywordsRequest.items)
}
inline void SiteSetKeywordsRequest::add_items(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_items()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:palm.metasequoia.v1.SiteSetKeywordsRequest.items)
}
inline void SiteSetKeywordsRequest::add_items(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_items()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:palm.metasequoia.v1.SiteSetKeywordsRequest.items)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteSetKeywordsRequest::items() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.SiteSetKeywordsRequest.items)
  return _internal_items();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteSetKeywordsRequest::mutable_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.SiteSetKeywordsRequest.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteSetKeywordsRequest::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteSetKeywordsRequest::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// SiteSetInfoRequest

// string lang = 1;
inline void SiteSetInfoRequest::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& SiteSetInfoRequest::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteSetInfoRequest.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteSetInfoRequest::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteSetInfoRequest.lang)
}
inline std::string* SiteSetInfoRequest::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteSetInfoRequest.lang)
  return _s;
}
inline const std::string& SiteSetInfoRequest::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void SiteSetInfoRequest::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* SiteSetInfoRequest::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* SiteSetInfoRequest::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteSetInfoRequest.lang)
  return _impl_.lang_.Release();
}
inline void SiteSetInfoRequest::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteSetInfoRequest.lang)
}

// string title = 11;
inline void SiteSetInfoRequest::clear_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& SiteSetInfoRequest::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteSetInfoRequest.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteSetInfoRequest::set_title(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteSetInfoRequest.title)
}
inline std::string* SiteSetInfoRequest::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteSetInfoRequest.title)
  return _s;
}
inline const std::string& SiteSetInfoRequest::_internal_title() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.title_.Get();
}
inline void SiteSetInfoRequest::_internal_set_title(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(value, GetArena());
}
inline std::string* SiteSetInfoRequest::_internal_mutable_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* SiteSetInfoRequest::release_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteSetInfoRequest.title)
  return _impl_.title_.Release();
}
inline void SiteSetInfoRequest::set_allocated_title(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteSetInfoRequest.title)
}

// string subhead = 12;
inline void SiteSetInfoRequest::clear_subhead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subhead_.ClearToEmpty();
}
inline const std::string& SiteSetInfoRequest::subhead() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteSetInfoRequest.subhead)
  return _internal_subhead();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteSetInfoRequest::set_subhead(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subhead_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteSetInfoRequest.subhead)
}
inline std::string* SiteSetInfoRequest::mutable_subhead() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subhead();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteSetInfoRequest.subhead)
  return _s;
}
inline const std::string& SiteSetInfoRequest::_internal_subhead() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subhead_.Get();
}
inline void SiteSetInfoRequest::_internal_set_subhead(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subhead_.Set(value, GetArena());
}
inline std::string* SiteSetInfoRequest::_internal_mutable_subhead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.subhead_.Mutable( GetArena());
}
inline std::string* SiteSetInfoRequest::release_subhead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteSetInfoRequest.subhead)
  return _impl_.subhead_.Release();
}
inline void SiteSetInfoRequest::set_allocated_subhead(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subhead_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subhead_.IsDefault()) {
          _impl_.subhead_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteSetInfoRequest.subhead)
}

// string description = 13;
inline void SiteSetInfoRequest::clear_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& SiteSetInfoRequest::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteSetInfoRequest.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteSetInfoRequest::set_description(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteSetInfoRequest.description)
}
inline std::string* SiteSetInfoRequest::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteSetInfoRequest.description)
  return _s;
}
inline const std::string& SiteSetInfoRequest::_internal_description() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.description_.Get();
}
inline void SiteSetInfoRequest::_internal_set_description(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.description_.Set(value, GetArena());
}
inline std::string* SiteSetInfoRequest::_internal_mutable_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* SiteSetInfoRequest::release_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteSetInfoRequest.description)
  return _impl_.description_.Release();
}
inline void SiteSetInfoRequest::set_allocated_description(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteSetInfoRequest.description)
}

// -------------------------------------------------------------------

// SiteLayoutResponse_Author

// string name = 1;
inline void SiteLayoutResponse_Author::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse_Author::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteLayoutResponse.Author.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse_Author::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteLayoutResponse.Author.name)
}
inline std::string* SiteLayoutResponse_Author::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteLayoutResponse.Author.name)
  return _s;
}
inline const std::string& SiteLayoutResponse_Author::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void SiteLayoutResponse_Author::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse_Author::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse_Author::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteLayoutResponse.Author.name)
  return _impl_.name_.Release();
}
inline void SiteLayoutResponse_Author::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteLayoutResponse.Author.name)
}

// string email = 2;
inline void SiteLayoutResponse_Author::clear_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse_Author::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteLayoutResponse.Author.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse_Author::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteLayoutResponse.Author.email)
}
inline std::string* SiteLayoutResponse_Author::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteLayoutResponse.Author.email)
  return _s;
}
inline const std::string& SiteLayoutResponse_Author::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_.Get();
}
inline void SiteLayoutResponse_Author::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse_Author::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse_Author::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteLayoutResponse.Author.email)
  return _impl_.email_.Release();
}
inline void SiteLayoutResponse_Author::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteLayoutResponse.Author.email)
}

// -------------------------------------------------------------------

// SiteLayoutResponse

// string title = 1;
inline void SiteLayoutResponse::clear_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteLayoutResponse.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse::set_title(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteLayoutResponse.title)
}
inline std::string* SiteLayoutResponse::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteLayoutResponse.title)
  return _s;
}
inline const std::string& SiteLayoutResponse::_internal_title() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.title_.Get();
}
inline void SiteLayoutResponse::_internal_set_title(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse::_internal_mutable_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse::release_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteLayoutResponse.title)
  return _impl_.title_.Release();
}
inline void SiteLayoutResponse::set_allocated_title(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteLayoutResponse.title)
}

// string subhead = 2;
inline void SiteLayoutResponse::clear_subhead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subhead_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse::subhead() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteLayoutResponse.subhead)
  return _internal_subhead();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse::set_subhead(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subhead_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteLayoutResponse.subhead)
}
inline std::string* SiteLayoutResponse::mutable_subhead() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subhead();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteLayoutResponse.subhead)
  return _s;
}
inline const std::string& SiteLayoutResponse::_internal_subhead() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subhead_.Get();
}
inline void SiteLayoutResponse::_internal_set_subhead(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subhead_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse::_internal_mutable_subhead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.subhead_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse::release_subhead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteLayoutResponse.subhead)
  return _impl_.subhead_.Release();
}
inline void SiteLayoutResponse::set_allocated_subhead(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subhead_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subhead_.IsDefault()) {
          _impl_.subhead_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteLayoutResponse.subhead)
}

// repeated string keywords = 3;
inline int SiteLayoutResponse::_internal_keywords_size() const {
  return _internal_keywords().size();
}
inline int SiteLayoutResponse::keywords_size() const {
  return _internal_keywords_size();
}
inline void SiteLayoutResponse::clear_keywords() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.keywords_.Clear();
}
inline std::string* SiteLayoutResponse::add_keywords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_keywords()->Add();
  // @@protoc_insertion_point(field_add_mutable:palm.metasequoia.v1.SiteLayoutResponse.keywords)
  return _s;
}
inline const std::string& SiteLayoutResponse::keywords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteLayoutResponse.keywords)
  return _internal_keywords().Get(index);
}
inline std::string* SiteLayoutResponse::mutable_keywords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteLayoutResponse.keywords)
  return _internal_mutable_keywords()->Mutable(index);
}
inline void SiteLayoutResponse::set_keywords(int index, const std::string& value) {
  _internal_mutable_keywords()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::set_keywords(int index, std::string&& value) {
  _internal_mutable_keywords()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::set_keywords(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_keywords()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:palm.metasequoia.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::set_keywords(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_keywords()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:palm.metasequoia.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::set_keywords(int index, absl::string_view value) {
  _internal_mutable_keywords()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:palm.metasequoia.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::add_keywords(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keywords()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::add_keywords(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keywords()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::add_keywords(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keywords()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:palm.metasequoia.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::add_keywords(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keywords()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:palm.metasequoia.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::add_keywords(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keywords()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:palm.metasequoia.v1.SiteLayoutResponse.keywords)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteLayoutResponse::keywords() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.SiteLayoutResponse.keywords)
  return _internal_keywords();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteLayoutResponse::mutable_keywords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.SiteLayoutResponse.keywords)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_keywords();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteLayoutResponse::_internal_keywords() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.keywords_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteLayoutResponse::_internal_mutable_keywords() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.keywords_;
}

// string description = 4;
inline void SiteLayoutResponse::clear_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteLayoutResponse.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse::set_description(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteLayoutResponse.description)
}
inline std::string* SiteLayoutResponse::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteLayoutResponse.description)
  return _s;
}
inline const std::string& SiteLayoutResponse::_internal_description() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.description_.Get();
}
inline void SiteLayoutResponse::_internal_set_description(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.description_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse::_internal_mutable_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse::release_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteLayoutResponse.description)
  return _impl_.description_.Release();
}
inline void SiteLayoutResponse::set_allocated_description(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteLayoutResponse.description)
}

// .palm.metasequoia.v1.SiteLayoutResponse.Author author = 5;
inline bool SiteLayoutResponse::has_author() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.author_ != nullptr);
  return value;
}
inline void SiteLayoutResponse::clear_author() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.author_ != nullptr) _impl_.author_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::SiteLayoutResponse_Author& SiteLayoutResponse::_internal_author() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::SiteLayoutResponse_Author* p = _impl_.author_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::SiteLayoutResponse_Author&>(::palm::metasequoia::v1::_SiteLayoutResponse_Author_default_instance_);
}
inline const ::palm::metasequoia::v1::SiteLayoutResponse_Author& SiteLayoutResponse::author() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteLayoutResponse.author)
  return _internal_author();
}
inline void SiteLayoutResponse::unsafe_arena_set_allocated_author(::palm::metasequoia::v1::SiteLayoutResponse_Author* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.author_);
  }
  _impl_.author_ = reinterpret_cast<::palm::metasequoia::v1::SiteLayoutResponse_Author*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SiteLayoutResponse.author)
}
inline ::palm::metasequoia::v1::SiteLayoutResponse_Author* SiteLayoutResponse::release_author() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::SiteLayoutResponse_Author* released = _impl_.author_;
  _impl_.author_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::SiteLayoutResponse_Author* SiteLayoutResponse::unsafe_arena_release_author() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteLayoutResponse.author)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::SiteLayoutResponse_Author* temp = _impl_.author_;
  _impl_.author_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::SiteLayoutResponse_Author* SiteLayoutResponse::_internal_mutable_author() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.author_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::SiteLayoutResponse_Author>(GetArena());
    _impl_.author_ = reinterpret_cast<::palm::metasequoia::v1::SiteLayoutResponse_Author*>(p);
  }
  return _impl_.author_;
}
inline ::palm::metasequoia::v1::SiteLayoutResponse_Author* SiteLayoutResponse::mutable_author() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::SiteLayoutResponse_Author* _msg = _internal_mutable_author();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteLayoutResponse.author)
  return _msg;
}
inline void SiteLayoutResponse::set_allocated_author(::palm::metasequoia::v1::SiteLayoutResponse_Author* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::SiteLayoutResponse_Author*>(_impl_.author_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::SiteLayoutResponse_Author*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.author_ = reinterpret_cast<::palm::metasequoia::v1::SiteLayoutResponse_Author*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteLayoutResponse.author)
}

// string copyright = 6;
inline void SiteLayoutResponse::clear_copyright() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.copyright_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse::copyright() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteLayoutResponse.copyright)
  return _internal_copyright();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse::set_copyright(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.copyright_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteLayoutResponse.copyright)
}
inline std::string* SiteLayoutResponse::mutable_copyright() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_copyright();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteLayoutResponse.copyright)
  return _s;
}
inline const std::string& SiteLayoutResponse::_internal_copyright() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.copyright_.Get();
}
inline void SiteLayoutResponse::_internal_set_copyright(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.copyright_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse::_internal_mutable_copyright() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.copyright_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse::release_copyright() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteLayoutResponse.copyright)
  return _impl_.copyright_.Release();
}
inline void SiteLayoutResponse::set_allocated_copyright(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.copyright_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.copyright_.IsDefault()) {
          _impl_.copyright_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteLayoutResponse.copyright)
}

// string logo = 7;
inline void SiteLayoutResponse::clear_logo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.logo_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse::logo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteLayoutResponse.logo)
  return _internal_logo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse::set_logo(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.logo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteLayoutResponse.logo)
}
inline std::string* SiteLayoutResponse::mutable_logo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_logo();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteLayoutResponse.logo)
  return _s;
}
inline const std::string& SiteLayoutResponse::_internal_logo() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.logo_.Get();
}
inline void SiteLayoutResponse::_internal_set_logo(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.logo_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse::_internal_mutable_logo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.logo_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse::release_logo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteLayoutResponse.logo)
  return _impl_.logo_.Release();
}
inline void SiteLayoutResponse::set_allocated_logo(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.logo_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.logo_.IsDefault()) {
          _impl_.logo_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteLayoutResponse.logo)
}

// repeated string languages = 9;
inline int SiteLayoutResponse::_internal_languages_size() const {
  return _internal_languages().size();
}
inline int SiteLayoutResponse::languages_size() const {
  return _internal_languages_size();
}
inline void SiteLayoutResponse::clear_languages() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.languages_.Clear();
}
inline std::string* SiteLayoutResponse::add_languages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_languages()->Add();
  // @@protoc_insertion_point(field_add_mutable:palm.metasequoia.v1.SiteLayoutResponse.languages)
  return _s;
}
inline const std::string& SiteLayoutResponse::languages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteLayoutResponse.languages)
  return _internal_languages().Get(index);
}
inline std::string* SiteLayoutResponse::mutable_languages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteLayoutResponse.languages)
  return _internal_mutable_languages()->Mutable(index);
}
inline void SiteLayoutResponse::set_languages(int index, const std::string& value) {
  _internal_mutable_languages()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteLayoutResponse.languages)
}
inline void SiteLayoutResponse::set_languages(int index, std::string&& value) {
  _internal_mutable_languages()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteLayoutResponse.languages)
}
inline void SiteLayoutResponse::set_languages(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_languages()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:palm.metasequoia.v1.SiteLayoutResponse.languages)
}
inline void SiteLayoutResponse::set_languages(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_languages()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:palm.metasequoia.v1.SiteLayoutResponse.languages)
}
inline void SiteLayoutResponse::set_languages(int index, absl::string_view value) {
  _internal_mutable_languages()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:palm.metasequoia.v1.SiteLayoutResponse.languages)
}
inline void SiteLayoutResponse::add_languages(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_languages()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.SiteLayoutResponse.languages)
}
inline void SiteLayoutResponse::add_languages(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_languages()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.SiteLayoutResponse.languages)
}
inline void SiteLayoutResponse::add_languages(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_languages()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:palm.metasequoia.v1.SiteLayoutResponse.languages)
}
inline void SiteLayoutResponse::add_languages(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_languages()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:palm.metasequoia.v1.SiteLayoutResponse.languages)
}
inline void SiteLayoutResponse::add_languages(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_languages()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:palm.metasequoia.v1.SiteLayoutResponse.languages)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteLayoutResponse::languages() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.SiteLayoutResponse.languages)
  return _internal_languages();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteLayoutResponse::mutable_languages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.SiteLayoutResponse.languages)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_languages();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteLayoutResponse::_internal_languages() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.languages_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteLayoutResponse::_internal_mutable_languages() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.languages_;
}

// -------------------------------------------------------------------

// GoogleProfile_ReCaptcha

// string site_key = 1;
inline void GoogleProfile_ReCaptcha::clear_site_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.site_key_.ClearToEmpty();
}
inline const std::string& GoogleProfile_ReCaptcha::site_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.GoogleProfile.ReCaptcha.site_key)
  return _internal_site_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GoogleProfile_ReCaptcha::set_site_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.site_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.GoogleProfile.ReCaptcha.site_key)
}
inline std::string* GoogleProfile_ReCaptcha::mutable_site_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_site_key();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.GoogleProfile.ReCaptcha.site_key)
  return _s;
}
inline const std::string& GoogleProfile_ReCaptcha::_internal_site_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.site_key_.Get();
}
inline void GoogleProfile_ReCaptcha::_internal_set_site_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.site_key_.Set(value, GetArena());
}
inline std::string* GoogleProfile_ReCaptcha::_internal_mutable_site_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.site_key_.Mutable( GetArena());
}
inline std::string* GoogleProfile_ReCaptcha::release_site_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.GoogleProfile.ReCaptcha.site_key)
  return _impl_.site_key_.Release();
}
inline void GoogleProfile_ReCaptcha::set_allocated_site_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.site_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.site_key_.IsDefault()) {
          _impl_.site_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.GoogleProfile.ReCaptcha.site_key)
}

// string secret = 2;
inline void GoogleProfile_ReCaptcha::clear_secret() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.secret_.ClearToEmpty();
}
inline const std::string& GoogleProfile_ReCaptcha::secret() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.GoogleProfile.ReCaptcha.secret)
  return _internal_secret();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GoogleProfile_ReCaptcha::set_secret(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.secret_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.GoogleProfile.ReCaptcha.secret)
}
inline std::string* GoogleProfile_ReCaptcha::mutable_secret() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_secret();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.GoogleProfile.ReCaptcha.secret)
  return _s;
}
inline const std::string& GoogleProfile_ReCaptcha::_internal_secret() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.secret_.Get();
}
inline void GoogleProfile_ReCaptcha::_internal_set_secret(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.secret_.Set(value, GetArena());
}
inline std::string* GoogleProfile_ReCaptcha::_internal_mutable_secret() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.secret_.Mutable( GetArena());
}
inline std::string* GoogleProfile_ReCaptcha::release_secret() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.GoogleProfile.ReCaptcha.secret)
  return _impl_.secret_.Release();
}
inline void GoogleProfile_ReCaptcha::set_allocated_secret(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.secret_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.secret_.IsDefault()) {
          _impl_.secret_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.GoogleProfile.ReCaptcha.secret)
}

// -------------------------------------------------------------------

// GoogleProfile

// optional string site_verify_id = 1;
inline bool GoogleProfile::has_site_verify_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void GoogleProfile::clear_site_verify_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.site_verify_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GoogleProfile::site_verify_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.GoogleProfile.site_verify_id)
  return _internal_site_verify_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GoogleProfile::set_site_verify_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.site_verify_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.GoogleProfile.site_verify_id)
}
inline std::string* GoogleProfile::mutable_site_verify_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_site_verify_id();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.GoogleProfile.site_verify_id)
  return _s;
}
inline const std::string& GoogleProfile::_internal_site_verify_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.site_verify_id_.Get();
}
inline void GoogleProfile::_internal_set_site_verify_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.site_verify_id_.Set(value, GetArena());
}
inline std::string* GoogleProfile::_internal_mutable_site_verify_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.site_verify_id_.Mutable( GetArena());
}
inline std::string* GoogleProfile::release_site_verify_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.GoogleProfile.site_verify_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.site_verify_id_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.site_verify_id_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void GoogleProfile::set_allocated_site_verify_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.site_verify_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.site_verify_id_.IsDefault()) {
          _impl_.site_verify_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.GoogleProfile.site_verify_id)
}

// optional .palm.metasequoia.v1.GoogleProfile.ReCaptcha re_captcha = 2;
inline bool GoogleProfile::has_re_captcha() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.re_captcha_ != nullptr);
  return value;
}
inline void GoogleProfile::clear_re_captcha() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.re_captcha_ != nullptr) _impl_.re_captcha_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::palm::metasequoia::v1::GoogleProfile_ReCaptcha& GoogleProfile::_internal_re_captcha() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::GoogleProfile_ReCaptcha* p = _impl_.re_captcha_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::GoogleProfile_ReCaptcha&>(::palm::metasequoia::v1::_GoogleProfile_ReCaptcha_default_instance_);
}
inline const ::palm::metasequoia::v1::GoogleProfile_ReCaptcha& GoogleProfile::re_captcha() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.GoogleProfile.re_captcha)
  return _internal_re_captcha();
}
inline void GoogleProfile::unsafe_arena_set_allocated_re_captcha(::palm::metasequoia::v1::GoogleProfile_ReCaptcha* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.re_captcha_);
  }
  _impl_.re_captcha_ = reinterpret_cast<::palm::metasequoia::v1::GoogleProfile_ReCaptcha*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.GoogleProfile.re_captcha)
}
inline ::palm::metasequoia::v1::GoogleProfile_ReCaptcha* GoogleProfile::release_re_captcha() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::palm::metasequoia::v1::GoogleProfile_ReCaptcha* released = _impl_.re_captcha_;
  _impl_.re_captcha_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::GoogleProfile_ReCaptcha* GoogleProfile::unsafe_arena_release_re_captcha() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.GoogleProfile.re_captcha)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::palm::metasequoia::v1::GoogleProfile_ReCaptcha* temp = _impl_.re_captcha_;
  _impl_.re_captcha_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::GoogleProfile_ReCaptcha* GoogleProfile::_internal_mutable_re_captcha() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.re_captcha_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::GoogleProfile_ReCaptcha>(GetArena());
    _impl_.re_captcha_ = reinterpret_cast<::palm::metasequoia::v1::GoogleProfile_ReCaptcha*>(p);
  }
  return _impl_.re_captcha_;
}
inline ::palm::metasequoia::v1::GoogleProfile_ReCaptcha* GoogleProfile::mutable_re_captcha() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::GoogleProfile_ReCaptcha* _msg = _internal_mutable_re_captcha();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.GoogleProfile.re_captcha)
  return _msg;
}
inline void GoogleProfile::set_allocated_re_captcha(::palm::metasequoia::v1::GoogleProfile_ReCaptcha* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::GoogleProfile_ReCaptcha*>(_impl_.re_captcha_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::GoogleProfile_ReCaptcha*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.re_captcha_ = reinterpret_cast<::palm::metasequoia::v1::GoogleProfile_ReCaptcha*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.GoogleProfile.re_captcha)
}

// -------------------------------------------------------------------

// BaiduProfile_SiteVerify

// string id = 1;
inline void BaiduProfile_SiteVerify::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& BaiduProfile_SiteVerify::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.BaiduProfile.SiteVerify.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BaiduProfile_SiteVerify::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.BaiduProfile.SiteVerify.id)
}
inline std::string* BaiduProfile_SiteVerify::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.BaiduProfile.SiteVerify.id)
  return _s;
}
inline const std::string& BaiduProfile_SiteVerify::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void BaiduProfile_SiteVerify::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* BaiduProfile_SiteVerify::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* BaiduProfile_SiteVerify::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.BaiduProfile.SiteVerify.id)
  return _impl_.id_.Release();
}
inline void BaiduProfile_SiteVerify::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.BaiduProfile.SiteVerify.id)
}

// string content = 2;
inline void BaiduProfile_SiteVerify::clear_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_.ClearToEmpty();
}
inline const std::string& BaiduProfile_SiteVerify::content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.BaiduProfile.SiteVerify.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BaiduProfile_SiteVerify::set_content(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.BaiduProfile.SiteVerify.content)
}
inline std::string* BaiduProfile_SiteVerify::mutable_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.BaiduProfile.SiteVerify.content)
  return _s;
}
inline const std::string& BaiduProfile_SiteVerify::_internal_content() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.content_.Get();
}
inline void BaiduProfile_SiteVerify::_internal_set_content(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_.Set(value, GetArena());
}
inline std::string* BaiduProfile_SiteVerify::_internal_mutable_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.content_.Mutable( GetArena());
}
inline std::string* BaiduProfile_SiteVerify::release_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.BaiduProfile.SiteVerify.content)
  return _impl_.content_.Release();
}
inline void BaiduProfile_SiteVerify::set_allocated_content(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.content_.IsDefault()) {
          _impl_.content_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.BaiduProfile.SiteVerify.content)
}

// -------------------------------------------------------------------

// BaiduProfile

// optional .palm.metasequoia.v1.BaiduProfile.SiteVerify site_verify = 1;
inline bool BaiduProfile::has_site_verify() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.site_verify_ != nullptr);
  return value;
}
inline void BaiduProfile::clear_site_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.site_verify_ != nullptr) _impl_.site_verify_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::BaiduProfile_SiteVerify& BaiduProfile::_internal_site_verify() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::BaiduProfile_SiteVerify* p = _impl_.site_verify_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::BaiduProfile_SiteVerify&>(::palm::metasequoia::v1::_BaiduProfile_SiteVerify_default_instance_);
}
inline const ::palm::metasequoia::v1::BaiduProfile_SiteVerify& BaiduProfile::site_verify() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.BaiduProfile.site_verify)
  return _internal_site_verify();
}
inline void BaiduProfile::unsafe_arena_set_allocated_site_verify(::palm::metasequoia::v1::BaiduProfile_SiteVerify* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.site_verify_);
  }
  _impl_.site_verify_ = reinterpret_cast<::palm::metasequoia::v1::BaiduProfile_SiteVerify*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.BaiduProfile.site_verify)
}
inline ::palm::metasequoia::v1::BaiduProfile_SiteVerify* BaiduProfile::release_site_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::BaiduProfile_SiteVerify* released = _impl_.site_verify_;
  _impl_.site_verify_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::BaiduProfile_SiteVerify* BaiduProfile::unsafe_arena_release_site_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.BaiduProfile.site_verify)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::BaiduProfile_SiteVerify* temp = _impl_.site_verify_;
  _impl_.site_verify_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::BaiduProfile_SiteVerify* BaiduProfile::_internal_mutable_site_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.site_verify_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::BaiduProfile_SiteVerify>(GetArena());
    _impl_.site_verify_ = reinterpret_cast<::palm::metasequoia::v1::BaiduProfile_SiteVerify*>(p);
  }
  return _impl_.site_verify_;
}
inline ::palm::metasequoia::v1::BaiduProfile_SiteVerify* BaiduProfile::mutable_site_verify() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::BaiduProfile_SiteVerify* _msg = _internal_mutable_site_verify();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.BaiduProfile.site_verify)
  return _msg;
}
inline void BaiduProfile::set_allocated_site_verify(::palm::metasequoia::v1::BaiduProfile_SiteVerify* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::BaiduProfile_SiteVerify*>(_impl_.site_verify_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::BaiduProfile_SiteVerify*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.site_verify_ = reinterpret_cast<::palm::metasequoia::v1::BaiduProfile_SiteVerify*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.BaiduProfile.site_verify)
}

// -------------------------------------------------------------------

// SmsTask

// string from = 1;
inline void SmsTask::clear_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.from_.ClearToEmpty();
}
inline const std::string& SmsTask::from() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SmsTask.from)
  return _internal_from();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SmsTask::set_from(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.from_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SmsTask.from)
}
inline std::string* SmsTask::mutable_from() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SmsTask.from)
  return _s;
}
inline const std::string& SmsTask::_internal_from() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.from_.Get();
}
inline void SmsTask::_internal_set_from(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.from_.Set(value, GetArena());
}
inline std::string* SmsTask::_internal_mutable_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.from_.Mutable( GetArena());
}
inline std::string* SmsTask::release_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SmsTask.from)
  return _impl_.from_.Release();
}
inline void SmsTask::set_allocated_from(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.from_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.from_.IsDefault()) {
          _impl_.from_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SmsTask.from)
}

// repeated string to = 2;
inline int SmsTask::_internal_to_size() const {
  return _internal_to().size();
}
inline int SmsTask::to_size() const {
  return _internal_to_size();
}
inline void SmsTask::clear_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.to_.Clear();
}
inline std::string* SmsTask::add_to()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_to()->Add();
  // @@protoc_insertion_point(field_add_mutable:palm.metasequoia.v1.SmsTask.to)
  return _s;
}
inline const std::string& SmsTask::to(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SmsTask.to)
  return _internal_to().Get(index);
}
inline std::string* SmsTask::mutable_to(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SmsTask.to)
  return _internal_mutable_to()->Mutable(index);
}
inline void SmsTask::set_to(int index, const std::string& value) {
  _internal_mutable_to()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SmsTask.to)
}
inline void SmsTask::set_to(int index, std::string&& value) {
  _internal_mutable_to()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SmsTask.to)
}
inline void SmsTask::set_to(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_to()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:palm.metasequoia.v1.SmsTask.to)
}
inline void SmsTask::set_to(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_to()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:palm.metasequoia.v1.SmsTask.to)
}
inline void SmsTask::set_to(int index, absl::string_view value) {
  _internal_mutable_to()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:palm.metasequoia.v1.SmsTask.to)
}
inline void SmsTask::add_to(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_to()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.SmsTask.to)
}
inline void SmsTask::add_to(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_to()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.SmsTask.to)
}
inline void SmsTask::add_to(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_to()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:palm.metasequoia.v1.SmsTask.to)
}
inline void SmsTask::add_to(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_to()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:palm.metasequoia.v1.SmsTask.to)
}
inline void SmsTask::add_to(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_to()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:palm.metasequoia.v1.SmsTask.to)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SmsTask::to() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.SmsTask.to)
  return _internal_to();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SmsTask::mutable_to() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.SmsTask.to)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_to();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SmsTask::_internal_to() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.to_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SmsTask::_internal_mutable_to() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.to_;
}

// string body = 3;
inline void SmsTask::clear_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.body_.ClearToEmpty();
}
inline const std::string& SmsTask::body() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SmsTask.body)
  return _internal_body();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SmsTask::set_body(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.body_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SmsTask.body)
}
inline std::string* SmsTask::mutable_body() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SmsTask.body)
  return _s;
}
inline const std::string& SmsTask::_internal_body() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.body_.Get();
}
inline void SmsTask::_internal_set_body(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.body_.Set(value, GetArena());
}
inline std::string* SmsTask::_internal_mutable_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.body_.Mutable( GetArena());
}
inline std::string* SmsTask::release_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SmsTask.body)
  return _impl_.body_.Release();
}
inline void SmsTask::set_allocated_body(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.body_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.body_.IsDefault()) {
          _impl_.body_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SmsTask.body)
}

// -------------------------------------------------------------------

// SiteStatusResponse_Database

// string name = 1;
inline void SiteStatusResponse_Database::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_Database::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.Database.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_Database::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.Database.name)
}
inline std::string* SiteStatusResponse_Database::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.Database.name)
  return _s;
}
inline const std::string& SiteStatusResponse_Database::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void SiteStatusResponse_Database::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_Database::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_Database::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.Database.name)
  return _impl_.name_.Release();
}
inline void SiteStatusResponse_Database::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.Database.name)
}

// string size = 2;
inline void SiteStatusResponse_Database::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_Database::size() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.Database.size)
  return _internal_size();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_Database::set_size(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.Database.size)
}
inline std::string* SiteStatusResponse_Database::mutable_size() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_size();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.Database.size)
  return _s;
}
inline const std::string& SiteStatusResponse_Database::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_.Get();
}
inline void SiteStatusResponse_Database::_internal_set_size(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_Database::_internal_mutable_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.size_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_Database::release_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.Database.size)
  return _impl_.size_.Release();
}
inline void SiteStatusResponse_Database::set_allocated_size(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.size_.IsDefault()) {
          _impl_.size_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.Database.size)
}

// -------------------------------------------------------------------

// SiteStatusResponse_PostgreSql

// string version = 1;
inline void SiteStatusResponse_PostgreSql::clear_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_PostgreSql::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.PostgreSql.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_PostgreSql::set_version(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.PostgreSql.version)
}
inline std::string* SiteStatusResponse_PostgreSql::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.PostgreSql.version)
  return _s;
}
inline const std::string& SiteStatusResponse_PostgreSql::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.version_.Get();
}
inline void SiteStatusResponse_PostgreSql::_internal_set_version(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_PostgreSql::_internal_mutable_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_PostgreSql::release_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.PostgreSql.version)
  return _impl_.version_.Release();
}
inline void SiteStatusResponse_PostgreSql::set_allocated_version(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.version_.IsDefault()) {
          _impl_.version_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.PostgreSql.version)
}

// .google.protobuf.Timestamp now = 2;
inline bool SiteStatusResponse_PostgreSql::has_now() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.now_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& SiteStatusResponse_PostgreSql::_internal_now() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.now_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& SiteStatusResponse_PostgreSql::now() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.PostgreSql.now)
  return _internal_now();
}
inline void SiteStatusResponse_PostgreSql::unsafe_arena_set_allocated_now(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.now_);
  }
  _impl_.now_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SiteStatusResponse.PostgreSql.now)
}
inline ::google::protobuf::Timestamp* SiteStatusResponse_PostgreSql::release_now() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.now_;
  _impl_.now_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* SiteStatusResponse_PostgreSql::unsafe_arena_release_now() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.PostgreSql.now)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.now_;
  _impl_.now_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* SiteStatusResponse_PostgreSql::_internal_mutable_now() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.now_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.now_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.now_;
}
inline ::google::protobuf::Timestamp* SiteStatusResponse_PostgreSql::mutable_now() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_now();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.PostgreSql.now)
  return _msg;
}
inline void SiteStatusResponse_PostgreSql::set_allocated_now(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.now_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.now_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.PostgreSql.now)
}

// repeated .palm.metasequoia.v1.SiteStatusResponse.Database databases = 9;
inline int SiteStatusResponse_PostgreSql::_internal_databases_size() const {
  return _internal_databases().size();
}
inline int SiteStatusResponse_PostgreSql::databases_size() const {
  return _internal_databases_size();
}
inline void SiteStatusResponse_PostgreSql::clear_databases() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.databases_.Clear();
}
inline ::palm::metasequoia::v1::SiteStatusResponse_Database* SiteStatusResponse_PostgreSql::mutable_databases(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.PostgreSql.databases)
  return _internal_mutable_databases()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Database>* SiteStatusResponse_PostgreSql::mutable_databases()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.SiteStatusResponse.PostgreSql.databases)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_databases();
}
inline const ::palm::metasequoia::v1::SiteStatusResponse_Database& SiteStatusResponse_PostgreSql::databases(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.PostgreSql.databases)
  return _internal_databases().Get(index);
}
inline ::palm::metasequoia::v1::SiteStatusResponse_Database* SiteStatusResponse_PostgreSql::add_databases() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::SiteStatusResponse_Database* _add = _internal_mutable_databases()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.SiteStatusResponse.PostgreSql.databases)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Database>& SiteStatusResponse_PostgreSql::databases() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.SiteStatusResponse.PostgreSql.databases)
  return _internal_databases();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Database>&
SiteStatusResponse_PostgreSql::_internal_databases() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.databases_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Database>*
SiteStatusResponse_PostgreSql::_internal_mutable_databases() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.databases_;
}

// -------------------------------------------------------------------

// SiteStatusResponse_MySql

// uint64 size = 1;
inline void SiteStatusResponse_MySql::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::uint64_t{0u};
}
inline ::uint64_t SiteStatusResponse_MySql::size() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.MySql.size)
  return _internal_size();
}
inline void SiteStatusResponse_MySql::set_size(::uint64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.MySql.size)
}
inline ::uint64_t SiteStatusResponse_MySql::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void SiteStatusResponse_MySql::_internal_set_size(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// string version = 2;
inline void SiteStatusResponse_MySql::clear_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_MySql::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.MySql.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_MySql::set_version(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.MySql.version)
}
inline std::string* SiteStatusResponse_MySql::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.MySql.version)
  return _s;
}
inline const std::string& SiteStatusResponse_MySql::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.version_.Get();
}
inline void SiteStatusResponse_MySql::_internal_set_version(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_MySql::_internal_mutable_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_MySql::release_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.MySql.version)
  return _impl_.version_.Release();
}
inline void SiteStatusResponse_MySql::set_allocated_version(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.version_.IsDefault()) {
          _impl_.version_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.MySql.version)
}

// -------------------------------------------------------------------

// SiteStatusResponse_Redis_Item

// string node = 1;
inline void SiteStatusResponse_Redis_Item::clear_node() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.node_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_Redis_Item::node() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.Redis.Item.node)
  return _internal_node();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_Redis_Item::set_node(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.node_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.Redis.Item.node)
}
inline std::string* SiteStatusResponse_Redis_Item::mutable_node() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_node();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.Redis.Item.node)
  return _s;
}
inline const std::string& SiteStatusResponse_Redis_Item::_internal_node() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.node_.Get();
}
inline void SiteStatusResponse_Redis_Item::_internal_set_node(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.node_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_Redis_Item::_internal_mutable_node() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.node_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_Redis_Item::release_node() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.Redis.Item.node)
  return _impl_.node_.Release();
}
inline void SiteStatusResponse_Redis_Item::set_allocated_node(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.node_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.node_.IsDefault()) {
          _impl_.node_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.Redis.Item.node)
}

// string key = 2;
inline void SiteStatusResponse_Redis_Item::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_Redis_Item::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.Redis.Item.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_Redis_Item::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.Redis.Item.key)
}
inline std::string* SiteStatusResponse_Redis_Item::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.Redis.Item.key)
  return _s;
}
inline const std::string& SiteStatusResponse_Redis_Item::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void SiteStatusResponse_Redis_Item::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_Redis_Item::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_Redis_Item::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.Redis.Item.key)
  return _impl_.key_.Release();
}
inline void SiteStatusResponse_Redis_Item::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.Redis.Item.key)
}

// int64 ttl = 3;
inline void SiteStatusResponse_Redis_Item::clear_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ttl_ = ::int64_t{0};
}
inline ::int64_t SiteStatusResponse_Redis_Item::ttl() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.Redis.Item.ttl)
  return _internal_ttl();
}
inline void SiteStatusResponse_Redis_Item::set_ttl(::int64_t value) {
  _internal_set_ttl(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.Redis.Item.ttl)
}
inline ::int64_t SiteStatusResponse_Redis_Item::_internal_ttl() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ttl_;
}
inline void SiteStatusResponse_Redis_Item::_internal_set_ttl(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ttl_ = value;
}

// -------------------------------------------------------------------

// SiteStatusResponse_Redis

// string info = 1;
inline void SiteStatusResponse_Redis::clear_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.info_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_Redis::info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.Redis.info)
  return _internal_info();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_Redis::set_info(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.info_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.Redis.info)
}
inline std::string* SiteStatusResponse_Redis::mutable_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.Redis.info)
  return _s;
}
inline const std::string& SiteStatusResponse_Redis::_internal_info() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.info_.Get();
}
inline void SiteStatusResponse_Redis::_internal_set_info(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.info_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_Redis::_internal_mutable_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.info_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_Redis::release_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.Redis.info)
  return _impl_.info_.Release();
}
inline void SiteStatusResponse_Redis::set_allocated_info(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.info_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.info_.IsDefault()) {
          _impl_.info_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.Redis.info)
}

// repeated .palm.metasequoia.v1.SiteStatusResponse.Redis.Item items = 2;
inline int SiteStatusResponse_Redis::_internal_items_size() const {
  return _internal_items().size();
}
inline int SiteStatusResponse_Redis::items_size() const {
  return _internal_items_size();
}
inline void SiteStatusResponse_Redis::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::metasequoia::v1::SiteStatusResponse_Redis_Item* SiteStatusResponse_Redis::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.Redis.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Redis_Item>* SiteStatusResponse_Redis::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.SiteStatusResponse.Redis.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::metasequoia::v1::SiteStatusResponse_Redis_Item& SiteStatusResponse_Redis::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.Redis.items)
  return _internal_items().Get(index);
}
inline ::palm::metasequoia::v1::SiteStatusResponse_Redis_Item* SiteStatusResponse_Redis::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::SiteStatusResponse_Redis_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.SiteStatusResponse.Redis.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Redis_Item>& SiteStatusResponse_Redis::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.SiteStatusResponse.Redis.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Redis_Item>&
SiteStatusResponse_Redis::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Redis_Item>*
SiteStatusResponse_Redis::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// SiteStatusResponse_RabbitMq

// string protocol = 1;
inline void SiteStatusResponse_RabbitMq::clear_protocol() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.protocol_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_RabbitMq::protocol() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.RabbitMq.protocol)
  return _internal_protocol();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_RabbitMq::set_protocol(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.protocol_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.RabbitMq.protocol)
}
inline std::string* SiteStatusResponse_RabbitMq::mutable_protocol() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_protocol();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.RabbitMq.protocol)
  return _s;
}
inline const std::string& SiteStatusResponse_RabbitMq::_internal_protocol() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.protocol_.Get();
}
inline void SiteStatusResponse_RabbitMq::_internal_set_protocol(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.protocol_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_RabbitMq::_internal_mutable_protocol() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.protocol_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_RabbitMq::release_protocol() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.RabbitMq.protocol)
  return _impl_.protocol_.Release();
}
inline void SiteStatusResponse_RabbitMq::set_allocated_protocol(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.protocol_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.protocol_.IsDefault()) {
          _impl_.protocol_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.RabbitMq.protocol)
}

// uint32 heartbeat = 2;
inline void SiteStatusResponse_RabbitMq::clear_heartbeat() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.heartbeat_ = 0u;
}
inline ::uint32_t SiteStatusResponse_RabbitMq::heartbeat() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.RabbitMq.heartbeat)
  return _internal_heartbeat();
}
inline void SiteStatusResponse_RabbitMq::set_heartbeat(::uint32_t value) {
  _internal_set_heartbeat(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.RabbitMq.heartbeat)
}
inline ::uint32_t SiteStatusResponse_RabbitMq::_internal_heartbeat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.heartbeat_;
}
inline void SiteStatusResponse_RabbitMq::_internal_set_heartbeat(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.heartbeat_ = value;
}

// -------------------------------------------------------------------

// SiteStatusResponse_OpenSearch

// string url = 1;
inline void SiteStatusResponse_OpenSearch::clear_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_OpenSearch::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.OpenSearch.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_OpenSearch::set_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.OpenSearch.url)
}
inline std::string* SiteStatusResponse_OpenSearch::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.OpenSearch.url)
  return _s;
}
inline const std::string& SiteStatusResponse_OpenSearch::_internal_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.url_.Get();
}
inline void SiteStatusResponse_OpenSearch::_internal_set_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_OpenSearch::_internal_mutable_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_OpenSearch::release_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.OpenSearch.url)
  return _impl_.url_.Release();
}
inline void SiteStatusResponse_OpenSearch::set_allocated_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.OpenSearch.url)
}

// string info = 2;
inline void SiteStatusResponse_OpenSearch::clear_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.info_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_OpenSearch::info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.OpenSearch.info)
  return _internal_info();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_OpenSearch::set_info(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.info_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.OpenSearch.info)
}
inline std::string* SiteStatusResponse_OpenSearch::mutable_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.OpenSearch.info)
  return _s;
}
inline const std::string& SiteStatusResponse_OpenSearch::_internal_info() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.info_.Get();
}
inline void SiteStatusResponse_OpenSearch::_internal_set_info(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.info_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_OpenSearch::_internal_mutable_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.info_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_OpenSearch::release_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.OpenSearch.info)
  return _impl_.info_.Release();
}
inline void SiteStatusResponse_OpenSearch::set_allocated_info(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.info_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.info_.IsDefault()) {
          _impl_.info_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.OpenSearch.info)
}

// -------------------------------------------------------------------

// SiteStatusResponse_Health

// string name = 1;
inline void SiteStatusResponse_Health::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_Health::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.Health.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_Health::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.Health.name)
}
inline std::string* SiteStatusResponse_Health::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.Health.name)
  return _s;
}
inline const std::string& SiteStatusResponse_Health::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void SiteStatusResponse_Health::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_Health::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_Health::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.Health.name)
  return _impl_.name_.Release();
}
inline void SiteStatusResponse_Health::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.Health.name)
}

// string status = 2;
inline void SiteStatusResponse_Health::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_Health::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.Health.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_Health::set_status(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.Health.status)
}
inline std::string* SiteStatusResponse_Health::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.Health.status)
  return _s;
}
inline const std::string& SiteStatusResponse_Health::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_.Get();
}
inline void SiteStatusResponse_Health::_internal_set_status(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_Health::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_Health::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.Health.status)
  return _impl_.status_.Release();
}
inline void SiteStatusResponse_Health::set_allocated_status(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.status_.IsDefault()) {
          _impl_.status_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.Health.status)
}

// -------------------------------------------------------------------

// SiteStatusResponse_System

// string version = 1;
inline void SiteStatusResponse_System::clear_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_System::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.System.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_System::set_version(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.System.version)
}
inline std::string* SiteStatusResponse_System::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.System.version)
  return _s;
}
inline const std::string& SiteStatusResponse_System::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.version_.Get();
}
inline void SiteStatusResponse_System::_internal_set_version(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_System::_internal_mutable_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_System::release_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.System.version)
  return _impl_.version_.Release();
}
inline void SiteStatusResponse_System::set_allocated_version(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.version_.IsDefault()) {
          _impl_.version_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.System.version)
}

// string cpu = 2;
inline void SiteStatusResponse_System::clear_cpu() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cpu_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_System::cpu() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.System.cpu)
  return _internal_cpu();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_System::set_cpu(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cpu_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.System.cpu)
}
inline std::string* SiteStatusResponse_System::mutable_cpu() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cpu();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.System.cpu)
  return _s;
}
inline const std::string& SiteStatusResponse_System::_internal_cpu() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cpu_.Get();
}
inline void SiteStatusResponse_System::_internal_set_cpu(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cpu_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_System::_internal_mutable_cpu() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.cpu_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_System::release_cpu() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.System.cpu)
  return _impl_.cpu_.Release();
}
inline void SiteStatusResponse_System::set_allocated_cpu(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cpu_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cpu_.IsDefault()) {
          _impl_.cpu_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.System.cpu)
}

// string memory = 3;
inline void SiteStatusResponse_System::clear_memory() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.memory_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_System::memory() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.System.memory)
  return _internal_memory();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_System::set_memory(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.memory_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.System.memory)
}
inline std::string* SiteStatusResponse_System::mutable_memory() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_memory();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.System.memory)
  return _s;
}
inline const std::string& SiteStatusResponse_System::_internal_memory() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.memory_.Get();
}
inline void SiteStatusResponse_System::_internal_set_memory(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.memory_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_System::_internal_mutable_memory() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.memory_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_System::release_memory() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.System.memory)
  return _impl_.memory_.Release();
}
inline void SiteStatusResponse_System::set_allocated_memory(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.memory_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.memory_.IsDefault()) {
          _impl_.memory_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.System.memory)
}

// string boot = 4;
inline void SiteStatusResponse_System::clear_boot() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.boot_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_System::boot() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.System.boot)
  return _internal_boot();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_System::set_boot(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.boot_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.System.boot)
}
inline std::string* SiteStatusResponse_System::mutable_boot() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_boot();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.System.boot)
  return _s;
}
inline const std::string& SiteStatusResponse_System::_internal_boot() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.boot_.Get();
}
inline void SiteStatusResponse_System::_internal_set_boot(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.boot_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_System::_internal_mutable_boot() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.boot_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_System::release_boot() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.System.boot)
  return _impl_.boot_.Release();
}
inline void SiteStatusResponse_System::set_allocated_boot(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.boot_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.boot_.IsDefault()) {
          _impl_.boot_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.System.boot)
}

// string disk = 5;
inline void SiteStatusResponse_System::clear_disk() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.disk_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_System::disk() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.System.disk)
  return _internal_disk();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_System::set_disk(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.disk_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.System.disk)
}
inline std::string* SiteStatusResponse_System::mutable_disk() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_disk();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.System.disk)
  return _s;
}
inline const std::string& SiteStatusResponse_System::_internal_disk() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.disk_.Get();
}
inline void SiteStatusResponse_System::_internal_set_disk(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.disk_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_System::_internal_mutable_disk() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.disk_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_System::release_disk() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.System.disk)
  return _impl_.disk_.Release();
}
inline void SiteStatusResponse_System::set_allocated_disk(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.disk_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.disk_.IsDefault()) {
          _impl_.disk_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.System.disk)
}

// string load = 6;
inline void SiteStatusResponse_System::clear_load() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.load_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_System::load() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.System.load)
  return _internal_load();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_System::set_load(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.load_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.System.load)
}
inline std::string* SiteStatusResponse_System::mutable_load() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_load();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.System.load)
  return _s;
}
inline const std::string& SiteStatusResponse_System::_internal_load() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.load_.Get();
}
inline void SiteStatusResponse_System::_internal_set_load(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.load_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_System::_internal_mutable_load() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.load_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_System::release_load() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.System.load)
  return _impl_.load_.Release();
}
inline void SiteStatusResponse_System::set_allocated_load(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.load_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.load_.IsDefault()) {
          _impl_.load_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.System.load)
}

// string fs = 7;
inline void SiteStatusResponse_System::clear_fs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fs_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_System::fs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.System.fs)
  return _internal_fs();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_System::set_fs(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fs_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.System.fs)
}
inline std::string* SiteStatusResponse_System::mutable_fs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fs();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.System.fs)
  return _s;
}
inline const std::string& SiteStatusResponse_System::_internal_fs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fs_.Get();
}
inline void SiteStatusResponse_System::_internal_set_fs(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fs_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_System::_internal_mutable_fs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.fs_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_System::release_fs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.System.fs)
  return _impl_.fs_.Release();
}
inline void SiteStatusResponse_System::set_allocated_fs(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fs_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.fs_.IsDefault()) {
          _impl_.fs_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.System.fs)
}

// string swap = 8;
inline void SiteStatusResponse_System::clear_swap() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.swap_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_System::swap() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.System.swap)
  return _internal_swap();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_System::set_swap(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.swap_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.System.swap)
}
inline std::string* SiteStatusResponse_System::mutable_swap() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_swap();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.System.swap)
  return _s;
}
inline const std::string& SiteStatusResponse_System::_internal_swap() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.swap_.Get();
}
inline void SiteStatusResponse_System::_internal_set_swap(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.swap_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_System::_internal_mutable_swap() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.swap_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_System::release_swap() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.System.swap)
  return _impl_.swap_.Release();
}
inline void SiteStatusResponse_System::set_allocated_swap(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.swap_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.swap_.IsDefault()) {
          _impl_.swap_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.System.swap)
}

// string uptime = 9;
inline void SiteStatusResponse_System::clear_uptime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uptime_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_System::uptime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.System.uptime)
  return _internal_uptime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_System::set_uptime(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uptime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.System.uptime)
}
inline std::string* SiteStatusResponse_System::mutable_uptime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uptime();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.System.uptime)
  return _s;
}
inline const std::string& SiteStatusResponse_System::_internal_uptime() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uptime_.Get();
}
inline void SiteStatusResponse_System::_internal_set_uptime(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uptime_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_System::_internal_mutable_uptime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.uptime_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_System::release_uptime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.System.uptime)
  return _impl_.uptime_.Release();
}
inline void SiteStatusResponse_System::set_allocated_uptime(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uptime_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uptime_.IsDefault()) {
          _impl_.uptime_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.System.uptime)
}

// string network = 10;
inline void SiteStatusResponse_System::clear_network() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.network_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_System::network() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.System.network)
  return _internal_network();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_System::set_network(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.network_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SiteStatusResponse.System.network)
}
inline std::string* SiteStatusResponse_System::mutable_network() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_network();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.System.network)
  return _s;
}
inline const std::string& SiteStatusResponse_System::_internal_network() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.network_.Get();
}
inline void SiteStatusResponse_System::_internal_set_network(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.network_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_System::_internal_mutable_network() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.network_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_System::release_network() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.System.network)
  return _impl_.network_.Release();
}
inline void SiteStatusResponse_System::set_allocated_network(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.network_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.network_.IsDefault()) {
          _impl_.network_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.System.network)
}

// -------------------------------------------------------------------

// SiteStatusResponse

// .palm.metasequoia.v1.SiteStatusResponse.PostgreSql postgresql = 1;
inline bool SiteStatusResponse::has_postgresql() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.postgresql_ != nullptr);
  return value;
}
inline void SiteStatusResponse::clear_postgresql() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.postgresql_ != nullptr) _impl_.postgresql_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql& SiteStatusResponse::_internal_postgresql() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql* p = _impl_.postgresql_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql&>(::palm::metasequoia::v1::_SiteStatusResponse_PostgreSql_default_instance_);
}
inline const ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql& SiteStatusResponse::postgresql() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.postgresql)
  return _internal_postgresql();
}
inline void SiteStatusResponse::unsafe_arena_set_allocated_postgresql(::palm::metasequoia::v1::SiteStatusResponse_PostgreSql* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.postgresql_);
  }
  _impl_.postgresql_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_PostgreSql*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SiteStatusResponse.postgresql)
}
inline ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql* SiteStatusResponse::release_postgresql() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql* released = _impl_.postgresql_;
  _impl_.postgresql_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql* SiteStatusResponse::unsafe_arena_release_postgresql() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.postgresql)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql* temp = _impl_.postgresql_;
  _impl_.postgresql_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql* SiteStatusResponse::_internal_mutable_postgresql() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.postgresql_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::SiteStatusResponse_PostgreSql>(GetArena());
    _impl_.postgresql_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_PostgreSql*>(p);
  }
  return _impl_.postgresql_;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql* SiteStatusResponse::mutable_postgresql() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::SiteStatusResponse_PostgreSql* _msg = _internal_mutable_postgresql();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.postgresql)
  return _msg;
}
inline void SiteStatusResponse::set_allocated_postgresql(::palm::metasequoia::v1::SiteStatusResponse_PostgreSql* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_PostgreSql*>(_impl_.postgresql_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_PostgreSql*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.postgresql_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_PostgreSql*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.postgresql)
}

// .palm.metasequoia.v1.SiteStatusResponse.MySql mysql = 2;
inline bool SiteStatusResponse::has_mysql() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mysql_ != nullptr);
  return value;
}
inline void SiteStatusResponse::clear_mysql() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.mysql_ != nullptr) _impl_.mysql_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::palm::metasequoia::v1::SiteStatusResponse_MySql& SiteStatusResponse::_internal_mysql() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::SiteStatusResponse_MySql* p = _impl_.mysql_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::SiteStatusResponse_MySql&>(::palm::metasequoia::v1::_SiteStatusResponse_MySql_default_instance_);
}
inline const ::palm::metasequoia::v1::SiteStatusResponse_MySql& SiteStatusResponse::mysql() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.mysql)
  return _internal_mysql();
}
inline void SiteStatusResponse::unsafe_arena_set_allocated_mysql(::palm::metasequoia::v1::SiteStatusResponse_MySql* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mysql_);
  }
  _impl_.mysql_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_MySql*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SiteStatusResponse.mysql)
}
inline ::palm::metasequoia::v1::SiteStatusResponse_MySql* SiteStatusResponse::release_mysql() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::palm::metasequoia::v1::SiteStatusResponse_MySql* released = _impl_.mysql_;
  _impl_.mysql_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_MySql* SiteStatusResponse::unsafe_arena_release_mysql() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.mysql)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::palm::metasequoia::v1::SiteStatusResponse_MySql* temp = _impl_.mysql_;
  _impl_.mysql_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_MySql* SiteStatusResponse::_internal_mutable_mysql() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.mysql_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::SiteStatusResponse_MySql>(GetArena());
    _impl_.mysql_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_MySql*>(p);
  }
  return _impl_.mysql_;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_MySql* SiteStatusResponse::mutable_mysql() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::SiteStatusResponse_MySql* _msg = _internal_mutable_mysql();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.mysql)
  return _msg;
}
inline void SiteStatusResponse::set_allocated_mysql(::palm::metasequoia::v1::SiteStatusResponse_MySql* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_MySql*>(_impl_.mysql_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_MySql*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.mysql_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_MySql*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.mysql)
}

// .palm.metasequoia.v1.SiteStatusResponse.Redis redis = 3;
inline bool SiteStatusResponse::has_redis() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.redis_ != nullptr);
  return value;
}
inline void SiteStatusResponse::clear_redis() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.redis_ != nullptr) _impl_.redis_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::palm::metasequoia::v1::SiteStatusResponse_Redis& SiteStatusResponse::_internal_redis() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::SiteStatusResponse_Redis* p = _impl_.redis_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::SiteStatusResponse_Redis&>(::palm::metasequoia::v1::_SiteStatusResponse_Redis_default_instance_);
}
inline const ::palm::metasequoia::v1::SiteStatusResponse_Redis& SiteStatusResponse::redis() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.redis)
  return _internal_redis();
}
inline void SiteStatusResponse::unsafe_arena_set_allocated_redis(::palm::metasequoia::v1::SiteStatusResponse_Redis* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.redis_);
  }
  _impl_.redis_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_Redis*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SiteStatusResponse.redis)
}
inline ::palm::metasequoia::v1::SiteStatusResponse_Redis* SiteStatusResponse::release_redis() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::palm::metasequoia::v1::SiteStatusResponse_Redis* released = _impl_.redis_;
  _impl_.redis_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_Redis* SiteStatusResponse::unsafe_arena_release_redis() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.redis)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::palm::metasequoia::v1::SiteStatusResponse_Redis* temp = _impl_.redis_;
  _impl_.redis_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_Redis* SiteStatusResponse::_internal_mutable_redis() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.redis_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::SiteStatusResponse_Redis>(GetArena());
    _impl_.redis_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_Redis*>(p);
  }
  return _impl_.redis_;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_Redis* SiteStatusResponse::mutable_redis() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::SiteStatusResponse_Redis* _msg = _internal_mutable_redis();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.redis)
  return _msg;
}
inline void SiteStatusResponse::set_allocated_redis(::palm::metasequoia::v1::SiteStatusResponse_Redis* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_Redis*>(_impl_.redis_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_Redis*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.redis_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_Redis*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.redis)
}

// .palm.metasequoia.v1.SiteStatusResponse.RabbitMq rabbitmq = 4;
inline bool SiteStatusResponse::has_rabbitmq() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rabbitmq_ != nullptr);
  return value;
}
inline void SiteStatusResponse::clear_rabbitmq() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.rabbitmq_ != nullptr) _impl_.rabbitmq_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq& SiteStatusResponse::_internal_rabbitmq() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq* p = _impl_.rabbitmq_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq&>(::palm::metasequoia::v1::_SiteStatusResponse_RabbitMq_default_instance_);
}
inline const ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq& SiteStatusResponse::rabbitmq() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.rabbitmq)
  return _internal_rabbitmq();
}
inline void SiteStatusResponse::unsafe_arena_set_allocated_rabbitmq(::palm::metasequoia::v1::SiteStatusResponse_RabbitMq* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rabbitmq_);
  }
  _impl_.rabbitmq_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_RabbitMq*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SiteStatusResponse.rabbitmq)
}
inline ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq* SiteStatusResponse::release_rabbitmq() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq* released = _impl_.rabbitmq_;
  _impl_.rabbitmq_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq* SiteStatusResponse::unsafe_arena_release_rabbitmq() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.rabbitmq)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq* temp = _impl_.rabbitmq_;
  _impl_.rabbitmq_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq* SiteStatusResponse::_internal_mutable_rabbitmq() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.rabbitmq_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::SiteStatusResponse_RabbitMq>(GetArena());
    _impl_.rabbitmq_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_RabbitMq*>(p);
  }
  return _impl_.rabbitmq_;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq* SiteStatusResponse::mutable_rabbitmq() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::SiteStatusResponse_RabbitMq* _msg = _internal_mutable_rabbitmq();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.rabbitmq)
  return _msg;
}
inline void SiteStatusResponse::set_allocated_rabbitmq(::palm::metasequoia::v1::SiteStatusResponse_RabbitMq* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_RabbitMq*>(_impl_.rabbitmq_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_RabbitMq*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.rabbitmq_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_RabbitMq*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.rabbitmq)
}

// .palm.metasequoia.v1.SiteStatusResponse.OpenSearch opensearch = 5;
inline bool SiteStatusResponse::has_opensearch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.opensearch_ != nullptr);
  return value;
}
inline void SiteStatusResponse::clear_opensearch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.opensearch_ != nullptr) _impl_.opensearch_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch& SiteStatusResponse::_internal_opensearch() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch* p = _impl_.opensearch_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch&>(::palm::metasequoia::v1::_SiteStatusResponse_OpenSearch_default_instance_);
}
inline const ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch& SiteStatusResponse::opensearch() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.opensearch)
  return _internal_opensearch();
}
inline void SiteStatusResponse::unsafe_arena_set_allocated_opensearch(::palm::metasequoia::v1::SiteStatusResponse_OpenSearch* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.opensearch_);
  }
  _impl_.opensearch_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_OpenSearch*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SiteStatusResponse.opensearch)
}
inline ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch* SiteStatusResponse::release_opensearch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch* released = _impl_.opensearch_;
  _impl_.opensearch_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch* SiteStatusResponse::unsafe_arena_release_opensearch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.opensearch)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch* temp = _impl_.opensearch_;
  _impl_.opensearch_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch* SiteStatusResponse::_internal_mutable_opensearch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.opensearch_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::SiteStatusResponse_OpenSearch>(GetArena());
    _impl_.opensearch_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_OpenSearch*>(p);
  }
  return _impl_.opensearch_;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch* SiteStatusResponse::mutable_opensearch() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::SiteStatusResponse_OpenSearch* _msg = _internal_mutable_opensearch();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.opensearch)
  return _msg;
}
inline void SiteStatusResponse::set_allocated_opensearch(::palm::metasequoia::v1::SiteStatusResponse_OpenSearch* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_OpenSearch*>(_impl_.opensearch_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_OpenSearch*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.opensearch_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_OpenSearch*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.opensearch)
}

// .palm.metasequoia.v1.SiteStatusResponse.System system = 11;
inline bool SiteStatusResponse::has_system() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.system_ != nullptr);
  return value;
}
inline void SiteStatusResponse::clear_system() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.system_ != nullptr) _impl_.system_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::palm::metasequoia::v1::SiteStatusResponse_System& SiteStatusResponse::_internal_system() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::SiteStatusResponse_System* p = _impl_.system_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::SiteStatusResponse_System&>(::palm::metasequoia::v1::_SiteStatusResponse_System_default_instance_);
}
inline const ::palm::metasequoia::v1::SiteStatusResponse_System& SiteStatusResponse::system() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.system)
  return _internal_system();
}
inline void SiteStatusResponse::unsafe_arena_set_allocated_system(::palm::metasequoia::v1::SiteStatusResponse_System* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.system_);
  }
  _impl_.system_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_System*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SiteStatusResponse.system)
}
inline ::palm::metasequoia::v1::SiteStatusResponse_System* SiteStatusResponse::release_system() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::palm::metasequoia::v1::SiteStatusResponse_System* released = _impl_.system_;
  _impl_.system_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_System* SiteStatusResponse::unsafe_arena_release_system() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SiteStatusResponse.system)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::palm::metasequoia::v1::SiteStatusResponse_System* temp = _impl_.system_;
  _impl_.system_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_System* SiteStatusResponse::_internal_mutable_system() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000020u;
  if (_impl_.system_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::SiteStatusResponse_System>(GetArena());
    _impl_.system_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_System*>(p);
  }
  return _impl_.system_;
}
inline ::palm::metasequoia::v1::SiteStatusResponse_System* SiteStatusResponse::mutable_system() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::SiteStatusResponse_System* _msg = _internal_mutable_system();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.system)
  return _msg;
}
inline void SiteStatusResponse::set_allocated_system(::palm::metasequoia::v1::SiteStatusResponse_System* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_System*>(_impl_.system_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_System*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.system_ = reinterpret_cast<::palm::metasequoia::v1::SiteStatusResponse_System*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SiteStatusResponse.system)
}

// repeated .palm.metasequoia.v1.SiteStatusResponse.Health healthes = 21;
inline int SiteStatusResponse::_internal_healthes_size() const {
  return _internal_healthes().size();
}
inline int SiteStatusResponse::healthes_size() const {
  return _internal_healthes_size();
}
inline void SiteStatusResponse::clear_healthes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.healthes_.Clear();
}
inline ::palm::metasequoia::v1::SiteStatusResponse_Health* SiteStatusResponse::mutable_healthes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SiteStatusResponse.healthes)
  return _internal_mutable_healthes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Health>* SiteStatusResponse::mutable_healthes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.SiteStatusResponse.healthes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_healthes();
}
inline const ::palm::metasequoia::v1::SiteStatusResponse_Health& SiteStatusResponse::healthes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SiteStatusResponse.healthes)
  return _internal_healthes().Get(index);
}
inline ::palm::metasequoia::v1::SiteStatusResponse_Health* SiteStatusResponse::add_healthes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::SiteStatusResponse_Health* _add = _internal_mutable_healthes()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.SiteStatusResponse.healthes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Health>& SiteStatusResponse::healthes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.SiteStatusResponse.healthes)
  return _internal_healthes();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Health>&
SiteStatusResponse::_internal_healthes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.healthes_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::SiteStatusResponse_Health>*
SiteStatusResponse::_internal_mutable_healthes() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.healthes_;
}

// -------------------------------------------------------------------

// ShorterLinkIndexResponse_Item

// int32 id = 1;
inline void ShorterLinkIndexResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t ShorterLinkIndexResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.id)
  return _internal_id();
}
inline void ShorterLinkIndexResponse_Item::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.id)
}
inline ::int32_t ShorterLinkIndexResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void ShorterLinkIndexResponse_Item::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string url = 2;
inline void ShorterLinkIndexResponse_Item::clear_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& ShorterLinkIndexResponse_Item::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ShorterLinkIndexResponse_Item::set_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.url)
}
inline std::string* ShorterLinkIndexResponse_Item::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.url)
  return _s;
}
inline const std::string& ShorterLinkIndexResponse_Item::_internal_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.url_.Get();
}
inline void ShorterLinkIndexResponse_Item::_internal_set_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(value, GetArena());
}
inline std::string* ShorterLinkIndexResponse_Item::_internal_mutable_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* ShorterLinkIndexResponse_Item::release_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.url)
  return _impl_.url_.Release();
}
inline void ShorterLinkIndexResponse_Item::set_allocated_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.url)
}

// string details = 3;
inline void ShorterLinkIndexResponse_Item::clear_details() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.details_.ClearToEmpty();
}
inline const std::string& ShorterLinkIndexResponse_Item::details() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.details)
  return _internal_details();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ShorterLinkIndexResponse_Item::set_details(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.details_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.details)
}
inline std::string* ShorterLinkIndexResponse_Item::mutable_details() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_details();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.details)
  return _s;
}
inline const std::string& ShorterLinkIndexResponse_Item::_internal_details() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.details_.Get();
}
inline void ShorterLinkIndexResponse_Item::_internal_set_details(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.details_.Set(value, GetArena());
}
inline std::string* ShorterLinkIndexResponse_Item::_internal_mutable_details() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.details_.Mutable( GetArena());
}
inline std::string* ShorterLinkIndexResponse_Item::release_details() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.details)
  return _impl_.details_.Release();
}
inline void ShorterLinkIndexResponse_Item::set_allocated_details(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.details_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.details_.IsDefault()) {
          _impl_.details_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.details)
}

// string code = 9;
inline void ShorterLinkIndexResponse_Item::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& ShorterLinkIndexResponse_Item::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ShorterLinkIndexResponse_Item::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.code)
}
inline std::string* ShorterLinkIndexResponse_Item::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.code)
  return _s;
}
inline const std::string& ShorterLinkIndexResponse_Item::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void ShorterLinkIndexResponse_Item::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* ShorterLinkIndexResponse_Item::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* ShorterLinkIndexResponse_Item::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.code)
  return _impl_.code_.Release();
}
inline void ShorterLinkIndexResponse_Item::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.code)
}

// .google.protobuf.Timestamp updated_at = 11;
inline bool ShorterLinkIndexResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& ShorterLinkIndexResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& ShorterLinkIndexResponse_Item::updated_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void ShorterLinkIndexResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* ShorterLinkIndexResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* ShorterLinkIndexResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* ShorterLinkIndexResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* ShorterLinkIndexResponse_Item::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.updated_at)
  return _msg;
}
inline void ShorterLinkIndexResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.ShorterLinkIndexResponse.Item.updated_at)
}

// -------------------------------------------------------------------

// ShorterLinkIndexResponse

// .palm.metasequoia.v1.Pagination pagination = 1;
inline bool ShorterLinkIndexResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline void ShorterLinkIndexResponse::clear_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::Pagination& ShorterLinkIndexResponse::_internal_pagination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::Pagination* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::Pagination&>(::palm::metasequoia::v1::_Pagination_default_instance_);
}
inline const ::palm::metasequoia::v1::Pagination& ShorterLinkIndexResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.ShorterLinkIndexResponse.pagination)
  return _internal_pagination();
}
inline void ShorterLinkIndexResponse::unsafe_arena_set_allocated_pagination(::palm::metasequoia::v1::Pagination* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.ShorterLinkIndexResponse.pagination)
}
inline ::palm::metasequoia::v1::Pagination* ShorterLinkIndexResponse::release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Pagination* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::Pagination* ShorterLinkIndexResponse::unsafe_arena_release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.ShorterLinkIndexResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Pagination* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::Pagination* ShorterLinkIndexResponse::_internal_mutable_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::Pagination>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(p);
  }
  return _impl_.pagination_;
}
inline ::palm::metasequoia::v1::Pagination* ShorterLinkIndexResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::Pagination* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.ShorterLinkIndexResponse.pagination)
  return _msg;
}
inline void ShorterLinkIndexResponse::set_allocated_pagination(::palm::metasequoia::v1::Pagination* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::Pagination*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.ShorterLinkIndexResponse.pagination)
}

// repeated .palm.metasequoia.v1.ShorterLinkIndexResponse.Item items = 11;
inline int ShorterLinkIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int ShorterLinkIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void ShorterLinkIndexResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::metasequoia::v1::ShorterLinkIndexResponse_Item* ShorterLinkIndexResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.ShorterLinkIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::ShorterLinkIndexResponse_Item>* ShorterLinkIndexResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.ShorterLinkIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::metasequoia::v1::ShorterLinkIndexResponse_Item& ShorterLinkIndexResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.ShorterLinkIndexResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::metasequoia::v1::ShorterLinkIndexResponse_Item* ShorterLinkIndexResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::ShorterLinkIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.ShorterLinkIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::ShorterLinkIndexResponse_Item>& ShorterLinkIndexResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.ShorterLinkIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::ShorterLinkIndexResponse_Item>&
ShorterLinkIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::ShorterLinkIndexResponse_Item>*
ShorterLinkIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// ShorterLinkCreateRequest

// string url = 1;
inline void ShorterLinkCreateRequest::clear_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& ShorterLinkCreateRequest::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.ShorterLinkCreateRequest.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ShorterLinkCreateRequest::set_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.ShorterLinkCreateRequest.url)
}
inline std::string* ShorterLinkCreateRequest::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.ShorterLinkCreateRequest.url)
  return _s;
}
inline const std::string& ShorterLinkCreateRequest::_internal_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.url_.Get();
}
inline void ShorterLinkCreateRequest::_internal_set_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(value, GetArena());
}
inline std::string* ShorterLinkCreateRequest::_internal_mutable_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* ShorterLinkCreateRequest::release_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.ShorterLinkCreateRequest.url)
  return _impl_.url_.Release();
}
inline void ShorterLinkCreateRequest::set_allocated_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.ShorterLinkCreateRequest.url)
}

// string details = 2;
inline void ShorterLinkCreateRequest::clear_details() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.details_.ClearToEmpty();
}
inline const std::string& ShorterLinkCreateRequest::details() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.ShorterLinkCreateRequest.details)
  return _internal_details();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ShorterLinkCreateRequest::set_details(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.details_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.ShorterLinkCreateRequest.details)
}
inline std::string* ShorterLinkCreateRequest::mutable_details() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_details();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.ShorterLinkCreateRequest.details)
  return _s;
}
inline const std::string& ShorterLinkCreateRequest::_internal_details() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.details_.Get();
}
inline void ShorterLinkCreateRequest::_internal_set_details(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.details_.Set(value, GetArena());
}
inline std::string* ShorterLinkCreateRequest::_internal_mutable_details() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.details_.Mutable( GetArena());
}
inline std::string* ShorterLinkCreateRequest::release_details() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.ShorterLinkCreateRequest.details)
  return _impl_.details_.Release();
}
inline void ShorterLinkCreateRequest::set_allocated_details(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.details_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.details_.IsDefault()) {
          _impl_.details_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.ShorterLinkCreateRequest.details)
}

// -------------------------------------------------------------------

// ShorterLinkUpdateRequest

// int32 id = 1;
inline void ShorterLinkUpdateRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t ShorterLinkUpdateRequest::id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.ShorterLinkUpdateRequest.id)
  return _internal_id();
}
inline void ShorterLinkUpdateRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.ShorterLinkUpdateRequest.id)
}
inline ::int32_t ShorterLinkUpdateRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void ShorterLinkUpdateRequest::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string url = 2;
inline void ShorterLinkUpdateRequest::clear_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& ShorterLinkUpdateRequest::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.ShorterLinkUpdateRequest.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ShorterLinkUpdateRequest::set_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.ShorterLinkUpdateRequest.url)
}
inline std::string* ShorterLinkUpdateRequest::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.ShorterLinkUpdateRequest.url)
  return _s;
}
inline const std::string& ShorterLinkUpdateRequest::_internal_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.url_.Get();
}
inline void ShorterLinkUpdateRequest::_internal_set_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(value, GetArena());
}
inline std::string* ShorterLinkUpdateRequest::_internal_mutable_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* ShorterLinkUpdateRequest::release_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.ShorterLinkUpdateRequest.url)
  return _impl_.url_.Release();
}
inline void ShorterLinkUpdateRequest::set_allocated_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.ShorterLinkUpdateRequest.url)
}

// string details = 3;
inline void ShorterLinkUpdateRequest::clear_details() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.details_.ClearToEmpty();
}
inline const std::string& ShorterLinkUpdateRequest::details() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.ShorterLinkUpdateRequest.details)
  return _internal_details();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ShorterLinkUpdateRequest::set_details(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.details_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.ShorterLinkUpdateRequest.details)
}
inline std::string* ShorterLinkUpdateRequest::mutable_details() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_details();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.ShorterLinkUpdateRequest.details)
  return _s;
}
inline const std::string& ShorterLinkUpdateRequest::_internal_details() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.details_.Get();
}
inline void ShorterLinkUpdateRequest::_internal_set_details(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.details_.Set(value, GetArena());
}
inline std::string* ShorterLinkUpdateRequest::_internal_mutable_details() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.details_.Mutable( GetArena());
}
inline std::string* ShorterLinkUpdateRequest::release_details() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.ShorterLinkUpdateRequest.details)
  return _impl_.details_.Release();
}
inline void ShorterLinkUpdateRequest::set_allocated_details(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.details_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.details_.IsDefault()) {
          _impl_.details_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.ShorterLinkUpdateRequest.details)
}

// -------------------------------------------------------------------

// TagIndexResponse_Item

// int32 id = 1;
inline void TagIndexResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t TagIndexResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.TagIndexResponse.Item.id)
  return _internal_id();
}
inline void TagIndexResponse_Item::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.TagIndexResponse.Item.id)
}
inline ::int32_t TagIndexResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void TagIndexResponse_Item::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string code = 2;
inline void TagIndexResponse_Item::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& TagIndexResponse_Item::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.TagIndexResponse.Item.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TagIndexResponse_Item::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.TagIndexResponse.Item.code)
}
inline std::string* TagIndexResponse_Item::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.TagIndexResponse.Item.code)
  return _s;
}
inline const std::string& TagIndexResponse_Item::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void TagIndexResponse_Item::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* TagIndexResponse_Item::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* TagIndexResponse_Item::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.TagIndexResponse.Item.code)
  return _impl_.code_.Release();
}
inline void TagIndexResponse_Item::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.TagIndexResponse.Item.code)
}

// int32 priority = 3;
inline void TagIndexResponse_Item::clear_priority() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.priority_ = 0;
}
inline ::int32_t TagIndexResponse_Item::priority() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.TagIndexResponse.Item.priority)
  return _internal_priority();
}
inline void TagIndexResponse_Item::set_priority(::int32_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.TagIndexResponse.Item.priority)
}
inline ::int32_t TagIndexResponse_Item::_internal_priority() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.priority_;
}
inline void TagIndexResponse_Item::_internal_set_priority(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.priority_ = value;
}

// .google.protobuf.Timestamp updated_at = 11;
inline bool TagIndexResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& TagIndexResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& TagIndexResponse_Item::updated_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.TagIndexResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void TagIndexResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.TagIndexResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* TagIndexResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* TagIndexResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.TagIndexResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* TagIndexResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* TagIndexResponse_Item::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.TagIndexResponse.Item.updated_at)
  return _msg;
}
inline void TagIndexResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.TagIndexResponse.Item.updated_at)
}

// -------------------------------------------------------------------

// TagIndexResponse

// repeated .palm.metasequoia.v1.TagIndexResponse.Item items = 1;
inline int TagIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int TagIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void TagIndexResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::metasequoia::v1::TagIndexResponse_Item* TagIndexResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.TagIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::TagIndexResponse_Item>* TagIndexResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.TagIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::metasequoia::v1::TagIndexResponse_Item& TagIndexResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.TagIndexResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::metasequoia::v1::TagIndexResponse_Item* TagIndexResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::TagIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.TagIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::TagIndexResponse_Item>& TagIndexResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.TagIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::TagIndexResponse_Item>&
TagIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::TagIndexResponse_Item>*
TagIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// TagCreateRequest

// string code = 1;
inline void TagCreateRequest::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& TagCreateRequest::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.TagCreateRequest.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TagCreateRequest::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.TagCreateRequest.code)
}
inline std::string* TagCreateRequest::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.TagCreateRequest.code)
  return _s;
}
inline const std::string& TagCreateRequest::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void TagCreateRequest::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* TagCreateRequest::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* TagCreateRequest::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.TagCreateRequest.code)
  return _impl_.code_.Release();
}
inline void TagCreateRequest::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.TagCreateRequest.code)
}

// int32 priority = 11;
inline void TagCreateRequest::clear_priority() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.priority_ = 0;
}
inline ::int32_t TagCreateRequest::priority() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.TagCreateRequest.priority)
  return _internal_priority();
}
inline void TagCreateRequest::set_priority(::int32_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.TagCreateRequest.priority)
}
inline ::int32_t TagCreateRequest::_internal_priority() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.priority_;
}
inline void TagCreateRequest::_internal_set_priority(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.priority_ = value;
}

// -------------------------------------------------------------------

// TagUpdateRequest

// int32 id = 1;
inline void TagUpdateRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t TagUpdateRequest::id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.TagUpdateRequest.id)
  return _internal_id();
}
inline void TagUpdateRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.TagUpdateRequest.id)
}
inline ::int32_t TagUpdateRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void TagUpdateRequest::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string code = 2;
inline void TagUpdateRequest::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& TagUpdateRequest::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.TagUpdateRequest.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TagUpdateRequest::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.TagUpdateRequest.code)
}
inline std::string* TagUpdateRequest::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.TagUpdateRequest.code)
  return _s;
}
inline const std::string& TagUpdateRequest::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void TagUpdateRequest::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* TagUpdateRequest::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* TagUpdateRequest::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.TagUpdateRequest.code)
  return _impl_.code_.Release();
}
inline void TagUpdateRequest::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.TagUpdateRequest.code)
}

// int32 priority = 11;
inline void TagUpdateRequest::clear_priority() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.priority_ = 0;
}
inline ::int32_t TagUpdateRequest::priority() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.TagUpdateRequest.priority)
  return _internal_priority();
}
inline void TagUpdateRequest::set_priority(::int32_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.TagUpdateRequest.priority)
}
inline ::int32_t TagUpdateRequest::_internal_priority() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.priority_;
}
inline void TagUpdateRequest::_internal_set_priority(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.priority_ = value;
}

// -------------------------------------------------------------------

// CategoryIndexResponse_Item

// int32 id = 1;
inline void CategoryIndexResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t CategoryIndexResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.CategoryIndexResponse.Item.id)
  return _internal_id();
}
inline void CategoryIndexResponse_Item::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.CategoryIndexResponse.Item.id)
}
inline ::int32_t CategoryIndexResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void CategoryIndexResponse_Item::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string code = 2;
inline void CategoryIndexResponse_Item::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& CategoryIndexResponse_Item::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.CategoryIndexResponse.Item.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CategoryIndexResponse_Item::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.CategoryIndexResponse.Item.code)
}
inline std::string* CategoryIndexResponse_Item::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.CategoryIndexResponse.Item.code)
  return _s;
}
inline const std::string& CategoryIndexResponse_Item::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void CategoryIndexResponse_Item::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* CategoryIndexResponse_Item::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* CategoryIndexResponse_Item::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.CategoryIndexResponse.Item.code)
  return _impl_.code_.Release();
}
inline void CategoryIndexResponse_Item::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.CategoryIndexResponse.Item.code)
}

// int32 left = 3;
inline void CategoryIndexResponse_Item::clear_left() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.left_ = 0;
}
inline ::int32_t CategoryIndexResponse_Item::left() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.CategoryIndexResponse.Item.left)
  return _internal_left();
}
inline void CategoryIndexResponse_Item::set_left(::int32_t value) {
  _internal_set_left(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.CategoryIndexResponse.Item.left)
}
inline ::int32_t CategoryIndexResponse_Item::_internal_left() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.left_;
}
inline void CategoryIndexResponse_Item::_internal_set_left(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.left_ = value;
}

// int32 right = 4;
inline void CategoryIndexResponse_Item::clear_right() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.right_ = 0;
}
inline ::int32_t CategoryIndexResponse_Item::right() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.CategoryIndexResponse.Item.right)
  return _internal_right();
}
inline void CategoryIndexResponse_Item::set_right(::int32_t value) {
  _internal_set_right(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.CategoryIndexResponse.Item.right)
}
inline ::int32_t CategoryIndexResponse_Item::_internal_right() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.right_;
}
inline void CategoryIndexResponse_Item::_internal_set_right(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.right_ = value;
}

// .google.protobuf.Timestamp updated_at = 11;
inline bool CategoryIndexResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& CategoryIndexResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& CategoryIndexResponse_Item::updated_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.CategoryIndexResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void CategoryIndexResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.CategoryIndexResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* CategoryIndexResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* CategoryIndexResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.CategoryIndexResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* CategoryIndexResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* CategoryIndexResponse_Item::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.CategoryIndexResponse.Item.updated_at)
  return _msg;
}
inline void CategoryIndexResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.CategoryIndexResponse.Item.updated_at)
}

// -------------------------------------------------------------------

// CategoryIndexResponse

// repeated .palm.metasequoia.v1.CategoryIndexResponse.Item items = 1;
inline int CategoryIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int CategoryIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void CategoryIndexResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::metasequoia::v1::CategoryIndexResponse_Item* CategoryIndexResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.CategoryIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::CategoryIndexResponse_Item>* CategoryIndexResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.CategoryIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::metasequoia::v1::CategoryIndexResponse_Item& CategoryIndexResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.CategoryIndexResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::metasequoia::v1::CategoryIndexResponse_Item* CategoryIndexResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::CategoryIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.CategoryIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::CategoryIndexResponse_Item>& CategoryIndexResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.CategoryIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::CategoryIndexResponse_Item>&
CategoryIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::CategoryIndexResponse_Item>*
CategoryIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// CategoryCreateRequest

// string code = 1;
inline void CategoryCreateRequest::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& CategoryCreateRequest::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.CategoryCreateRequest.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CategoryCreateRequest::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.CategoryCreateRequest.code)
}
inline std::string* CategoryCreateRequest::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.CategoryCreateRequest.code)
  return _s;
}
inline const std::string& CategoryCreateRequest::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void CategoryCreateRequest::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* CategoryCreateRequest::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* CategoryCreateRequest::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.CategoryCreateRequest.code)
  return _impl_.code_.Release();
}
inline void CategoryCreateRequest::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.CategoryCreateRequest.code)
}

// int32 left = 2;
inline bool CategoryCreateRequest::has_left() const {
  return by_case() == kLeft;
}
inline void CategoryCreateRequest::set_has_left() {
  _impl_._oneof_case_[0] = kLeft;
}
inline void CategoryCreateRequest::clear_left() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() == kLeft) {
    _impl_.by_.left_ = 0;
    clear_has_by();
  }
}
inline ::int32_t CategoryCreateRequest::left() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.CategoryCreateRequest.left)
  return _internal_left();
}
inline void CategoryCreateRequest::set_left(::int32_t value) {
  _internal_set_left(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.CategoryCreateRequest.left)
}
inline ::int32_t CategoryCreateRequest::_internal_left() const {
  if (by_case() == kLeft) {
    return _impl_.by_.left_;
  }
  return 0;
}
inline void CategoryCreateRequest::_internal_set_left(::int32_t value) {
  if (by_case() != kLeft) {
    clear_by();
    set_has_left();
  }
  _impl_.by_.left_ = value;
}

// int32 parent = 3;
inline bool CategoryCreateRequest::has_parent() const {
  return by_case() == kParent;
}
inline void CategoryCreateRequest::set_has_parent() {
  _impl_._oneof_case_[0] = kParent;
}
inline void CategoryCreateRequest::clear_parent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (by_case() == kParent) {
    _impl_.by_.parent_ = 0;
    clear_has_by();
  }
}
inline ::int32_t CategoryCreateRequest::parent() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.CategoryCreateRequest.parent)
  return _internal_parent();
}
inline void CategoryCreateRequest::set_parent(::int32_t value) {
  _internal_set_parent(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.CategoryCreateRequest.parent)
}
inline ::int32_t CategoryCreateRequest::_internal_parent() const {
  if (by_case() == kParent) {
    return _impl_.by_.parent_;
  }
  return 0;
}
inline void CategoryCreateRequest::_internal_set_parent(::int32_t value) {
  if (by_case() != kParent) {
    clear_by();
    set_has_parent();
  }
  _impl_.by_.parent_ = value;
}

inline bool CategoryCreateRequest::has_by() const {
  return by_case() != BY_NOT_SET;
}
inline void CategoryCreateRequest::clear_has_by() {
  _impl_._oneof_case_[0] = BY_NOT_SET;
}
inline CategoryCreateRequest::ByCase CategoryCreateRequest::by_case() const {
  return CategoryCreateRequest::ByCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// CategoryUpdateRequest

// int32 id = 1;
inline void CategoryUpdateRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t CategoryUpdateRequest::id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.CategoryUpdateRequest.id)
  return _internal_id();
}
inline void CategoryUpdateRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.CategoryUpdateRequest.id)
}
inline ::int32_t CategoryUpdateRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void CategoryUpdateRequest::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string code = 2;
inline void CategoryUpdateRequest::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& CategoryUpdateRequest::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.CategoryUpdateRequest.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CategoryUpdateRequest::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.CategoryUpdateRequest.code)
}
inline std::string* CategoryUpdateRequest::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.CategoryUpdateRequest.code)
  return _s;
}
inline const std::string& CategoryUpdateRequest::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void CategoryUpdateRequest::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* CategoryUpdateRequest::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* CategoryUpdateRequest::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.CategoryUpdateRequest.code)
  return _impl_.code_.Release();
}
inline void CategoryUpdateRequest::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.CategoryUpdateRequest.code)
}

// -------------------------------------------------------------------

// NotificationIndexResponse_Item

// int32 id = 1;
inline void NotificationIndexResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t NotificationIndexResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.NotificationIndexResponse.Item.id)
  return _internal_id();
}
inline void NotificationIndexResponse_Item::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.NotificationIndexResponse.Item.id)
}
inline ::int32_t NotificationIndexResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void NotificationIndexResponse_Item::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// .palm.metasequoia.v1.NotificationIndexResponse.Item.Level level = 2;
inline void NotificationIndexResponse_Item::clear_level() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.level_ = 0;
}
inline ::palm::metasequoia::v1::NotificationIndexResponse_Item_Level NotificationIndexResponse_Item::level() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.NotificationIndexResponse.Item.level)
  return _internal_level();
}
inline void NotificationIndexResponse_Item::set_level(::palm::metasequoia::v1::NotificationIndexResponse_Item_Level value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.NotificationIndexResponse.Item.level)
}
inline ::palm::metasequoia::v1::NotificationIndexResponse_Item_Level NotificationIndexResponse_Item::_internal_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::metasequoia::v1::NotificationIndexResponse_Item_Level>(_impl_.level_);
}
inline void NotificationIndexResponse_Item::_internal_set_level(::palm::metasequoia::v1::NotificationIndexResponse_Item_Level value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.level_ = value;
}

// string title = 3;
inline void NotificationIndexResponse_Item::clear_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& NotificationIndexResponse_Item::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.NotificationIndexResponse.Item.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotificationIndexResponse_Item::set_title(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.NotificationIndexResponse.Item.title)
}
inline std::string* NotificationIndexResponse_Item::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.NotificationIndexResponse.Item.title)
  return _s;
}
inline const std::string& NotificationIndexResponse_Item::_internal_title() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.title_.Get();
}
inline void NotificationIndexResponse_Item::_internal_set_title(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(value, GetArena());
}
inline std::string* NotificationIndexResponse_Item::_internal_mutable_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* NotificationIndexResponse_Item::release_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.NotificationIndexResponse.Item.title)
  return _impl_.title_.Release();
}
inline void NotificationIndexResponse_Item::set_allocated_title(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.NotificationIndexResponse.Item.title)
}

// string url = 4;
inline void NotificationIndexResponse_Item::clear_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& NotificationIndexResponse_Item::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.NotificationIndexResponse.Item.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotificationIndexResponse_Item::set_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.NotificationIndexResponse.Item.url)
}
inline std::string* NotificationIndexResponse_Item::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.NotificationIndexResponse.Item.url)
  return _s;
}
inline const std::string& NotificationIndexResponse_Item::_internal_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.url_.Get();
}
inline void NotificationIndexResponse_Item::_internal_set_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(value, GetArena());
}
inline std::string* NotificationIndexResponse_Item::_internal_mutable_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* NotificationIndexResponse_Item::release_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.NotificationIndexResponse.Item.url)
  return _impl_.url_.Release();
}
inline void NotificationIndexResponse_Item::set_allocated_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.NotificationIndexResponse.Item.url)
}

// string lang = 8;
inline void NotificationIndexResponse_Item::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& NotificationIndexResponse_Item::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.NotificationIndexResponse.Item.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotificationIndexResponse_Item::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.NotificationIndexResponse.Item.lang)
}
inline std::string* NotificationIndexResponse_Item::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.NotificationIndexResponse.Item.lang)
  return _s;
}
inline const std::string& NotificationIndexResponse_Item::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void NotificationIndexResponse_Item::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* NotificationIndexResponse_Item::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* NotificationIndexResponse_Item::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.NotificationIndexResponse.Item.lang)
  return _impl_.lang_.Release();
}
inline void NotificationIndexResponse_Item::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.NotificationIndexResponse.Item.lang)
}

// .google.protobuf.Timestamp updated_at = 9;
inline bool NotificationIndexResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& NotificationIndexResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& NotificationIndexResponse_Item::updated_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.NotificationIndexResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void NotificationIndexResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.NotificationIndexResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* NotificationIndexResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* NotificationIndexResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.NotificationIndexResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* NotificationIndexResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* NotificationIndexResponse_Item::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.NotificationIndexResponse.Item.updated_at)
  return _msg;
}
inline void NotificationIndexResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.NotificationIndexResponse.Item.updated_at)
}

// -------------------------------------------------------------------

// NotificationIndexResponse

// repeated .palm.metasequoia.v1.NotificationIndexResponse.Item items = 1;
inline int NotificationIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int NotificationIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void NotificationIndexResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::metasequoia::v1::NotificationIndexResponse_Item* NotificationIndexResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.NotificationIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::NotificationIndexResponse_Item>* NotificationIndexResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.NotificationIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::metasequoia::v1::NotificationIndexResponse_Item& NotificationIndexResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.NotificationIndexResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::metasequoia::v1::NotificationIndexResponse_Item* NotificationIndexResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::NotificationIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.NotificationIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::NotificationIndexResponse_Item>& NotificationIndexResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.NotificationIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::NotificationIndexResponse_Item>&
NotificationIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::NotificationIndexResponse_Item>*
NotificationIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// .palm.metasequoia.v1.Pagination pagination = 9;
inline bool NotificationIndexResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline void NotificationIndexResponse::clear_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::Pagination& NotificationIndexResponse::_internal_pagination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::Pagination* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::Pagination&>(::palm::metasequoia::v1::_Pagination_default_instance_);
}
inline const ::palm::metasequoia::v1::Pagination& NotificationIndexResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.NotificationIndexResponse.pagination)
  return _internal_pagination();
}
inline void NotificationIndexResponse::unsafe_arena_set_allocated_pagination(::palm::metasequoia::v1::Pagination* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.NotificationIndexResponse.pagination)
}
inline ::palm::metasequoia::v1::Pagination* NotificationIndexResponse::release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Pagination* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::Pagination* NotificationIndexResponse::unsafe_arena_release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.NotificationIndexResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Pagination* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::Pagination* NotificationIndexResponse::_internal_mutable_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::Pagination>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(p);
  }
  return _impl_.pagination_;
}
inline ::palm::metasequoia::v1::Pagination* NotificationIndexResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::Pagination* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.NotificationIndexResponse.pagination)
  return _msg;
}
inline void NotificationIndexResponse::set_allocated_pagination(::palm::metasequoia::v1::Pagination* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::Pagination*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.NotificationIndexResponse.pagination)
}

// -------------------------------------------------------------------

// NotificationCreateRequest

// .palm.metasequoia.v1.NotificationIndexResponse.Item.Level level = 1;
inline void NotificationCreateRequest::clear_level() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.level_ = 0;
}
inline ::palm::metasequoia::v1::NotificationIndexResponse_Item_Level NotificationCreateRequest::level() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.NotificationCreateRequest.level)
  return _internal_level();
}
inline void NotificationCreateRequest::set_level(::palm::metasequoia::v1::NotificationIndexResponse_Item_Level value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.NotificationCreateRequest.level)
}
inline ::palm::metasequoia::v1::NotificationIndexResponse_Item_Level NotificationCreateRequest::_internal_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::metasequoia::v1::NotificationIndexResponse_Item_Level>(_impl_.level_);
}
inline void NotificationCreateRequest::_internal_set_level(::palm::metasequoia::v1::NotificationIndexResponse_Item_Level value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.level_ = value;
}

// string title = 2;
inline void NotificationCreateRequest::clear_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& NotificationCreateRequest::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.NotificationCreateRequest.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotificationCreateRequest::set_title(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.NotificationCreateRequest.title)
}
inline std::string* NotificationCreateRequest::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.NotificationCreateRequest.title)
  return _s;
}
inline const std::string& NotificationCreateRequest::_internal_title() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.title_.Get();
}
inline void NotificationCreateRequest::_internal_set_title(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(value, GetArena());
}
inline std::string* NotificationCreateRequest::_internal_mutable_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* NotificationCreateRequest::release_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.NotificationCreateRequest.title)
  return _impl_.title_.Release();
}
inline void NotificationCreateRequest::set_allocated_title(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.NotificationCreateRequest.title)
}

// string url = 3;
inline void NotificationCreateRequest::clear_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& NotificationCreateRequest::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.NotificationCreateRequest.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotificationCreateRequest::set_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.NotificationCreateRequest.url)
}
inline std::string* NotificationCreateRequest::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.NotificationCreateRequest.url)
  return _s;
}
inline const std::string& NotificationCreateRequest::_internal_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.url_.Get();
}
inline void NotificationCreateRequest::_internal_set_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(value, GetArena());
}
inline std::string* NotificationCreateRequest::_internal_mutable_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* NotificationCreateRequest::release_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.NotificationCreateRequest.url)
  return _impl_.url_.Release();
}
inline void NotificationCreateRequest::set_allocated_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.NotificationCreateRequest.url)
}

// string lang = 9;
inline void NotificationCreateRequest::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& NotificationCreateRequest::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.NotificationCreateRequest.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotificationCreateRequest::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.NotificationCreateRequest.lang)
}
inline std::string* NotificationCreateRequest::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.NotificationCreateRequest.lang)
  return _s;
}
inline const std::string& NotificationCreateRequest::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void NotificationCreateRequest::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* NotificationCreateRequest::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* NotificationCreateRequest::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.NotificationCreateRequest.lang)
  return _impl_.lang_.Release();
}
inline void NotificationCreateRequest::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.NotificationCreateRequest.lang)
}

// -------------------------------------------------------------------

// NotificationUpdateRequest

// int32 id = 1;
inline void NotificationUpdateRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t NotificationUpdateRequest::id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.NotificationUpdateRequest.id)
  return _internal_id();
}
inline void NotificationUpdateRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.NotificationUpdateRequest.id)
}
inline ::int32_t NotificationUpdateRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void NotificationUpdateRequest::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// .palm.metasequoia.v1.NotificationIndexResponse.Item.Level level = 2;
inline void NotificationUpdateRequest::clear_level() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.level_ = 0;
}
inline ::palm::metasequoia::v1::NotificationIndexResponse_Item_Level NotificationUpdateRequest::level() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.NotificationUpdateRequest.level)
  return _internal_level();
}
inline void NotificationUpdateRequest::set_level(::palm::metasequoia::v1::NotificationIndexResponse_Item_Level value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.NotificationUpdateRequest.level)
}
inline ::palm::metasequoia::v1::NotificationIndexResponse_Item_Level NotificationUpdateRequest::_internal_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::metasequoia::v1::NotificationIndexResponse_Item_Level>(_impl_.level_);
}
inline void NotificationUpdateRequest::_internal_set_level(::palm::metasequoia::v1::NotificationIndexResponse_Item_Level value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.level_ = value;
}

// string title = 3;
inline void NotificationUpdateRequest::clear_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& NotificationUpdateRequest::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.NotificationUpdateRequest.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotificationUpdateRequest::set_title(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.NotificationUpdateRequest.title)
}
inline std::string* NotificationUpdateRequest::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.NotificationUpdateRequest.title)
  return _s;
}
inline const std::string& NotificationUpdateRequest::_internal_title() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.title_.Get();
}
inline void NotificationUpdateRequest::_internal_set_title(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(value, GetArena());
}
inline std::string* NotificationUpdateRequest::_internal_mutable_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* NotificationUpdateRequest::release_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.NotificationUpdateRequest.title)
  return _impl_.title_.Release();
}
inline void NotificationUpdateRequest::set_allocated_title(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.NotificationUpdateRequest.title)
}

// string url = 4;
inline void NotificationUpdateRequest::clear_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& NotificationUpdateRequest::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.NotificationUpdateRequest.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotificationUpdateRequest::set_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.NotificationUpdateRequest.url)
}
inline std::string* NotificationUpdateRequest::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.NotificationUpdateRequest.url)
  return _s;
}
inline const std::string& NotificationUpdateRequest::_internal_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.url_.Get();
}
inline void NotificationUpdateRequest::_internal_set_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(value, GetArena());
}
inline std::string* NotificationUpdateRequest::_internal_mutable_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* NotificationUpdateRequest::release_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.NotificationUpdateRequest.url)
  return _impl_.url_.Release();
}
inline void NotificationUpdateRequest::set_allocated_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.NotificationUpdateRequest.url)
}

// -------------------------------------------------------------------

// AttachmentShowRequest

// int32 id = 1;
inline void AttachmentShowRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t AttachmentShowRequest::id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.AttachmentShowRequest.id)
  return _internal_id();
}
inline void AttachmentShowRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.AttachmentShowRequest.id)
}
inline ::int32_t AttachmentShowRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void AttachmentShowRequest::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// .google.protobuf.Duration ttl = 2;
inline bool AttachmentShowRequest::has_ttl() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ttl_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& AttachmentShowRequest::_internal_ttl() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Duration* p = _impl_.ttl_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& AttachmentShowRequest::ttl() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.AttachmentShowRequest.ttl)
  return _internal_ttl();
}
inline void AttachmentShowRequest::unsafe_arena_set_allocated_ttl(::google::protobuf::Duration* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ttl_);
  }
  _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.AttachmentShowRequest.ttl)
}
inline ::google::protobuf::Duration* AttachmentShowRequest::release_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.ttl_;
  _impl_.ttl_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Duration* AttachmentShowRequest::unsafe_arena_release_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.AttachmentShowRequest.ttl)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.ttl_;
  _impl_.ttl_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* AttachmentShowRequest::_internal_mutable_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ttl_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArena());
    _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.ttl_;
}
inline ::google::protobuf::Duration* AttachmentShowRequest::mutable_ttl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Duration* _msg = _internal_mutable_ttl();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.AttachmentShowRequest.ttl)
  return _msg;
}
inline void AttachmentShowRequest::set_allocated_ttl(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ttl_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.AttachmentShowRequest.ttl)
}

// -------------------------------------------------------------------

// AttachmentShowResponse

// .palm.metasequoia.v1.AttachmentIndexResponse.Item item = 1;
inline bool AttachmentShowResponse::has_item() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.item_ != nullptr);
  return value;
}
inline void AttachmentShowResponse::clear_item() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.item_ != nullptr) _impl_.item_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::AttachmentIndexResponse_Item& AttachmentShowResponse::_internal_item() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::AttachmentIndexResponse_Item* p = _impl_.item_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::AttachmentIndexResponse_Item&>(::palm::metasequoia::v1::_AttachmentIndexResponse_Item_default_instance_);
}
inline const ::palm::metasequoia::v1::AttachmentIndexResponse_Item& AttachmentShowResponse::item() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.AttachmentShowResponse.item)
  return _internal_item();
}
inline void AttachmentShowResponse::unsafe_arena_set_allocated_item(::palm::metasequoia::v1::AttachmentIndexResponse_Item* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.item_);
  }
  _impl_.item_ = reinterpret_cast<::palm::metasequoia::v1::AttachmentIndexResponse_Item*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.AttachmentShowResponse.item)
}
inline ::palm::metasequoia::v1::AttachmentIndexResponse_Item* AttachmentShowResponse::release_item() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::AttachmentIndexResponse_Item* released = _impl_.item_;
  _impl_.item_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::AttachmentIndexResponse_Item* AttachmentShowResponse::unsafe_arena_release_item() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.AttachmentShowResponse.item)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::AttachmentIndexResponse_Item* temp = _impl_.item_;
  _impl_.item_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::AttachmentIndexResponse_Item* AttachmentShowResponse::_internal_mutable_item() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.item_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::AttachmentIndexResponse_Item>(GetArena());
    _impl_.item_ = reinterpret_cast<::palm::metasequoia::v1::AttachmentIndexResponse_Item*>(p);
  }
  return _impl_.item_;
}
inline ::palm::metasequoia::v1::AttachmentIndexResponse_Item* AttachmentShowResponse::mutable_item() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::AttachmentIndexResponse_Item* _msg = _internal_mutable_item();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.AttachmentShowResponse.item)
  return _msg;
}
inline void AttachmentShowResponse::set_allocated_item(::palm::metasequoia::v1::AttachmentIndexResponse_Item* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::AttachmentIndexResponse_Item*>(_impl_.item_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::AttachmentIndexResponse_Item*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.item_ = reinterpret_cast<::palm::metasequoia::v1::AttachmentIndexResponse_Item*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.AttachmentShowResponse.item)
}

// string url = 2;
inline void AttachmentShowResponse::clear_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& AttachmentShowResponse::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.AttachmentShowResponse.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttachmentShowResponse::set_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.AttachmentShowResponse.url)
}
inline std::string* AttachmentShowResponse::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.AttachmentShowResponse.url)
  return _s;
}
inline const std::string& AttachmentShowResponse::_internal_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.url_.Get();
}
inline void AttachmentShowResponse::_internal_set_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(value, GetArena());
}
inline std::string* AttachmentShowResponse::_internal_mutable_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* AttachmentShowResponse::release_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.AttachmentShowResponse.url)
  return _impl_.url_.Release();
}
inline void AttachmentShowResponse::set_allocated_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.AttachmentShowResponse.url)
}

// -------------------------------------------------------------------

// AttachmentIndexResponse_Item

// int32 id = 1;
inline void AttachmentIndexResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t AttachmentIndexResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.AttachmentIndexResponse.Item.id)
  return _internal_id();
}
inline void AttachmentIndexResponse_Item::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.AttachmentIndexResponse.Item.id)
}
inline ::int32_t AttachmentIndexResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void AttachmentIndexResponse_Item::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string bucket = 2;
inline void AttachmentIndexResponse_Item::clear_bucket() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bucket_.ClearToEmpty();
}
inline const std::string& AttachmentIndexResponse_Item::bucket() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.AttachmentIndexResponse.Item.bucket)
  return _internal_bucket();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttachmentIndexResponse_Item::set_bucket(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bucket_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.AttachmentIndexResponse.Item.bucket)
}
inline std::string* AttachmentIndexResponse_Item::mutable_bucket() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bucket();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.AttachmentIndexResponse.Item.bucket)
  return _s;
}
inline const std::string& AttachmentIndexResponse_Item::_internal_bucket() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bucket_.Get();
}
inline void AttachmentIndexResponse_Item::_internal_set_bucket(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bucket_.Set(value, GetArena());
}
inline std::string* AttachmentIndexResponse_Item::_internal_mutable_bucket() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.bucket_.Mutable( GetArena());
}
inline std::string* AttachmentIndexResponse_Item::release_bucket() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.AttachmentIndexResponse.Item.bucket)
  return _impl_.bucket_.Release();
}
inline void AttachmentIndexResponse_Item::set_allocated_bucket(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bucket_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bucket_.IsDefault()) {
          _impl_.bucket_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.AttachmentIndexResponse.Item.bucket)
}

// string name = 3;
inline void AttachmentIndexResponse_Item::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& AttachmentIndexResponse_Item::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.AttachmentIndexResponse.Item.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttachmentIndexResponse_Item::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.AttachmentIndexResponse.Item.name)
}
inline std::string* AttachmentIndexResponse_Item::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.AttachmentIndexResponse.Item.name)
  return _s;
}
inline const std::string& AttachmentIndexResponse_Item::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void AttachmentIndexResponse_Item::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* AttachmentIndexResponse_Item::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* AttachmentIndexResponse_Item::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.AttachmentIndexResponse.Item.name)
  return _impl_.name_.Release();
}
inline void AttachmentIndexResponse_Item::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.AttachmentIndexResponse.Item.name)
}

// string title = 4;
inline void AttachmentIndexResponse_Item::clear_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& AttachmentIndexResponse_Item::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.AttachmentIndexResponse.Item.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttachmentIndexResponse_Item::set_title(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.AttachmentIndexResponse.Item.title)
}
inline std::string* AttachmentIndexResponse_Item::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.AttachmentIndexResponse.Item.title)
  return _s;
}
inline const std::string& AttachmentIndexResponse_Item::_internal_title() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.title_.Get();
}
inline void AttachmentIndexResponse_Item::_internal_set_title(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(value, GetArena());
}
inline std::string* AttachmentIndexResponse_Item::_internal_mutable_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* AttachmentIndexResponse_Item::release_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.AttachmentIndexResponse.Item.title)
  return _impl_.title_.Release();
}
inline void AttachmentIndexResponse_Item::set_allocated_title(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.AttachmentIndexResponse.Item.title)
}

// int64 size = 5;
inline void AttachmentIndexResponse_Item::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::int64_t{0};
}
inline ::int64_t AttachmentIndexResponse_Item::size() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.AttachmentIndexResponse.Item.size)
  return _internal_size();
}
inline void AttachmentIndexResponse_Item::set_size(::int64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.AttachmentIndexResponse.Item.size)
}
inline ::int64_t AttachmentIndexResponse_Item::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void AttachmentIndexResponse_Item::_internal_set_size(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// string content_type = 6;
inline void AttachmentIndexResponse_Item::clear_content_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_type_.ClearToEmpty();
}
inline const std::string& AttachmentIndexResponse_Item::content_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.AttachmentIndexResponse.Item.content_type)
  return _internal_content_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttachmentIndexResponse_Item::set_content_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.AttachmentIndexResponse.Item.content_type)
}
inline std::string* AttachmentIndexResponse_Item::mutable_content_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content_type();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.AttachmentIndexResponse.Item.content_type)
  return _s;
}
inline const std::string& AttachmentIndexResponse_Item::_internal_content_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.content_type_.Get();
}
inline void AttachmentIndexResponse_Item::_internal_set_content_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_type_.Set(value, GetArena());
}
inline std::string* AttachmentIndexResponse_Item::_internal_mutable_content_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.content_type_.Mutable( GetArena());
}
inline std::string* AttachmentIndexResponse_Item::release_content_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.AttachmentIndexResponse.Item.content_type)
  return _impl_.content_type_.Release();
}
inline void AttachmentIndexResponse_Item::set_allocated_content_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.content_type_.IsDefault()) {
          _impl_.content_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.AttachmentIndexResponse.Item.content_type)
}

// .palm.metasequoia.v1.MediaContent.Status status = 7;
inline void AttachmentIndexResponse_Item::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_ = 0;
}
inline ::palm::metasequoia::v1::MediaContent_Status AttachmentIndexResponse_Item::status() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.AttachmentIndexResponse.Item.status)
  return _internal_status();
}
inline void AttachmentIndexResponse_Item::set_status(::palm::metasequoia::v1::MediaContent_Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.AttachmentIndexResponse.Item.status)
}
inline ::palm::metasequoia::v1::MediaContent_Status AttachmentIndexResponse_Item::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::metasequoia::v1::MediaContent_Status>(_impl_.status_);
}
inline void AttachmentIndexResponse_Item::_internal_set_status(::palm::metasequoia::v1::MediaContent_Status value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// .google.protobuf.Timestamp updated_at = 11;
inline bool AttachmentIndexResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& AttachmentIndexResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& AttachmentIndexResponse_Item::updated_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.AttachmentIndexResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void AttachmentIndexResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.AttachmentIndexResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* AttachmentIndexResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* AttachmentIndexResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.AttachmentIndexResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* AttachmentIndexResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* AttachmentIndexResponse_Item::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.AttachmentIndexResponse.Item.updated_at)
  return _msg;
}
inline void AttachmentIndexResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.AttachmentIndexResponse.Item.updated_at)
}

// -------------------------------------------------------------------

// AttachmentIndexResponse

// .palm.metasequoia.v1.Pagination pagination = 1;
inline bool AttachmentIndexResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline void AttachmentIndexResponse::clear_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::Pagination& AttachmentIndexResponse::_internal_pagination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::Pagination* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::Pagination&>(::palm::metasequoia::v1::_Pagination_default_instance_);
}
inline const ::palm::metasequoia::v1::Pagination& AttachmentIndexResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.AttachmentIndexResponse.pagination)
  return _internal_pagination();
}
inline void AttachmentIndexResponse::unsafe_arena_set_allocated_pagination(::palm::metasequoia::v1::Pagination* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.AttachmentIndexResponse.pagination)
}
inline ::palm::metasequoia::v1::Pagination* AttachmentIndexResponse::release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Pagination* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::Pagination* AttachmentIndexResponse::unsafe_arena_release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.AttachmentIndexResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Pagination* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::Pagination* AttachmentIndexResponse::_internal_mutable_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::Pagination>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(p);
  }
  return _impl_.pagination_;
}
inline ::palm::metasequoia::v1::Pagination* AttachmentIndexResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::Pagination* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.AttachmentIndexResponse.pagination)
  return _msg;
}
inline void AttachmentIndexResponse::set_allocated_pagination(::palm::metasequoia::v1::Pagination* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::Pagination*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.AttachmentIndexResponse.pagination)
}

// repeated .palm.metasequoia.v1.AttachmentIndexResponse.Item items = 11;
inline int AttachmentIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int AttachmentIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void AttachmentIndexResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::metasequoia::v1::AttachmentIndexResponse_Item* AttachmentIndexResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.AttachmentIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::AttachmentIndexResponse_Item>* AttachmentIndexResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.AttachmentIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::metasequoia::v1::AttachmentIndexResponse_Item& AttachmentIndexResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.AttachmentIndexResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::metasequoia::v1::AttachmentIndexResponse_Item* AttachmentIndexResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::AttachmentIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.AttachmentIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::AttachmentIndexResponse_Item>& AttachmentIndexResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.AttachmentIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::AttachmentIndexResponse_Item>&
AttachmentIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::AttachmentIndexResponse_Item>*
AttachmentIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// LeaveWordIndexResponse_Item

// int32 id = 1;
inline void LeaveWordIndexResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t LeaveWordIndexResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LeaveWordIndexResponse.Item.id)
  return _internal_id();
}
inline void LeaveWordIndexResponse_Item::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.LeaveWordIndexResponse.Item.id)
}
inline ::int32_t LeaveWordIndexResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void LeaveWordIndexResponse_Item::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string lang = 2;
inline void LeaveWordIndexResponse_Item::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& LeaveWordIndexResponse_Item::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LeaveWordIndexResponse.Item.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeaveWordIndexResponse_Item::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.LeaveWordIndexResponse.Item.lang)
}
inline std::string* LeaveWordIndexResponse_Item::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LeaveWordIndexResponse.Item.lang)
  return _s;
}
inline const std::string& LeaveWordIndexResponse_Item::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void LeaveWordIndexResponse_Item::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* LeaveWordIndexResponse_Item::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* LeaveWordIndexResponse_Item::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.LeaveWordIndexResponse.Item.lang)
  return _impl_.lang_.Release();
}
inline void LeaveWordIndexResponse_Item::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.LeaveWordIndexResponse.Item.lang)
}

// string ip = 3;
inline void LeaveWordIndexResponse_Item::clear_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_.ClearToEmpty();
}
inline const std::string& LeaveWordIndexResponse_Item::ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LeaveWordIndexResponse.Item.ip)
  return _internal_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeaveWordIndexResponse_Item::set_ip(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.LeaveWordIndexResponse.Item.ip)
}
inline std::string* LeaveWordIndexResponse_Item::mutable_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ip();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LeaveWordIndexResponse.Item.ip)
  return _s;
}
inline const std::string& LeaveWordIndexResponse_Item::_internal_ip() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ip_.Get();
}
inline void LeaveWordIndexResponse_Item::_internal_set_ip(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(value, GetArena());
}
inline std::string* LeaveWordIndexResponse_Item::_internal_mutable_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ip_.Mutable( GetArena());
}
inline std::string* LeaveWordIndexResponse_Item::release_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.LeaveWordIndexResponse.Item.ip)
  return _impl_.ip_.Release();
}
inline void LeaveWordIndexResponse_Item::set_allocated_ip(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ip_.IsDefault()) {
          _impl_.ip_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.LeaveWordIndexResponse.Item.ip)
}

// .palm.metasequoia.v1.MediaContent content = 8;
inline bool LeaveWordIndexResponse_Item::has_content() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.content_ != nullptr);
  return value;
}
inline void LeaveWordIndexResponse_Item::clear_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.content_ != nullptr) _impl_.content_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::MediaContent& LeaveWordIndexResponse_Item::_internal_content() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::MediaContent* p = _impl_.content_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::MediaContent&>(::palm::metasequoia::v1::_MediaContent_default_instance_);
}
inline const ::palm::metasequoia::v1::MediaContent& LeaveWordIndexResponse_Item::content() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LeaveWordIndexResponse.Item.content)
  return _internal_content();
}
inline void LeaveWordIndexResponse_Item::unsafe_arena_set_allocated_content(::palm::metasequoia::v1::MediaContent* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.content_);
  }
  _impl_.content_ = reinterpret_cast<::palm::metasequoia::v1::MediaContent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.LeaveWordIndexResponse.Item.content)
}
inline ::palm::metasequoia::v1::MediaContent* LeaveWordIndexResponse_Item::release_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::MediaContent* released = _impl_.content_;
  _impl_.content_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::MediaContent* LeaveWordIndexResponse_Item::unsafe_arena_release_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.LeaveWordIndexResponse.Item.content)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::MediaContent* temp = _impl_.content_;
  _impl_.content_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::MediaContent* LeaveWordIndexResponse_Item::_internal_mutable_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.content_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::MediaContent>(GetArena());
    _impl_.content_ = reinterpret_cast<::palm::metasequoia::v1::MediaContent*>(p);
  }
  return _impl_.content_;
}
inline ::palm::metasequoia::v1::MediaContent* LeaveWordIndexResponse_Item::mutable_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::MediaContent* _msg = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LeaveWordIndexResponse.Item.content)
  return _msg;
}
inline void LeaveWordIndexResponse_Item::set_allocated_content(::palm::metasequoia::v1::MediaContent* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::MediaContent*>(_impl_.content_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::MediaContent*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.content_ = reinterpret_cast<::palm::metasequoia::v1::MediaContent*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.LeaveWordIndexResponse.Item.content)
}

// .google.protobuf.Timestamp updated_at = 11;
inline bool LeaveWordIndexResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& LeaveWordIndexResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& LeaveWordIndexResponse_Item::updated_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LeaveWordIndexResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void LeaveWordIndexResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.LeaveWordIndexResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.LeaveWordIndexResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LeaveWordIndexResponse.Item.updated_at)
  return _msg;
}
inline void LeaveWordIndexResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.LeaveWordIndexResponse.Item.updated_at)
}

// .google.protobuf.Timestamp created_at = 12;
inline bool LeaveWordIndexResponse_Item::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& LeaveWordIndexResponse_Item::_internal_created_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.created_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& LeaveWordIndexResponse_Item::created_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LeaveWordIndexResponse.Item.created_at)
  return _internal_created_at();
}
inline void LeaveWordIndexResponse_Item::unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }
  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.LeaveWordIndexResponse.Item.created_at)
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::unsafe_arena_release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.LeaveWordIndexResponse.Item.created_at)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::_internal_mutable_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.created_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_at_;
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LeaveWordIndexResponse.Item.created_at)
  return _msg;
}
inline void LeaveWordIndexResponse_Item::set_allocated_created_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.LeaveWordIndexResponse.Item.created_at)
}

// -------------------------------------------------------------------

// LeaveWordIndexResponse

// repeated .palm.metasequoia.v1.LeaveWordIndexResponse.Item items = 1;
inline int LeaveWordIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int LeaveWordIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void LeaveWordIndexResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::metasequoia::v1::LeaveWordIndexResponse_Item* LeaveWordIndexResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LeaveWordIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::LeaveWordIndexResponse_Item>* LeaveWordIndexResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.LeaveWordIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::metasequoia::v1::LeaveWordIndexResponse_Item& LeaveWordIndexResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LeaveWordIndexResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::metasequoia::v1::LeaveWordIndexResponse_Item* LeaveWordIndexResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::LeaveWordIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.LeaveWordIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::LeaveWordIndexResponse_Item>& LeaveWordIndexResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.LeaveWordIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::LeaveWordIndexResponse_Item>&
LeaveWordIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::LeaveWordIndexResponse_Item>*
LeaveWordIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// .palm.metasequoia.v1.Pagination pagination = 9;
inline bool LeaveWordIndexResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline void LeaveWordIndexResponse::clear_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::Pagination& LeaveWordIndexResponse::_internal_pagination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::Pagination* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::Pagination&>(::palm::metasequoia::v1::_Pagination_default_instance_);
}
inline const ::palm::metasequoia::v1::Pagination& LeaveWordIndexResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.LeaveWordIndexResponse.pagination)
  return _internal_pagination();
}
inline void LeaveWordIndexResponse::unsafe_arena_set_allocated_pagination(::palm::metasequoia::v1::Pagination* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.LeaveWordIndexResponse.pagination)
}
inline ::palm::metasequoia::v1::Pagination* LeaveWordIndexResponse::release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Pagination* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::Pagination* LeaveWordIndexResponse::unsafe_arena_release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.LeaveWordIndexResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Pagination* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::Pagination* LeaveWordIndexResponse::_internal_mutable_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::Pagination>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(p);
  }
  return _impl_.pagination_;
}
inline ::palm::metasequoia::v1::Pagination* LeaveWordIndexResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::Pagination* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.LeaveWordIndexResponse.pagination)
  return _msg;
}
inline void LeaveWordIndexResponse::set_allocated_pagination(::palm::metasequoia::v1::Pagination* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::Pagination*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.LeaveWordIndexResponse.pagination)
}

// -------------------------------------------------------------------

// SignInByGoogleRequest

// repeated string scopes = 1;
inline int SignInByGoogleRequest::_internal_scopes_size() const {
  return _internal_scopes().size();
}
inline int SignInByGoogleRequest::scopes_size() const {
  return _internal_scopes_size();
}
inline void SignInByGoogleRequest::clear_scopes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.scopes_.Clear();
}
inline std::string* SignInByGoogleRequest::add_scopes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_scopes()->Add();
  // @@protoc_insertion_point(field_add_mutable:palm.metasequoia.v1.SignInByGoogleRequest.scopes)
  return _s;
}
inline const std::string& SignInByGoogleRequest::scopes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SignInByGoogleRequest.scopes)
  return _internal_scopes().Get(index);
}
inline std::string* SignInByGoogleRequest::mutable_scopes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SignInByGoogleRequest.scopes)
  return _internal_mutable_scopes()->Mutable(index);
}
inline void SignInByGoogleRequest::set_scopes(int index, const std::string& value) {
  _internal_mutable_scopes()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SignInByGoogleRequest.scopes)
}
inline void SignInByGoogleRequest::set_scopes(int index, std::string&& value) {
  _internal_mutable_scopes()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SignInByGoogleRequest.scopes)
}
inline void SignInByGoogleRequest::set_scopes(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_scopes()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:palm.metasequoia.v1.SignInByGoogleRequest.scopes)
}
inline void SignInByGoogleRequest::set_scopes(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_scopes()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:palm.metasequoia.v1.SignInByGoogleRequest.scopes)
}
inline void SignInByGoogleRequest::set_scopes(int index, absl::string_view value) {
  _internal_mutable_scopes()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:palm.metasequoia.v1.SignInByGoogleRequest.scopes)
}
inline void SignInByGoogleRequest::add_scopes(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_scopes()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.SignInByGoogleRequest.scopes)
}
inline void SignInByGoogleRequest::add_scopes(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_scopes()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.SignInByGoogleRequest.scopes)
}
inline void SignInByGoogleRequest::add_scopes(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_scopes()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:palm.metasequoia.v1.SignInByGoogleRequest.scopes)
}
inline void SignInByGoogleRequest::add_scopes(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_scopes()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:palm.metasequoia.v1.SignInByGoogleRequest.scopes)
}
inline void SignInByGoogleRequest::add_scopes(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_scopes()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:palm.metasequoia.v1.SignInByGoogleRequest.scopes)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SignInByGoogleRequest::scopes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.SignInByGoogleRequest.scopes)
  return _internal_scopes();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SignInByGoogleRequest::mutable_scopes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.SignInByGoogleRequest.scopes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_scopes();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SignInByGoogleRequest::_internal_scopes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.scopes_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SignInByGoogleRequest::_internal_mutable_scopes() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.scopes_;
}

// string code = 2;
inline void SignInByGoogleRequest::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& SignInByGoogleRequest::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SignInByGoogleRequest.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SignInByGoogleRequest::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SignInByGoogleRequest.code)
}
inline std::string* SignInByGoogleRequest::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SignInByGoogleRequest.code)
  return _s;
}
inline const std::string& SignInByGoogleRequest::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void SignInByGoogleRequest::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* SignInByGoogleRequest::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* SignInByGoogleRequest::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SignInByGoogleRequest.code)
  return _impl_.code_.Release();
}
inline void SignInByGoogleRequest::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SignInByGoogleRequest.code)
}

// string state = 3;
inline void SignInByGoogleRequest::clear_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_.ClearToEmpty();
}
inline const std::string& SignInByGoogleRequest::state() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SignInByGoogleRequest.state)
  return _internal_state();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SignInByGoogleRequest::set_state(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.state_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SignInByGoogleRequest.state)
}
inline std::string* SignInByGoogleRequest::mutable_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SignInByGoogleRequest.state)
  return _s;
}
inline const std::string& SignInByGoogleRequest::_internal_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.state_.Get();
}
inline void SignInByGoogleRequest::_internal_set_state(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.state_.Set(value, GetArena());
}
inline std::string* SignInByGoogleRequest::_internal_mutable_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.state_.Mutable( GetArena());
}
inline std::string* SignInByGoogleRequest::release_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SignInByGoogleRequest.state)
  return _impl_.state_.Release();
}
inline void SignInByGoogleRequest::set_allocated_state(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.state_.IsDefault()) {
          _impl_.state_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SignInByGoogleRequest.state)
}

// string redirect_uri = 4;
inline void SignInByGoogleRequest::clear_redirect_uri() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.redirect_uri_.ClearToEmpty();
}
inline const std::string& SignInByGoogleRequest::redirect_uri() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SignInByGoogleRequest.redirect_uri)
  return _internal_redirect_uri();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SignInByGoogleRequest::set_redirect_uri(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.redirect_uri_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SignInByGoogleRequest.redirect_uri)
}
inline std::string* SignInByGoogleRequest::mutable_redirect_uri() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_redirect_uri();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SignInByGoogleRequest.redirect_uri)
  return _s;
}
inline const std::string& SignInByGoogleRequest::_internal_redirect_uri() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.redirect_uri_.Get();
}
inline void SignInByGoogleRequest::_internal_set_redirect_uri(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.redirect_uri_.Set(value, GetArena());
}
inline std::string* SignInByGoogleRequest::_internal_mutable_redirect_uri() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.redirect_uri_.Mutable( GetArena());
}
inline std::string* SignInByGoogleRequest::release_redirect_uri() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SignInByGoogleRequest.redirect_uri)
  return _impl_.redirect_uri_.Release();
}
inline void SignInByGoogleRequest::set_allocated_redirect_uri(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.redirect_uri_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.redirect_uri_.IsDefault()) {
          _impl_.redirect_uri_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SignInByGoogleRequest.redirect_uri)
}

// string nonce = 9;
inline void SignInByGoogleRequest::clear_nonce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nonce_.ClearToEmpty();
}
inline const std::string& SignInByGoogleRequest::nonce() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SignInByGoogleRequest.nonce)
  return _internal_nonce();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SignInByGoogleRequest::set_nonce(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nonce_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SignInByGoogleRequest.nonce)
}
inline std::string* SignInByGoogleRequest::mutable_nonce() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nonce();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SignInByGoogleRequest.nonce)
  return _s;
}
inline const std::string& SignInByGoogleRequest::_internal_nonce() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nonce_.Get();
}
inline void SignInByGoogleRequest::_internal_set_nonce(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nonce_.Set(value, GetArena());
}
inline std::string* SignInByGoogleRequest::_internal_mutable_nonce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.nonce_.Mutable( GetArena());
}
inline std::string* SignInByGoogleRequest::release_nonce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SignInByGoogleRequest.nonce)
  return _impl_.nonce_.Release();
}
inline void SignInByGoogleRequest::set_allocated_nonce(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nonce_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nonce_.IsDefault()) {
          _impl_.nonce_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SignInByGoogleRequest.nonce)
}

// .google.protobuf.Duration ttl = 11;
inline bool SignInByGoogleRequest::has_ttl() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ttl_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& SignInByGoogleRequest::_internal_ttl() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Duration* p = _impl_.ttl_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& SignInByGoogleRequest::ttl() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SignInByGoogleRequest.ttl)
  return _internal_ttl();
}
inline void SignInByGoogleRequest::unsafe_arena_set_allocated_ttl(::google::protobuf::Duration* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ttl_);
  }
  _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SignInByGoogleRequest.ttl)
}
inline ::google::protobuf::Duration* SignInByGoogleRequest::release_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.ttl_;
  _impl_.ttl_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Duration* SignInByGoogleRequest::unsafe_arena_release_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SignInByGoogleRequest.ttl)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.ttl_;
  _impl_.ttl_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* SignInByGoogleRequest::_internal_mutable_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ttl_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArena());
    _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.ttl_;
}
inline ::google::protobuf::Duration* SignInByGoogleRequest::mutable_ttl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Duration* _msg = _internal_mutable_ttl();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SignInByGoogleRequest.ttl)
  return _msg;
}
inline void SignInByGoogleRequest::set_allocated_ttl(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ttl_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SignInByGoogleRequest.ttl)
}

// -------------------------------------------------------------------

// GoogleSignInUrlRequest

// string redirect_uri = 1;
inline void GoogleSignInUrlRequest::clear_redirect_uri() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.redirect_uri_.ClearToEmpty();
}
inline const std::string& GoogleSignInUrlRequest::redirect_uri() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.GoogleSignInUrlRequest.redirect_uri)
  return _internal_redirect_uri();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GoogleSignInUrlRequest::set_redirect_uri(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.redirect_uri_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.GoogleSignInUrlRequest.redirect_uri)
}
inline std::string* GoogleSignInUrlRequest::mutable_redirect_uri() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_redirect_uri();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.GoogleSignInUrlRequest.redirect_uri)
  return _s;
}
inline const std::string& GoogleSignInUrlRequest::_internal_redirect_uri() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.redirect_uri_.Get();
}
inline void GoogleSignInUrlRequest::_internal_set_redirect_uri(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.redirect_uri_.Set(value, GetArena());
}
inline std::string* GoogleSignInUrlRequest::_internal_mutable_redirect_uri() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.redirect_uri_.Mutable( GetArena());
}
inline std::string* GoogleSignInUrlRequest::release_redirect_uri() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.GoogleSignInUrlRequest.redirect_uri)
  return _impl_.redirect_uri_.Release();
}
inline void GoogleSignInUrlRequest::set_allocated_redirect_uri(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.redirect_uri_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.redirect_uri_.IsDefault()) {
          _impl_.redirect_uri_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.GoogleSignInUrlRequest.redirect_uri)
}

// .palm.metasequoia.v1.Oauth2State state = 2;
inline bool GoogleSignInUrlRequest::has_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.state_ != nullptr);
  return value;
}
inline void GoogleSignInUrlRequest::clear_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.state_ != nullptr) _impl_.state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::metasequoia::v1::Oauth2State& GoogleSignInUrlRequest::_internal_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::Oauth2State* p = _impl_.state_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::Oauth2State&>(::palm::metasequoia::v1::_Oauth2State_default_instance_);
}
inline const ::palm::metasequoia::v1::Oauth2State& GoogleSignInUrlRequest::state() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.GoogleSignInUrlRequest.state)
  return _internal_state();
}
inline void GoogleSignInUrlRequest::unsafe_arena_set_allocated_state(::palm::metasequoia::v1::Oauth2State* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.state_);
  }
  _impl_.state_ = reinterpret_cast<::palm::metasequoia::v1::Oauth2State*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.GoogleSignInUrlRequest.state)
}
inline ::palm::metasequoia::v1::Oauth2State* GoogleSignInUrlRequest::release_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Oauth2State* released = _impl_.state_;
  _impl_.state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::Oauth2State* GoogleSignInUrlRequest::unsafe_arena_release_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.GoogleSignInUrlRequest.state)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Oauth2State* temp = _impl_.state_;
  _impl_.state_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::Oauth2State* GoogleSignInUrlRequest::_internal_mutable_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.state_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::Oauth2State>(GetArena());
    _impl_.state_ = reinterpret_cast<::palm::metasequoia::v1::Oauth2State*>(p);
  }
  return _impl_.state_;
}
inline ::palm::metasequoia::v1::Oauth2State* GoogleSignInUrlRequest::mutable_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::metasequoia::v1::Oauth2State* _msg = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.GoogleSignInUrlRequest.state)
  return _msg;
}
inline void GoogleSignInUrlRequest::set_allocated_state(::palm::metasequoia::v1::Oauth2State* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::metasequoia::v1::Oauth2State*>(_impl_.state_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::metasequoia::v1::Oauth2State*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.state_ = reinterpret_cast<::palm::metasequoia::v1::Oauth2State*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.GoogleSignInUrlRequest.state)
}

// -------------------------------------------------------------------

// GoogleSignInUrlResponse

// string url = 1;
inline void GoogleSignInUrlResponse::clear_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& GoogleSignInUrlResponse::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.GoogleSignInUrlResponse.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GoogleSignInUrlResponse::set_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.GoogleSignInUrlResponse.url)
}
inline std::string* GoogleSignInUrlResponse::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.GoogleSignInUrlResponse.url)
  return _s;
}
inline const std::string& GoogleSignInUrlResponse::_internal_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.url_.Get();
}
inline void GoogleSignInUrlResponse::_internal_set_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(value, GetArena());
}
inline std::string* GoogleSignInUrlResponse::_internal_mutable_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* GoogleSignInUrlResponse::release_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.GoogleSignInUrlResponse.url)
  return _impl_.url_.Release();
}
inline void GoogleSignInUrlResponse::set_allocated_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.GoogleSignInUrlResponse.url)
}

// string nonce = 2;
inline void GoogleSignInUrlResponse::clear_nonce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nonce_.ClearToEmpty();
}
inline const std::string& GoogleSignInUrlResponse::nonce() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.GoogleSignInUrlResponse.nonce)
  return _internal_nonce();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GoogleSignInUrlResponse::set_nonce(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nonce_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.GoogleSignInUrlResponse.nonce)
}
inline std::string* GoogleSignInUrlResponse::mutable_nonce() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nonce();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.GoogleSignInUrlResponse.nonce)
  return _s;
}
inline const std::string& GoogleSignInUrlResponse::_internal_nonce() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nonce_.Get();
}
inline void GoogleSignInUrlResponse::_internal_set_nonce(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nonce_.Set(value, GetArena());
}
inline std::string* GoogleSignInUrlResponse::_internal_mutable_nonce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.nonce_.Mutable( GetArena());
}
inline std::string* GoogleSignInUrlResponse::release_nonce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.GoogleSignInUrlResponse.nonce)
  return _impl_.nonce_.Release();
}
inline void GoogleSignInUrlResponse::set_allocated_nonce(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nonce_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nonce_.IsDefault()) {
          _impl_.nonce_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.GoogleSignInUrlResponse.nonce)
}

// -------------------------------------------------------------------

// WechatUserBindByIdRequest

// int32 user_id = 1;
inline void WechatUserBindByIdRequest::clear_user_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_id_ = 0;
}
inline ::int32_t WechatUserBindByIdRequest::user_id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatUserBindByIdRequest.user_id)
  return _internal_user_id();
}
inline void WechatUserBindByIdRequest::set_user_id(::int32_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatUserBindByIdRequest.user_id)
}
inline ::int32_t WechatUserBindByIdRequest::_internal_user_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_id_;
}
inline void WechatUserBindByIdRequest::_internal_set_user_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_id_ = value;
}

// int32 wechat_user_id = 2;
inline void WechatUserBindByIdRequest::clear_wechat_user_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.wechat_user_id_ = 0;
}
inline ::int32_t WechatUserBindByIdRequest::wechat_user_id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatUserBindByIdRequest.wechat_user_id)
  return _internal_wechat_user_id();
}
inline void WechatUserBindByIdRequest::set_wechat_user_id(::int32_t value) {
  _internal_set_wechat_user_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatUserBindByIdRequest.wechat_user_id)
}
inline ::int32_t WechatUserBindByIdRequest::_internal_wechat_user_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.wechat_user_id_;
}
inline void WechatUserBindByIdRequest::_internal_set_wechat_user_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.wechat_user_id_ = value;
}

// -------------------------------------------------------------------

// WechatUserBindByAccountRequest

// string nickname = 1;
inline void WechatUserBindByAccountRequest::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& WechatUserBindByAccountRequest::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatUserBindByAccountRequest.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatUserBindByAccountRequest::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatUserBindByAccountRequest.nickname)
}
inline std::string* WechatUserBindByAccountRequest::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatUserBindByAccountRequest.nickname)
  return _s;
}
inline const std::string& WechatUserBindByAccountRequest::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nickname_.Get();
}
inline void WechatUserBindByAccountRequest::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* WechatUserBindByAccountRequest::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* WechatUserBindByAccountRequest::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatUserBindByAccountRequest.nickname)
  return _impl_.nickname_.Release();
}
inline void WechatUserBindByAccountRequest::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatUserBindByAccountRequest.nickname)
}

// string password = 2;
inline void WechatUserBindByAccountRequest::clear_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& WechatUserBindByAccountRequest::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatUserBindByAccountRequest.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatUserBindByAccountRequest::set_password(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatUserBindByAccountRequest.password)
}
inline std::string* WechatUserBindByAccountRequest::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatUserBindByAccountRequest.password)
  return _s;
}
inline const std::string& WechatUserBindByAccountRequest::_internal_password() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.password_.Get();
}
inline void WechatUserBindByAccountRequest::_internal_set_password(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(value, GetArena());
}
inline std::string* WechatUserBindByAccountRequest::_internal_mutable_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* WechatUserBindByAccountRequest::release_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatUserBindByAccountRequest.password)
  return _impl_.password_.Release();
}
inline void WechatUserBindByAccountRequest::set_allocated_password(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.password_.IsDefault()) {
          _impl_.password_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatUserBindByAccountRequest.password)
}

// -------------------------------------------------------------------

// WechatUserQueryByOpenIdRequest

// string app_id = 1;
inline void WechatUserQueryByOpenIdRequest::clear_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.ClearToEmpty();
}
inline const std::string& WechatUserQueryByOpenIdRequest::app_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatUserQueryByOpenIdRequest.app_id)
  return _internal_app_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatUserQueryByOpenIdRequest::set_app_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatUserQueryByOpenIdRequest.app_id)
}
inline std::string* WechatUserQueryByOpenIdRequest::mutable_app_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_app_id();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatUserQueryByOpenIdRequest.app_id)
  return _s;
}
inline const std::string& WechatUserQueryByOpenIdRequest::_internal_app_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.app_id_.Get();
}
inline void WechatUserQueryByOpenIdRequest::_internal_set_app_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(value, GetArena());
}
inline std::string* WechatUserQueryByOpenIdRequest::_internal_mutable_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.app_id_.Mutable( GetArena());
}
inline std::string* WechatUserQueryByOpenIdRequest::release_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatUserQueryByOpenIdRequest.app_id)
  return _impl_.app_id_.Release();
}
inline void WechatUserQueryByOpenIdRequest::set_allocated_app_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.app_id_.IsDefault()) {
          _impl_.app_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatUserQueryByOpenIdRequest.app_id)
}

// string open_id = 2;
inline void WechatUserQueryByOpenIdRequest::clear_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.ClearToEmpty();
}
inline const std::string& WechatUserQueryByOpenIdRequest::open_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatUserQueryByOpenIdRequest.open_id)
  return _internal_open_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatUserQueryByOpenIdRequest::set_open_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatUserQueryByOpenIdRequest.open_id)
}
inline std::string* WechatUserQueryByOpenIdRequest::mutable_open_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_open_id();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatUserQueryByOpenIdRequest.open_id)
  return _s;
}
inline const std::string& WechatUserQueryByOpenIdRequest::_internal_open_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.open_id_.Get();
}
inline void WechatUserQueryByOpenIdRequest::_internal_set_open_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(value, GetArena());
}
inline std::string* WechatUserQueryByOpenIdRequest::_internal_mutable_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.open_id_.Mutable( GetArena());
}
inline std::string* WechatUserQueryByOpenIdRequest::release_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatUserQueryByOpenIdRequest.open_id)
  return _impl_.open_id_.Release();
}
inline void WechatUserQueryByOpenIdRequest::set_allocated_open_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.open_id_.IsDefault()) {
          _impl_.open_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatUserQueryByOpenIdRequest.open_id)
}

// -------------------------------------------------------------------

// WechatUserQueryByUnionIdRequest

// string union_id = 1;
inline void WechatUserQueryByUnionIdRequest::clear_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.union_id_.ClearToEmpty();
}
inline const std::string& WechatUserQueryByUnionIdRequest::union_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatUserQueryByUnionIdRequest.union_id)
  return _internal_union_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatUserQueryByUnionIdRequest::set_union_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.union_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatUserQueryByUnionIdRequest.union_id)
}
inline std::string* WechatUserQueryByUnionIdRequest::mutable_union_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_union_id();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatUserQueryByUnionIdRequest.union_id)
  return _s;
}
inline const std::string& WechatUserQueryByUnionIdRequest::_internal_union_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.union_id_.Get();
}
inline void WechatUserQueryByUnionIdRequest::_internal_set_union_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.union_id_.Set(value, GetArena());
}
inline std::string* WechatUserQueryByUnionIdRequest::_internal_mutable_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.union_id_.Mutable( GetArena());
}
inline std::string* WechatUserQueryByUnionIdRequest::release_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatUserQueryByUnionIdRequest.union_id)
  return _impl_.union_id_.Release();
}
inline void WechatUserQueryByUnionIdRequest::set_allocated_union_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.union_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.union_id_.IsDefault()) {
          _impl_.union_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatUserQueryByUnionIdRequest.union_id)
}

// -------------------------------------------------------------------

// WechatAllMiniProgramUserResponse_Item

// int32 id = 1;
inline void WechatAllMiniProgramUserResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t WechatAllMiniProgramUserResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.id)
  return _internal_id();
}
inline void WechatAllMiniProgramUserResponse_Item::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.id)
}
inline ::int32_t WechatAllMiniProgramUserResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void WechatAllMiniProgramUserResponse_Item::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// int32 user_id = 2;
inline void WechatAllMiniProgramUserResponse_Item::clear_user_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_id_ = 0;
}
inline ::int32_t WechatAllMiniProgramUserResponse_Item::user_id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.user_id)
  return _internal_user_id();
}
inline void WechatAllMiniProgramUserResponse_Item::set_user_id(::int32_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.user_id)
}
inline ::int32_t WechatAllMiniProgramUserResponse_Item::_internal_user_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_id_;
}
inline void WechatAllMiniProgramUserResponse_Item::_internal_set_user_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_id_ = value;
}

// string union_id = 3;
inline void WechatAllMiniProgramUserResponse_Item::clear_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.union_id_.ClearToEmpty();
}
inline const std::string& WechatAllMiniProgramUserResponse_Item::union_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.union_id)
  return _internal_union_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatAllMiniProgramUserResponse_Item::set_union_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.union_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.union_id)
}
inline std::string* WechatAllMiniProgramUserResponse_Item::mutable_union_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_union_id();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.union_id)
  return _s;
}
inline const std::string& WechatAllMiniProgramUserResponse_Item::_internal_union_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.union_id_.Get();
}
inline void WechatAllMiniProgramUserResponse_Item::_internal_set_union_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.union_id_.Set(value, GetArena());
}
inline std::string* WechatAllMiniProgramUserResponse_Item::_internal_mutable_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.union_id_.Mutable( GetArena());
}
inline std::string* WechatAllMiniProgramUserResponse_Item::release_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.union_id)
  return _impl_.union_id_.Release();
}
inline void WechatAllMiniProgramUserResponse_Item::set_allocated_union_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.union_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.union_id_.IsDefault()) {
          _impl_.union_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.union_id)
}

// string app_id = 4;
inline void WechatAllMiniProgramUserResponse_Item::clear_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.ClearToEmpty();
}
inline const std::string& WechatAllMiniProgramUserResponse_Item::app_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.app_id)
  return _internal_app_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatAllMiniProgramUserResponse_Item::set_app_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.app_id)
}
inline std::string* WechatAllMiniProgramUserResponse_Item::mutable_app_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_app_id();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.app_id)
  return _s;
}
inline const std::string& WechatAllMiniProgramUserResponse_Item::_internal_app_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.app_id_.Get();
}
inline void WechatAllMiniProgramUserResponse_Item::_internal_set_app_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(value, GetArena());
}
inline std::string* WechatAllMiniProgramUserResponse_Item::_internal_mutable_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.app_id_.Mutable( GetArena());
}
inline std::string* WechatAllMiniProgramUserResponse_Item::release_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.app_id)
  return _impl_.app_id_.Release();
}
inline void WechatAllMiniProgramUserResponse_Item::set_allocated_app_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.app_id_.IsDefault()) {
          _impl_.app_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.app_id)
}

// string open_id = 5;
inline void WechatAllMiniProgramUserResponse_Item::clear_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.ClearToEmpty();
}
inline const std::string& WechatAllMiniProgramUserResponse_Item::open_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.open_id)
  return _internal_open_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatAllMiniProgramUserResponse_Item::set_open_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.open_id)
}
inline std::string* WechatAllMiniProgramUserResponse_Item::mutable_open_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_open_id();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.open_id)
  return _s;
}
inline const std::string& WechatAllMiniProgramUserResponse_Item::_internal_open_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.open_id_.Get();
}
inline void WechatAllMiniProgramUserResponse_Item::_internal_set_open_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(value, GetArena());
}
inline std::string* WechatAllMiniProgramUserResponse_Item::_internal_mutable_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.open_id_.Mutable( GetArena());
}
inline std::string* WechatAllMiniProgramUserResponse_Item::release_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.open_id)
  return _impl_.open_id_.Release();
}
inline void WechatAllMiniProgramUserResponse_Item::set_allocated_open_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.open_id_.IsDefault()) {
          _impl_.open_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.open_id)
}

// optional string nickname = 11;
inline bool WechatAllMiniProgramUserResponse_Item::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void WechatAllMiniProgramUserResponse_Item::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& WechatAllMiniProgramUserResponse_Item::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatAllMiniProgramUserResponse_Item::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.nickname)
}
inline std::string* WechatAllMiniProgramUserResponse_Item::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.nickname)
  return _s;
}
inline const std::string& WechatAllMiniProgramUserResponse_Item::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nickname_.Get();
}
inline void WechatAllMiniProgramUserResponse_Item::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* WechatAllMiniProgramUserResponse_Item::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* WechatAllMiniProgramUserResponse_Item::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.nickname)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.nickname_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nickname_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void WechatAllMiniProgramUserResponse_Item::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.nickname)
}

// optional string avatar_url = 12;
inline bool WechatAllMiniProgramUserResponse_Item::has_avatar_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void WechatAllMiniProgramUserResponse_Item::clear_avatar_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.avatar_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& WechatAllMiniProgramUserResponse_Item::avatar_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.avatar_url)
  return _internal_avatar_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatAllMiniProgramUserResponse_Item::set_avatar_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.avatar_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.avatar_url)
}
inline std::string* WechatAllMiniProgramUserResponse_Item::mutable_avatar_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_avatar_url();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.avatar_url)
  return _s;
}
inline const std::string& WechatAllMiniProgramUserResponse_Item::_internal_avatar_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.avatar_url_.Get();
}
inline void WechatAllMiniProgramUserResponse_Item::_internal_set_avatar_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.avatar_url_.Set(value, GetArena());
}
inline std::string* WechatAllMiniProgramUserResponse_Item::_internal_mutable_avatar_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.avatar_url_.Mutable( GetArena());
}
inline std::string* WechatAllMiniProgramUserResponse_Item::release_avatar_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.avatar_url)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.avatar_url_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avatar_url_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void WechatAllMiniProgramUserResponse_Item::set_allocated_avatar_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.avatar_url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.avatar_url_.IsDefault()) {
          _impl_.avatar_url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item.avatar_url)
}

// -------------------------------------------------------------------

// WechatAllMiniProgramUserResponse

// repeated .palm.metasequoia.v1.WechatAllMiniProgramUserResponse.Item items = 1;
inline int WechatAllMiniProgramUserResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int WechatAllMiniProgramUserResponse::items_size() const {
  return _internal_items_size();
}
inline void WechatAllMiniProgramUserResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::metasequoia::v1::WechatAllMiniProgramUserResponse_Item* WechatAllMiniProgramUserResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::WechatAllMiniProgramUserResponse_Item>* WechatAllMiniProgramUserResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::metasequoia::v1::WechatAllMiniProgramUserResponse_Item& WechatAllMiniProgramUserResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::metasequoia::v1::WechatAllMiniProgramUserResponse_Item* WechatAllMiniProgramUserResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::WechatAllMiniProgramUserResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::WechatAllMiniProgramUserResponse_Item>& WechatAllMiniProgramUserResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.WechatAllMiniProgramUserResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::WechatAllMiniProgramUserResponse_Item>&
WechatAllMiniProgramUserResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::WechatAllMiniProgramUserResponse_Item>*
WechatAllMiniProgramUserResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// WechatAllOauth2UserResponse_Item

// int32 id = 1;
inline void WechatAllOauth2UserResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t WechatAllOauth2UserResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.id)
  return _internal_id();
}
inline void WechatAllOauth2UserResponse_Item::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.id)
}
inline ::int32_t WechatAllOauth2UserResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void WechatAllOauth2UserResponse_Item::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// int32 user_id = 2;
inline void WechatAllOauth2UserResponse_Item::clear_user_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_id_ = 0;
}
inline ::int32_t WechatAllOauth2UserResponse_Item::user_id() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.user_id)
  return _internal_user_id();
}
inline void WechatAllOauth2UserResponse_Item::set_user_id(::int32_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.user_id)
}
inline ::int32_t WechatAllOauth2UserResponse_Item::_internal_user_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_id_;
}
inline void WechatAllOauth2UserResponse_Item::_internal_set_user_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_id_ = value;
}

// string union_id = 3;
inline void WechatAllOauth2UserResponse_Item::clear_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.union_id_.ClearToEmpty();
}
inline const std::string& WechatAllOauth2UserResponse_Item::union_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.union_id)
  return _internal_union_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatAllOauth2UserResponse_Item::set_union_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.union_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.union_id)
}
inline std::string* WechatAllOauth2UserResponse_Item::mutable_union_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_union_id();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.union_id)
  return _s;
}
inline const std::string& WechatAllOauth2UserResponse_Item::_internal_union_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.union_id_.Get();
}
inline void WechatAllOauth2UserResponse_Item::_internal_set_union_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.union_id_.Set(value, GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::_internal_mutable_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.union_id_.Mutable( GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::release_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.union_id)
  return _impl_.union_id_.Release();
}
inline void WechatAllOauth2UserResponse_Item::set_allocated_union_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.union_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.union_id_.IsDefault()) {
          _impl_.union_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.union_id)
}

// string app_id = 4;
inline void WechatAllOauth2UserResponse_Item::clear_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.ClearToEmpty();
}
inline const std::string& WechatAllOauth2UserResponse_Item::app_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.app_id)
  return _internal_app_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatAllOauth2UserResponse_Item::set_app_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.app_id)
}
inline std::string* WechatAllOauth2UserResponse_Item::mutable_app_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_app_id();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.app_id)
  return _s;
}
inline const std::string& WechatAllOauth2UserResponse_Item::_internal_app_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.app_id_.Get();
}
inline void WechatAllOauth2UserResponse_Item::_internal_set_app_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(value, GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::_internal_mutable_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.app_id_.Mutable( GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::release_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.app_id)
  return _impl_.app_id_.Release();
}
inline void WechatAllOauth2UserResponse_Item::set_allocated_app_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.app_id_.IsDefault()) {
          _impl_.app_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.app_id)
}

// string open_id = 5;
inline void WechatAllOauth2UserResponse_Item::clear_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.ClearToEmpty();
}
inline const std::string& WechatAllOauth2UserResponse_Item::open_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.open_id)
  return _internal_open_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatAllOauth2UserResponse_Item::set_open_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.open_id)
}
inline std::string* WechatAllOauth2UserResponse_Item::mutable_open_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_open_id();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.open_id)
  return _s;
}
inline const std::string& WechatAllOauth2UserResponse_Item::_internal_open_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.open_id_.Get();
}
inline void WechatAllOauth2UserResponse_Item::_internal_set_open_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(value, GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::_internal_mutable_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.open_id_.Mutable( GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::release_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.open_id)
  return _impl_.open_id_.Release();
}
inline void WechatAllOauth2UserResponse_Item::set_allocated_open_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.open_id_.IsDefault()) {
          _impl_.open_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.open_id)
}

// string nickname = 11;
inline void WechatAllOauth2UserResponse_Item::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& WechatAllOauth2UserResponse_Item::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatAllOauth2UserResponse_Item::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.nickname)
}
inline std::string* WechatAllOauth2UserResponse_Item::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.nickname)
  return _s;
}
inline const std::string& WechatAllOauth2UserResponse_Item::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nickname_.Get();
}
inline void WechatAllOauth2UserResponse_Item::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.nickname)
  return _impl_.nickname_.Release();
}
inline void WechatAllOauth2UserResponse_Item::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.nickname)
}

// int32 sex = 12;
inline void WechatAllOauth2UserResponse_Item::clear_sex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sex_ = 0;
}
inline ::int32_t WechatAllOauth2UserResponse_Item::sex() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.sex)
  return _internal_sex();
}
inline void WechatAllOauth2UserResponse_Item::set_sex(::int32_t value) {
  _internal_set_sex(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.sex)
}
inline ::int32_t WechatAllOauth2UserResponse_Item::_internal_sex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sex_;
}
inline void WechatAllOauth2UserResponse_Item::_internal_set_sex(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sex_ = value;
}

// string city = 13;
inline void WechatAllOauth2UserResponse_Item::clear_city() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.city_.ClearToEmpty();
}
inline const std::string& WechatAllOauth2UserResponse_Item::city() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.city)
  return _internal_city();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatAllOauth2UserResponse_Item::set_city(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.city_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.city)
}
inline std::string* WechatAllOauth2UserResponse_Item::mutable_city() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_city();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.city)
  return _s;
}
inline const std::string& WechatAllOauth2UserResponse_Item::_internal_city() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.city_.Get();
}
inline void WechatAllOauth2UserResponse_Item::_internal_set_city(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.city_.Set(value, GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::_internal_mutable_city() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.city_.Mutable( GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::release_city() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.city)
  return _impl_.city_.Release();
}
inline void WechatAllOauth2UserResponse_Item::set_allocated_city(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.city_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.city_.IsDefault()) {
          _impl_.city_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.city)
}

// string province = 14;
inline void WechatAllOauth2UserResponse_Item::clear_province() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.province_.ClearToEmpty();
}
inline const std::string& WechatAllOauth2UserResponse_Item::province() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.province)
  return _internal_province();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatAllOauth2UserResponse_Item::set_province(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.province_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.province)
}
inline std::string* WechatAllOauth2UserResponse_Item::mutable_province() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_province();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.province)
  return _s;
}
inline const std::string& WechatAllOauth2UserResponse_Item::_internal_province() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.province_.Get();
}
inline void WechatAllOauth2UserResponse_Item::_internal_set_province(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.province_.Set(value, GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::_internal_mutable_province() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.province_.Mutable( GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::release_province() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.province)
  return _impl_.province_.Release();
}
inline void WechatAllOauth2UserResponse_Item::set_allocated_province(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.province_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.province_.IsDefault()) {
          _impl_.province_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.province)
}

// string country = 15;
inline void WechatAllOauth2UserResponse_Item::clear_country() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.country_.ClearToEmpty();
}
inline const std::string& WechatAllOauth2UserResponse_Item::country() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.country)
  return _internal_country();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatAllOauth2UserResponse_Item::set_country(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.country_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.country)
}
inline std::string* WechatAllOauth2UserResponse_Item::mutable_country() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_country();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.country)
  return _s;
}
inline const std::string& WechatAllOauth2UserResponse_Item::_internal_country() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.country_.Get();
}
inline void WechatAllOauth2UserResponse_Item::_internal_set_country(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.country_.Set(value, GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::_internal_mutable_country() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.country_.Mutable( GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::release_country() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.country)
  return _impl_.country_.Release();
}
inline void WechatAllOauth2UserResponse_Item::set_allocated_country(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.country_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.country_.IsDefault()) {
          _impl_.country_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.country)
}

// optional string head_img_url = 16;
inline bool WechatAllOauth2UserResponse_Item::has_head_img_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void WechatAllOauth2UserResponse_Item::clear_head_img_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.head_img_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& WechatAllOauth2UserResponse_Item::head_img_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.head_img_url)
  return _internal_head_img_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatAllOauth2UserResponse_Item::set_head_img_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.head_img_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.head_img_url)
}
inline std::string* WechatAllOauth2UserResponse_Item::mutable_head_img_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_head_img_url();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.head_img_url)
  return _s;
}
inline const std::string& WechatAllOauth2UserResponse_Item::_internal_head_img_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.head_img_url_.Get();
}
inline void WechatAllOauth2UserResponse_Item::_internal_set_head_img_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.head_img_url_.Set(value, GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::_internal_mutable_head_img_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.head_img_url_.Mutable( GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::release_head_img_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.head_img_url)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.head_img_url_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.head_img_url_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void WechatAllOauth2UserResponse_Item::set_allocated_head_img_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.head_img_url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.head_img_url_.IsDefault()) {
          _impl_.head_img_url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.head_img_url)
}

// repeated string privilege = 17;
inline int WechatAllOauth2UserResponse_Item::_internal_privilege_size() const {
  return _internal_privilege().size();
}
inline int WechatAllOauth2UserResponse_Item::privilege_size() const {
  return _internal_privilege_size();
}
inline void WechatAllOauth2UserResponse_Item::clear_privilege() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.privilege_.Clear();
}
inline std::string* WechatAllOauth2UserResponse_Item::add_privilege()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_privilege()->Add();
  // @@protoc_insertion_point(field_add_mutable:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.privilege)
  return _s;
}
inline const std::string& WechatAllOauth2UserResponse_Item::privilege(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.privilege)
  return _internal_privilege().Get(index);
}
inline std::string* WechatAllOauth2UserResponse_Item::mutable_privilege(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.privilege)
  return _internal_mutable_privilege()->Mutable(index);
}
inline void WechatAllOauth2UserResponse_Item::set_privilege(int index, const std::string& value) {
  _internal_mutable_privilege()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.privilege)
}
inline void WechatAllOauth2UserResponse_Item::set_privilege(int index, std::string&& value) {
  _internal_mutable_privilege()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.privilege)
}
inline void WechatAllOauth2UserResponse_Item::set_privilege(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_privilege()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.privilege)
}
inline void WechatAllOauth2UserResponse_Item::set_privilege(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_privilege()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.privilege)
}
inline void WechatAllOauth2UserResponse_Item::set_privilege(int index, absl::string_view value) {
  _internal_mutable_privilege()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.privilege)
}
inline void WechatAllOauth2UserResponse_Item::add_privilege(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_privilege()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.privilege)
}
inline void WechatAllOauth2UserResponse_Item::add_privilege(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_privilege()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.privilege)
}
inline void WechatAllOauth2UserResponse_Item::add_privilege(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_privilege()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.privilege)
}
inline void WechatAllOauth2UserResponse_Item::add_privilege(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_privilege()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.privilege)
}
inline void WechatAllOauth2UserResponse_Item::add_privilege(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_privilege()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.privilege)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
WechatAllOauth2UserResponse_Item::privilege() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.privilege)
  return _internal_privilege();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
WechatAllOauth2UserResponse_Item::mutable_privilege() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.privilege)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_privilege();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
WechatAllOauth2UserResponse_Item::_internal_privilege() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.privilege_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
WechatAllOauth2UserResponse_Item::_internal_mutable_privilege() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.privilege_;
}

// string lang = 18;
inline void WechatAllOauth2UserResponse_Item::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& WechatAllOauth2UserResponse_Item::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatAllOauth2UserResponse_Item::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.lang)
}
inline std::string* WechatAllOauth2UserResponse_Item::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.lang)
  return _s;
}
inline const std::string& WechatAllOauth2UserResponse_Item::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void WechatAllOauth2UserResponse_Item::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* WechatAllOauth2UserResponse_Item::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.lang)
  return _impl_.lang_.Release();
}
inline void WechatAllOauth2UserResponse_Item::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatAllOauth2UserResponse.Item.lang)
}

// -------------------------------------------------------------------

// WechatAllOauth2UserResponse

// repeated .palm.metasequoia.v1.WechatAllOauth2UserResponse.Item items = 1;
inline int WechatAllOauth2UserResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int WechatAllOauth2UserResponse::items_size() const {
  return _internal_items_size();
}
inline void WechatAllOauth2UserResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::metasequoia::v1::WechatAllOauth2UserResponse_Item* WechatAllOauth2UserResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatAllOauth2UserResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::WechatAllOauth2UserResponse_Item>* WechatAllOauth2UserResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.metasequoia.v1.WechatAllOauth2UserResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::metasequoia::v1::WechatAllOauth2UserResponse_Item& WechatAllOauth2UserResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatAllOauth2UserResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::metasequoia::v1::WechatAllOauth2UserResponse_Item* WechatAllOauth2UserResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::WechatAllOauth2UserResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.metasequoia.v1.WechatAllOauth2UserResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::WechatAllOauth2UserResponse_Item>& WechatAllOauth2UserResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.metasequoia.v1.WechatAllOauth2UserResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::WechatAllOauth2UserResponse_Item>&
WechatAllOauth2UserResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::WechatAllOauth2UserResponse_Item>*
WechatAllOauth2UserResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// SignInByWechatOauth2Request

// string state = 1;
inline void SignInByWechatOauth2Request::clear_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_.ClearToEmpty();
}
inline const std::string& SignInByWechatOauth2Request::state() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SignInByWechatOauth2Request.state)
  return _internal_state();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SignInByWechatOauth2Request::set_state(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.state_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SignInByWechatOauth2Request.state)
}
inline std::string* SignInByWechatOauth2Request::mutable_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SignInByWechatOauth2Request.state)
  return _s;
}
inline const std::string& SignInByWechatOauth2Request::_internal_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.state_.Get();
}
inline void SignInByWechatOauth2Request::_internal_set_state(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.state_.Set(value, GetArena());
}
inline std::string* SignInByWechatOauth2Request::_internal_mutable_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.state_.Mutable( GetArena());
}
inline std::string* SignInByWechatOauth2Request::release_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SignInByWechatOauth2Request.state)
  return _impl_.state_.Release();
}
inline void SignInByWechatOauth2Request::set_allocated_state(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.state_.IsDefault()) {
          _impl_.state_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SignInByWechatOauth2Request.state)
}

// string code = 2;
inline void SignInByWechatOauth2Request::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& SignInByWechatOauth2Request::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SignInByWechatOauth2Request.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SignInByWechatOauth2Request::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SignInByWechatOauth2Request.code)
}
inline std::string* SignInByWechatOauth2Request::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SignInByWechatOauth2Request.code)
  return _s;
}
inline const std::string& SignInByWechatOauth2Request::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void SignInByWechatOauth2Request::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* SignInByWechatOauth2Request::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* SignInByWechatOauth2Request::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SignInByWechatOauth2Request.code)
  return _impl_.code_.Release();
}
inline void SignInByWechatOauth2Request::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SignInByWechatOauth2Request.code)
}

// string app_id = 3;
inline void SignInByWechatOauth2Request::clear_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.ClearToEmpty();
}
inline const std::string& SignInByWechatOauth2Request::app_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SignInByWechatOauth2Request.app_id)
  return _internal_app_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SignInByWechatOauth2Request::set_app_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SignInByWechatOauth2Request.app_id)
}
inline std::string* SignInByWechatOauth2Request::mutable_app_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_app_id();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SignInByWechatOauth2Request.app_id)
  return _s;
}
inline const std::string& SignInByWechatOauth2Request::_internal_app_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.app_id_.Get();
}
inline void SignInByWechatOauth2Request::_internal_set_app_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(value, GetArena());
}
inline std::string* SignInByWechatOauth2Request::_internal_mutable_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.app_id_.Mutable( GetArena());
}
inline std::string* SignInByWechatOauth2Request::release_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SignInByWechatOauth2Request.app_id)
  return _impl_.app_id_.Release();
}
inline void SignInByWechatOauth2Request::set_allocated_app_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.app_id_.IsDefault()) {
          _impl_.app_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SignInByWechatOauth2Request.app_id)
}

// .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 8;
inline void SignInByWechatOauth2Request::clear_language() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.language_ = 0;
}
inline ::palm::orchid::v1::WechatOauth2QrConnectRequest_Language SignInByWechatOauth2Request::language() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SignInByWechatOauth2Request.language)
  return _internal_language();
}
inline void SignInByWechatOauth2Request::set_language(::palm::orchid::v1::WechatOauth2QrConnectRequest_Language value) {
  _internal_set_language(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.SignInByWechatOauth2Request.language)
}
inline ::palm::orchid::v1::WechatOauth2QrConnectRequest_Language SignInByWechatOauth2Request::_internal_language() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::orchid::v1::WechatOauth2QrConnectRequest_Language>(_impl_.language_);
}
inline void SignInByWechatOauth2Request::_internal_set_language(::palm::orchid::v1::WechatOauth2QrConnectRequest_Language value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.language_ = value;
}

// .google.protobuf.Duration ttl = 11;
inline bool SignInByWechatOauth2Request::has_ttl() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ttl_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& SignInByWechatOauth2Request::_internal_ttl() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Duration* p = _impl_.ttl_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& SignInByWechatOauth2Request::ttl() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.SignInByWechatOauth2Request.ttl)
  return _internal_ttl();
}
inline void SignInByWechatOauth2Request::unsafe_arena_set_allocated_ttl(::google::protobuf::Duration* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ttl_);
  }
  _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.metasequoia.v1.SignInByWechatOauth2Request.ttl)
}
inline ::google::protobuf::Duration* SignInByWechatOauth2Request::release_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.ttl_;
  _impl_.ttl_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Duration* SignInByWechatOauth2Request::unsafe_arena_release_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.SignInByWechatOauth2Request.ttl)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.ttl_;
  _impl_.ttl_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* SignInByWechatOauth2Request::_internal_mutable_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ttl_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArena());
    _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.ttl_;
}
inline ::google::protobuf::Duration* SignInByWechatOauth2Request::mutable_ttl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Duration* _msg = _internal_mutable_ttl();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.SignInByWechatOauth2Request.ttl)
  return _msg;
}
inline void SignInByWechatOauth2Request::set_allocated_ttl(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ttl_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.SignInByWechatOauth2Request.ttl)
}

// -------------------------------------------------------------------

// WechatOauth2SignInStateResponse

// string state = 1;
inline void WechatOauth2SignInStateResponse::clear_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_.ClearToEmpty();
}
inline const std::string& WechatOauth2SignInStateResponse::state() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatOauth2SignInStateResponse.state)
  return _internal_state();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatOauth2SignInStateResponse::set_state(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.state_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatOauth2SignInStateResponse.state)
}
inline std::string* WechatOauth2SignInStateResponse::mutable_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatOauth2SignInStateResponse.state)
  return _s;
}
inline const std::string& WechatOauth2SignInStateResponse::_internal_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.state_.Get();
}
inline void WechatOauth2SignInStateResponse::_internal_set_state(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.state_.Set(value, GetArena());
}
inline std::string* WechatOauth2SignInStateResponse::_internal_mutable_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.state_.Mutable( GetArena());
}
inline std::string* WechatOauth2SignInStateResponse::release_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatOauth2SignInStateResponse.state)
  return _impl_.state_.Release();
}
inline void WechatOauth2SignInStateResponse::set_allocated_state(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.state_.IsDefault()) {
          _impl_.state_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatOauth2SignInStateResponse.state)
}

// -------------------------------------------------------------------

// WechatOauth2SignInUrlRequest

// string app_id = 1;
inline void WechatOauth2SignInUrlRequest::clear_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.ClearToEmpty();
}
inline const std::string& WechatOauth2SignInUrlRequest::app_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatOauth2SignInUrlRequest.app_id)
  return _internal_app_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatOauth2SignInUrlRequest::set_app_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatOauth2SignInUrlRequest.app_id)
}
inline std::string* WechatOauth2SignInUrlRequest::mutable_app_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_app_id();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatOauth2SignInUrlRequest.app_id)
  return _s;
}
inline const std::string& WechatOauth2SignInUrlRequest::_internal_app_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.app_id_.Get();
}
inline void WechatOauth2SignInUrlRequest::_internal_set_app_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(value, GetArena());
}
inline std::string* WechatOauth2SignInUrlRequest::_internal_mutable_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.app_id_.Mutable( GetArena());
}
inline std::string* WechatOauth2SignInUrlRequest::release_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatOauth2SignInUrlRequest.app_id)
  return _impl_.app_id_.Release();
}
inline void WechatOauth2SignInUrlRequest::set_allocated_app_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.app_id_.IsDefault()) {
          _impl_.app_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatOauth2SignInUrlRequest.app_id)
}

// string redirect_uri = 2;
inline void WechatOauth2SignInUrlRequest::clear_redirect_uri() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.redirect_uri_.ClearToEmpty();
}
inline const std::string& WechatOauth2SignInUrlRequest::redirect_uri() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatOauth2SignInUrlRequest.redirect_uri)
  return _internal_redirect_uri();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatOauth2SignInUrlRequest::set_redirect_uri(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.redirect_uri_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatOauth2SignInUrlRequest.redirect_uri)
}
inline std::string* WechatOauth2SignInUrlRequest::mutable_redirect_uri() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_redirect_uri();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatOauth2SignInUrlRequest.redirect_uri)
  return _s;
}
inline const std::string& WechatOauth2SignInUrlRequest::_internal_redirect_uri() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.redirect_uri_.Get();
}
inline void WechatOauth2SignInUrlRequest::_internal_set_redirect_uri(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.redirect_uri_.Set(value, GetArena());
}
inline std::string* WechatOauth2SignInUrlRequest::_internal_mutable_redirect_uri() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.redirect_uri_.Mutable( GetArena());
}
inline std::string* WechatOauth2SignInUrlRequest::release_redirect_uri() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatOauth2SignInUrlRequest.redirect_uri)
  return _impl_.redirect_uri_.Release();
}
inline void WechatOauth2SignInUrlRequest::set_allocated_redirect_uri(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.redirect_uri_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.redirect_uri_.IsDefault()) {
          _impl_.redirect_uri_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatOauth2SignInUrlRequest.redirect_uri)
}

// .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 3;
inline void WechatOauth2SignInUrlRequest::clear_language() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.language_ = 0;
}
inline ::palm::orchid::v1::WechatOauth2QrConnectRequest_Language WechatOauth2SignInUrlRequest::language() const {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatOauth2SignInUrlRequest.language)
  return _internal_language();
}
inline void WechatOauth2SignInUrlRequest::set_language(::palm::orchid::v1::WechatOauth2QrConnectRequest_Language value) {
  _internal_set_language(value);
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatOauth2SignInUrlRequest.language)
}
inline ::palm::orchid::v1::WechatOauth2QrConnectRequest_Language WechatOauth2SignInUrlRequest::_internal_language() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::orchid::v1::WechatOauth2QrConnectRequest_Language>(_impl_.language_);
}
inline void WechatOauth2SignInUrlRequest::_internal_set_language(::palm::orchid::v1::WechatOauth2QrConnectRequest_Language value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.language_ = value;
}

// -------------------------------------------------------------------

// WechatMiniProgramUser

// string app_id = 11;
inline void WechatMiniProgramUser::clear_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.ClearToEmpty();
}
inline const std::string& WechatMiniProgramUser::app_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatMiniProgramUser.app_id)
  return _internal_app_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatMiniProgramUser::set_app_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatMiniProgramUser.app_id)
}
inline std::string* WechatMiniProgramUser::mutable_app_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_app_id();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatMiniProgramUser.app_id)
  return _s;
}
inline const std::string& WechatMiniProgramUser::_internal_app_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.app_id_.Get();
}
inline void WechatMiniProgramUser::_internal_set_app_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(value, GetArena());
}
inline std::string* WechatMiniProgramUser::_internal_mutable_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.app_id_.Mutable( GetArena());
}
inline std::string* WechatMiniProgramUser::release_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatMiniProgramUser.app_id)
  return _impl_.app_id_.Release();
}
inline void WechatMiniProgramUser::set_allocated_app_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.app_id_.IsDefault()) {
          _impl_.app_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatMiniProgramUser.app_id)
}

// string open_id = 12;
inline void WechatMiniProgramUser::clear_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.ClearToEmpty();
}
inline const std::string& WechatMiniProgramUser::open_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatMiniProgramUser.open_id)
  return _internal_open_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatMiniProgramUser::set_open_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatMiniProgramUser.open_id)
}
inline std::string* WechatMiniProgramUser::mutable_open_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_open_id();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatMiniProgramUser.open_id)
  return _s;
}
inline const std::string& WechatMiniProgramUser::_internal_open_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.open_id_.Get();
}
inline void WechatMiniProgramUser::_internal_set_open_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(value, GetArena());
}
inline std::string* WechatMiniProgramUser::_internal_mutable_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.open_id_.Mutable( GetArena());
}
inline std::string* WechatMiniProgramUser::release_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatMiniProgramUser.open_id)
  return _impl_.open_id_.Release();
}
inline void WechatMiniProgramUser::set_allocated_open_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.open_id_.IsDefault()) {
          _impl_.open_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatMiniProgramUser.open_id)
}

// string union_id = 13;
inline void WechatMiniProgramUser::clear_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.union_id_.ClearToEmpty();
}
inline const std::string& WechatMiniProgramUser::union_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatMiniProgramUser.union_id)
  return _internal_union_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatMiniProgramUser::set_union_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.union_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatMiniProgramUser.union_id)
}
inline std::string* WechatMiniProgramUser::mutable_union_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_union_id();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatMiniProgramUser.union_id)
  return _s;
}
inline const std::string& WechatMiniProgramUser::_internal_union_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.union_id_.Get();
}
inline void WechatMiniProgramUser::_internal_set_union_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.union_id_.Set(value, GetArena());
}
inline std::string* WechatMiniProgramUser::_internal_mutable_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.union_id_.Mutable( GetArena());
}
inline std::string* WechatMiniProgramUser::release_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatMiniProgramUser.union_id)
  return _impl_.union_id_.Release();
}
inline void WechatMiniProgramUser::set_allocated_union_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.union_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.union_id_.IsDefault()) {
          _impl_.union_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatMiniProgramUser.union_id)
}

// optional string nickname = 21;
inline bool WechatMiniProgramUser::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void WechatMiniProgramUser::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& WechatMiniProgramUser::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatMiniProgramUser.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatMiniProgramUser::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatMiniProgramUser.nickname)
}
inline std::string* WechatMiniProgramUser::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatMiniProgramUser.nickname)
  return _s;
}
inline const std::string& WechatMiniProgramUser::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nickname_.Get();
}
inline void WechatMiniProgramUser::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* WechatMiniProgramUser::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* WechatMiniProgramUser::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatMiniProgramUser.nickname)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.nickname_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nickname_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void WechatMiniProgramUser::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatMiniProgramUser.nickname)
}

// optional string avatar_url = 22;
inline bool WechatMiniProgramUser::has_avatar_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void WechatMiniProgramUser::clear_avatar_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.avatar_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& WechatMiniProgramUser::avatar_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.metasequoia.v1.WechatMiniProgramUser.avatar_url)
  return _internal_avatar_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatMiniProgramUser::set_avatar_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.avatar_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.metasequoia.v1.WechatMiniProgramUser.avatar_url)
}
inline std::string* WechatMiniProgramUser::mutable_avatar_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_avatar_url();
  // @@protoc_insertion_point(field_mutable:palm.metasequoia.v1.WechatMiniProgramUser.avatar_url)
  return _s;
}
inline const std::string& WechatMiniProgramUser::_internal_avatar_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.avatar_url_.Get();
}
inline void WechatMiniProgramUser::_internal_set_avatar_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.avatar_url_.Set(value, GetArena());
}
inline std::string* WechatMiniProgramUser::_internal_mutable_avatar_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.avatar_url_.Mutable( GetArena());
}
inline std::string* WechatMiniProgramUser::release_avatar_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.metasequoia.v1.WechatMiniProgramUser.avatar_url)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.avatar_url_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avatar_url_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void WechatMiniProgramUser::set_allocated_avatar_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.avatar_url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.avatar_url_.IsDefault()) {
          _impl_.avatar_url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.metasequoia.v1.WechatMiniProgramUser.avatar_url)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace metasequoia
}  // namespace palm


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::palm::metasequoia::v1::MediaContent_Editor> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::metasequoia::v1::MediaContent_Editor>() {
  return ::palm::metasequoia::v1::MediaContent_Editor_descriptor();
}
template <>
struct is_proto_enum<::palm::metasequoia::v1::MediaContent_Status> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::metasequoia::v1::MediaContent_Status>() {
  return ::palm::metasequoia::v1::MediaContent_Status_descriptor();
}
template <>
struct is_proto_enum<::palm::metasequoia::v1::UserLogsResponse_Item_Level> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::metasequoia::v1::UserLogsResponse_Item_Level>() {
  return ::palm::metasequoia::v1::UserLogsResponse_Item_Level_descriptor();
}
template <>
struct is_proto_enum<::palm::metasequoia::v1::UserSignInResponse_By> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::metasequoia::v1::UserSignInResponse_By>() {
  return ::palm::metasequoia::v1::UserSignInResponse_By_descriptor();
}
template <>
struct is_proto_enum<::palm::metasequoia::v1::SmtpProfile_AuthMethod> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::metasequoia::v1::SmtpProfile_AuthMethod>() {
  return ::palm::metasequoia::v1::SmtpProfile_AuthMethod_descriptor();
}
template <>
struct is_proto_enum<::palm::metasequoia::v1::NotificationIndexResponse_Item_Level> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::metasequoia::v1::NotificationIndexResponse_Item_Level>() {
  return ::palm::metasequoia::v1::NotificationIndexResponse_Item_Level_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_metasequoia_2eproto_2epb_2eh
