// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cms.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cms_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_cms_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "metasequoia.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cms_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cms_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cms_2eproto;
namespace palm {
namespace cms {
namespace v1 {
class ArticleCreateRequest;
struct ArticleCreateRequestDefaultTypeInternal;
extern ArticleCreateRequestDefaultTypeInternal _ArticleCreateRequest_default_instance_;
class ArticleIndexResponse;
struct ArticleIndexResponseDefaultTypeInternal;
extern ArticleIndexResponseDefaultTypeInternal _ArticleIndexResponse_default_instance_;
class ArticleIndexResponse_Item;
struct ArticleIndexResponse_ItemDefaultTypeInternal;
extern ArticleIndexResponse_ItemDefaultTypeInternal _ArticleIndexResponse_Item_default_instance_;
class ArticleShowResponse;
struct ArticleShowResponseDefaultTypeInternal;
extern ArticleShowResponseDefaultTypeInternal _ArticleShowResponse_default_instance_;
class ArticleUpdateRequest;
struct ArticleUpdateRequestDefaultTypeInternal;
extern ArticleUpdateRequestDefaultTypeInternal _ArticleUpdateRequest_default_instance_;
class CommentCreateRequest;
struct CommentCreateRequestDefaultTypeInternal;
extern CommentCreateRequestDefaultTypeInternal _CommentCreateRequest_default_instance_;
class CommentIndexResponse;
struct CommentIndexResponseDefaultTypeInternal;
extern CommentIndexResponseDefaultTypeInternal _CommentIndexResponse_default_instance_;
class CommentIndexResponse_Item;
struct CommentIndexResponse_ItemDefaultTypeInternal;
extern CommentIndexResponse_ItemDefaultTypeInternal _CommentIndexResponse_Item_default_instance_;
class CommentUpdateRequest;
struct CommentUpdateRequestDefaultTypeInternal;
extern CommentUpdateRequestDefaultTypeInternal _CommentUpdateRequest_default_instance_;
}  // namespace v1
}  // namespace cms
}  // namespace palm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace palm {
namespace cms {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class ArticleCreateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.cms.v1.ArticleCreateRequest) */ {
 public:
  inline ArticleCreateRequest() : ArticleCreateRequest(nullptr) {}
  ~ArticleCreateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ArticleCreateRequest(::google::protobuf::internal::ConstantInitialized);

  ArticleCreateRequest(const ArticleCreateRequest& from);
  ArticleCreateRequest(ArticleCreateRequest&& from) noexcept
    : ArticleCreateRequest() {
    *this = ::std::move(from);
  }

  inline ArticleCreateRequest& operator=(const ArticleCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArticleCreateRequest& operator=(ArticleCreateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ArticleCreateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ArticleCreateRequest* internal_default_instance() {
    return reinterpret_cast<const ArticleCreateRequest*>(
               &_ArticleCreateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ArticleCreateRequest& a, ArticleCreateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ArticleCreateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArticleCreateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ArticleCreateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ArticleCreateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ArticleCreateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ArticleCreateRequest& from) {
    ArticleCreateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArticleCreateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.cms.v1.ArticleCreateRequest";
  }
  protected:
  explicit ArticleCreateRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagsFieldNumber = 4,
    kTitleFieldNumber = 1,
    kSummaryFieldNumber = 2,
    kBodyFieldNumber = 3,
  };
  // repeated int32 tags = 4;
  int tags_size() const;
  private:
  int _internal_tags_size() const;

  public:
  void clear_tags() ;
  ::int32_t tags(int index) const;
  void set_tags(int index, ::int32_t value);
  void add_tags(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& tags() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_tags();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_tags() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_tags();

  public:
  // string title = 1;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* ptr);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string summary = 2;
  void clear_summary() ;
  const std::string& summary() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_summary(Arg_&& arg, Args_... args);
  std::string* mutable_summary();
  PROTOBUF_NODISCARD std::string* release_summary();
  void set_allocated_summary(std::string* ptr);

  private:
  const std::string& _internal_summary() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_summary(
      const std::string& value);
  std::string* _internal_mutable_summary();

  public:
  // .palm.metasequoia.v1.MediaContent body = 3;
  bool has_body() const;
  void clear_body() ;
  const ::palm::metasequoia::v1::MediaContent& body() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::MediaContent* release_body();
  ::palm::metasequoia::v1::MediaContent* mutable_body();
  void set_allocated_body(::palm::metasequoia::v1::MediaContent* value);
  void unsafe_arena_set_allocated_body(::palm::metasequoia::v1::MediaContent* value);
  ::palm::metasequoia::v1::MediaContent* unsafe_arena_release_body();

  private:
  const ::palm::metasequoia::v1::MediaContent& _internal_body() const;
  ::palm::metasequoia::v1::MediaContent* _internal_mutable_body();

  public:
  // @@protoc_insertion_point(class_scope:palm.cms.v1.ArticleCreateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 1, 53, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> tags_;
    mutable ::google::protobuf::internal::CachedSize _tags_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr summary_;
    ::palm::metasequoia::v1::MediaContent* body_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cms_2eproto;
};// -------------------------------------------------------------------

class ArticleUpdateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.cms.v1.ArticleUpdateRequest) */ {
 public:
  inline ArticleUpdateRequest() : ArticleUpdateRequest(nullptr) {}
  ~ArticleUpdateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ArticleUpdateRequest(::google::protobuf::internal::ConstantInitialized);

  ArticleUpdateRequest(const ArticleUpdateRequest& from);
  ArticleUpdateRequest(ArticleUpdateRequest&& from) noexcept
    : ArticleUpdateRequest() {
    *this = ::std::move(from);
  }

  inline ArticleUpdateRequest& operator=(const ArticleUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArticleUpdateRequest& operator=(ArticleUpdateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ArticleUpdateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ArticleUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const ArticleUpdateRequest*>(
               &_ArticleUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ArticleUpdateRequest& a, ArticleUpdateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ArticleUpdateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArticleUpdateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ArticleUpdateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ArticleUpdateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ArticleUpdateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ArticleUpdateRequest& from) {
    ArticleUpdateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArticleUpdateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.cms.v1.ArticleUpdateRequest";
  }
  protected:
  explicit ArticleUpdateRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagsFieldNumber = 5,
    kTitleFieldNumber = 2,
    kSummaryFieldNumber = 3,
    kBodyFieldNumber = 4,
    kIdFieldNumber = 1,
  };
  // repeated int32 tags = 5;
  int tags_size() const;
  private:
  int _internal_tags_size() const;

  public:
  void clear_tags() ;
  ::int32_t tags(int index) const;
  void set_tags(int index, ::int32_t value);
  void add_tags(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& tags() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_tags();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_tags() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_tags();

  public:
  // string title = 2;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* ptr);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string summary = 3;
  void clear_summary() ;
  const std::string& summary() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_summary(Arg_&& arg, Args_... args);
  std::string* mutable_summary();
  PROTOBUF_NODISCARD std::string* release_summary();
  void set_allocated_summary(std::string* ptr);

  private:
  const std::string& _internal_summary() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_summary(
      const std::string& value);
  std::string* _internal_mutable_summary();

  public:
  // string body = 4;
  void clear_body() ;
  const std::string& body() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_body(Arg_&& arg, Args_... args);
  std::string* mutable_body();
  PROTOBUF_NODISCARD std::string* release_body();
  void set_allocated_body(std::string* ptr);

  private:
  const std::string& _internal_body() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_body(
      const std::string& value);
  std::string* _internal_mutable_body();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.cms.v1.ArticleUpdateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 57, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::int32_t> tags_;
    mutable ::google::protobuf::internal::CachedSize _tags_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr summary_;
    ::google::protobuf::internal::ArenaStringPtr body_;
    ::int32_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cms_2eproto;
};// -------------------------------------------------------------------

class ArticleIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.cms.v1.ArticleIndexResponse.Item) */ {
 public:
  inline ArticleIndexResponse_Item() : ArticleIndexResponse_Item(nullptr) {}
  ~ArticleIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ArticleIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  ArticleIndexResponse_Item(const ArticleIndexResponse_Item& from);
  ArticleIndexResponse_Item(ArticleIndexResponse_Item&& from) noexcept
    : ArticleIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline ArticleIndexResponse_Item& operator=(const ArticleIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArticleIndexResponse_Item& operator=(ArticleIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ArticleIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const ArticleIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const ArticleIndexResponse_Item*>(
               &_ArticleIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ArticleIndexResponse_Item& a, ArticleIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(ArticleIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArticleIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ArticleIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ArticleIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ArticleIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ArticleIndexResponse_Item& from) {
    ArticleIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArticleIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.cms.v1.ArticleIndexResponse.Item";
  }
  protected:
  explicit ArticleIndexResponse_Item(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagsFieldNumber = 12,
    kLangFieldNumber = 2,
    kTitleFieldNumber = 3,
    kSummaryFieldNumber = 4,
    kBodyFieldNumber = 5,
    kUpdatedAtFieldNumber = 9,
    kAuthorFieldNumber = 11,
    kIdFieldNumber = 1,
  };
  // repeated .palm.metasequoia.v1.TagIndexResponse.Item tags = 12;
  int tags_size() const;
  private:
  int _internal_tags_size() const;

  public:
  void clear_tags() ;
  ::palm::metasequoia::v1::TagIndexResponse_Item* mutable_tags(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::TagIndexResponse_Item >*
      mutable_tags();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::TagIndexResponse_Item>& _internal_tags() const;
  ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::TagIndexResponse_Item>* _internal_mutable_tags();
  public:
  const ::palm::metasequoia::v1::TagIndexResponse_Item& tags(int index) const;
  ::palm::metasequoia::v1::TagIndexResponse_Item* add_tags();
  const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::TagIndexResponse_Item >&
      tags() const;
  // string lang = 2;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* ptr);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // string title = 3;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* ptr);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string summary = 4;
  void clear_summary() ;
  const std::string& summary() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_summary(Arg_&& arg, Args_... args);
  std::string* mutable_summary();
  PROTOBUF_NODISCARD std::string* release_summary();
  void set_allocated_summary(std::string* ptr);

  private:
  const std::string& _internal_summary() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_summary(
      const std::string& value);
  std::string* _internal_mutable_summary();

  public:
  // .palm.metasequoia.v1.MediaContent body = 5;
  bool has_body() const;
  void clear_body() ;
  const ::palm::metasequoia::v1::MediaContent& body() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::MediaContent* release_body();
  ::palm::metasequoia::v1::MediaContent* mutable_body();
  void set_allocated_body(::palm::metasequoia::v1::MediaContent* value);
  void unsafe_arena_set_allocated_body(::palm::metasequoia::v1::MediaContent* value);
  ::palm::metasequoia::v1::MediaContent* unsafe_arena_release_body();

  private:
  const ::palm::metasequoia::v1::MediaContent& _internal_body() const;
  ::palm::metasequoia::v1::MediaContent* _internal_mutable_body();

  public:
  // .google.protobuf.Timestamp updated_at = 9;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // .palm.metasequoia.v1.UserDetail author = 11;
  bool has_author() const;
  void clear_author() ;
  const ::palm::metasequoia::v1::UserDetail& author() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::UserDetail* release_author();
  ::palm::metasequoia::v1::UserDetail* mutable_author();
  void set_allocated_author(::palm::metasequoia::v1::UserDetail* value);
  void unsafe_arena_set_allocated_author(::palm::metasequoia::v1::UserDetail* value);
  ::palm::metasequoia::v1::UserDetail* unsafe_arena_release_author();

  private:
  const ::palm::metasequoia::v1::UserDetail& _internal_author() const;
  ::palm::metasequoia::v1::UserDetail* _internal_mutable_author();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.cms.v1.ArticleIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 8, 4, 70, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::TagIndexResponse_Item > tags_;
    ::google::protobuf::internal::ArenaStringPtr lang_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr summary_;
    ::palm::metasequoia::v1::MediaContent* body_;
    ::google::protobuf::Timestamp* updated_at_;
    ::palm::metasequoia::v1::UserDetail* author_;
    ::int32_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cms_2eproto;
};// -------------------------------------------------------------------

class ArticleIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.cms.v1.ArticleIndexResponse) */ {
 public:
  inline ArticleIndexResponse() : ArticleIndexResponse(nullptr) {}
  ~ArticleIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ArticleIndexResponse(::google::protobuf::internal::ConstantInitialized);

  ArticleIndexResponse(const ArticleIndexResponse& from);
  ArticleIndexResponse(ArticleIndexResponse&& from) noexcept
    : ArticleIndexResponse() {
    *this = ::std::move(from);
  }

  inline ArticleIndexResponse& operator=(const ArticleIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArticleIndexResponse& operator=(ArticleIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ArticleIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ArticleIndexResponse* internal_default_instance() {
    return reinterpret_cast<const ArticleIndexResponse*>(
               &_ArticleIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ArticleIndexResponse& a, ArticleIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ArticleIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArticleIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ArticleIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ArticleIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ArticleIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ArticleIndexResponse& from) {
    ArticleIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArticleIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.cms.v1.ArticleIndexResponse";
  }
  protected:
  explicit ArticleIndexResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ArticleIndexResponse_Item Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 9,
  };
  // repeated .palm.cms.v1.ArticleIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::cms::v1::ArticleIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::cms::v1::ArticleIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::cms::v1::ArticleIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::cms::v1::ArticleIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::cms::v1::ArticleIndexResponse_Item& items(int index) const;
  ::palm::cms::v1::ArticleIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::cms::v1::ArticleIndexResponse_Item >&
      items() const;
  // .palm.metasequoia.v1.Pagination pagination = 9;
  bool has_pagination() const;
  void clear_pagination() ;
  const ::palm::metasequoia::v1::Pagination& pagination() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::Pagination* release_pagination();
  ::palm::metasequoia::v1::Pagination* mutable_pagination();
  void set_allocated_pagination(::palm::metasequoia::v1::Pagination* value);
  void unsafe_arena_set_allocated_pagination(::palm::metasequoia::v1::Pagination* value);
  ::palm::metasequoia::v1::Pagination* unsafe_arena_release_pagination();

  private:
  const ::palm::metasequoia::v1::Pagination& _internal_pagination() const;
  ::palm::metasequoia::v1::Pagination* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:palm.cms.v1.ArticleIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::cms::v1::ArticleIndexResponse_Item > items_;
    ::palm::metasequoia::v1::Pagination* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cms_2eproto;
};// -------------------------------------------------------------------

class ArticleShowResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.cms.v1.ArticleShowResponse) */ {
 public:
  inline ArticleShowResponse() : ArticleShowResponse(nullptr) {}
  ~ArticleShowResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ArticleShowResponse(::google::protobuf::internal::ConstantInitialized);

  ArticleShowResponse(const ArticleShowResponse& from);
  ArticleShowResponse(ArticleShowResponse&& from) noexcept
    : ArticleShowResponse() {
    *this = ::std::move(from);
  }

  inline ArticleShowResponse& operator=(const ArticleShowResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArticleShowResponse& operator=(ArticleShowResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ArticleShowResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ArticleShowResponse* internal_default_instance() {
    return reinterpret_cast<const ArticleShowResponse*>(
               &_ArticleShowResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ArticleShowResponse& a, ArticleShowResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ArticleShowResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArticleShowResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ArticleShowResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ArticleShowResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ArticleShowResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ArticleShowResponse& from) {
    ArticleShowResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArticleShowResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.cms.v1.ArticleShowResponse";
  }
  protected:
  explicit ArticleShowResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommentsFieldNumber = 2,
    kItemFieldNumber = 1,
  };
  // repeated .palm.cms.v1.CommentIndexResponse.Item comments = 2;
  int comments_size() const;
  private:
  int _internal_comments_size() const;

  public:
  void clear_comments() ;
  ::palm::cms::v1::CommentIndexResponse_Item* mutable_comments(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::cms::v1::CommentIndexResponse_Item >*
      mutable_comments();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::cms::v1::CommentIndexResponse_Item>& _internal_comments() const;
  ::google::protobuf::RepeatedPtrField<::palm::cms::v1::CommentIndexResponse_Item>* _internal_mutable_comments();
  public:
  const ::palm::cms::v1::CommentIndexResponse_Item& comments(int index) const;
  ::palm::cms::v1::CommentIndexResponse_Item* add_comments();
  const ::google::protobuf::RepeatedPtrField< ::palm::cms::v1::CommentIndexResponse_Item >&
      comments() const;
  // .palm.cms.v1.ArticleIndexResponse.Item item = 1;
  bool has_item() const;
  void clear_item() ;
  const ::palm::cms::v1::ArticleIndexResponse_Item& item() const;
  PROTOBUF_NODISCARD ::palm::cms::v1::ArticleIndexResponse_Item* release_item();
  ::palm::cms::v1::ArticleIndexResponse_Item* mutable_item();
  void set_allocated_item(::palm::cms::v1::ArticleIndexResponse_Item* value);
  void unsafe_arena_set_allocated_item(::palm::cms::v1::ArticleIndexResponse_Item* value);
  ::palm::cms::v1::ArticleIndexResponse_Item* unsafe_arena_release_item();

  private:
  const ::palm::cms::v1::ArticleIndexResponse_Item& _internal_item() const;
  ::palm::cms::v1::ArticleIndexResponse_Item* _internal_mutable_item();

  public:
  // @@protoc_insertion_point(class_scope:palm.cms.v1.ArticleShowResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::cms::v1::CommentIndexResponse_Item > comments_;
    ::palm::cms::v1::ArticleIndexResponse_Item* item_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cms_2eproto;
};// -------------------------------------------------------------------

class CommentCreateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.cms.v1.CommentCreateRequest) */ {
 public:
  inline CommentCreateRequest() : CommentCreateRequest(nullptr) {}
  ~CommentCreateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CommentCreateRequest(::google::protobuf::internal::ConstantInitialized);

  CommentCreateRequest(const CommentCreateRequest& from);
  CommentCreateRequest(CommentCreateRequest&& from) noexcept
    : CommentCreateRequest() {
    *this = ::std::move(from);
  }

  inline CommentCreateRequest& operator=(const CommentCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommentCreateRequest& operator=(CommentCreateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CommentCreateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CommentCreateRequest* internal_default_instance() {
    return reinterpret_cast<const CommentCreateRequest*>(
               &_CommentCreateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CommentCreateRequest& a, CommentCreateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CommentCreateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommentCreateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CommentCreateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CommentCreateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CommentCreateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CommentCreateRequest& from) {
    CommentCreateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommentCreateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.cms.v1.CommentCreateRequest";
  }
  protected:
  explicit CommentCreateRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBodyFieldNumber = 2,
    kArticleFieldNumber = 1,
  };
  // .palm.metasequoia.v1.MediaContent body = 2;
  bool has_body() const;
  void clear_body() ;
  const ::palm::metasequoia::v1::MediaContent& body() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::MediaContent* release_body();
  ::palm::metasequoia::v1::MediaContent* mutable_body();
  void set_allocated_body(::palm::metasequoia::v1::MediaContent* value);
  void unsafe_arena_set_allocated_body(::palm::metasequoia::v1::MediaContent* value);
  ::palm::metasequoia::v1::MediaContent* unsafe_arena_release_body();

  private:
  const ::palm::metasequoia::v1::MediaContent& _internal_body() const;
  ::palm::metasequoia::v1::MediaContent* _internal_mutable_body();

  public:
  // int32 article = 1;
  void clear_article() ;
  ::int32_t article() const;
  void set_article(::int32_t value);

  private:
  ::int32_t _internal_article() const;
  void _internal_set_article(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.cms.v1.CommentCreateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::palm::metasequoia::v1::MediaContent* body_;
    ::int32_t article_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cms_2eproto;
};// -------------------------------------------------------------------

class CommentUpdateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.cms.v1.CommentUpdateRequest) */ {
 public:
  inline CommentUpdateRequest() : CommentUpdateRequest(nullptr) {}
  ~CommentUpdateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CommentUpdateRequest(::google::protobuf::internal::ConstantInitialized);

  CommentUpdateRequest(const CommentUpdateRequest& from);
  CommentUpdateRequest(CommentUpdateRequest&& from) noexcept
    : CommentUpdateRequest() {
    *this = ::std::move(from);
  }

  inline CommentUpdateRequest& operator=(const CommentUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommentUpdateRequest& operator=(CommentUpdateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CommentUpdateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CommentUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const CommentUpdateRequest*>(
               &_CommentUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CommentUpdateRequest& a, CommentUpdateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CommentUpdateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommentUpdateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CommentUpdateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CommentUpdateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CommentUpdateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CommentUpdateRequest& from) {
    CommentUpdateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommentUpdateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.cms.v1.CommentUpdateRequest";
  }
  protected:
  explicit CommentUpdateRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBodyFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // string body = 2;
  void clear_body() ;
  const std::string& body() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_body(Arg_&& arg, Args_... args);
  std::string* mutable_body();
  PROTOBUF_NODISCARD std::string* release_body();
  void set_allocated_body(std::string* ptr);

  private:
  const std::string& _internal_body() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_body(
      const std::string& value);
  std::string* _internal_mutable_body();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.cms.v1.CommentUpdateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 45, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr body_;
    ::int32_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cms_2eproto;
};// -------------------------------------------------------------------

class CommentIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.cms.v1.CommentIndexResponse.Item) */ {
 public:
  inline CommentIndexResponse_Item() : CommentIndexResponse_Item(nullptr) {}
  ~CommentIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CommentIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  CommentIndexResponse_Item(const CommentIndexResponse_Item& from);
  CommentIndexResponse_Item(CommentIndexResponse_Item&& from) noexcept
    : CommentIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline CommentIndexResponse_Item& operator=(const CommentIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommentIndexResponse_Item& operator=(CommentIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CommentIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const CommentIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const CommentIndexResponse_Item*>(
               &_CommentIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CommentIndexResponse_Item& a, CommentIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(CommentIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommentIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CommentIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CommentIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CommentIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CommentIndexResponse_Item& from) {
    CommentIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommentIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.cms.v1.CommentIndexResponse.Item";
  }
  protected:
  explicit CommentIndexResponse_Item(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBodyFieldNumber = 3,
    kUpdatedAtFieldNumber = 9,
    kAuthorFieldNumber = 11,
    kIdFieldNumber = 1,
    kArticleFieldNumber = 2,
  };
  // .palm.metasequoia.v1.MediaContent body = 3;
  bool has_body() const;
  void clear_body() ;
  const ::palm::metasequoia::v1::MediaContent& body() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::MediaContent* release_body();
  ::palm::metasequoia::v1::MediaContent* mutable_body();
  void set_allocated_body(::palm::metasequoia::v1::MediaContent* value);
  void unsafe_arena_set_allocated_body(::palm::metasequoia::v1::MediaContent* value);
  ::palm::metasequoia::v1::MediaContent* unsafe_arena_release_body();

  private:
  const ::palm::metasequoia::v1::MediaContent& _internal_body() const;
  ::palm::metasequoia::v1::MediaContent* _internal_mutable_body();

  public:
  // .google.protobuf.Timestamp updated_at = 9;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // .palm.metasequoia.v1.UserDetail author = 11;
  bool has_author() const;
  void clear_author() ;
  const ::palm::metasequoia::v1::UserDetail& author() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::UserDetail* release_author();
  ::palm::metasequoia::v1::UserDetail* mutable_author();
  void set_allocated_author(::palm::metasequoia::v1::UserDetail* value);
  void unsafe_arena_set_allocated_author(::palm::metasequoia::v1::UserDetail* value);
  ::palm::metasequoia::v1::UserDetail* unsafe_arena_release_author();

  private:
  const ::palm::metasequoia::v1::UserDetail& _internal_author() const;
  ::palm::metasequoia::v1::UserDetail* _internal_mutable_author();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // int32 article = 2;
  void clear_article() ;
  ::int32_t article() const;
  void set_article(::int32_t value);

  private:
  ::int32_t _internal_article() const;
  void _internal_set_article(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.cms.v1.CommentIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 5, 3, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::palm::metasequoia::v1::MediaContent* body_;
    ::google::protobuf::Timestamp* updated_at_;
    ::palm::metasequoia::v1::UserDetail* author_;
    ::int32_t id_;
    ::int32_t article_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cms_2eproto;
};// -------------------------------------------------------------------

class CommentIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.cms.v1.CommentIndexResponse) */ {
 public:
  inline CommentIndexResponse() : CommentIndexResponse(nullptr) {}
  ~CommentIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CommentIndexResponse(::google::protobuf::internal::ConstantInitialized);

  CommentIndexResponse(const CommentIndexResponse& from);
  CommentIndexResponse(CommentIndexResponse&& from) noexcept
    : CommentIndexResponse() {
    *this = ::std::move(from);
  }

  inline CommentIndexResponse& operator=(const CommentIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommentIndexResponse& operator=(CommentIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CommentIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CommentIndexResponse* internal_default_instance() {
    return reinterpret_cast<const CommentIndexResponse*>(
               &_CommentIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CommentIndexResponse& a, CommentIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CommentIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommentIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CommentIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CommentIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CommentIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CommentIndexResponse& from) {
    CommentIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommentIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.cms.v1.CommentIndexResponse";
  }
  protected:
  explicit CommentIndexResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CommentIndexResponse_Item Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 9,
  };
  // repeated .palm.cms.v1.CommentIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::cms::v1::CommentIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::cms::v1::CommentIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::cms::v1::CommentIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::cms::v1::CommentIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::cms::v1::CommentIndexResponse_Item& items(int index) const;
  ::palm::cms::v1::CommentIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::cms::v1::CommentIndexResponse_Item >&
      items() const;
  // .palm.metasequoia.v1.Pagination pagination = 9;
  bool has_pagination() const;
  void clear_pagination() ;
  const ::palm::metasequoia::v1::Pagination& pagination() const;
  PROTOBUF_NODISCARD ::palm::metasequoia::v1::Pagination* release_pagination();
  ::palm::metasequoia::v1::Pagination* mutable_pagination();
  void set_allocated_pagination(::palm::metasequoia::v1::Pagination* value);
  void unsafe_arena_set_allocated_pagination(::palm::metasequoia::v1::Pagination* value);
  ::palm::metasequoia::v1::Pagination* unsafe_arena_release_pagination();

  private:
  const ::palm::metasequoia::v1::Pagination& _internal_pagination() const;
  ::palm::metasequoia::v1::Pagination* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:palm.cms.v1.CommentIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::cms::v1::CommentIndexResponse_Item > items_;
    ::palm::metasequoia::v1::Pagination* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cms_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ArticleCreateRequest

// string title = 1;
inline void ArticleCreateRequest::clear_title() {
  _impl_.title_.ClearToEmpty();
}
inline const std::string& ArticleCreateRequest::title() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleCreateRequest.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ArticleCreateRequest::set_title(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:palm.cms.v1.ArticleCreateRequest.title)
}
inline std::string* ArticleCreateRequest::mutable_title() {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.ArticleCreateRequest.title)
  return _s;
}
inline const std::string& ArticleCreateRequest::_internal_title() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.title_.Get();
}
inline void ArticleCreateRequest::_internal_set_title(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(value, GetArenaForAllocation());
}
inline std::string* ArticleCreateRequest::_internal_mutable_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.title_.Mutable( GetArenaForAllocation());
}
inline std::string* ArticleCreateRequest::release_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.ArticleCreateRequest.title)
  return _impl_.title_.Release();
}
inline void ArticleCreateRequest::set_allocated_title(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.ArticleCreateRequest.title)
}

// string summary = 2;
inline void ArticleCreateRequest::clear_summary() {
  _impl_.summary_.ClearToEmpty();
}
inline const std::string& ArticleCreateRequest::summary() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleCreateRequest.summary)
  return _internal_summary();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ArticleCreateRequest::set_summary(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.summary_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:palm.cms.v1.ArticleCreateRequest.summary)
}
inline std::string* ArticleCreateRequest::mutable_summary() {
  std::string* _s = _internal_mutable_summary();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.ArticleCreateRequest.summary)
  return _s;
}
inline const std::string& ArticleCreateRequest::_internal_summary() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.summary_.Get();
}
inline void ArticleCreateRequest::_internal_set_summary(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.summary_.Set(value, GetArenaForAllocation());
}
inline std::string* ArticleCreateRequest::_internal_mutable_summary() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.summary_.Mutable( GetArenaForAllocation());
}
inline std::string* ArticleCreateRequest::release_summary() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.ArticleCreateRequest.summary)
  return _impl_.summary_.Release();
}
inline void ArticleCreateRequest::set_allocated_summary(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.summary_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.summary_.IsDefault()) {
          _impl_.summary_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.ArticleCreateRequest.summary)
}

// .palm.metasequoia.v1.MediaContent body = 3;
inline bool ArticleCreateRequest::has_body() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.body_ != nullptr);
  return value;
}
inline const ::palm::metasequoia::v1::MediaContent& ArticleCreateRequest::_internal_body() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::MediaContent* p = _impl_.body_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::MediaContent&>(::palm::metasequoia::v1::_MediaContent_default_instance_);
}
inline const ::palm::metasequoia::v1::MediaContent& ArticleCreateRequest::body() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleCreateRequest.body)
  return _internal_body();
}
inline void ArticleCreateRequest::unsafe_arena_set_allocated_body(::palm::metasequoia::v1::MediaContent* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.body_);
  }
  _impl_.body_ = reinterpret_cast<::palm::metasequoia::v1::MediaContent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.cms.v1.ArticleCreateRequest.body)
}
inline ::palm::metasequoia::v1::MediaContent* ArticleCreateRequest::release_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::MediaContent* released = _impl_.body_;
  _impl_.body_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::MediaContent* ArticleCreateRequest::unsafe_arena_release_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.ArticleCreateRequest.body)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::MediaContent* temp = _impl_.body_;
  _impl_.body_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::MediaContent* ArticleCreateRequest::_internal_mutable_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.body_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::MediaContent>(GetArenaForAllocation());
    _impl_.body_ = reinterpret_cast<::palm::metasequoia::v1::MediaContent*>(p);
  }
  return _impl_.body_;
}
inline ::palm::metasequoia::v1::MediaContent* ArticleCreateRequest::mutable_body() {
  ::palm::metasequoia::v1::MediaContent* _msg = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.ArticleCreateRequest.body)
  return _msg;
}
inline void ArticleCreateRequest::set_allocated_body(::palm::metasequoia::v1::MediaContent* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.body_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.body_ = reinterpret_cast<::palm::metasequoia::v1::MediaContent*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.ArticleCreateRequest.body)
}

// repeated int32 tags = 4;
inline int ArticleCreateRequest::_internal_tags_size() const {
  return _internal_tags().size();
}
inline int ArticleCreateRequest::tags_size() const {
  return _internal_tags_size();
}
inline void ArticleCreateRequest::clear_tags() {
  _internal_mutable_tags()->Clear();
}
inline ::int32_t ArticleCreateRequest::tags(int index) const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleCreateRequest.tags)
  return _internal_tags().Get(index);
}
inline void ArticleCreateRequest::set_tags(int index, ::int32_t value) {
  _internal_mutable_tags()->Set(index, value);
  // @@protoc_insertion_point(field_set:palm.cms.v1.ArticleCreateRequest.tags)
}
inline void ArticleCreateRequest::add_tags(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tags()->Add(value);
  // @@protoc_insertion_point(field_add:palm.cms.v1.ArticleCreateRequest.tags)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& ArticleCreateRequest::tags() const {
  // @@protoc_insertion_point(field_list:palm.cms.v1.ArticleCreateRequest.tags)
  return _internal_tags();
}
inline ::google::protobuf::RepeatedField<::int32_t>* ArticleCreateRequest::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:palm.cms.v1.ArticleCreateRequest.tags)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tags();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& ArticleCreateRequest::_internal_tags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tags_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* ArticleCreateRequest::_internal_mutable_tags() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tags_;
}

// -------------------------------------------------------------------

// ArticleUpdateRequest

// int32 id = 1;
inline void ArticleUpdateRequest::clear_id() {
  _impl_.id_ = 0;
}
inline ::int32_t ArticleUpdateRequest::id() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleUpdateRequest.id)
  return _internal_id();
}
inline void ArticleUpdateRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.cms.v1.ArticleUpdateRequest.id)
}
inline ::int32_t ArticleUpdateRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void ArticleUpdateRequest::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string title = 2;
inline void ArticleUpdateRequest::clear_title() {
  _impl_.title_.ClearToEmpty();
}
inline const std::string& ArticleUpdateRequest::title() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleUpdateRequest.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ArticleUpdateRequest::set_title(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:palm.cms.v1.ArticleUpdateRequest.title)
}
inline std::string* ArticleUpdateRequest::mutable_title() {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.ArticleUpdateRequest.title)
  return _s;
}
inline const std::string& ArticleUpdateRequest::_internal_title() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.title_.Get();
}
inline void ArticleUpdateRequest::_internal_set_title(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(value, GetArenaForAllocation());
}
inline std::string* ArticleUpdateRequest::_internal_mutable_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.title_.Mutable( GetArenaForAllocation());
}
inline std::string* ArticleUpdateRequest::release_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.ArticleUpdateRequest.title)
  return _impl_.title_.Release();
}
inline void ArticleUpdateRequest::set_allocated_title(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.ArticleUpdateRequest.title)
}

// string summary = 3;
inline void ArticleUpdateRequest::clear_summary() {
  _impl_.summary_.ClearToEmpty();
}
inline const std::string& ArticleUpdateRequest::summary() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleUpdateRequest.summary)
  return _internal_summary();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ArticleUpdateRequest::set_summary(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.summary_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:palm.cms.v1.ArticleUpdateRequest.summary)
}
inline std::string* ArticleUpdateRequest::mutable_summary() {
  std::string* _s = _internal_mutable_summary();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.ArticleUpdateRequest.summary)
  return _s;
}
inline const std::string& ArticleUpdateRequest::_internal_summary() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.summary_.Get();
}
inline void ArticleUpdateRequest::_internal_set_summary(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.summary_.Set(value, GetArenaForAllocation());
}
inline std::string* ArticleUpdateRequest::_internal_mutable_summary() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.summary_.Mutable( GetArenaForAllocation());
}
inline std::string* ArticleUpdateRequest::release_summary() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.ArticleUpdateRequest.summary)
  return _impl_.summary_.Release();
}
inline void ArticleUpdateRequest::set_allocated_summary(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.summary_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.summary_.IsDefault()) {
          _impl_.summary_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.ArticleUpdateRequest.summary)
}

// string body = 4;
inline void ArticleUpdateRequest::clear_body() {
  _impl_.body_.ClearToEmpty();
}
inline const std::string& ArticleUpdateRequest::body() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleUpdateRequest.body)
  return _internal_body();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ArticleUpdateRequest::set_body(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.body_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:palm.cms.v1.ArticleUpdateRequest.body)
}
inline std::string* ArticleUpdateRequest::mutable_body() {
  std::string* _s = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.ArticleUpdateRequest.body)
  return _s;
}
inline const std::string& ArticleUpdateRequest::_internal_body() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.body_.Get();
}
inline void ArticleUpdateRequest::_internal_set_body(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.body_.Set(value, GetArenaForAllocation());
}
inline std::string* ArticleUpdateRequest::_internal_mutable_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.body_.Mutable( GetArenaForAllocation());
}
inline std::string* ArticleUpdateRequest::release_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.ArticleUpdateRequest.body)
  return _impl_.body_.Release();
}
inline void ArticleUpdateRequest::set_allocated_body(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.body_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.body_.IsDefault()) {
          _impl_.body_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.ArticleUpdateRequest.body)
}

// repeated int32 tags = 5;
inline int ArticleUpdateRequest::_internal_tags_size() const {
  return _internal_tags().size();
}
inline int ArticleUpdateRequest::tags_size() const {
  return _internal_tags_size();
}
inline void ArticleUpdateRequest::clear_tags() {
  _internal_mutable_tags()->Clear();
}
inline ::int32_t ArticleUpdateRequest::tags(int index) const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleUpdateRequest.tags)
  return _internal_tags().Get(index);
}
inline void ArticleUpdateRequest::set_tags(int index, ::int32_t value) {
  _internal_mutable_tags()->Set(index, value);
  // @@protoc_insertion_point(field_set:palm.cms.v1.ArticleUpdateRequest.tags)
}
inline void ArticleUpdateRequest::add_tags(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tags()->Add(value);
  // @@protoc_insertion_point(field_add:palm.cms.v1.ArticleUpdateRequest.tags)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& ArticleUpdateRequest::tags() const {
  // @@protoc_insertion_point(field_list:palm.cms.v1.ArticleUpdateRequest.tags)
  return _internal_tags();
}
inline ::google::protobuf::RepeatedField<::int32_t>* ArticleUpdateRequest::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:palm.cms.v1.ArticleUpdateRequest.tags)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tags();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& ArticleUpdateRequest::_internal_tags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tags_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* ArticleUpdateRequest::_internal_mutable_tags() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tags_;
}

// -------------------------------------------------------------------

// ArticleIndexResponse_Item

// int32 id = 1;
inline void ArticleIndexResponse_Item::clear_id() {
  _impl_.id_ = 0;
}
inline ::int32_t ArticleIndexResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleIndexResponse.Item.id)
  return _internal_id();
}
inline void ArticleIndexResponse_Item::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.cms.v1.ArticleIndexResponse.Item.id)
}
inline ::int32_t ArticleIndexResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void ArticleIndexResponse_Item::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string lang = 2;
inline void ArticleIndexResponse_Item::clear_lang() {
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& ArticleIndexResponse_Item::lang() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleIndexResponse.Item.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ArticleIndexResponse_Item::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:palm.cms.v1.ArticleIndexResponse.Item.lang)
}
inline std::string* ArticleIndexResponse_Item::mutable_lang() {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.ArticleIndexResponse.Item.lang)
  return _s;
}
inline const std::string& ArticleIndexResponse_Item::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void ArticleIndexResponse_Item::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArenaForAllocation());
}
inline std::string* ArticleIndexResponse_Item::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArenaForAllocation());
}
inline std::string* ArticleIndexResponse_Item::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.ArticleIndexResponse.Item.lang)
  return _impl_.lang_.Release();
}
inline void ArticleIndexResponse_Item::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.ArticleIndexResponse.Item.lang)
}

// string title = 3;
inline void ArticleIndexResponse_Item::clear_title() {
  _impl_.title_.ClearToEmpty();
}
inline const std::string& ArticleIndexResponse_Item::title() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleIndexResponse.Item.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ArticleIndexResponse_Item::set_title(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:palm.cms.v1.ArticleIndexResponse.Item.title)
}
inline std::string* ArticleIndexResponse_Item::mutable_title() {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.ArticleIndexResponse.Item.title)
  return _s;
}
inline const std::string& ArticleIndexResponse_Item::_internal_title() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.title_.Get();
}
inline void ArticleIndexResponse_Item::_internal_set_title(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(value, GetArenaForAllocation());
}
inline std::string* ArticleIndexResponse_Item::_internal_mutable_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.title_.Mutable( GetArenaForAllocation());
}
inline std::string* ArticleIndexResponse_Item::release_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.ArticleIndexResponse.Item.title)
  return _impl_.title_.Release();
}
inline void ArticleIndexResponse_Item::set_allocated_title(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.ArticleIndexResponse.Item.title)
}

// string summary = 4;
inline void ArticleIndexResponse_Item::clear_summary() {
  _impl_.summary_.ClearToEmpty();
}
inline const std::string& ArticleIndexResponse_Item::summary() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleIndexResponse.Item.summary)
  return _internal_summary();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ArticleIndexResponse_Item::set_summary(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.summary_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:palm.cms.v1.ArticleIndexResponse.Item.summary)
}
inline std::string* ArticleIndexResponse_Item::mutable_summary() {
  std::string* _s = _internal_mutable_summary();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.ArticleIndexResponse.Item.summary)
  return _s;
}
inline const std::string& ArticleIndexResponse_Item::_internal_summary() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.summary_.Get();
}
inline void ArticleIndexResponse_Item::_internal_set_summary(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.summary_.Set(value, GetArenaForAllocation());
}
inline std::string* ArticleIndexResponse_Item::_internal_mutable_summary() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.summary_.Mutable( GetArenaForAllocation());
}
inline std::string* ArticleIndexResponse_Item::release_summary() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.ArticleIndexResponse.Item.summary)
  return _impl_.summary_.Release();
}
inline void ArticleIndexResponse_Item::set_allocated_summary(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.summary_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.summary_.IsDefault()) {
          _impl_.summary_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.ArticleIndexResponse.Item.summary)
}

// .palm.metasequoia.v1.MediaContent body = 5;
inline bool ArticleIndexResponse_Item::has_body() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.body_ != nullptr);
  return value;
}
inline const ::palm::metasequoia::v1::MediaContent& ArticleIndexResponse_Item::_internal_body() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::MediaContent* p = _impl_.body_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::MediaContent&>(::palm::metasequoia::v1::_MediaContent_default_instance_);
}
inline const ::palm::metasequoia::v1::MediaContent& ArticleIndexResponse_Item::body() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleIndexResponse.Item.body)
  return _internal_body();
}
inline void ArticleIndexResponse_Item::unsafe_arena_set_allocated_body(::palm::metasequoia::v1::MediaContent* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.body_);
  }
  _impl_.body_ = reinterpret_cast<::palm::metasequoia::v1::MediaContent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.cms.v1.ArticleIndexResponse.Item.body)
}
inline ::palm::metasequoia::v1::MediaContent* ArticleIndexResponse_Item::release_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::MediaContent* released = _impl_.body_;
  _impl_.body_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::MediaContent* ArticleIndexResponse_Item::unsafe_arena_release_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.ArticleIndexResponse.Item.body)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::MediaContent* temp = _impl_.body_;
  _impl_.body_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::MediaContent* ArticleIndexResponse_Item::_internal_mutable_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.body_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::MediaContent>(GetArenaForAllocation());
    _impl_.body_ = reinterpret_cast<::palm::metasequoia::v1::MediaContent*>(p);
  }
  return _impl_.body_;
}
inline ::palm::metasequoia::v1::MediaContent* ArticleIndexResponse_Item::mutable_body() {
  ::palm::metasequoia::v1::MediaContent* _msg = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.ArticleIndexResponse.Item.body)
  return _msg;
}
inline void ArticleIndexResponse_Item::set_allocated_body(::palm::metasequoia::v1::MediaContent* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.body_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.body_ = reinterpret_cast<::palm::metasequoia::v1::MediaContent*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.ArticleIndexResponse.Item.body)
}

// .google.protobuf.Timestamp updated_at = 9;
inline bool ArticleIndexResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& ArticleIndexResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& ArticleIndexResponse_Item::updated_at() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleIndexResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void ArticleIndexResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.cms.v1.ArticleIndexResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* ArticleIndexResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* ArticleIndexResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.ArticleIndexResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* ArticleIndexResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* ArticleIndexResponse_Item::mutable_updated_at() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.ArticleIndexResponse.Item.updated_at)
  return _msg;
}
inline void ArticleIndexResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.ArticleIndexResponse.Item.updated_at)
}

// .palm.metasequoia.v1.UserDetail author = 11;
inline bool ArticleIndexResponse_Item::has_author() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.author_ != nullptr);
  return value;
}
inline const ::palm::metasequoia::v1::UserDetail& ArticleIndexResponse_Item::_internal_author() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::UserDetail* p = _impl_.author_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::UserDetail&>(::palm::metasequoia::v1::_UserDetail_default_instance_);
}
inline const ::palm::metasequoia::v1::UserDetail& ArticleIndexResponse_Item::author() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleIndexResponse.Item.author)
  return _internal_author();
}
inline void ArticleIndexResponse_Item::unsafe_arena_set_allocated_author(::palm::metasequoia::v1::UserDetail* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.author_);
  }
  _impl_.author_ = reinterpret_cast<::palm::metasequoia::v1::UserDetail*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.cms.v1.ArticleIndexResponse.Item.author)
}
inline ::palm::metasequoia::v1::UserDetail* ArticleIndexResponse_Item::release_author() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::palm::metasequoia::v1::UserDetail* released = _impl_.author_;
  _impl_.author_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::UserDetail* ArticleIndexResponse_Item::unsafe_arena_release_author() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.ArticleIndexResponse.Item.author)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::palm::metasequoia::v1::UserDetail* temp = _impl_.author_;
  _impl_.author_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::UserDetail* ArticleIndexResponse_Item::_internal_mutable_author() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.author_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::UserDetail>(GetArenaForAllocation());
    _impl_.author_ = reinterpret_cast<::palm::metasequoia::v1::UserDetail*>(p);
  }
  return _impl_.author_;
}
inline ::palm::metasequoia::v1::UserDetail* ArticleIndexResponse_Item::mutable_author() {
  ::palm::metasequoia::v1::UserDetail* _msg = _internal_mutable_author();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.ArticleIndexResponse.Item.author)
  return _msg;
}
inline void ArticleIndexResponse_Item::set_allocated_author(::palm::metasequoia::v1::UserDetail* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.author_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.author_ = reinterpret_cast<::palm::metasequoia::v1::UserDetail*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.ArticleIndexResponse.Item.author)
}

// repeated .palm.metasequoia.v1.TagIndexResponse.Item tags = 12;
inline int ArticleIndexResponse_Item::_internal_tags_size() const {
  return _internal_tags().size();
}
inline int ArticleIndexResponse_Item::tags_size() const {
  return _internal_tags_size();
}
inline ::palm::metasequoia::v1::TagIndexResponse_Item* ArticleIndexResponse_Item::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.ArticleIndexResponse.Item.tags)
  return _internal_mutable_tags()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::TagIndexResponse_Item >*
ArticleIndexResponse_Item::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:palm.cms.v1.ArticleIndexResponse.Item.tags)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tags();
}
inline const ::palm::metasequoia::v1::TagIndexResponse_Item& ArticleIndexResponse_Item::tags(int index) const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleIndexResponse.Item.tags)
    return _internal_tags().Get(index);
}
inline ::palm::metasequoia::v1::TagIndexResponse_Item* ArticleIndexResponse_Item::add_tags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::metasequoia::v1::TagIndexResponse_Item* _add = _internal_mutable_tags()->Add();
  // @@protoc_insertion_point(field_add:palm.cms.v1.ArticleIndexResponse.Item.tags)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::palm::metasequoia::v1::TagIndexResponse_Item >&
ArticleIndexResponse_Item::tags() const {
  // @@protoc_insertion_point(field_list:palm.cms.v1.ArticleIndexResponse.Item.tags)
  return _internal_tags();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::TagIndexResponse_Item>&
ArticleIndexResponse_Item::_internal_tags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tags_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::metasequoia::v1::TagIndexResponse_Item>*
ArticleIndexResponse_Item::_internal_mutable_tags() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tags_;
}

// -------------------------------------------------------------------

// ArticleIndexResponse

// repeated .palm.cms.v1.ArticleIndexResponse.Item items = 1;
inline int ArticleIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int ArticleIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void ArticleIndexResponse::clear_items() {
  _internal_mutable_items()->Clear();
}
inline ::palm::cms::v1::ArticleIndexResponse_Item* ArticleIndexResponse::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.ArticleIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::palm::cms::v1::ArticleIndexResponse_Item >*
ArticleIndexResponse::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:palm.cms.v1.ArticleIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::cms::v1::ArticleIndexResponse_Item& ArticleIndexResponse::items(int index) const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleIndexResponse.items)
    return _internal_items().Get(index);
}
inline ::palm::cms::v1::ArticleIndexResponse_Item* ArticleIndexResponse::add_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::cms::v1::ArticleIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.cms.v1.ArticleIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::palm::cms::v1::ArticleIndexResponse_Item >&
ArticleIndexResponse::items() const {
  // @@protoc_insertion_point(field_list:palm.cms.v1.ArticleIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::cms::v1::ArticleIndexResponse_Item>&
ArticleIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::cms::v1::ArticleIndexResponse_Item>*
ArticleIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// .palm.metasequoia.v1.Pagination pagination = 9;
inline bool ArticleIndexResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::palm::metasequoia::v1::Pagination& ArticleIndexResponse::_internal_pagination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::Pagination* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::Pagination&>(::palm::metasequoia::v1::_Pagination_default_instance_);
}
inline const ::palm::metasequoia::v1::Pagination& ArticleIndexResponse::pagination() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleIndexResponse.pagination)
  return _internal_pagination();
}
inline void ArticleIndexResponse::unsafe_arena_set_allocated_pagination(::palm::metasequoia::v1::Pagination* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.cms.v1.ArticleIndexResponse.pagination)
}
inline ::palm::metasequoia::v1::Pagination* ArticleIndexResponse::release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Pagination* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::Pagination* ArticleIndexResponse::unsafe_arena_release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.ArticleIndexResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Pagination* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::Pagination* ArticleIndexResponse::_internal_mutable_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::Pagination>(GetArenaForAllocation());
    _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(p);
  }
  return _impl_.pagination_;
}
inline ::palm::metasequoia::v1::Pagination* ArticleIndexResponse::mutable_pagination() {
  ::palm::metasequoia::v1::Pagination* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.ArticleIndexResponse.pagination)
  return _msg;
}
inline void ArticleIndexResponse::set_allocated_pagination(::palm::metasequoia::v1::Pagination* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.ArticleIndexResponse.pagination)
}

// -------------------------------------------------------------------

// ArticleShowResponse

// .palm.cms.v1.ArticleIndexResponse.Item item = 1;
inline bool ArticleShowResponse::has_item() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.item_ != nullptr);
  return value;
}
inline void ArticleShowResponse::clear_item() {
  if (_impl_.item_ != nullptr) _impl_.item_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::cms::v1::ArticleIndexResponse_Item& ArticleShowResponse::_internal_item() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::cms::v1::ArticleIndexResponse_Item* p = _impl_.item_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::cms::v1::ArticleIndexResponse_Item&>(::palm::cms::v1::_ArticleIndexResponse_Item_default_instance_);
}
inline const ::palm::cms::v1::ArticleIndexResponse_Item& ArticleShowResponse::item() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleShowResponse.item)
  return _internal_item();
}
inline void ArticleShowResponse::unsafe_arena_set_allocated_item(::palm::cms::v1::ArticleIndexResponse_Item* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.item_);
  }
  _impl_.item_ = reinterpret_cast<::palm::cms::v1::ArticleIndexResponse_Item*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.cms.v1.ArticleShowResponse.item)
}
inline ::palm::cms::v1::ArticleIndexResponse_Item* ArticleShowResponse::release_item() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::cms::v1::ArticleIndexResponse_Item* released = _impl_.item_;
  _impl_.item_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::cms::v1::ArticleIndexResponse_Item* ArticleShowResponse::unsafe_arena_release_item() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.ArticleShowResponse.item)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::cms::v1::ArticleIndexResponse_Item* temp = _impl_.item_;
  _impl_.item_ = nullptr;
  return temp;
}
inline ::palm::cms::v1::ArticleIndexResponse_Item* ArticleShowResponse::_internal_mutable_item() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.item_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::cms::v1::ArticleIndexResponse_Item>(GetArenaForAllocation());
    _impl_.item_ = reinterpret_cast<::palm::cms::v1::ArticleIndexResponse_Item*>(p);
  }
  return _impl_.item_;
}
inline ::palm::cms::v1::ArticleIndexResponse_Item* ArticleShowResponse::mutable_item() {
  ::palm::cms::v1::ArticleIndexResponse_Item* _msg = _internal_mutable_item();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.ArticleShowResponse.item)
  return _msg;
}
inline void ArticleShowResponse::set_allocated_item(::palm::cms::v1::ArticleIndexResponse_Item* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::cms::v1::ArticleIndexResponse_Item*>(_impl_.item_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::palm::cms::v1::ArticleIndexResponse_Item*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.item_ = reinterpret_cast<::palm::cms::v1::ArticleIndexResponse_Item*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.ArticleShowResponse.item)
}

// repeated .palm.cms.v1.CommentIndexResponse.Item comments = 2;
inline int ArticleShowResponse::_internal_comments_size() const {
  return _internal_comments().size();
}
inline int ArticleShowResponse::comments_size() const {
  return _internal_comments_size();
}
inline void ArticleShowResponse::clear_comments() {
  _internal_mutable_comments()->Clear();
}
inline ::palm::cms::v1::CommentIndexResponse_Item* ArticleShowResponse::mutable_comments(int index) {
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.ArticleShowResponse.comments)
  return _internal_mutable_comments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::palm::cms::v1::CommentIndexResponse_Item >*
ArticleShowResponse::mutable_comments() {
  // @@protoc_insertion_point(field_mutable_list:palm.cms.v1.ArticleShowResponse.comments)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_comments();
}
inline const ::palm::cms::v1::CommentIndexResponse_Item& ArticleShowResponse::comments(int index) const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.ArticleShowResponse.comments)
    return _internal_comments().Get(index);
}
inline ::palm::cms::v1::CommentIndexResponse_Item* ArticleShowResponse::add_comments() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::cms::v1::CommentIndexResponse_Item* _add = _internal_mutable_comments()->Add();
  // @@protoc_insertion_point(field_add:palm.cms.v1.ArticleShowResponse.comments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::palm::cms::v1::CommentIndexResponse_Item >&
ArticleShowResponse::comments() const {
  // @@protoc_insertion_point(field_list:palm.cms.v1.ArticleShowResponse.comments)
  return _internal_comments();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::cms::v1::CommentIndexResponse_Item>&
ArticleShowResponse::_internal_comments() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.comments_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::cms::v1::CommentIndexResponse_Item>*
ArticleShowResponse::_internal_mutable_comments() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.comments_;
}

// -------------------------------------------------------------------

// CommentCreateRequest

// int32 article = 1;
inline void CommentCreateRequest::clear_article() {
  _impl_.article_ = 0;
}
inline ::int32_t CommentCreateRequest::article() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.CommentCreateRequest.article)
  return _internal_article();
}
inline void CommentCreateRequest::set_article(::int32_t value) {
  _internal_set_article(value);
  // @@protoc_insertion_point(field_set:palm.cms.v1.CommentCreateRequest.article)
}
inline ::int32_t CommentCreateRequest::_internal_article() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.article_;
}
inline void CommentCreateRequest::_internal_set_article(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.article_ = value;
}

// .palm.metasequoia.v1.MediaContent body = 2;
inline bool CommentCreateRequest::has_body() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.body_ != nullptr);
  return value;
}
inline const ::palm::metasequoia::v1::MediaContent& CommentCreateRequest::_internal_body() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::MediaContent* p = _impl_.body_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::MediaContent&>(::palm::metasequoia::v1::_MediaContent_default_instance_);
}
inline const ::palm::metasequoia::v1::MediaContent& CommentCreateRequest::body() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.CommentCreateRequest.body)
  return _internal_body();
}
inline void CommentCreateRequest::unsafe_arena_set_allocated_body(::palm::metasequoia::v1::MediaContent* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.body_);
  }
  _impl_.body_ = reinterpret_cast<::palm::metasequoia::v1::MediaContent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.cms.v1.CommentCreateRequest.body)
}
inline ::palm::metasequoia::v1::MediaContent* CommentCreateRequest::release_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::MediaContent* released = _impl_.body_;
  _impl_.body_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::MediaContent* CommentCreateRequest::unsafe_arena_release_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.CommentCreateRequest.body)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::MediaContent* temp = _impl_.body_;
  _impl_.body_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::MediaContent* CommentCreateRequest::_internal_mutable_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.body_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::MediaContent>(GetArenaForAllocation());
    _impl_.body_ = reinterpret_cast<::palm::metasequoia::v1::MediaContent*>(p);
  }
  return _impl_.body_;
}
inline ::palm::metasequoia::v1::MediaContent* CommentCreateRequest::mutable_body() {
  ::palm::metasequoia::v1::MediaContent* _msg = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.CommentCreateRequest.body)
  return _msg;
}
inline void CommentCreateRequest::set_allocated_body(::palm::metasequoia::v1::MediaContent* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.body_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.body_ = reinterpret_cast<::palm::metasequoia::v1::MediaContent*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.CommentCreateRequest.body)
}

// -------------------------------------------------------------------

// CommentUpdateRequest

// int32 id = 1;
inline void CommentUpdateRequest::clear_id() {
  _impl_.id_ = 0;
}
inline ::int32_t CommentUpdateRequest::id() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.CommentUpdateRequest.id)
  return _internal_id();
}
inline void CommentUpdateRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.cms.v1.CommentUpdateRequest.id)
}
inline ::int32_t CommentUpdateRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void CommentUpdateRequest::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string body = 2;
inline void CommentUpdateRequest::clear_body() {
  _impl_.body_.ClearToEmpty();
}
inline const std::string& CommentUpdateRequest::body() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.CommentUpdateRequest.body)
  return _internal_body();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CommentUpdateRequest::set_body(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.body_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:palm.cms.v1.CommentUpdateRequest.body)
}
inline std::string* CommentUpdateRequest::mutable_body() {
  std::string* _s = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.CommentUpdateRequest.body)
  return _s;
}
inline const std::string& CommentUpdateRequest::_internal_body() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.body_.Get();
}
inline void CommentUpdateRequest::_internal_set_body(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.body_.Set(value, GetArenaForAllocation());
}
inline std::string* CommentUpdateRequest::_internal_mutable_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.body_.Mutable( GetArenaForAllocation());
}
inline std::string* CommentUpdateRequest::release_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.CommentUpdateRequest.body)
  return _impl_.body_.Release();
}
inline void CommentUpdateRequest::set_allocated_body(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.body_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.body_.IsDefault()) {
          _impl_.body_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.CommentUpdateRequest.body)
}

// -------------------------------------------------------------------

// CommentIndexResponse_Item

// int32 id = 1;
inline void CommentIndexResponse_Item::clear_id() {
  _impl_.id_ = 0;
}
inline ::int32_t CommentIndexResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.CommentIndexResponse.Item.id)
  return _internal_id();
}
inline void CommentIndexResponse_Item::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.cms.v1.CommentIndexResponse.Item.id)
}
inline ::int32_t CommentIndexResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void CommentIndexResponse_Item::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// int32 article = 2;
inline void CommentIndexResponse_Item::clear_article() {
  _impl_.article_ = 0;
}
inline ::int32_t CommentIndexResponse_Item::article() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.CommentIndexResponse.Item.article)
  return _internal_article();
}
inline void CommentIndexResponse_Item::set_article(::int32_t value) {
  _internal_set_article(value);
  // @@protoc_insertion_point(field_set:palm.cms.v1.CommentIndexResponse.Item.article)
}
inline ::int32_t CommentIndexResponse_Item::_internal_article() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.article_;
}
inline void CommentIndexResponse_Item::_internal_set_article(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.article_ = value;
}

// .palm.metasequoia.v1.MediaContent body = 3;
inline bool CommentIndexResponse_Item::has_body() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.body_ != nullptr);
  return value;
}
inline const ::palm::metasequoia::v1::MediaContent& CommentIndexResponse_Item::_internal_body() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::MediaContent* p = _impl_.body_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::MediaContent&>(::palm::metasequoia::v1::_MediaContent_default_instance_);
}
inline const ::palm::metasequoia::v1::MediaContent& CommentIndexResponse_Item::body() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.CommentIndexResponse.Item.body)
  return _internal_body();
}
inline void CommentIndexResponse_Item::unsafe_arena_set_allocated_body(::palm::metasequoia::v1::MediaContent* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.body_);
  }
  _impl_.body_ = reinterpret_cast<::palm::metasequoia::v1::MediaContent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.cms.v1.CommentIndexResponse.Item.body)
}
inline ::palm::metasequoia::v1::MediaContent* CommentIndexResponse_Item::release_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::MediaContent* released = _impl_.body_;
  _impl_.body_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::MediaContent* CommentIndexResponse_Item::unsafe_arena_release_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.CommentIndexResponse.Item.body)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::MediaContent* temp = _impl_.body_;
  _impl_.body_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::MediaContent* CommentIndexResponse_Item::_internal_mutable_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.body_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::MediaContent>(GetArenaForAllocation());
    _impl_.body_ = reinterpret_cast<::palm::metasequoia::v1::MediaContent*>(p);
  }
  return _impl_.body_;
}
inline ::palm::metasequoia::v1::MediaContent* CommentIndexResponse_Item::mutable_body() {
  ::palm::metasequoia::v1::MediaContent* _msg = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.CommentIndexResponse.Item.body)
  return _msg;
}
inline void CommentIndexResponse_Item::set_allocated_body(::palm::metasequoia::v1::MediaContent* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.body_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.body_ = reinterpret_cast<::palm::metasequoia::v1::MediaContent*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.CommentIndexResponse.Item.body)
}

// .google.protobuf.Timestamp updated_at = 9;
inline bool CommentIndexResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& CommentIndexResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& CommentIndexResponse_Item::updated_at() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.CommentIndexResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void CommentIndexResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.cms.v1.CommentIndexResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* CommentIndexResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* CommentIndexResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.CommentIndexResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* CommentIndexResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* CommentIndexResponse_Item::mutable_updated_at() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.CommentIndexResponse.Item.updated_at)
  return _msg;
}
inline void CommentIndexResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.CommentIndexResponse.Item.updated_at)
}

// .palm.metasequoia.v1.UserDetail author = 11;
inline bool CommentIndexResponse_Item::has_author() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.author_ != nullptr);
  return value;
}
inline const ::palm::metasequoia::v1::UserDetail& CommentIndexResponse_Item::_internal_author() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::UserDetail* p = _impl_.author_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::UserDetail&>(::palm::metasequoia::v1::_UserDetail_default_instance_);
}
inline const ::palm::metasequoia::v1::UserDetail& CommentIndexResponse_Item::author() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.CommentIndexResponse.Item.author)
  return _internal_author();
}
inline void CommentIndexResponse_Item::unsafe_arena_set_allocated_author(::palm::metasequoia::v1::UserDetail* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.author_);
  }
  _impl_.author_ = reinterpret_cast<::palm::metasequoia::v1::UserDetail*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.cms.v1.CommentIndexResponse.Item.author)
}
inline ::palm::metasequoia::v1::UserDetail* CommentIndexResponse_Item::release_author() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::palm::metasequoia::v1::UserDetail* released = _impl_.author_;
  _impl_.author_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::UserDetail* CommentIndexResponse_Item::unsafe_arena_release_author() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.CommentIndexResponse.Item.author)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::palm::metasequoia::v1::UserDetail* temp = _impl_.author_;
  _impl_.author_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::UserDetail* CommentIndexResponse_Item::_internal_mutable_author() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.author_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::UserDetail>(GetArenaForAllocation());
    _impl_.author_ = reinterpret_cast<::palm::metasequoia::v1::UserDetail*>(p);
  }
  return _impl_.author_;
}
inline ::palm::metasequoia::v1::UserDetail* CommentIndexResponse_Item::mutable_author() {
  ::palm::metasequoia::v1::UserDetail* _msg = _internal_mutable_author();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.CommentIndexResponse.Item.author)
  return _msg;
}
inline void CommentIndexResponse_Item::set_allocated_author(::palm::metasequoia::v1::UserDetail* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.author_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.author_ = reinterpret_cast<::palm::metasequoia::v1::UserDetail*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.CommentIndexResponse.Item.author)
}

// -------------------------------------------------------------------

// CommentIndexResponse

// repeated .palm.cms.v1.CommentIndexResponse.Item items = 1;
inline int CommentIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int CommentIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void CommentIndexResponse::clear_items() {
  _internal_mutable_items()->Clear();
}
inline ::palm::cms::v1::CommentIndexResponse_Item* CommentIndexResponse::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.CommentIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::palm::cms::v1::CommentIndexResponse_Item >*
CommentIndexResponse::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:palm.cms.v1.CommentIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::cms::v1::CommentIndexResponse_Item& CommentIndexResponse::items(int index) const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.CommentIndexResponse.items)
    return _internal_items().Get(index);
}
inline ::palm::cms::v1::CommentIndexResponse_Item* CommentIndexResponse::add_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::cms::v1::CommentIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.cms.v1.CommentIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::palm::cms::v1::CommentIndexResponse_Item >&
CommentIndexResponse::items() const {
  // @@protoc_insertion_point(field_list:palm.cms.v1.CommentIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::cms::v1::CommentIndexResponse_Item>&
CommentIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::cms::v1::CommentIndexResponse_Item>*
CommentIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// .palm.metasequoia.v1.Pagination pagination = 9;
inline bool CommentIndexResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::palm::metasequoia::v1::Pagination& CommentIndexResponse::_internal_pagination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::metasequoia::v1::Pagination* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::metasequoia::v1::Pagination&>(::palm::metasequoia::v1::_Pagination_default_instance_);
}
inline const ::palm::metasequoia::v1::Pagination& CommentIndexResponse::pagination() const {
  // @@protoc_insertion_point(field_get:palm.cms.v1.CommentIndexResponse.pagination)
  return _internal_pagination();
}
inline void CommentIndexResponse::unsafe_arena_set_allocated_pagination(::palm::metasequoia::v1::Pagination* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.cms.v1.CommentIndexResponse.pagination)
}
inline ::palm::metasequoia::v1::Pagination* CommentIndexResponse::release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Pagination* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::metasequoia::v1::Pagination* CommentIndexResponse::unsafe_arena_release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.cms.v1.CommentIndexResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::metasequoia::v1::Pagination* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::palm::metasequoia::v1::Pagination* CommentIndexResponse::_internal_mutable_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::metasequoia::v1::Pagination>(GetArenaForAllocation());
    _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(p);
  }
  return _impl_.pagination_;
}
inline ::palm::metasequoia::v1::Pagination* CommentIndexResponse::mutable_pagination() {
  ::palm::metasequoia::v1::Pagination* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:palm.cms.v1.CommentIndexResponse.pagination)
  return _msg;
}
inline void CommentIndexResponse::set_allocated_pagination(::palm::metasequoia::v1::Pagination* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::palm::metasequoia::v1::Pagination*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.cms.v1.CommentIndexResponse.pagination)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace cms
}  // namespace palm


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_cms_2eproto_2epb_2eh
