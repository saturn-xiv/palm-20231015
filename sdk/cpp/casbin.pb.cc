// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: casbin.proto

#include "casbin.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace palm {
namespace casbin {
namespace v1 {
PROTOBUF_CONSTEXPR NewEnforcerRequest::NewEnforcerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.modeltext_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.adapterhandle_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NewEnforcerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewEnforcerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewEnforcerRequestDefaultTypeInternal() {}
  union {
    NewEnforcerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewEnforcerRequestDefaultTypeInternal _NewEnforcerRequest_default_instance_;
PROTOBUF_CONSTEXPR NewEnforcerReply::NewEnforcerReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.handler_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NewEnforcerReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewEnforcerReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewEnforcerReplyDefaultTypeInternal() {}
  union {
    NewEnforcerReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewEnforcerReplyDefaultTypeInternal _NewEnforcerReply_default_instance_;
PROTOBUF_CONSTEXPR NewAdapterRequest::NewAdapterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.adaptername_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.drivername_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.connectstring_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.dbspecified_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NewAdapterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewAdapterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewAdapterRequestDefaultTypeInternal() {}
  union {
    NewAdapterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewAdapterRequestDefaultTypeInternal _NewAdapterRequest_default_instance_;
PROTOBUF_CONSTEXPR NewAdapterReply::NewAdapterReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.handler_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NewAdapterReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewAdapterReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewAdapterReplyDefaultTypeInternal() {}
  union {
    NewAdapterReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewAdapterReplyDefaultTypeInternal _NewAdapterReply_default_instance_;
PROTOBUF_CONSTEXPR EnforceRequest::EnforceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/{}
  , /*decltype(_impl_.enforcerhandler_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EnforceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnforceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnforceRequestDefaultTypeInternal() {}
  union {
    EnforceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnforceRequestDefaultTypeInternal _EnforceRequest_default_instance_;
PROTOBUF_CONSTEXPR BoolReply::BoolReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.res_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BoolReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BoolReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BoolReplyDefaultTypeInternal() {}
  union {
    BoolReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoolReplyDefaultTypeInternal _BoolReply_default_instance_;
PROTOBUF_CONSTEXPR EmptyRequest::EmptyRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.handler_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EmptyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyRequestDefaultTypeInternal() {}
  union {
    EmptyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyRequestDefaultTypeInternal _EmptyRequest_default_instance_;
PROTOBUF_CONSTEXPR EmptyReply::EmptyReply(
    ::_pbi::ConstantInitialized) {}
struct EmptyReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyReplyDefaultTypeInternal() {}
  union {
    EmptyReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyReplyDefaultTypeInternal _EmptyReply_default_instance_;
PROTOBUF_CONSTEXPR PolicyRequest::PolicyRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.params_)*/{}
  , /*decltype(_impl_.ptype_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.enforcerhandler_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PolicyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyRequestDefaultTypeInternal() {}
  union {
    PolicyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyRequestDefaultTypeInternal _PolicyRequest_default_instance_;
PROTOBUF_CONSTEXPR SimpleGetRequest::SimpleGetRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ptype_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.enforcerhandler_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SimpleGetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimpleGetRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimpleGetRequestDefaultTypeInternal() {}
  union {
    SimpleGetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimpleGetRequestDefaultTypeInternal _SimpleGetRequest_default_instance_;
PROTOBUF_CONSTEXPR ArrayReply::ArrayReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.array_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ArrayReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArrayReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArrayReplyDefaultTypeInternal() {}
  union {
    ArrayReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArrayReplyDefaultTypeInternal _ArrayReply_default_instance_;
PROTOBUF_CONSTEXPR FilteredPolicyRequest::FilteredPolicyRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.fieldvalues_)*/{}
  , /*decltype(_impl_.ptype_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.enforcerhandler_)*/0
  , /*decltype(_impl_.fieldindex_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FilteredPolicyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FilteredPolicyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FilteredPolicyRequestDefaultTypeInternal() {}
  union {
    FilteredPolicyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FilteredPolicyRequestDefaultTypeInternal _FilteredPolicyRequest_default_instance_;
PROTOBUF_CONSTEXPR UserRoleRequest::UserRoleRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.domain_)*/{}
  , /*decltype(_impl_.user_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.role_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.enforcerhandler_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserRoleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserRoleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserRoleRequestDefaultTypeInternal() {}
  union {
    UserRoleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserRoleRequestDefaultTypeInternal _UserRoleRequest_default_instance_;
PROTOBUF_CONSTEXPR PermissionRequest::PermissionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.permissions_)*/{}
  , /*decltype(_impl_.domain_)*/{}
  , /*decltype(_impl_.user_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.enforcerhandler_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PermissionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PermissionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PermissionRequestDefaultTypeInternal() {}
  union {
    PermissionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PermissionRequestDefaultTypeInternal _PermissionRequest_default_instance_;
PROTOBUF_CONSTEXPR Array2DReply_d::Array2DReply_d(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.d1_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Array2DReply_dDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Array2DReply_dDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Array2DReply_dDefaultTypeInternal() {}
  union {
    Array2DReply_d _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Array2DReply_dDefaultTypeInternal _Array2DReply_d_default_instance_;
PROTOBUF_CONSTEXPR Array2DReply::Array2DReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.d2_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Array2DReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Array2DReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Array2DReplyDefaultTypeInternal() {}
  union {
    Array2DReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Array2DReplyDefaultTypeInternal _Array2DReply_default_instance_;
}  // namespace v1
}  // namespace casbin
}  // namespace palm
static ::_pb::Metadata file_level_metadata_casbin_2eproto[16];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_casbin_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_casbin_2eproto = nullptr;

const uint32_t TableStruct_casbin_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::NewEnforcerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::NewEnforcerRequest, _impl_.modeltext_),
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::NewEnforcerRequest, _impl_.adapterhandle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::NewEnforcerReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::NewEnforcerReply, _impl_.handler_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::NewAdapterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::NewAdapterRequest, _impl_.adaptername_),
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::NewAdapterRequest, _impl_.drivername_),
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::NewAdapterRequest, _impl_.connectstring_),
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::NewAdapterRequest, _impl_.dbspecified_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::NewAdapterReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::NewAdapterReply, _impl_.handler_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::EnforceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::EnforceRequest, _impl_.enforcerhandler_),
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::EnforceRequest, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::BoolReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::BoolReply, _impl_.res_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::EmptyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::EmptyRequest, _impl_.handler_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::EmptyReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::PolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::PolicyRequest, _impl_.enforcerhandler_),
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::PolicyRequest, _impl_.ptype_),
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::PolicyRequest, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::SimpleGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::SimpleGetRequest, _impl_.enforcerhandler_),
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::SimpleGetRequest, _impl_.ptype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::ArrayReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::ArrayReply, _impl_.array_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::FilteredPolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::FilteredPolicyRequest, _impl_.enforcerhandler_),
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::FilteredPolicyRequest, _impl_.ptype_),
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::FilteredPolicyRequest, _impl_.fieldindex_),
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::FilteredPolicyRequest, _impl_.fieldvalues_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::UserRoleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::UserRoleRequest, _impl_.enforcerhandler_),
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::UserRoleRequest, _impl_.user_),
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::UserRoleRequest, _impl_.role_),
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::UserRoleRequest, _impl_.domain_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::PermissionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::PermissionRequest, _impl_.enforcerhandler_),
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::PermissionRequest, _impl_.user_),
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::PermissionRequest, _impl_.permissions_),
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::PermissionRequest, _impl_.domain_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::Array2DReply_d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::Array2DReply_d, _impl_.d1_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::Array2DReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::casbin::v1::Array2DReply, _impl_.d2_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::palm::casbin::v1::NewEnforcerRequest)},
  { 8, -1, -1, sizeof(::palm::casbin::v1::NewEnforcerReply)},
  { 15, -1, -1, sizeof(::palm::casbin::v1::NewAdapterRequest)},
  { 25, -1, -1, sizeof(::palm::casbin::v1::NewAdapterReply)},
  { 32, -1, -1, sizeof(::palm::casbin::v1::EnforceRequest)},
  { 40, -1, -1, sizeof(::palm::casbin::v1::BoolReply)},
  { 47, -1, -1, sizeof(::palm::casbin::v1::EmptyRequest)},
  { 54, -1, -1, sizeof(::palm::casbin::v1::EmptyReply)},
  { 60, -1, -1, sizeof(::palm::casbin::v1::PolicyRequest)},
  { 69, -1, -1, sizeof(::palm::casbin::v1::SimpleGetRequest)},
  { 77, -1, -1, sizeof(::palm::casbin::v1::ArrayReply)},
  { 84, -1, -1, sizeof(::palm::casbin::v1::FilteredPolicyRequest)},
  { 94, -1, -1, sizeof(::palm::casbin::v1::UserRoleRequest)},
  { 104, -1, -1, sizeof(::palm::casbin::v1::PermissionRequest)},
  { 114, -1, -1, sizeof(::palm::casbin::v1::Array2DReply_d)},
  { 121, -1, -1, sizeof(::palm::casbin::v1::Array2DReply)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::palm::casbin::v1::_NewEnforcerRequest_default_instance_._instance,
  &::palm::casbin::v1::_NewEnforcerReply_default_instance_._instance,
  &::palm::casbin::v1::_NewAdapterRequest_default_instance_._instance,
  &::palm::casbin::v1::_NewAdapterReply_default_instance_._instance,
  &::palm::casbin::v1::_EnforceRequest_default_instance_._instance,
  &::palm::casbin::v1::_BoolReply_default_instance_._instance,
  &::palm::casbin::v1::_EmptyRequest_default_instance_._instance,
  &::palm::casbin::v1::_EmptyReply_default_instance_._instance,
  &::palm::casbin::v1::_PolicyRequest_default_instance_._instance,
  &::palm::casbin::v1::_SimpleGetRequest_default_instance_._instance,
  &::palm::casbin::v1::_ArrayReply_default_instance_._instance,
  &::palm::casbin::v1::_FilteredPolicyRequest_default_instance_._instance,
  &::palm::casbin::v1::_UserRoleRequest_default_instance_._instance,
  &::palm::casbin::v1::_PermissionRequest_default_instance_._instance,
  &::palm::casbin::v1::_Array2DReply_d_default_instance_._instance,
  &::palm::casbin::v1::_Array2DReply_default_instance_._instance,
};

const char descriptor_table_protodef_casbin_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014casbin.proto\022\016palm.casbin.v1\">\n\022NewEnf"
  "orcerRequest\022\021\n\tmodelText\030\001 \001(\t\022\025\n\radapt"
  "erHandle\030\002 \001(\005\"#\n\020NewEnforcerReply\022\017\n\007ha"
  "ndler\030\001 \001(\005\"h\n\021NewAdapterRequest\022\023\n\013adap"
  "terName\030\001 \001(\t\022\022\n\ndriverName\030\002 \001(\t\022\025\n\rcon"
  "nectString\030\003 \001(\t\022\023\n\013dbSpecified\030\004 \001(\010\"\"\n"
  "\017NewAdapterReply\022\017\n\007handler\030\001 \001(\005\"9\n\016Enf"
  "orceRequest\022\027\n\017enforcerHandler\030\001 \001(\005\022\016\n\006"
  "params\030\002 \003(\t\"\030\n\tBoolReply\022\013\n\003res\030\001 \001(\010\"\037"
  "\n\014EmptyRequest\022\017\n\007handler\030\001 \001(\005\"\014\n\nEmpty"
  "Reply\"G\n\rPolicyRequest\022\027\n\017enforcerHandle"
  "r\030\001 \001(\005\022\r\n\005pType\030\002 \001(\t\022\016\n\006params\030\003 \003(\t\":"
  "\n\020SimpleGetRequest\022\027\n\017enforcerHandler\030\001 "
  "\001(\005\022\r\n\005pType\030\002 \001(\t\"\033\n\nArrayReply\022\r\n\005arra"
  "y\030\001 \003(\t\"h\n\025FilteredPolicyRequest\022\027\n\017enfo"
  "rcerHandler\030\001 \001(\005\022\r\n\005pType\030\002 \001(\t\022\022\n\nfiel"
  "dIndex\030\003 \001(\005\022\023\n\013fieldValues\030\004 \003(\t\"V\n\017Use"
  "rRoleRequest\022\027\n\017enforcerHandler\030\001 \001(\005\022\014\n"
  "\004user\030\002 \001(\t\022\014\n\004role\030\003 \001(\t\022\016\n\006domain\030\004 \003("
  "\t\"_\n\021PermissionRequest\022\027\n\017enforcerHandle"
  "r\030\001 \001(\005\022\014\n\004user\030\002 \001(\t\022\023\n\013permissions\030\003 \003"
  "(\t\022\016\n\006domain\030\004 \003(\t\"K\n\014Array2DReply\022*\n\002d2"
  "\030\001 \003(\0132\036.palm.casbin.v1.Array2DReply.d\032\017"
  "\n\001d\022\n\n\002d1\030\001 \003(\t2\341#\n\006Casbin\022U\n\013NewEnforce"
  "r\022\".palm.casbin.v1.NewEnforcerRequest\032 ."
  "palm.casbin.v1.NewEnforcerReply\"\000\022R\n\nNew"
  "Adapter\022!.palm.casbin.v1.NewAdapterReque"
  "st\032\037.palm.casbin.v1.NewAdapterReply\"\000\022F\n"
  "\007Enforce\022\036.palm.casbin.v1.EnforceRequest"
  "\032\031.palm.casbin.v1.BoolReply\"\000\022H\n\nLoadPol"
  "icy\022\034.palm.casbin.v1.EmptyRequest\032\032.palm"
  ".casbin.v1.EmptyReply\"\000\022H\n\nSavePolicy\022\034."
  "palm.casbin.v1.EmptyRequest\032\032.palm.casbi"
  "n.v1.EmptyReply\"\000\022G\n\tAddPolicy\022\035.palm.ca"
  "sbin.v1.PolicyRequest\032\031.palm.casbin.v1.B"
  "oolReply\"\000\022L\n\016AddNamedPolicy\022\035.palm.casb"
  "in.v1.PolicyRequest\032\031.palm.casbin.v1.Boo"
  "lReply\"\000\022J\n\014RemovePolicy\022\035.palm.casbin.v"
  "1.PolicyRequest\032\031.palm.casbin.v1.BoolRep"
  "ly\"\000\022O\n\021RemoveNamedPolicy\022\035.palm.casbin."
  "v1.PolicyRequest\032\031.palm.casbin.v1.BoolRe"
  "ply\"\000\022Z\n\024RemoveFilteredPolicy\022%.palm.cas"
  "bin.v1.FilteredPolicyRequest\032\031.palm.casb"
  "in.v1.BoolReply\"\000\022_\n\031RemoveFilteredNamed"
  "Policy\022%.palm.casbin.v1.FilteredPolicyRe"
  "quest\032\031.palm.casbin.v1.BoolReply\"\000\022I\n\tGe"
  "tPolicy\022\034.palm.casbin.v1.EmptyRequest\032\034."
  "palm.casbin.v1.Array2DReply\"\000\022O\n\016GetName"
  "dPolicy\022\035.palm.casbin.v1.PolicyRequest\032\034"
  ".palm.casbin.v1.Array2DReply\"\000\022Z\n\021GetFil"
  "teredPolicy\022%.palm.casbin.v1.FilteredPol"
  "icyRequest\032\034.palm.casbin.v1.Array2DReply"
  "\"\000\022_\n\026GetFilteredNamedPolicy\022%.palm.casb"
  "in.v1.FilteredPolicyRequest\032\034.palm.casbi"
  "n.v1.Array2DReply\"\000\022O\n\021AddGroupingPolicy"
  "\022\035.palm.casbin.v1.PolicyRequest\032\031.palm.c"
  "asbin.v1.BoolReply\"\000\022T\n\026AddNamedGrouping"
  "Policy\022\035.palm.casbin.v1.PolicyRequest\032\031."
  "palm.casbin.v1.BoolReply\"\000\022R\n\024RemoveGrou"
  "pingPolicy\022\035.palm.casbin.v1.PolicyReques"
  "t\032\031.palm.casbin.v1.BoolReply\"\000\022W\n\031Remove"
  "NamedGroupingPolicy\022\035.palm.casbin.v1.Pol"
  "icyRequest\032\031.palm.casbin.v1.BoolReply\"\000\022"
  "b\n\034RemoveFilteredGroupingPolicy\022%.palm.c"
  "asbin.v1.FilteredPolicyRequest\032\031.palm.ca"
  "sbin.v1.BoolReply\"\000\022g\n!RemoveFilteredNam"
  "edGroupingPolicy\022%.palm.casbin.v1.Filter"
  "edPolicyRequest\032\031.palm.casbin.v1.BoolRep"
  "ly\"\000\022Q\n\021GetGroupingPolicy\022\034.palm.casbin."
  "v1.EmptyRequest\032\034.palm.casbin.v1.Array2D"
  "Reply\"\000\022W\n\026GetNamedGroupingPolicy\022\035.palm"
  ".casbin.v1.PolicyRequest\032\034.palm.casbin.v"
  "1.Array2DReply\"\000\022b\n\031GetFilteredGroupingP"
  "olicy\022%.palm.casbin.v1.FilteredPolicyReq"
  "uest\032\034.palm.casbin.v1.Array2DReply\"\000\022g\n\036"
  "GetFilteredNamedGroupingPolicy\022%.palm.ca"
  "sbin.v1.FilteredPolicyRequest\032\034.palm.cas"
  "bin.v1.Array2DReply\"\000\022L\n\016GetAllSubjects\022"
  "\034.palm.casbin.v1.EmptyRequest\032\032.palm.cas"
  "bin.v1.ArrayReply\"\000\022U\n\023GetAllNamedSubjec"
  "ts\022 .palm.casbin.v1.SimpleGetRequest\032\032.p"
  "alm.casbin.v1.ArrayReply\"\000\022K\n\rGetAllObje"
  "cts\022\034.palm.casbin.v1.EmptyRequest\032\032.palm"
  ".casbin.v1.ArrayReply\"\000\022T\n\022GetAllNamedOb"
  "jects\022 .palm.casbin.v1.SimpleGetRequest\032"
  "\032.palm.casbin.v1.ArrayReply\"\000\022K\n\rGetAllA"
  "ctions\022\034.palm.casbin.v1.EmptyRequest\032\032.p"
  "alm.casbin.v1.ArrayReply\"\000\022T\n\022GetAllName"
  "dActions\022 .palm.casbin.v1.SimpleGetReque"
  "st\032\032.palm.casbin.v1.ArrayReply\"\000\022I\n\013GetA"
  "llRoles\022\034.palm.casbin.v1.EmptyRequest\032\032."
  "palm.casbin.v1.ArrayReply\"\000\022R\n\020GetAllNam"
  "edRoles\022 .palm.casbin.v1.SimpleGetReques"
  "t\032\032.palm.casbin.v1.ArrayReply\"\000\022G\n\tHasPo"
  "licy\022\035.palm.casbin.v1.PolicyRequest\032\031.pa"
  "lm.casbin.v1.BoolReply\"\000\022L\n\016HasNamedPoli"
  "cy\022\035.palm.casbin.v1.PolicyRequest\032\031.palm"
  ".casbin.v1.BoolReply\"\000\022O\n\021HasGroupingPol"
  "icy\022\035.palm.casbin.v1.PolicyRequest\032\031.pal"
  "m.casbin.v1.BoolReply\"\000\022T\n\026HasNamedGroup"
  "ingPolicy\022\035.palm.casbin.v1.PolicyRequest"
  "\032\031.palm.casbin.v1.BoolReply\"\000\022K\n\nGetDoma"
  "ins\022\037.palm.casbin.v1.UserRoleRequest\032\032.p"
  "alm.casbin.v1.ArrayReply\"\000\022P\n\017GetRolesFo"
  "rUser\022\037.palm.casbin.v1.UserRoleRequest\032\032"
  ".palm.casbin.v1.ArrayReply\"\000\022X\n\027GetImpli"
  "citRolesForUser\022\037.palm.casbin.v1.UserRol"
  "eRequest\032\032.palm.casbin.v1.ArrayReply\"\000\022P"
  "\n\017GetUsersForRole\022\037.palm.casbin.v1.UserR"
  "oleRequest\032\032.palm.casbin.v1.ArrayReply\"\000"
  "\022N\n\016HasRoleForUser\022\037.palm.casbin.v1.User"
  "RoleRequest\032\031.palm.casbin.v1.BoolReply\"\000"
  "\022N\n\016AddRoleForUser\022\037.palm.casbin.v1.User"
  "RoleRequest\032\031.palm.casbin.v1.BoolReply\"\000"
  "\022Q\n\021DeleteRoleForUser\022\037.palm.casbin.v1.U"
  "serRoleRequest\032\031.palm.casbin.v1.BoolRepl"
  "y\"\000\022R\n\022DeleteRolesForUser\022\037.palm.casbin."
  "v1.UserRoleRequest\032\031.palm.casbin.v1.Bool"
  "Reply\"\000\022J\n\nDeleteUser\022\037.palm.casbin.v1.U"
  "serRoleRequest\032\031.palm.casbin.v1.BoolRepl"
  "y\"\000\022K\n\nDeleteRole\022\037.palm.casbin.v1.UserR"
  "oleRequest\032\032.palm.casbin.v1.EmptyReply\"\000"
  "\022Z\n\025GetPermissionsForUser\022!.palm.casbin."
  "v1.PermissionRequest\032\034.palm.casbin.v1.Ar"
  "ray2DReply\"\000\022b\n\035GetImplicitPermissionsFo"
  "rUser\022!.palm.casbin.v1.PermissionRequest"
  "\032\034.palm.casbin.v1.Array2DReply\"\000\022R\n\020Dele"
  "tePermission\022!.palm.casbin.v1.Permission"
  "Request\032\031.palm.casbin.v1.BoolReply\"\000\022V\n\024"
  "AddPermissionForUser\022!.palm.casbin.v1.Pe"
  "rmissionRequest\032\031.palm.casbin.v1.BoolRep"
  "ly\"\000\022Y\n\027DeletePermissionForUser\022!.palm.c"
  "asbin.v1.PermissionRequest\032\031.palm.casbin"
  ".v1.BoolReply\"\000\022Z\n\030DeletePermissionsForU"
  "ser\022!.palm.casbin.v1.PermissionRequest\032\031"
  ".palm.casbin.v1.BoolReply\"\000\022V\n\024HasPermis"
  "sionForUser\022!.palm.casbin.v1.PermissionR"
  "equest\032\031.palm.casbin.v1.BoolReply\"\000B0\n,c"
  "om.github.saturn_xiv.palm.plugins.casbin"
  ".v1P\001b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_casbin_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_casbin_2eproto = {
    false, false, 5573, descriptor_table_protodef_casbin_2eproto,
    "casbin.proto",
    &descriptor_table_casbin_2eproto_once, nullptr, 0, 16,
    schemas, file_default_instances, TableStruct_casbin_2eproto::offsets,
    file_level_metadata_casbin_2eproto, file_level_enum_descriptors_casbin_2eproto,
    file_level_service_descriptors_casbin_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_casbin_2eproto_getter() {
  return &descriptor_table_casbin_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_casbin_2eproto(&descriptor_table_casbin_2eproto);
namespace palm {
namespace casbin {
namespace v1 {

// ===================================================================

class NewEnforcerRequest::_Internal {
 public:
};

NewEnforcerRequest::NewEnforcerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.casbin.v1.NewEnforcerRequest)
}
NewEnforcerRequest::NewEnforcerRequest(const NewEnforcerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NewEnforcerRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.modeltext_){}
    , decltype(_impl_.adapterhandle_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.modeltext_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.modeltext_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_modeltext().empty()) {
    _this->_impl_.modeltext_.Set(from._internal_modeltext(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.adapterhandle_ = from._impl_.adapterhandle_;
  // @@protoc_insertion_point(copy_constructor:palm.casbin.v1.NewEnforcerRequest)
}

inline void NewEnforcerRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.modeltext_){}
    , decltype(_impl_.adapterhandle_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.modeltext_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.modeltext_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NewEnforcerRequest::~NewEnforcerRequest() {
  // @@protoc_insertion_point(destructor:palm.casbin.v1.NewEnforcerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NewEnforcerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.modeltext_.Destroy();
}

void NewEnforcerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NewEnforcerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.casbin.v1.NewEnforcerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.modeltext_.ClearToEmpty();
  _impl_.adapterhandle_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewEnforcerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string modelText = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_modeltext();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.NewEnforcerRequest.modelText"));
        } else
          goto handle_unusual;
        continue;
      // int32 adapterHandle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.adapterhandle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NewEnforcerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.casbin.v1.NewEnforcerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string modelText = 1;
  if (!this->_internal_modeltext().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_modeltext().data(), static_cast<int>(this->_internal_modeltext().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.NewEnforcerRequest.modelText");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_modeltext(), target);
  }

  // int32 adapterHandle = 2;
  if (this->_internal_adapterhandle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_adapterhandle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.casbin.v1.NewEnforcerRequest)
  return target;
}

size_t NewEnforcerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.casbin.v1.NewEnforcerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string modelText = 1;
  if (!this->_internal_modeltext().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_modeltext());
  }

  // int32 adapterHandle = 2;
  if (this->_internal_adapterhandle() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_adapterhandle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewEnforcerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NewEnforcerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewEnforcerRequest::GetClassData() const { return &_class_data_; }


void NewEnforcerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NewEnforcerRequest*>(&to_msg);
  auto& from = static_cast<const NewEnforcerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.casbin.v1.NewEnforcerRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_modeltext().empty()) {
    _this->_internal_set_modeltext(from._internal_modeltext());
  }
  if (from._internal_adapterhandle() != 0) {
    _this->_internal_set_adapterhandle(from._internal_adapterhandle());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewEnforcerRequest::CopyFrom(const NewEnforcerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.casbin.v1.NewEnforcerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewEnforcerRequest::IsInitialized() const {
  return true;
}

void NewEnforcerRequest::InternalSwap(NewEnforcerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.modeltext_, lhs_arena,
      &other->_impl_.modeltext_, rhs_arena
  );
  swap(_impl_.adapterhandle_, other->_impl_.adapterhandle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NewEnforcerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_casbin_2eproto_getter, &descriptor_table_casbin_2eproto_once,
      file_level_metadata_casbin_2eproto[0]);
}

// ===================================================================

class NewEnforcerReply::_Internal {
 public:
};

NewEnforcerReply::NewEnforcerReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.casbin.v1.NewEnforcerReply)
}
NewEnforcerReply::NewEnforcerReply(const NewEnforcerReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NewEnforcerReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.handler_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.handler_ = from._impl_.handler_;
  // @@protoc_insertion_point(copy_constructor:palm.casbin.v1.NewEnforcerReply)
}

inline void NewEnforcerReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.handler_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NewEnforcerReply::~NewEnforcerReply() {
  // @@protoc_insertion_point(destructor:palm.casbin.v1.NewEnforcerReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NewEnforcerReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NewEnforcerReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NewEnforcerReply::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.casbin.v1.NewEnforcerReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.handler_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewEnforcerReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 handler = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.handler_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NewEnforcerReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.casbin.v1.NewEnforcerReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 handler = 1;
  if (this->_internal_handler() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_handler(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.casbin.v1.NewEnforcerReply)
  return target;
}

size_t NewEnforcerReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.casbin.v1.NewEnforcerReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 handler = 1;
  if (this->_internal_handler() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_handler());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewEnforcerReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NewEnforcerReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewEnforcerReply::GetClassData() const { return &_class_data_; }


void NewEnforcerReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NewEnforcerReply*>(&to_msg);
  auto& from = static_cast<const NewEnforcerReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.casbin.v1.NewEnforcerReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_handler() != 0) {
    _this->_internal_set_handler(from._internal_handler());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewEnforcerReply::CopyFrom(const NewEnforcerReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.casbin.v1.NewEnforcerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewEnforcerReply::IsInitialized() const {
  return true;
}

void NewEnforcerReply::InternalSwap(NewEnforcerReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.handler_, other->_impl_.handler_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NewEnforcerReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_casbin_2eproto_getter, &descriptor_table_casbin_2eproto_once,
      file_level_metadata_casbin_2eproto[1]);
}

// ===================================================================

class NewAdapterRequest::_Internal {
 public:
};

NewAdapterRequest::NewAdapterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.casbin.v1.NewAdapterRequest)
}
NewAdapterRequest::NewAdapterRequest(const NewAdapterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NewAdapterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.adaptername_){}
    , decltype(_impl_.drivername_){}
    , decltype(_impl_.connectstring_){}
    , decltype(_impl_.dbspecified_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.adaptername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.adaptername_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_adaptername().empty()) {
    _this->_impl_.adaptername_.Set(from._internal_adaptername(), 
      _this->GetArenaForAllocation());
  }
  _impl_.drivername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.drivername_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_drivername().empty()) {
    _this->_impl_.drivername_.Set(from._internal_drivername(), 
      _this->GetArenaForAllocation());
  }
  _impl_.connectstring_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.connectstring_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_connectstring().empty()) {
    _this->_impl_.connectstring_.Set(from._internal_connectstring(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.dbspecified_ = from._impl_.dbspecified_;
  // @@protoc_insertion_point(copy_constructor:palm.casbin.v1.NewAdapterRequest)
}

inline void NewAdapterRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.adaptername_){}
    , decltype(_impl_.drivername_){}
    , decltype(_impl_.connectstring_){}
    , decltype(_impl_.dbspecified_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.adaptername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.adaptername_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.drivername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.drivername_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.connectstring_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.connectstring_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NewAdapterRequest::~NewAdapterRequest() {
  // @@protoc_insertion_point(destructor:palm.casbin.v1.NewAdapterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NewAdapterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.adaptername_.Destroy();
  _impl_.drivername_.Destroy();
  _impl_.connectstring_.Destroy();
}

void NewAdapterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NewAdapterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.casbin.v1.NewAdapterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.adaptername_.ClearToEmpty();
  _impl_.drivername_.ClearToEmpty();
  _impl_.connectstring_.ClearToEmpty();
  _impl_.dbspecified_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewAdapterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string adapterName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_adaptername();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.NewAdapterRequest.adapterName"));
        } else
          goto handle_unusual;
        continue;
      // string driverName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_drivername();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.NewAdapterRequest.driverName"));
        } else
          goto handle_unusual;
        continue;
      // string connectString = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_connectstring();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.NewAdapterRequest.connectString"));
        } else
          goto handle_unusual;
        continue;
      // bool dbSpecified = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.dbspecified_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NewAdapterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.casbin.v1.NewAdapterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string adapterName = 1;
  if (!this->_internal_adaptername().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_adaptername().data(), static_cast<int>(this->_internal_adaptername().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.NewAdapterRequest.adapterName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_adaptername(), target);
  }

  // string driverName = 2;
  if (!this->_internal_drivername().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_drivername().data(), static_cast<int>(this->_internal_drivername().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.NewAdapterRequest.driverName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_drivername(), target);
  }

  // string connectString = 3;
  if (!this->_internal_connectstring().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connectstring().data(), static_cast<int>(this->_internal_connectstring().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.NewAdapterRequest.connectString");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_connectstring(), target);
  }

  // bool dbSpecified = 4;
  if (this->_internal_dbspecified() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_dbspecified(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.casbin.v1.NewAdapterRequest)
  return target;
}

size_t NewAdapterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.casbin.v1.NewAdapterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string adapterName = 1;
  if (!this->_internal_adaptername().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_adaptername());
  }

  // string driverName = 2;
  if (!this->_internal_drivername().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_drivername());
  }

  // string connectString = 3;
  if (!this->_internal_connectstring().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connectstring());
  }

  // bool dbSpecified = 4;
  if (this->_internal_dbspecified() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewAdapterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NewAdapterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewAdapterRequest::GetClassData() const { return &_class_data_; }


void NewAdapterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NewAdapterRequest*>(&to_msg);
  auto& from = static_cast<const NewAdapterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.casbin.v1.NewAdapterRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_adaptername().empty()) {
    _this->_internal_set_adaptername(from._internal_adaptername());
  }
  if (!from._internal_drivername().empty()) {
    _this->_internal_set_drivername(from._internal_drivername());
  }
  if (!from._internal_connectstring().empty()) {
    _this->_internal_set_connectstring(from._internal_connectstring());
  }
  if (from._internal_dbspecified() != 0) {
    _this->_internal_set_dbspecified(from._internal_dbspecified());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewAdapterRequest::CopyFrom(const NewAdapterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.casbin.v1.NewAdapterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewAdapterRequest::IsInitialized() const {
  return true;
}

void NewAdapterRequest::InternalSwap(NewAdapterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.adaptername_, lhs_arena,
      &other->_impl_.adaptername_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.drivername_, lhs_arena,
      &other->_impl_.drivername_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.connectstring_, lhs_arena,
      &other->_impl_.connectstring_, rhs_arena
  );
  swap(_impl_.dbspecified_, other->_impl_.dbspecified_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NewAdapterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_casbin_2eproto_getter, &descriptor_table_casbin_2eproto_once,
      file_level_metadata_casbin_2eproto[2]);
}

// ===================================================================

class NewAdapterReply::_Internal {
 public:
};

NewAdapterReply::NewAdapterReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.casbin.v1.NewAdapterReply)
}
NewAdapterReply::NewAdapterReply(const NewAdapterReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NewAdapterReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.handler_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.handler_ = from._impl_.handler_;
  // @@protoc_insertion_point(copy_constructor:palm.casbin.v1.NewAdapterReply)
}

inline void NewAdapterReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.handler_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NewAdapterReply::~NewAdapterReply() {
  // @@protoc_insertion_point(destructor:palm.casbin.v1.NewAdapterReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NewAdapterReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NewAdapterReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NewAdapterReply::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.casbin.v1.NewAdapterReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.handler_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewAdapterReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 handler = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.handler_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NewAdapterReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.casbin.v1.NewAdapterReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 handler = 1;
  if (this->_internal_handler() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_handler(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.casbin.v1.NewAdapterReply)
  return target;
}

size_t NewAdapterReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.casbin.v1.NewAdapterReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 handler = 1;
  if (this->_internal_handler() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_handler());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewAdapterReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NewAdapterReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewAdapterReply::GetClassData() const { return &_class_data_; }


void NewAdapterReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NewAdapterReply*>(&to_msg);
  auto& from = static_cast<const NewAdapterReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.casbin.v1.NewAdapterReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_handler() != 0) {
    _this->_internal_set_handler(from._internal_handler());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewAdapterReply::CopyFrom(const NewAdapterReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.casbin.v1.NewAdapterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewAdapterReply::IsInitialized() const {
  return true;
}

void NewAdapterReply::InternalSwap(NewAdapterReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.handler_, other->_impl_.handler_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NewAdapterReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_casbin_2eproto_getter, &descriptor_table_casbin_2eproto_once,
      file_level_metadata_casbin_2eproto[3]);
}

// ===================================================================

class EnforceRequest::_Internal {
 public:
};

EnforceRequest::EnforceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.casbin.v1.EnforceRequest)
}
EnforceRequest::EnforceRequest(const EnforceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EnforceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){from._impl_.params_}
    , decltype(_impl_.enforcerhandler_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.enforcerhandler_ = from._impl_.enforcerhandler_;
  // @@protoc_insertion_point(copy_constructor:palm.casbin.v1.EnforceRequest)
}

inline void EnforceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){arena}
    , decltype(_impl_.enforcerhandler_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EnforceRequest::~EnforceRequest() {
  // @@protoc_insertion_point(destructor:palm.casbin.v1.EnforceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EnforceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.params_.~RepeatedPtrField();
}

void EnforceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EnforceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.casbin.v1.EnforceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.params_.Clear();
  _impl_.enforcerhandler_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnforceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 enforcerHandler = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.enforcerhandler_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_params();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.EnforceRequest.params"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnforceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.casbin.v1.EnforceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 enforcerHandler = 1;
  if (this->_internal_enforcerhandler() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_enforcerhandler(), target);
  }

  // repeated string params = 2;
  for (int i = 0, n = this->_internal_params_size(); i < n; i++) {
    const auto& s = this->_internal_params(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.EnforceRequest.params");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.casbin.v1.EnforceRequest)
  return target;
}

size_t EnforceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.casbin.v1.EnforceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string params = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.params_.size());
  for (int i = 0, n = _impl_.params_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.params_.Get(i));
  }

  // int32 enforcerHandler = 1;
  if (this->_internal_enforcerhandler() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_enforcerhandler());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnforceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EnforceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnforceRequest::GetClassData() const { return &_class_data_; }


void EnforceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EnforceRequest*>(&to_msg);
  auto& from = static_cast<const EnforceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.casbin.v1.EnforceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.params_.MergeFrom(from._impl_.params_);
  if (from._internal_enforcerhandler() != 0) {
    _this->_internal_set_enforcerhandler(from._internal_enforcerhandler());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnforceRequest::CopyFrom(const EnforceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.casbin.v1.EnforceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnforceRequest::IsInitialized() const {
  return true;
}

void EnforceRequest::InternalSwap(EnforceRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.params_.InternalSwap(&other->_impl_.params_);
  swap(_impl_.enforcerhandler_, other->_impl_.enforcerhandler_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EnforceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_casbin_2eproto_getter, &descriptor_table_casbin_2eproto_once,
      file_level_metadata_casbin_2eproto[4]);
}

// ===================================================================

class BoolReply::_Internal {
 public:
};

BoolReply::BoolReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.casbin.v1.BoolReply)
}
BoolReply::BoolReply(const BoolReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BoolReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.res_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.res_ = from._impl_.res_;
  // @@protoc_insertion_point(copy_constructor:palm.casbin.v1.BoolReply)
}

inline void BoolReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.res_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BoolReply::~BoolReply() {
  // @@protoc_insertion_point(destructor:palm.casbin.v1.BoolReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BoolReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BoolReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BoolReply::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.casbin.v1.BoolReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.res_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BoolReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool res = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.res_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BoolReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.casbin.v1.BoolReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool res = 1;
  if (this->_internal_res() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_res(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.casbin.v1.BoolReply)
  return target;
}

size_t BoolReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.casbin.v1.BoolReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool res = 1;
  if (this->_internal_res() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BoolReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BoolReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BoolReply::GetClassData() const { return &_class_data_; }


void BoolReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BoolReply*>(&to_msg);
  auto& from = static_cast<const BoolReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.casbin.v1.BoolReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_res() != 0) {
    _this->_internal_set_res(from._internal_res());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BoolReply::CopyFrom(const BoolReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.casbin.v1.BoolReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoolReply::IsInitialized() const {
  return true;
}

void BoolReply::InternalSwap(BoolReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.res_, other->_impl_.res_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BoolReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_casbin_2eproto_getter, &descriptor_table_casbin_2eproto_once,
      file_level_metadata_casbin_2eproto[5]);
}

// ===================================================================

class EmptyRequest::_Internal {
 public:
};

EmptyRequest::EmptyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.casbin.v1.EmptyRequest)
}
EmptyRequest::EmptyRequest(const EmptyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EmptyRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.handler_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.handler_ = from._impl_.handler_;
  // @@protoc_insertion_point(copy_constructor:palm.casbin.v1.EmptyRequest)
}

inline void EmptyRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.handler_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EmptyRequest::~EmptyRequest() {
  // @@protoc_insertion_point(destructor:palm.casbin.v1.EmptyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EmptyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EmptyRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EmptyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.casbin.v1.EmptyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.handler_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EmptyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 handler = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.handler_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EmptyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.casbin.v1.EmptyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 handler = 1;
  if (this->_internal_handler() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_handler(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.casbin.v1.EmptyRequest)
  return target;
}

size_t EmptyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.casbin.v1.EmptyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 handler = 1;
  if (this->_internal_handler() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_handler());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EmptyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EmptyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EmptyRequest::GetClassData() const { return &_class_data_; }


void EmptyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EmptyRequest*>(&to_msg);
  auto& from = static_cast<const EmptyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.casbin.v1.EmptyRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_handler() != 0) {
    _this->_internal_set_handler(from._internal_handler());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EmptyRequest::CopyFrom(const EmptyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.casbin.v1.EmptyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyRequest::IsInitialized() const {
  return true;
}

void EmptyRequest::InternalSwap(EmptyRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.handler_, other->_impl_.handler_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EmptyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_casbin_2eproto_getter, &descriptor_table_casbin_2eproto_once,
      file_level_metadata_casbin_2eproto[6]);
}

// ===================================================================

class EmptyReply::_Internal {
 public:
};

EmptyReply::EmptyReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:palm.casbin.v1.EmptyReply)
}
EmptyReply::EmptyReply(const EmptyReply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  EmptyReply* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:palm.casbin.v1.EmptyReply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EmptyReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EmptyReply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata EmptyReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_casbin_2eproto_getter, &descriptor_table_casbin_2eproto_once,
      file_level_metadata_casbin_2eproto[7]);
}

// ===================================================================

class PolicyRequest::_Internal {
 public:
};

PolicyRequest::PolicyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.casbin.v1.PolicyRequest)
}
PolicyRequest::PolicyRequest(const PolicyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PolicyRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){from._impl_.params_}
    , decltype(_impl_.ptype_){}
    , decltype(_impl_.enforcerhandler_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.ptype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ptype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ptype().empty()) {
    _this->_impl_.ptype_.Set(from._internal_ptype(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.enforcerhandler_ = from._impl_.enforcerhandler_;
  // @@protoc_insertion_point(copy_constructor:palm.casbin.v1.PolicyRequest)
}

inline void PolicyRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.params_){arena}
    , decltype(_impl_.ptype_){}
    , decltype(_impl_.enforcerhandler_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.ptype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ptype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PolicyRequest::~PolicyRequest() {
  // @@protoc_insertion_point(destructor:palm.casbin.v1.PolicyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PolicyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.params_.~RepeatedPtrField();
  _impl_.ptype_.Destroy();
}

void PolicyRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.casbin.v1.PolicyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.params_.Clear();
  _impl_.ptype_.ClearToEmpty();
  _impl_.enforcerhandler_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PolicyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 enforcerHandler = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.enforcerhandler_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string pType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_ptype();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.PolicyRequest.pType"));
        } else
          goto handle_unusual;
        continue;
      // repeated string params = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_params();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.PolicyRequest.params"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PolicyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.casbin.v1.PolicyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 enforcerHandler = 1;
  if (this->_internal_enforcerhandler() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_enforcerhandler(), target);
  }

  // string pType = 2;
  if (!this->_internal_ptype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ptype().data(), static_cast<int>(this->_internal_ptype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.PolicyRequest.pType");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_ptype(), target);
  }

  // repeated string params = 3;
  for (int i = 0, n = this->_internal_params_size(); i < n; i++) {
    const auto& s = this->_internal_params(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.PolicyRequest.params");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.casbin.v1.PolicyRequest)
  return target;
}

size_t PolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.casbin.v1.PolicyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string params = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.params_.size());
  for (int i = 0, n = _impl_.params_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.params_.Get(i));
  }

  // string pType = 2;
  if (!this->_internal_ptype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ptype());
  }

  // int32 enforcerHandler = 1;
  if (this->_internal_enforcerhandler() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_enforcerhandler());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PolicyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PolicyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PolicyRequest::GetClassData() const { return &_class_data_; }


void PolicyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PolicyRequest*>(&to_msg);
  auto& from = static_cast<const PolicyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.casbin.v1.PolicyRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.params_.MergeFrom(from._impl_.params_);
  if (!from._internal_ptype().empty()) {
    _this->_internal_set_ptype(from._internal_ptype());
  }
  if (from._internal_enforcerhandler() != 0) {
    _this->_internal_set_enforcerhandler(from._internal_enforcerhandler());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyRequest::CopyFrom(const PolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.casbin.v1.PolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PolicyRequest::IsInitialized() const {
  return true;
}

void PolicyRequest::InternalSwap(PolicyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.params_.InternalSwap(&other->_impl_.params_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ptype_, lhs_arena,
      &other->_impl_.ptype_, rhs_arena
  );
  swap(_impl_.enforcerhandler_, other->_impl_.enforcerhandler_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PolicyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_casbin_2eproto_getter, &descriptor_table_casbin_2eproto_once,
      file_level_metadata_casbin_2eproto[8]);
}

// ===================================================================

class SimpleGetRequest::_Internal {
 public:
};

SimpleGetRequest::SimpleGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.casbin.v1.SimpleGetRequest)
}
SimpleGetRequest::SimpleGetRequest(const SimpleGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SimpleGetRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ptype_){}
    , decltype(_impl_.enforcerhandler_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.ptype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ptype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ptype().empty()) {
    _this->_impl_.ptype_.Set(from._internal_ptype(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.enforcerhandler_ = from._impl_.enforcerhandler_;
  // @@protoc_insertion_point(copy_constructor:palm.casbin.v1.SimpleGetRequest)
}

inline void SimpleGetRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ptype_){}
    , decltype(_impl_.enforcerhandler_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.ptype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ptype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SimpleGetRequest::~SimpleGetRequest() {
  // @@protoc_insertion_point(destructor:palm.casbin.v1.SimpleGetRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SimpleGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ptype_.Destroy();
}

void SimpleGetRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SimpleGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.casbin.v1.SimpleGetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ptype_.ClearToEmpty();
  _impl_.enforcerhandler_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SimpleGetRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 enforcerHandler = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.enforcerhandler_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string pType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_ptype();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.SimpleGetRequest.pType"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SimpleGetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.casbin.v1.SimpleGetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 enforcerHandler = 1;
  if (this->_internal_enforcerhandler() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_enforcerhandler(), target);
  }

  // string pType = 2;
  if (!this->_internal_ptype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ptype().data(), static_cast<int>(this->_internal_ptype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.SimpleGetRequest.pType");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_ptype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.casbin.v1.SimpleGetRequest)
  return target;
}

size_t SimpleGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.casbin.v1.SimpleGetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pType = 2;
  if (!this->_internal_ptype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ptype());
  }

  // int32 enforcerHandler = 1;
  if (this->_internal_enforcerhandler() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_enforcerhandler());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SimpleGetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SimpleGetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SimpleGetRequest::GetClassData() const { return &_class_data_; }


void SimpleGetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SimpleGetRequest*>(&to_msg);
  auto& from = static_cast<const SimpleGetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.casbin.v1.SimpleGetRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ptype().empty()) {
    _this->_internal_set_ptype(from._internal_ptype());
  }
  if (from._internal_enforcerhandler() != 0) {
    _this->_internal_set_enforcerhandler(from._internal_enforcerhandler());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SimpleGetRequest::CopyFrom(const SimpleGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.casbin.v1.SimpleGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimpleGetRequest::IsInitialized() const {
  return true;
}

void SimpleGetRequest::InternalSwap(SimpleGetRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ptype_, lhs_arena,
      &other->_impl_.ptype_, rhs_arena
  );
  swap(_impl_.enforcerhandler_, other->_impl_.enforcerhandler_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SimpleGetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_casbin_2eproto_getter, &descriptor_table_casbin_2eproto_once,
      file_level_metadata_casbin_2eproto[9]);
}

// ===================================================================

class ArrayReply::_Internal {
 public:
};

ArrayReply::ArrayReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.casbin.v1.ArrayReply)
}
ArrayReply::ArrayReply(const ArrayReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ArrayReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.array_){from._impl_.array_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:palm.casbin.v1.ArrayReply)
}

inline void ArrayReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.array_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ArrayReply::~ArrayReply() {
  // @@protoc_insertion_point(destructor:palm.casbin.v1.ArrayReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ArrayReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.array_.~RepeatedPtrField();
}

void ArrayReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ArrayReply::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.casbin.v1.ArrayReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.array_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArrayReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_array();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.ArrayReply.array"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ArrayReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.casbin.v1.ArrayReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string array = 1;
  for (int i = 0, n = this->_internal_array_size(); i < n; i++) {
    const auto& s = this->_internal_array(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.ArrayReply.array");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.casbin.v1.ArrayReply)
  return target;
}

size_t ArrayReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.casbin.v1.ArrayReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string array = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.array_.size());
  for (int i = 0, n = _impl_.array_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.array_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ArrayReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ArrayReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ArrayReply::GetClassData() const { return &_class_data_; }


void ArrayReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ArrayReply*>(&to_msg);
  auto& from = static_cast<const ArrayReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.casbin.v1.ArrayReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.array_.MergeFrom(from._impl_.array_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ArrayReply::CopyFrom(const ArrayReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.casbin.v1.ArrayReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayReply::IsInitialized() const {
  return true;
}

void ArrayReply::InternalSwap(ArrayReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.array_.InternalSwap(&other->_impl_.array_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArrayReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_casbin_2eproto_getter, &descriptor_table_casbin_2eproto_once,
      file_level_metadata_casbin_2eproto[10]);
}

// ===================================================================

class FilteredPolicyRequest::_Internal {
 public:
};

FilteredPolicyRequest::FilteredPolicyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.casbin.v1.FilteredPolicyRequest)
}
FilteredPolicyRequest::FilteredPolicyRequest(const FilteredPolicyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FilteredPolicyRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.fieldvalues_){from._impl_.fieldvalues_}
    , decltype(_impl_.ptype_){}
    , decltype(_impl_.enforcerhandler_){}
    , decltype(_impl_.fieldindex_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.ptype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ptype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ptype().empty()) {
    _this->_impl_.ptype_.Set(from._internal_ptype(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.enforcerhandler_, &from._impl_.enforcerhandler_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.fieldindex_) -
    reinterpret_cast<char*>(&_impl_.enforcerhandler_)) + sizeof(_impl_.fieldindex_));
  // @@protoc_insertion_point(copy_constructor:palm.casbin.v1.FilteredPolicyRequest)
}

inline void FilteredPolicyRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.fieldvalues_){arena}
    , decltype(_impl_.ptype_){}
    , decltype(_impl_.enforcerhandler_){0}
    , decltype(_impl_.fieldindex_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.ptype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ptype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FilteredPolicyRequest::~FilteredPolicyRequest() {
  // @@protoc_insertion_point(destructor:palm.casbin.v1.FilteredPolicyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FilteredPolicyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.fieldvalues_.~RepeatedPtrField();
  _impl_.ptype_.Destroy();
}

void FilteredPolicyRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FilteredPolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.casbin.v1.FilteredPolicyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fieldvalues_.Clear();
  _impl_.ptype_.ClearToEmpty();
  ::memset(&_impl_.enforcerhandler_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.fieldindex_) -
      reinterpret_cast<char*>(&_impl_.enforcerhandler_)) + sizeof(_impl_.fieldindex_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FilteredPolicyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 enforcerHandler = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.enforcerhandler_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string pType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_ptype();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.FilteredPolicyRequest.pType"));
        } else
          goto handle_unusual;
        continue;
      // int32 fieldIndex = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.fieldindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string fieldValues = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_fieldvalues();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.FilteredPolicyRequest.fieldValues"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FilteredPolicyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.casbin.v1.FilteredPolicyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 enforcerHandler = 1;
  if (this->_internal_enforcerhandler() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_enforcerhandler(), target);
  }

  // string pType = 2;
  if (!this->_internal_ptype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ptype().data(), static_cast<int>(this->_internal_ptype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.FilteredPolicyRequest.pType");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_ptype(), target);
  }

  // int32 fieldIndex = 3;
  if (this->_internal_fieldindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_fieldindex(), target);
  }

  // repeated string fieldValues = 4;
  for (int i = 0, n = this->_internal_fieldvalues_size(); i < n; i++) {
    const auto& s = this->_internal_fieldvalues(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.FilteredPolicyRequest.fieldValues");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.casbin.v1.FilteredPolicyRequest)
  return target;
}

size_t FilteredPolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.casbin.v1.FilteredPolicyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string fieldValues = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.fieldvalues_.size());
  for (int i = 0, n = _impl_.fieldvalues_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.fieldvalues_.Get(i));
  }

  // string pType = 2;
  if (!this->_internal_ptype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ptype());
  }

  // int32 enforcerHandler = 1;
  if (this->_internal_enforcerhandler() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_enforcerhandler());
  }

  // int32 fieldIndex = 3;
  if (this->_internal_fieldindex() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_fieldindex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FilteredPolicyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FilteredPolicyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FilteredPolicyRequest::GetClassData() const { return &_class_data_; }


void FilteredPolicyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FilteredPolicyRequest*>(&to_msg);
  auto& from = static_cast<const FilteredPolicyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.casbin.v1.FilteredPolicyRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.fieldvalues_.MergeFrom(from._impl_.fieldvalues_);
  if (!from._internal_ptype().empty()) {
    _this->_internal_set_ptype(from._internal_ptype());
  }
  if (from._internal_enforcerhandler() != 0) {
    _this->_internal_set_enforcerhandler(from._internal_enforcerhandler());
  }
  if (from._internal_fieldindex() != 0) {
    _this->_internal_set_fieldindex(from._internal_fieldindex());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FilteredPolicyRequest::CopyFrom(const FilteredPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.casbin.v1.FilteredPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilteredPolicyRequest::IsInitialized() const {
  return true;
}

void FilteredPolicyRequest::InternalSwap(FilteredPolicyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.fieldvalues_.InternalSwap(&other->_impl_.fieldvalues_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ptype_, lhs_arena,
      &other->_impl_.ptype_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FilteredPolicyRequest, _impl_.fieldindex_)
      + sizeof(FilteredPolicyRequest::_impl_.fieldindex_)
      - PROTOBUF_FIELD_OFFSET(FilteredPolicyRequest, _impl_.enforcerhandler_)>(
          reinterpret_cast<char*>(&_impl_.enforcerhandler_),
          reinterpret_cast<char*>(&other->_impl_.enforcerhandler_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FilteredPolicyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_casbin_2eproto_getter, &descriptor_table_casbin_2eproto_once,
      file_level_metadata_casbin_2eproto[11]);
}

// ===================================================================

class UserRoleRequest::_Internal {
 public:
};

UserRoleRequest::UserRoleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.casbin.v1.UserRoleRequest)
}
UserRoleRequest::UserRoleRequest(const UserRoleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserRoleRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.domain_){from._impl_.domain_}
    , decltype(_impl_.user_){}
    , decltype(_impl_.role_){}
    , decltype(_impl_.enforcerhandler_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user().empty()) {
    _this->_impl_.user_.Set(from._internal_user(), 
      _this->GetArenaForAllocation());
  }
  _impl_.role_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.role_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_role().empty()) {
    _this->_impl_.role_.Set(from._internal_role(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.enforcerhandler_ = from._impl_.enforcerhandler_;
  // @@protoc_insertion_point(copy_constructor:palm.casbin.v1.UserRoleRequest)
}

inline void UserRoleRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.domain_){arena}
    , decltype(_impl_.user_){}
    , decltype(_impl_.role_){}
    , decltype(_impl_.enforcerhandler_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.role_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.role_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserRoleRequest::~UserRoleRequest() {
  // @@protoc_insertion_point(destructor:palm.casbin.v1.UserRoleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserRoleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.domain_.~RepeatedPtrField();
  _impl_.user_.Destroy();
  _impl_.role_.Destroy();
}

void UserRoleRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserRoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.casbin.v1.UserRoleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.domain_.Clear();
  _impl_.user_.ClearToEmpty();
  _impl_.role_.ClearToEmpty();
  _impl_.enforcerhandler_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserRoleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 enforcerHandler = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.enforcerhandler_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string user = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.UserRoleRequest.user"));
        } else
          goto handle_unusual;
        continue;
      // string role = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_role();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.UserRoleRequest.role"));
        } else
          goto handle_unusual;
        continue;
      // repeated string domain = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_domain();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.UserRoleRequest.domain"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserRoleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.casbin.v1.UserRoleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 enforcerHandler = 1;
  if (this->_internal_enforcerhandler() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_enforcerhandler(), target);
  }

  // string user = 2;
  if (!this->_internal_user().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.UserRoleRequest.user");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user(), target);
  }

  // string role = 3;
  if (!this->_internal_role().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_role().data(), static_cast<int>(this->_internal_role().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.UserRoleRequest.role");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_role(), target);
  }

  // repeated string domain = 4;
  for (int i = 0, n = this->_internal_domain_size(); i < n; i++) {
    const auto& s = this->_internal_domain(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.UserRoleRequest.domain");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.casbin.v1.UserRoleRequest)
  return target;
}

size_t UserRoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.casbin.v1.UserRoleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string domain = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.domain_.size());
  for (int i = 0, n = _impl_.domain_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.domain_.Get(i));
  }

  // string user = 2;
  if (!this->_internal_user().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string role = 3;
  if (!this->_internal_role().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_role());
  }

  // int32 enforcerHandler = 1;
  if (this->_internal_enforcerhandler() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_enforcerhandler());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserRoleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserRoleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserRoleRequest::GetClassData() const { return &_class_data_; }


void UserRoleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserRoleRequest*>(&to_msg);
  auto& from = static_cast<const UserRoleRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.casbin.v1.UserRoleRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.domain_.MergeFrom(from._impl_.domain_);
  if (!from._internal_user().empty()) {
    _this->_internal_set_user(from._internal_user());
  }
  if (!from._internal_role().empty()) {
    _this->_internal_set_role(from._internal_role());
  }
  if (from._internal_enforcerhandler() != 0) {
    _this->_internal_set_enforcerhandler(from._internal_enforcerhandler());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserRoleRequest::CopyFrom(const UserRoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.casbin.v1.UserRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRoleRequest::IsInitialized() const {
  return true;
}

void UserRoleRequest::InternalSwap(UserRoleRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.domain_.InternalSwap(&other->_impl_.domain_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_, lhs_arena,
      &other->_impl_.user_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.role_, lhs_arena,
      &other->_impl_.role_, rhs_arena
  );
  swap(_impl_.enforcerhandler_, other->_impl_.enforcerhandler_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UserRoleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_casbin_2eproto_getter, &descriptor_table_casbin_2eproto_once,
      file_level_metadata_casbin_2eproto[12]);
}

// ===================================================================

class PermissionRequest::_Internal {
 public:
};

PermissionRequest::PermissionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.casbin.v1.PermissionRequest)
}
PermissionRequest::PermissionRequest(const PermissionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PermissionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.permissions_){from._impl_.permissions_}
    , decltype(_impl_.domain_){from._impl_.domain_}
    , decltype(_impl_.user_){}
    , decltype(_impl_.enforcerhandler_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user().empty()) {
    _this->_impl_.user_.Set(from._internal_user(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.enforcerhandler_ = from._impl_.enforcerhandler_;
  // @@protoc_insertion_point(copy_constructor:palm.casbin.v1.PermissionRequest)
}

inline void PermissionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.permissions_){arena}
    , decltype(_impl_.domain_){arena}
    , decltype(_impl_.user_){}
    , decltype(_impl_.enforcerhandler_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PermissionRequest::~PermissionRequest() {
  // @@protoc_insertion_point(destructor:palm.casbin.v1.PermissionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PermissionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.permissions_.~RepeatedPtrField();
  _impl_.domain_.~RepeatedPtrField();
  _impl_.user_.Destroy();
}

void PermissionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PermissionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.casbin.v1.PermissionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.permissions_.Clear();
  _impl_.domain_.Clear();
  _impl_.user_.ClearToEmpty();
  _impl_.enforcerhandler_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PermissionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 enforcerHandler = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.enforcerhandler_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string user = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.PermissionRequest.user"));
        } else
          goto handle_unusual;
        continue;
      // repeated string permissions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_permissions();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.PermissionRequest.permissions"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string domain = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_domain();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.PermissionRequest.domain"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PermissionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.casbin.v1.PermissionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 enforcerHandler = 1;
  if (this->_internal_enforcerhandler() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_enforcerhandler(), target);
  }

  // string user = 2;
  if (!this->_internal_user().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.PermissionRequest.user");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user(), target);
  }

  // repeated string permissions = 3;
  for (int i = 0, n = this->_internal_permissions_size(); i < n; i++) {
    const auto& s = this->_internal_permissions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.PermissionRequest.permissions");
    target = stream->WriteString(3, s, target);
  }

  // repeated string domain = 4;
  for (int i = 0, n = this->_internal_domain_size(); i < n; i++) {
    const auto& s = this->_internal_domain(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.PermissionRequest.domain");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.casbin.v1.PermissionRequest)
  return target;
}

size_t PermissionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.casbin.v1.PermissionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string permissions = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.permissions_.size());
  for (int i = 0, n = _impl_.permissions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.permissions_.Get(i));
  }

  // repeated string domain = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.domain_.size());
  for (int i = 0, n = _impl_.domain_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.domain_.Get(i));
  }

  // string user = 2;
  if (!this->_internal_user().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // int32 enforcerHandler = 1;
  if (this->_internal_enforcerhandler() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_enforcerhandler());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PermissionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PermissionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PermissionRequest::GetClassData() const { return &_class_data_; }


void PermissionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PermissionRequest*>(&to_msg);
  auto& from = static_cast<const PermissionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.casbin.v1.PermissionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.permissions_.MergeFrom(from._impl_.permissions_);
  _this->_impl_.domain_.MergeFrom(from._impl_.domain_);
  if (!from._internal_user().empty()) {
    _this->_internal_set_user(from._internal_user());
  }
  if (from._internal_enforcerhandler() != 0) {
    _this->_internal_set_enforcerhandler(from._internal_enforcerhandler());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PermissionRequest::CopyFrom(const PermissionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.casbin.v1.PermissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PermissionRequest::IsInitialized() const {
  return true;
}

void PermissionRequest::InternalSwap(PermissionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.permissions_.InternalSwap(&other->_impl_.permissions_);
  _impl_.domain_.InternalSwap(&other->_impl_.domain_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_, lhs_arena,
      &other->_impl_.user_, rhs_arena
  );
  swap(_impl_.enforcerhandler_, other->_impl_.enforcerhandler_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PermissionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_casbin_2eproto_getter, &descriptor_table_casbin_2eproto_once,
      file_level_metadata_casbin_2eproto[13]);
}

// ===================================================================

class Array2DReply_d::_Internal {
 public:
};

Array2DReply_d::Array2DReply_d(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.casbin.v1.Array2DReply.d)
}
Array2DReply_d::Array2DReply_d(const Array2DReply_d& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Array2DReply_d* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.d1_){from._impl_.d1_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:palm.casbin.v1.Array2DReply.d)
}

inline void Array2DReply_d::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.d1_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Array2DReply_d::~Array2DReply_d() {
  // @@protoc_insertion_point(destructor:palm.casbin.v1.Array2DReply.d)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Array2DReply_d::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.d1_.~RepeatedPtrField();
}

void Array2DReply_d::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Array2DReply_d::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.casbin.v1.Array2DReply.d)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.d1_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Array2DReply_d::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string d1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_d1();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "palm.casbin.v1.Array2DReply.d.d1"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Array2DReply_d::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.casbin.v1.Array2DReply.d)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string d1 = 1;
  for (int i = 0, n = this->_internal_d1_size(); i < n; i++) {
    const auto& s = this->_internal_d1(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.casbin.v1.Array2DReply.d.d1");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.casbin.v1.Array2DReply.d)
  return target;
}

size_t Array2DReply_d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.casbin.v1.Array2DReply.d)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string d1 = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.d1_.size());
  for (int i = 0, n = _impl_.d1_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.d1_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Array2DReply_d::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Array2DReply_d::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Array2DReply_d::GetClassData() const { return &_class_data_; }


void Array2DReply_d::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Array2DReply_d*>(&to_msg);
  auto& from = static_cast<const Array2DReply_d&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.casbin.v1.Array2DReply.d)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.d1_.MergeFrom(from._impl_.d1_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Array2DReply_d::CopyFrom(const Array2DReply_d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.casbin.v1.Array2DReply.d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Array2DReply_d::IsInitialized() const {
  return true;
}

void Array2DReply_d::InternalSwap(Array2DReply_d* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.d1_.InternalSwap(&other->_impl_.d1_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Array2DReply_d::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_casbin_2eproto_getter, &descriptor_table_casbin_2eproto_once,
      file_level_metadata_casbin_2eproto[14]);
}

// ===================================================================

class Array2DReply::_Internal {
 public:
};

Array2DReply::Array2DReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.casbin.v1.Array2DReply)
}
Array2DReply::Array2DReply(const Array2DReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Array2DReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.d2_){from._impl_.d2_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:palm.casbin.v1.Array2DReply)
}

inline void Array2DReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.d2_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Array2DReply::~Array2DReply() {
  // @@protoc_insertion_point(destructor:palm.casbin.v1.Array2DReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Array2DReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.d2_.~RepeatedPtrField();
}

void Array2DReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Array2DReply::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.casbin.v1.Array2DReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.d2_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Array2DReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .palm.casbin.v1.Array2DReply.d d2 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_d2(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Array2DReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.casbin.v1.Array2DReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .palm.casbin.v1.Array2DReply.d d2 = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_d2_size()); i < n; i++) {
    const auto& repfield = this->_internal_d2(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.casbin.v1.Array2DReply)
  return target;
}

size_t Array2DReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.casbin.v1.Array2DReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.casbin.v1.Array2DReply.d d2 = 1;
  total_size += 1UL * this->_internal_d2_size();
  for (const auto& msg : this->_impl_.d2_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Array2DReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Array2DReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Array2DReply::GetClassData() const { return &_class_data_; }


void Array2DReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Array2DReply*>(&to_msg);
  auto& from = static_cast<const Array2DReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.casbin.v1.Array2DReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.d2_.MergeFrom(from._impl_.d2_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Array2DReply::CopyFrom(const Array2DReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.casbin.v1.Array2DReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Array2DReply::IsInitialized() const {
  return true;
}

void Array2DReply::InternalSwap(Array2DReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.d2_.InternalSwap(&other->_impl_.d2_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Array2DReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_casbin_2eproto_getter, &descriptor_table_casbin_2eproto_once,
      file_level_metadata_casbin_2eproto[15]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace casbin
}  // namespace palm
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::palm::casbin::v1::NewEnforcerRequest*
Arena::CreateMaybeMessage< ::palm::casbin::v1::NewEnforcerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::casbin::v1::NewEnforcerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::casbin::v1::NewEnforcerReply*
Arena::CreateMaybeMessage< ::palm::casbin::v1::NewEnforcerReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::casbin::v1::NewEnforcerReply >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::casbin::v1::NewAdapterRequest*
Arena::CreateMaybeMessage< ::palm::casbin::v1::NewAdapterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::casbin::v1::NewAdapterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::casbin::v1::NewAdapterReply*
Arena::CreateMaybeMessage< ::palm::casbin::v1::NewAdapterReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::casbin::v1::NewAdapterReply >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::casbin::v1::EnforceRequest*
Arena::CreateMaybeMessage< ::palm::casbin::v1::EnforceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::casbin::v1::EnforceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::casbin::v1::BoolReply*
Arena::CreateMaybeMessage< ::palm::casbin::v1::BoolReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::casbin::v1::BoolReply >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::casbin::v1::EmptyRequest*
Arena::CreateMaybeMessage< ::palm::casbin::v1::EmptyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::casbin::v1::EmptyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::casbin::v1::EmptyReply*
Arena::CreateMaybeMessage< ::palm::casbin::v1::EmptyReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::casbin::v1::EmptyReply >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::casbin::v1::PolicyRequest*
Arena::CreateMaybeMessage< ::palm::casbin::v1::PolicyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::casbin::v1::PolicyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::casbin::v1::SimpleGetRequest*
Arena::CreateMaybeMessage< ::palm::casbin::v1::SimpleGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::casbin::v1::SimpleGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::casbin::v1::ArrayReply*
Arena::CreateMaybeMessage< ::palm::casbin::v1::ArrayReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::casbin::v1::ArrayReply >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::casbin::v1::FilteredPolicyRequest*
Arena::CreateMaybeMessage< ::palm::casbin::v1::FilteredPolicyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::casbin::v1::FilteredPolicyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::casbin::v1::UserRoleRequest*
Arena::CreateMaybeMessage< ::palm::casbin::v1::UserRoleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::casbin::v1::UserRoleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::casbin::v1::PermissionRequest*
Arena::CreateMaybeMessage< ::palm::casbin::v1::PermissionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::casbin::v1::PermissionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::casbin::v1::Array2DReply_d*
Arena::CreateMaybeMessage< ::palm::casbin::v1::Array2DReply_d >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::casbin::v1::Array2DReply_d >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::casbin::v1::Array2DReply*
Arena::CreateMaybeMessage< ::palm::casbin::v1::Array2DReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::casbin::v1::Array2DReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
