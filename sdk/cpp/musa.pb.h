// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: musa.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_musa_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_musa_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_musa_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_musa_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_musa_2eproto;
namespace palm {
namespace musa {
namespace v1 {
class Error;
struct ErrorDefaultTypeInternal;
extern ErrorDefaultTypeInternal _Error_default_instance_;
class WechatPayBillDate;
struct WechatPayBillDateDefaultTypeInternal;
extern WechatPayBillDateDefaultTypeInternal _WechatPayBillDate_default_instance_;
class WechatPayBillResponse;
struct WechatPayBillResponseDefaultTypeInternal;
extern WechatPayBillResponseDefaultTypeInternal _WechatPayBillResponse_default_instance_;
class WechatPayCloseOrderRequest;
struct WechatPayCloseOrderRequestDefaultTypeInternal;
extern WechatPayCloseOrderRequestDefaultTypeInternal _WechatPayCloseOrderRequest_default_instance_;
class WechatPayCreateRefundRequest;
struct WechatPayCreateRefundRequestDefaultTypeInternal;
extern WechatPayCreateRefundRequestDefaultTypeInternal _WechatPayCreateRefundRequest_default_instance_;
class WechatPayCreateRefundRequest_Amount;
struct WechatPayCreateRefundRequest_AmountDefaultTypeInternal;
extern WechatPayCreateRefundRequest_AmountDefaultTypeInternal _WechatPayCreateRefundRequest_Amount_default_instance_;
class WechatPayExecuteBatchTransferRequest;
struct WechatPayExecuteBatchTransferRequestDefaultTypeInternal;
extern WechatPayExecuteBatchTransferRequestDefaultTypeInternal _WechatPayExecuteBatchTransferRequest_default_instance_;
class WechatPayExecuteBatchTransferRequest_Batch;
struct WechatPayExecuteBatchTransferRequest_BatchDefaultTypeInternal;
extern WechatPayExecuteBatchTransferRequest_BatchDefaultTypeInternal _WechatPayExecuteBatchTransferRequest_Batch_default_instance_;
class WechatPayExecuteBatchTransferRequest_Detail;
struct WechatPayExecuteBatchTransferRequest_DetailDefaultTypeInternal;
extern WechatPayExecuteBatchTransferRequest_DetailDefaultTypeInternal _WechatPayExecuteBatchTransferRequest_Detail_default_instance_;
class WechatPayExecuteBatchTransferResponse;
struct WechatPayExecuteBatchTransferResponseDefaultTypeInternal;
extern WechatPayExecuteBatchTransferResponseDefaultTypeInternal _WechatPayExecuteBatchTransferResponse_default_instance_;
class WechatPayExecuteBatchTransferResponse_Detail;
struct WechatPayExecuteBatchTransferResponse_DetailDefaultTypeInternal;
extern WechatPayExecuteBatchTransferResponse_DetailDefaultTypeInternal _WechatPayExecuteBatchTransferResponse_Detail_default_instance_;
class WechatPayExecuteBatchTransferResponse_Succeeded;
struct WechatPayExecuteBatchTransferResponse_SucceededDefaultTypeInternal;
extern WechatPayExecuteBatchTransferResponse_SucceededDefaultTypeInternal _WechatPayExecuteBatchTransferResponse_Succeeded_default_instance_;
class WechatPayFundFlowBillRequest;
struct WechatPayFundFlowBillRequestDefaultTypeInternal;
extern WechatPayFundFlowBillRequestDefaultTypeInternal _WechatPayFundFlowBillRequest_default_instance_;
class WechatPayJsapiPrepayIdResponse;
struct WechatPayJsapiPrepayIdResponseDefaultTypeInternal;
extern WechatPayJsapiPrepayIdResponseDefaultTypeInternal _WechatPayJsapiPrepayIdResponse_default_instance_;
class WechatPayNativeQrCodeUrlResponse;
struct WechatPayNativeQrCodeUrlResponseDefaultTypeInternal;
extern WechatPayNativeQrCodeUrlResponseDefaultTypeInternal _WechatPayNativeQrCodeUrlResponse_default_instance_;
class WechatPayPrepayRequest;
struct WechatPayPrepayRequestDefaultTypeInternal;
extern WechatPayPrepayRequestDefaultTypeInternal _WechatPayPrepayRequest_default_instance_;
class WechatPayPrepayRequest_Amount;
struct WechatPayPrepayRequest_AmountDefaultTypeInternal;
extern WechatPayPrepayRequest_AmountDefaultTypeInternal _WechatPayPrepayRequest_Amount_default_instance_;
class WechatPayQueryBatchTransferRequest;
struct WechatPayQueryBatchTransferRequestDefaultTypeInternal;
extern WechatPayQueryBatchTransferRequestDefaultTypeInternal _WechatPayQueryBatchTransferRequest_default_instance_;
class WechatPayQueryBatchTransferResponse;
struct WechatPayQueryBatchTransferResponseDefaultTypeInternal;
extern WechatPayQueryBatchTransferResponseDefaultTypeInternal _WechatPayQueryBatchTransferResponse_default_instance_;
class WechatPayQueryBatchTransferResponse_Batch;
struct WechatPayQueryBatchTransferResponse_BatchDefaultTypeInternal;
extern WechatPayQueryBatchTransferResponse_BatchDefaultTypeInternal _WechatPayQueryBatchTransferResponse_Batch_default_instance_;
class WechatPayQueryBatchTransferResponse_Detail;
struct WechatPayQueryBatchTransferResponse_DetailDefaultTypeInternal;
extern WechatPayQueryBatchTransferResponse_DetailDefaultTypeInternal _WechatPayQueryBatchTransferResponse_Detail_default_instance_;
class WechatPayQueryOrderByIdRequest;
struct WechatPayQueryOrderByIdRequestDefaultTypeInternal;
extern WechatPayQueryOrderByIdRequestDefaultTypeInternal _WechatPayQueryOrderByIdRequest_default_instance_;
class WechatPayQueryOrderByOutTradeNoRequest;
struct WechatPayQueryOrderByOutTradeNoRequestDefaultTypeInternal;
extern WechatPayQueryOrderByOutTradeNoRequestDefaultTypeInternal _WechatPayQueryOrderByOutTradeNoRequest_default_instance_;
class WechatPayQueryRefundRequest;
struct WechatPayQueryRefundRequestDefaultTypeInternal;
extern WechatPayQueryRefundRequestDefaultTypeInternal _WechatPayQueryRefundRequest_default_instance_;
class WechatPayQueryTransferDetailRequest;
struct WechatPayQueryTransferDetailRequestDefaultTypeInternal;
extern WechatPayQueryTransferDetailRequestDefaultTypeInternal _WechatPayQueryTransferDetailRequest_default_instance_;
class WechatPayQueryTransferDetailResponse;
struct WechatPayQueryTransferDetailResponseDefaultTypeInternal;
extern WechatPayQueryTransferDetailResponseDefaultTypeInternal _WechatPayQueryTransferDetailResponse_default_instance_;
class WechatPayRefundResponse;
struct WechatPayRefundResponseDefaultTypeInternal;
extern WechatPayRefundResponseDefaultTypeInternal _WechatPayRefundResponse_default_instance_;
class WechatPayTradeBillRequest;
struct WechatPayTradeBillRequestDefaultTypeInternal;
extern WechatPayTradeBillRequestDefaultTypeInternal _WechatPayTradeBillRequest_default_instance_;
class WechatPayTradeResponse;
struct WechatPayTradeResponseDefaultTypeInternal;
extern WechatPayTradeResponseDefaultTypeInternal _WechatPayTradeResponse_default_instance_;
class WechatPayTransferGetBillReceiptRequest;
struct WechatPayTransferGetBillReceiptRequestDefaultTypeInternal;
extern WechatPayTransferGetBillReceiptRequestDefaultTypeInternal _WechatPayTransferGetBillReceiptRequest_default_instance_;
class WechatPayTransferGetElectronicReceiptRequest;
struct WechatPayTransferGetElectronicReceiptRequestDefaultTypeInternal;
extern WechatPayTransferGetElectronicReceiptRequestDefaultTypeInternal _WechatPayTransferGetElectronicReceiptRequest_default_instance_;
class WechatPayTransferGetReceiptResponse;
struct WechatPayTransferGetReceiptResponseDefaultTypeInternal;
extern WechatPayTransferGetReceiptResponseDefaultTypeInternal _WechatPayTransferGetReceiptResponse_default_instance_;
}  // namespace v1
}  // namespace musa
}  // namespace palm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace palm {
namespace musa {
namespace v1 {
enum WechatPayTradeBillRequest_BillType : int {
  WechatPayTradeBillRequest_BillType_ALL = 0,
  WechatPayTradeBillRequest_BillType_SUCCESS = 1,
  WechatPayTradeBillRequest_BillType_REFUND = 2,
  WechatPayTradeBillRequest_BillType_WechatPayTradeBillRequest_BillType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  WechatPayTradeBillRequest_BillType_WechatPayTradeBillRequest_BillType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool WechatPayTradeBillRequest_BillType_IsValid(int value);
extern const uint32_t WechatPayTradeBillRequest_BillType_internal_data_[];
constexpr WechatPayTradeBillRequest_BillType WechatPayTradeBillRequest_BillType_BillType_MIN = static_cast<WechatPayTradeBillRequest_BillType>(0);
constexpr WechatPayTradeBillRequest_BillType WechatPayTradeBillRequest_BillType_BillType_MAX = static_cast<WechatPayTradeBillRequest_BillType>(2);
constexpr int WechatPayTradeBillRequest_BillType_BillType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
WechatPayTradeBillRequest_BillType_descriptor();
template <typename T>
const std::string& WechatPayTradeBillRequest_BillType_Name(T value) {
  static_assert(std::is_same<T, WechatPayTradeBillRequest_BillType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to BillType_Name().");
  return WechatPayTradeBillRequest_BillType_Name(static_cast<WechatPayTradeBillRequest_BillType>(value));
}
template <>
inline const std::string& WechatPayTradeBillRequest_BillType_Name(WechatPayTradeBillRequest_BillType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WechatPayTradeBillRequest_BillType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool WechatPayTradeBillRequest_BillType_Parse(absl::string_view name, WechatPayTradeBillRequest_BillType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WechatPayTradeBillRequest_BillType>(
      WechatPayTradeBillRequest_BillType_descriptor(), name, value);
}
enum WechatPayFundFlowBillRequest_AccountType : int {
  WechatPayFundFlowBillRequest_AccountType_BASIC = 0,
  WechatPayFundFlowBillRequest_AccountType_OPERATION = 1,
  WechatPayFundFlowBillRequest_AccountType_FEES = 2,
  WechatPayFundFlowBillRequest_AccountType_WechatPayFundFlowBillRequest_AccountType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  WechatPayFundFlowBillRequest_AccountType_WechatPayFundFlowBillRequest_AccountType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool WechatPayFundFlowBillRequest_AccountType_IsValid(int value);
extern const uint32_t WechatPayFundFlowBillRequest_AccountType_internal_data_[];
constexpr WechatPayFundFlowBillRequest_AccountType WechatPayFundFlowBillRequest_AccountType_AccountType_MIN = static_cast<WechatPayFundFlowBillRequest_AccountType>(0);
constexpr WechatPayFundFlowBillRequest_AccountType WechatPayFundFlowBillRequest_AccountType_AccountType_MAX = static_cast<WechatPayFundFlowBillRequest_AccountType>(2);
constexpr int WechatPayFundFlowBillRequest_AccountType_AccountType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
WechatPayFundFlowBillRequest_AccountType_descriptor();
template <typename T>
const std::string& WechatPayFundFlowBillRequest_AccountType_Name(T value) {
  static_assert(std::is_same<T, WechatPayFundFlowBillRequest_AccountType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AccountType_Name().");
  return WechatPayFundFlowBillRequest_AccountType_Name(static_cast<WechatPayFundFlowBillRequest_AccountType>(value));
}
template <>
inline const std::string& WechatPayFundFlowBillRequest_AccountType_Name(WechatPayFundFlowBillRequest_AccountType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WechatPayFundFlowBillRequest_AccountType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool WechatPayFundFlowBillRequest_AccountType_Parse(absl::string_view name, WechatPayFundFlowBillRequest_AccountType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WechatPayFundFlowBillRequest_AccountType>(
      WechatPayFundFlowBillRequest_AccountType_descriptor(), name, value);
}
enum WechatPayTransferGetElectronicReceiptRequest_AcceptType : int {
  WechatPayTransferGetElectronicReceiptRequest_AcceptType_BATCH_TRANSFER = 0,
  WechatPayTransferGetElectronicReceiptRequest_AcceptType_TRANSFER_TO_POCKET = 1,
  WechatPayTransferGetElectronicReceiptRequest_AcceptType_TRANSFER_TO_BANK = 2,
  WechatPayTransferGetElectronicReceiptRequest_AcceptType_WechatPayTransferGetElectronicReceiptRequest_AcceptType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  WechatPayTransferGetElectronicReceiptRequest_AcceptType_WechatPayTransferGetElectronicReceiptRequest_AcceptType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool WechatPayTransferGetElectronicReceiptRequest_AcceptType_IsValid(int value);
extern const uint32_t WechatPayTransferGetElectronicReceiptRequest_AcceptType_internal_data_[];
constexpr WechatPayTransferGetElectronicReceiptRequest_AcceptType WechatPayTransferGetElectronicReceiptRequest_AcceptType_AcceptType_MIN = static_cast<WechatPayTransferGetElectronicReceiptRequest_AcceptType>(0);
constexpr WechatPayTransferGetElectronicReceiptRequest_AcceptType WechatPayTransferGetElectronicReceiptRequest_AcceptType_AcceptType_MAX = static_cast<WechatPayTransferGetElectronicReceiptRequest_AcceptType>(2);
constexpr int WechatPayTransferGetElectronicReceiptRequest_AcceptType_AcceptType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
WechatPayTransferGetElectronicReceiptRequest_AcceptType_descriptor();
template <typename T>
const std::string& WechatPayTransferGetElectronicReceiptRequest_AcceptType_Name(T value) {
  static_assert(std::is_same<T, WechatPayTransferGetElectronicReceiptRequest_AcceptType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AcceptType_Name().");
  return WechatPayTransferGetElectronicReceiptRequest_AcceptType_Name(static_cast<WechatPayTransferGetElectronicReceiptRequest_AcceptType>(value));
}
template <>
inline const std::string& WechatPayTransferGetElectronicReceiptRequest_AcceptType_Name(WechatPayTransferGetElectronicReceiptRequest_AcceptType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WechatPayTransferGetElectronicReceiptRequest_AcceptType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool WechatPayTransferGetElectronicReceiptRequest_AcceptType_Parse(absl::string_view name, WechatPayTransferGetElectronicReceiptRequest_AcceptType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WechatPayTransferGetElectronicReceiptRequest_AcceptType>(
      WechatPayTransferGetElectronicReceiptRequest_AcceptType_descriptor(), name, value);
}
enum WechatPayQueryBatchTransferRequest_DetailStatus : int {
  WechatPayQueryBatchTransferRequest_DetailStatus_ALL = 0,
  WechatPayQueryBatchTransferRequest_DetailStatus_SUCCESS = 1,
  WechatPayQueryBatchTransferRequest_DetailStatus_WAIT_PAY = 2,
  WechatPayQueryBatchTransferRequest_DetailStatus_FAIL = 9,
  WechatPayQueryBatchTransferRequest_DetailStatus_WechatPayQueryBatchTransferRequest_DetailStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  WechatPayQueryBatchTransferRequest_DetailStatus_WechatPayQueryBatchTransferRequest_DetailStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool WechatPayQueryBatchTransferRequest_DetailStatus_IsValid(int value);
extern const uint32_t WechatPayQueryBatchTransferRequest_DetailStatus_internal_data_[];
constexpr WechatPayQueryBatchTransferRequest_DetailStatus WechatPayQueryBatchTransferRequest_DetailStatus_DetailStatus_MIN = static_cast<WechatPayQueryBatchTransferRequest_DetailStatus>(0);
constexpr WechatPayQueryBatchTransferRequest_DetailStatus WechatPayQueryBatchTransferRequest_DetailStatus_DetailStatus_MAX = static_cast<WechatPayQueryBatchTransferRequest_DetailStatus>(9);
constexpr int WechatPayQueryBatchTransferRequest_DetailStatus_DetailStatus_ARRAYSIZE = 9 + 1;
const ::google::protobuf::EnumDescriptor*
WechatPayQueryBatchTransferRequest_DetailStatus_descriptor();
template <typename T>
const std::string& WechatPayQueryBatchTransferRequest_DetailStatus_Name(T value) {
  static_assert(std::is_same<T, WechatPayQueryBatchTransferRequest_DetailStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DetailStatus_Name().");
  return WechatPayQueryBatchTransferRequest_DetailStatus_Name(static_cast<WechatPayQueryBatchTransferRequest_DetailStatus>(value));
}
template <>
inline const std::string& WechatPayQueryBatchTransferRequest_DetailStatus_Name(WechatPayQueryBatchTransferRequest_DetailStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WechatPayQueryBatchTransferRequest_DetailStatus_descriptor,
                                                 0, 9>(
      static_cast<int>(value));
}
inline bool WechatPayQueryBatchTransferRequest_DetailStatus_Parse(absl::string_view name, WechatPayQueryBatchTransferRequest_DetailStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WechatPayQueryBatchTransferRequest_DetailStatus>(
      WechatPayQueryBatchTransferRequest_DetailStatus_descriptor(), name, value);
}
enum WechatPayCurrency : int {
  CNY = 0,
  WechatPayCurrency_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  WechatPayCurrency_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool WechatPayCurrency_IsValid(int value);
extern const uint32_t WechatPayCurrency_internal_data_[];
constexpr WechatPayCurrency WechatPayCurrency_MIN = static_cast<WechatPayCurrency>(0);
constexpr WechatPayCurrency WechatPayCurrency_MAX = static_cast<WechatPayCurrency>(0);
constexpr int WechatPayCurrency_ARRAYSIZE = 0 + 1;
const ::google::protobuf::EnumDescriptor*
WechatPayCurrency_descriptor();
template <typename T>
const std::string& WechatPayCurrency_Name(T value) {
  static_assert(std::is_same<T, WechatPayCurrency>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to WechatPayCurrency_Name().");
  return WechatPayCurrency_Name(static_cast<WechatPayCurrency>(value));
}
template <>
inline const std::string& WechatPayCurrency_Name(WechatPayCurrency value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WechatPayCurrency_descriptor,
                                                 0, 0>(
      static_cast<int>(value));
}
inline bool WechatPayCurrency_Parse(absl::string_view name, WechatPayCurrency* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WechatPayCurrency>(
      WechatPayCurrency_descriptor(), name, value);
}
enum WechatPayNotifyAction : int {
  TRANSCATION = 0,
  REFUND = 1,
  WechatPayNotifyAction_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  WechatPayNotifyAction_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool WechatPayNotifyAction_IsValid(int value);
extern const uint32_t WechatPayNotifyAction_internal_data_[];
constexpr WechatPayNotifyAction WechatPayNotifyAction_MIN = static_cast<WechatPayNotifyAction>(0);
constexpr WechatPayNotifyAction WechatPayNotifyAction_MAX = static_cast<WechatPayNotifyAction>(1);
constexpr int WechatPayNotifyAction_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
WechatPayNotifyAction_descriptor();
template <typename T>
const std::string& WechatPayNotifyAction_Name(T value) {
  static_assert(std::is_same<T, WechatPayNotifyAction>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to WechatPayNotifyAction_Name().");
  return WechatPayNotifyAction_Name(static_cast<WechatPayNotifyAction>(value));
}
template <>
inline const std::string& WechatPayNotifyAction_Name(WechatPayNotifyAction value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WechatPayNotifyAction_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool WechatPayNotifyAction_Parse(absl::string_view name, WechatPayNotifyAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WechatPayNotifyAction>(
      WechatPayNotifyAction_descriptor(), name, value);
}
enum WechatPayTarType : int {
  GZIP = 0,
  WechatPayTarType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  WechatPayTarType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool WechatPayTarType_IsValid(int value);
extern const uint32_t WechatPayTarType_internal_data_[];
constexpr WechatPayTarType WechatPayTarType_MIN = static_cast<WechatPayTarType>(0);
constexpr WechatPayTarType WechatPayTarType_MAX = static_cast<WechatPayTarType>(0);
constexpr int WechatPayTarType_ARRAYSIZE = 0 + 1;
const ::google::protobuf::EnumDescriptor*
WechatPayTarType_descriptor();
template <typename T>
const std::string& WechatPayTarType_Name(T value) {
  static_assert(std::is_same<T, WechatPayTarType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to WechatPayTarType_Name().");
  return WechatPayTarType_Name(static_cast<WechatPayTarType>(value));
}
template <>
inline const std::string& WechatPayTarType_Name(WechatPayTarType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WechatPayTarType_descriptor,
                                                 0, 0>(
      static_cast<int>(value));
}
inline bool WechatPayTarType_Parse(absl::string_view name, WechatPayTarType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WechatPayTarType>(
      WechatPayTarType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class WechatPayTransferGetReceiptResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayTransferGetReceiptResponse) */ {
 public:
  inline WechatPayTransferGetReceiptResponse() : WechatPayTransferGetReceiptResponse(nullptr) {}
  ~WechatPayTransferGetReceiptResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayTransferGetReceiptResponse(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayTransferGetReceiptResponse(const WechatPayTransferGetReceiptResponse& from)
      : WechatPayTransferGetReceiptResponse(nullptr, from) {}
  WechatPayTransferGetReceiptResponse(WechatPayTransferGetReceiptResponse&& from) noexcept
    : WechatPayTransferGetReceiptResponse() {
    *this = ::std::move(from);
  }

  inline WechatPayTransferGetReceiptResponse& operator=(const WechatPayTransferGetReceiptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayTransferGetReceiptResponse& operator=(WechatPayTransferGetReceiptResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayTransferGetReceiptResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayTransferGetReceiptResponse* internal_default_instance() {
    return reinterpret_cast<const WechatPayTransferGetReceiptResponse*>(
               &_WechatPayTransferGetReceiptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(WechatPayTransferGetReceiptResponse& a, WechatPayTransferGetReceiptResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayTransferGetReceiptResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayTransferGetReceiptResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayTransferGetReceiptResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayTransferGetReceiptResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayTransferGetReceiptResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayTransferGetReceiptResponse& from) {
    WechatPayTransferGetReceiptResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayTransferGetReceiptResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayTransferGetReceiptResponse";
  }
  protected:
  explicit WechatPayTransferGetReceiptResponse(::google::protobuf::Arena* arena);
  WechatPayTransferGetReceiptResponse(::google::protobuf::Arena* arena, const WechatPayTransferGetReceiptResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadFieldNumber = 1,
  };
  // bytes payload = 1;
  void clear_payload() ;
  const std::string& payload() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payload(Arg_&& arg, Args_... args);
  std::string* mutable_payload();
  PROTOBUF_NODISCARD std::string* release_payload();
  void set_allocated_payload(std::string* value);

  private:
  const std::string& _internal_payload() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payload(
      const std::string& value);
  std::string* _internal_mutable_payload();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayTransferGetReceiptResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr payload_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayTransferGetElectronicReceiptRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest) */ {
 public:
  inline WechatPayTransferGetElectronicReceiptRequest() : WechatPayTransferGetElectronicReceiptRequest(nullptr) {}
  ~WechatPayTransferGetElectronicReceiptRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayTransferGetElectronicReceiptRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayTransferGetElectronicReceiptRequest(const WechatPayTransferGetElectronicReceiptRequest& from)
      : WechatPayTransferGetElectronicReceiptRequest(nullptr, from) {}
  WechatPayTransferGetElectronicReceiptRequest(WechatPayTransferGetElectronicReceiptRequest&& from) noexcept
    : WechatPayTransferGetElectronicReceiptRequest() {
    *this = ::std::move(from);
  }

  inline WechatPayTransferGetElectronicReceiptRequest& operator=(const WechatPayTransferGetElectronicReceiptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayTransferGetElectronicReceiptRequest& operator=(WechatPayTransferGetElectronicReceiptRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayTransferGetElectronicReceiptRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayTransferGetElectronicReceiptRequest* internal_default_instance() {
    return reinterpret_cast<const WechatPayTransferGetElectronicReceiptRequest*>(
               &_WechatPayTransferGetElectronicReceiptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(WechatPayTransferGetElectronicReceiptRequest& a, WechatPayTransferGetElectronicReceiptRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayTransferGetElectronicReceiptRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayTransferGetElectronicReceiptRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayTransferGetElectronicReceiptRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayTransferGetElectronicReceiptRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayTransferGetElectronicReceiptRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayTransferGetElectronicReceiptRequest& from) {
    WechatPayTransferGetElectronicReceiptRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayTransferGetElectronicReceiptRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest";
  }
  protected:
  explicit WechatPayTransferGetElectronicReceiptRequest(::google::protobuf::Arena* arena);
  WechatPayTransferGetElectronicReceiptRequest(::google::protobuf::Arena* arena, const WechatPayTransferGetElectronicReceiptRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using AcceptType = WechatPayTransferGetElectronicReceiptRequest_AcceptType;
  static constexpr AcceptType BATCH_TRANSFER = WechatPayTransferGetElectronicReceiptRequest_AcceptType_BATCH_TRANSFER;
  static constexpr AcceptType TRANSFER_TO_POCKET = WechatPayTransferGetElectronicReceiptRequest_AcceptType_TRANSFER_TO_POCKET;
  static constexpr AcceptType TRANSFER_TO_BANK = WechatPayTransferGetElectronicReceiptRequest_AcceptType_TRANSFER_TO_BANK;
  static inline bool AcceptType_IsValid(int value) {
    return WechatPayTransferGetElectronicReceiptRequest_AcceptType_IsValid(value);
  }
  static constexpr AcceptType AcceptType_MIN = WechatPayTransferGetElectronicReceiptRequest_AcceptType_AcceptType_MIN;
  static constexpr AcceptType AcceptType_MAX = WechatPayTransferGetElectronicReceiptRequest_AcceptType_AcceptType_MAX;
  static constexpr int AcceptType_ARRAYSIZE = WechatPayTransferGetElectronicReceiptRequest_AcceptType_AcceptType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* AcceptType_descriptor() {
    return WechatPayTransferGetElectronicReceiptRequest_AcceptType_descriptor();
  }
  template <typename T>
  static inline const std::string& AcceptType_Name(T value) {
    return WechatPayTransferGetElectronicReceiptRequest_AcceptType_Name(value);
  }
  static inline bool AcceptType_Parse(absl::string_view name, AcceptType* value) {
    return WechatPayTransferGetElectronicReceiptRequest_AcceptType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kOutBatchNoFieldNumber = 2,
    kOutDetailNoFieldNumber = 3,
    kAcceptTypeFieldNumber = 1,
  };
  // optional string out_batch_no = 2;
  bool has_out_batch_no() const;
  void clear_out_batch_no() ;
  const std::string& out_batch_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_batch_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_batch_no();
  PROTOBUF_NODISCARD std::string* release_out_batch_no();
  void set_allocated_out_batch_no(std::string* value);

  private:
  const std::string& _internal_out_batch_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_batch_no(
      const std::string& value);
  std::string* _internal_mutable_out_batch_no();

  public:
  // string out_detail_no = 3;
  void clear_out_detail_no() ;
  const std::string& out_detail_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_detail_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_detail_no();
  PROTOBUF_NODISCARD std::string* release_out_detail_no();
  void set_allocated_out_detail_no(std::string* value);

  private:
  const std::string& _internal_out_detail_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_detail_no(
      const std::string& value);
  std::string* _internal_mutable_out_detail_no();

  public:
  // .palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest.AcceptType accept_type = 1;
  void clear_accept_type() ;
  ::palm::musa::v1::WechatPayTransferGetElectronicReceiptRequest_AcceptType accept_type() const;
  void set_accept_type(::palm::musa::v1::WechatPayTransferGetElectronicReceiptRequest_AcceptType value);

  private:
  ::palm::musa::v1::WechatPayTransferGetElectronicReceiptRequest_AcceptType _internal_accept_type() const;
  void _internal_set_accept_type(::palm::musa::v1::WechatPayTransferGetElectronicReceiptRequest_AcceptType value);

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      91, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr out_batch_no_;
    ::google::protobuf::internal::ArenaStringPtr out_detail_no_;
    int accept_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayTransferGetBillReceiptRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayTransferGetBillReceiptRequest) */ {
 public:
  inline WechatPayTransferGetBillReceiptRequest() : WechatPayTransferGetBillReceiptRequest(nullptr) {}
  ~WechatPayTransferGetBillReceiptRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayTransferGetBillReceiptRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayTransferGetBillReceiptRequest(const WechatPayTransferGetBillReceiptRequest& from)
      : WechatPayTransferGetBillReceiptRequest(nullptr, from) {}
  WechatPayTransferGetBillReceiptRequest(WechatPayTransferGetBillReceiptRequest&& from) noexcept
    : WechatPayTransferGetBillReceiptRequest() {
    *this = ::std::move(from);
  }

  inline WechatPayTransferGetBillReceiptRequest& operator=(const WechatPayTransferGetBillReceiptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayTransferGetBillReceiptRequest& operator=(WechatPayTransferGetBillReceiptRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayTransferGetBillReceiptRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayTransferGetBillReceiptRequest* internal_default_instance() {
    return reinterpret_cast<const WechatPayTransferGetBillReceiptRequest*>(
               &_WechatPayTransferGetBillReceiptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(WechatPayTransferGetBillReceiptRequest& a, WechatPayTransferGetBillReceiptRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayTransferGetBillReceiptRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayTransferGetBillReceiptRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayTransferGetBillReceiptRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayTransferGetBillReceiptRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayTransferGetBillReceiptRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayTransferGetBillReceiptRequest& from) {
    WechatPayTransferGetBillReceiptRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayTransferGetBillReceiptRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayTransferGetBillReceiptRequest";
  }
  protected:
  explicit WechatPayTransferGetBillReceiptRequest(::google::protobuf::Arena* arena);
  WechatPayTransferGetBillReceiptRequest(::google::protobuf::Arena* arena, const WechatPayTransferGetBillReceiptRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutBatchNoFieldNumber = 1,
  };
  // string out_batch_no = 1;
  void clear_out_batch_no() ;
  const std::string& out_batch_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_batch_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_batch_no();
  PROTOBUF_NODISCARD std::string* release_out_batch_no();
  void set_allocated_out_batch_no(std::string* value);

  private:
  const std::string& _internal_out_batch_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_batch_no(
      const std::string& value);
  std::string* _internal_mutable_out_batch_no();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayTransferGetBillReceiptRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      72, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr out_batch_no_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayTradeResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayTradeResponse) */ {
 public:
  inline WechatPayTradeResponse() : WechatPayTradeResponse(nullptr) {}
  ~WechatPayTradeResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayTradeResponse(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayTradeResponse(const WechatPayTradeResponse& from)
      : WechatPayTradeResponse(nullptr, from) {}
  WechatPayTradeResponse(WechatPayTradeResponse&& from) noexcept
    : WechatPayTradeResponse() {
    *this = ::std::move(from);
  }

  inline WechatPayTradeResponse& operator=(const WechatPayTradeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayTradeResponse& operator=(WechatPayTradeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayTradeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayTradeResponse* internal_default_instance() {
    return reinterpret_cast<const WechatPayTradeResponse*>(
               &_WechatPayTradeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(WechatPayTradeResponse& a, WechatPayTradeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayTradeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayTradeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayTradeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayTradeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayTradeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayTradeResponse& from) {
    WechatPayTradeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayTradeResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayTradeResponse";
  }
  protected:
  explicit WechatPayTradeResponse(::google::protobuf::Arena* arena);
  WechatPayTradeResponse(::google::protobuf::Arena* arena, const WechatPayTradeResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTradeStateFieldNumber = 1,
    kTradeStateDescFieldNumber = 2,
  };
  // string trade_state = 1;
  void clear_trade_state() ;
  const std::string& trade_state() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_trade_state(Arg_&& arg, Args_... args);
  std::string* mutable_trade_state();
  PROTOBUF_NODISCARD std::string* release_trade_state();
  void set_allocated_trade_state(std::string* value);

  private:
  const std::string& _internal_trade_state() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_trade_state(
      const std::string& value);
  std::string* _internal_mutable_trade_state();

  public:
  // string trade_state_desc = 2;
  void clear_trade_state_desc() ;
  const std::string& trade_state_desc() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_trade_state_desc(Arg_&& arg, Args_... args);
  std::string* mutable_trade_state_desc();
  PROTOBUF_NODISCARD std::string* release_trade_state_desc();
  void set_allocated_trade_state_desc(std::string* value);

  private:
  const std::string& _internal_trade_state_desc() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_trade_state_desc(
      const std::string& value);
  std::string* _internal_mutable_trade_state_desc();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayTradeResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      71, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr trade_state_;
    ::google::protobuf::internal::ArenaStringPtr trade_state_desc_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayRefundResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayRefundResponse) */ {
 public:
  inline WechatPayRefundResponse() : WechatPayRefundResponse(nullptr) {}
  ~WechatPayRefundResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayRefundResponse(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayRefundResponse(const WechatPayRefundResponse& from)
      : WechatPayRefundResponse(nullptr, from) {}
  WechatPayRefundResponse(WechatPayRefundResponse&& from) noexcept
    : WechatPayRefundResponse() {
    *this = ::std::move(from);
  }

  inline WechatPayRefundResponse& operator=(const WechatPayRefundResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayRefundResponse& operator=(WechatPayRefundResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayRefundResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayRefundResponse* internal_default_instance() {
    return reinterpret_cast<const WechatPayRefundResponse*>(
               &_WechatPayRefundResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(WechatPayRefundResponse& a, WechatPayRefundResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayRefundResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayRefundResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayRefundResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayRefundResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayRefundResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayRefundResponse& from) {
    WechatPayRefundResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayRefundResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayRefundResponse";
  }
  protected:
  explicit WechatPayRefundResponse(::google::protobuf::Arena* arena);
  WechatPayRefundResponse(::google::protobuf::Arena* arena, const WechatPayRefundResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutRefundNoFieldNumber = 1,
    kChannelFieldNumber = 2,
    kStatusFieldNumber = 3,
    kUserReceivedAccountFieldNumber = 4,
    kCreateTimeFieldNumber = 99,
  };
  // string out_refund_no = 1;
  void clear_out_refund_no() ;
  const std::string& out_refund_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_refund_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_refund_no();
  PROTOBUF_NODISCARD std::string* release_out_refund_no();
  void set_allocated_out_refund_no(std::string* value);

  private:
  const std::string& _internal_out_refund_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_refund_no(
      const std::string& value);
  std::string* _internal_mutable_out_refund_no();

  public:
  // string channel = 2;
  void clear_channel() ;
  const std::string& channel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_channel(Arg_&& arg, Args_... args);
  std::string* mutable_channel();
  PROTOBUF_NODISCARD std::string* release_channel();
  void set_allocated_channel(std::string* value);

  private:
  const std::string& _internal_channel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_channel(
      const std::string& value);
  std::string* _internal_mutable_channel();

  public:
  // string status = 3;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // string user_received_account = 4;
  void clear_user_received_account() ;
  const std::string& user_received_account() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user_received_account(Arg_&& arg, Args_... args);
  std::string* mutable_user_received_account();
  PROTOBUF_NODISCARD std::string* release_user_received_account();
  void set_allocated_user_received_account(std::string* value);

  private:
  const std::string& _internal_user_received_account() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user_received_account(
      const std::string& value);
  std::string* _internal_mutable_user_received_account();

  public:
  // string create_time = 99;
  void clear_create_time() ;
  const std::string& create_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_create_time(Arg_&& arg, Args_... args);
  std::string* mutable_create_time();
  PROTOBUF_NODISCARD std::string* release_create_time();
  void set_allocated_create_time(std::string* value);

  private:
  const std::string& _internal_create_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_create_time(
      const std::string& value);
  std::string* _internal_mutable_create_time();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayRefundResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 0,
      103, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr out_refund_no_;
    ::google::protobuf::internal::ArenaStringPtr channel_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::google::protobuf::internal::ArenaStringPtr user_received_account_;
    ::google::protobuf::internal::ArenaStringPtr create_time_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayQueryTransferDetailResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayQueryTransferDetailResponse) */ {
 public:
  inline WechatPayQueryTransferDetailResponse() : WechatPayQueryTransferDetailResponse(nullptr) {}
  ~WechatPayQueryTransferDetailResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayQueryTransferDetailResponse(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayQueryTransferDetailResponse(const WechatPayQueryTransferDetailResponse& from)
      : WechatPayQueryTransferDetailResponse(nullptr, from) {}
  WechatPayQueryTransferDetailResponse(WechatPayQueryTransferDetailResponse&& from) noexcept
    : WechatPayQueryTransferDetailResponse() {
    *this = ::std::move(from);
  }

  inline WechatPayQueryTransferDetailResponse& operator=(const WechatPayQueryTransferDetailResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayQueryTransferDetailResponse& operator=(WechatPayQueryTransferDetailResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayQueryTransferDetailResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayQueryTransferDetailResponse* internal_default_instance() {
    return reinterpret_cast<const WechatPayQueryTransferDetailResponse*>(
               &_WechatPayQueryTransferDetailResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(WechatPayQueryTransferDetailResponse& a, WechatPayQueryTransferDetailResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayQueryTransferDetailResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayQueryTransferDetailResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayQueryTransferDetailResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayQueryTransferDetailResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayQueryTransferDetailResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayQueryTransferDetailResponse& from) {
    WechatPayQueryTransferDetailResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayQueryTransferDetailResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayQueryTransferDetailResponse";
  }
  protected:
  explicit WechatPayQueryTransferDetailResponse(::google::protobuf::Arena* arena);
  WechatPayQueryTransferDetailResponse(::google::protobuf::Arena* arena, const WechatPayQueryTransferDetailResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppIdFieldNumber = 1,
    kMchIdFieldNumber = 2,
    kOpenIdFieldNumber = 3,
    kUserNameFieldNumber = 4,
    kBatchIdFieldNumber = 11,
    kOutBatchNoFieldNumber = 12,
    kOutDetailNoFieldNumber = 13,
    kDetailIdFieldNumber = 14,
    kDetailStatusFieldNumber = 15,
    kTransferRemarkFieldNumber = 17,
    kFailReasonFieldNumber = 18,
    kInitiateTimeFieldNumber = 19,
    kUpdateTimeFieldNumber = 20,
    kTransferAmountFieldNumber = 16,
  };
  // string app_id = 1;
  void clear_app_id() ;
  const std::string& app_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_id(Arg_&& arg, Args_... args);
  std::string* mutable_app_id();
  PROTOBUF_NODISCARD std::string* release_app_id();
  void set_allocated_app_id(std::string* value);

  private:
  const std::string& _internal_app_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_id(
      const std::string& value);
  std::string* _internal_mutable_app_id();

  public:
  // string mch_id = 2;
  void clear_mch_id() ;
  const std::string& mch_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mch_id(Arg_&& arg, Args_... args);
  std::string* mutable_mch_id();
  PROTOBUF_NODISCARD std::string* release_mch_id();
  void set_allocated_mch_id(std::string* value);

  private:
  const std::string& _internal_mch_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mch_id(
      const std::string& value);
  std::string* _internal_mutable_mch_id();

  public:
  // string open_id = 3;
  void clear_open_id() ;
  const std::string& open_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_open_id(Arg_&& arg, Args_... args);
  std::string* mutable_open_id();
  PROTOBUF_NODISCARD std::string* release_open_id();
  void set_allocated_open_id(std::string* value);

  private:
  const std::string& _internal_open_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_open_id(
      const std::string& value);
  std::string* _internal_mutable_open_id();

  public:
  // optional string user_name = 4;
  bool has_user_name() const;
  void clear_user_name() ;
  const std::string& user_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user_name(Arg_&& arg, Args_... args);
  std::string* mutable_user_name();
  PROTOBUF_NODISCARD std::string* release_user_name();
  void set_allocated_user_name(std::string* value);

  private:
  const std::string& _internal_user_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user_name(
      const std::string& value);
  std::string* _internal_mutable_user_name();

  public:
  // string batch_id = 11;
  void clear_batch_id() ;
  const std::string& batch_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_batch_id(Arg_&& arg, Args_... args);
  std::string* mutable_batch_id();
  PROTOBUF_NODISCARD std::string* release_batch_id();
  void set_allocated_batch_id(std::string* value);

  private:
  const std::string& _internal_batch_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_batch_id(
      const std::string& value);
  std::string* _internal_mutable_batch_id();

  public:
  // string out_batch_no = 12;
  void clear_out_batch_no() ;
  const std::string& out_batch_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_batch_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_batch_no();
  PROTOBUF_NODISCARD std::string* release_out_batch_no();
  void set_allocated_out_batch_no(std::string* value);

  private:
  const std::string& _internal_out_batch_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_batch_no(
      const std::string& value);
  std::string* _internal_mutable_out_batch_no();

  public:
  // string out_detail_no = 13;
  void clear_out_detail_no() ;
  const std::string& out_detail_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_detail_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_detail_no();
  PROTOBUF_NODISCARD std::string* release_out_detail_no();
  void set_allocated_out_detail_no(std::string* value);

  private:
  const std::string& _internal_out_detail_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_detail_no(
      const std::string& value);
  std::string* _internal_mutable_out_detail_no();

  public:
  // string detail_id = 14;
  void clear_detail_id() ;
  const std::string& detail_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_detail_id(Arg_&& arg, Args_... args);
  std::string* mutable_detail_id();
  PROTOBUF_NODISCARD std::string* release_detail_id();
  void set_allocated_detail_id(std::string* value);

  private:
  const std::string& _internal_detail_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_detail_id(
      const std::string& value);
  std::string* _internal_mutable_detail_id();

  public:
  // string detail_status = 15;
  void clear_detail_status() ;
  const std::string& detail_status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_detail_status(Arg_&& arg, Args_... args);
  std::string* mutable_detail_status();
  PROTOBUF_NODISCARD std::string* release_detail_status();
  void set_allocated_detail_status(std::string* value);

  private:
  const std::string& _internal_detail_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_detail_status(
      const std::string& value);
  std::string* _internal_mutable_detail_status();

  public:
  // string transfer_remark = 17;
  void clear_transfer_remark() ;
  const std::string& transfer_remark() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transfer_remark(Arg_&& arg, Args_... args);
  std::string* mutable_transfer_remark();
  PROTOBUF_NODISCARD std::string* release_transfer_remark();
  void set_allocated_transfer_remark(std::string* value);

  private:
  const std::string& _internal_transfer_remark() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transfer_remark(
      const std::string& value);
  std::string* _internal_mutable_transfer_remark();

  public:
  // optional string fail_reason = 18;
  bool has_fail_reason() const;
  void clear_fail_reason() ;
  const std::string& fail_reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fail_reason(Arg_&& arg, Args_... args);
  std::string* mutable_fail_reason();
  PROTOBUF_NODISCARD std::string* release_fail_reason();
  void set_allocated_fail_reason(std::string* value);

  private:
  const std::string& _internal_fail_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fail_reason(
      const std::string& value);
  std::string* _internal_mutable_fail_reason();

  public:
  // string initiate_time = 19;
  void clear_initiate_time() ;
  const std::string& initiate_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_initiate_time(Arg_&& arg, Args_... args);
  std::string* mutable_initiate_time();
  PROTOBUF_NODISCARD std::string* release_initiate_time();
  void set_allocated_initiate_time(std::string* value);

  private:
  const std::string& _internal_initiate_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_initiate_time(
      const std::string& value);
  std::string* _internal_mutable_initiate_time();

  public:
  // string update_time = 20;
  void clear_update_time() ;
  const std::string& update_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_update_time(Arg_&& arg, Args_... args);
  std::string* mutable_update_time();
  PROTOBUF_NODISCARD std::string* release_update_time();
  void set_allocated_update_time(std::string* value);

  private:
  const std::string& _internal_update_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_update_time(
      const std::string& value);
  std::string* _internal_mutable_update_time();

  public:
  // int64 transfer_amount = 16;
  void clear_transfer_amount() ;
  ::int64_t transfer_amount() const;
  void set_transfer_amount(::int64_t value);

  private:
  ::int64_t _internal_transfer_amount() const;
  void _internal_set_transfer_amount(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayQueryTransferDetailResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 14, 0,
      199, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr app_id_;
    ::google::protobuf::internal::ArenaStringPtr mch_id_;
    ::google::protobuf::internal::ArenaStringPtr open_id_;
    ::google::protobuf::internal::ArenaStringPtr user_name_;
    ::google::protobuf::internal::ArenaStringPtr batch_id_;
    ::google::protobuf::internal::ArenaStringPtr out_batch_no_;
    ::google::protobuf::internal::ArenaStringPtr out_detail_no_;
    ::google::protobuf::internal::ArenaStringPtr detail_id_;
    ::google::protobuf::internal::ArenaStringPtr detail_status_;
    ::google::protobuf::internal::ArenaStringPtr transfer_remark_;
    ::google::protobuf::internal::ArenaStringPtr fail_reason_;
    ::google::protobuf::internal::ArenaStringPtr initiate_time_;
    ::google::protobuf::internal::ArenaStringPtr update_time_;
    ::int64_t transfer_amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayQueryTransferDetailRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayQueryTransferDetailRequest) */ {
 public:
  inline WechatPayQueryTransferDetailRequest() : WechatPayQueryTransferDetailRequest(nullptr) {}
  ~WechatPayQueryTransferDetailRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayQueryTransferDetailRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayQueryTransferDetailRequest(const WechatPayQueryTransferDetailRequest& from)
      : WechatPayQueryTransferDetailRequest(nullptr, from) {}
  WechatPayQueryTransferDetailRequest(WechatPayQueryTransferDetailRequest&& from) noexcept
    : WechatPayQueryTransferDetailRequest() {
    *this = ::std::move(from);
  }

  inline WechatPayQueryTransferDetailRequest& operator=(const WechatPayQueryTransferDetailRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayQueryTransferDetailRequest& operator=(WechatPayQueryTransferDetailRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayQueryTransferDetailRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayQueryTransferDetailRequest* internal_default_instance() {
    return reinterpret_cast<const WechatPayQueryTransferDetailRequest*>(
               &_WechatPayQueryTransferDetailRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(WechatPayQueryTransferDetailRequest& a, WechatPayQueryTransferDetailRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayQueryTransferDetailRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayQueryTransferDetailRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayQueryTransferDetailRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayQueryTransferDetailRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayQueryTransferDetailRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayQueryTransferDetailRequest& from) {
    WechatPayQueryTransferDetailRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayQueryTransferDetailRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayQueryTransferDetailRequest";
  }
  protected:
  explicit WechatPayQueryTransferDetailRequest(::google::protobuf::Arena* arena);
  WechatPayQueryTransferDetailRequest(::google::protobuf::Arena* arena, const WechatPayQueryTransferDetailRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutBatchNoFieldNumber = 1,
    kOutDetailNoFieldNumber = 2,
  };
  // string out_batch_no = 1;
  void clear_out_batch_no() ;
  const std::string& out_batch_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_batch_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_batch_no();
  PROTOBUF_NODISCARD std::string* release_out_batch_no();
  void set_allocated_out_batch_no(std::string* value);

  private:
  const std::string& _internal_out_batch_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_batch_no(
      const std::string& value);
  std::string* _internal_mutable_out_batch_no();

  public:
  // string out_detail_no = 2;
  void clear_out_detail_no() ;
  const std::string& out_detail_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_detail_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_detail_no();
  PROTOBUF_NODISCARD std::string* release_out_detail_no();
  void set_allocated_out_detail_no(std::string* value);

  private:
  const std::string& _internal_out_detail_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_detail_no(
      const std::string& value);
  std::string* _internal_mutable_out_detail_no();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayQueryTransferDetailRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      82, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr out_batch_no_;
    ::google::protobuf::internal::ArenaStringPtr out_detail_no_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayQueryRefundRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayQueryRefundRequest) */ {
 public:
  inline WechatPayQueryRefundRequest() : WechatPayQueryRefundRequest(nullptr) {}
  ~WechatPayQueryRefundRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayQueryRefundRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayQueryRefundRequest(const WechatPayQueryRefundRequest& from)
      : WechatPayQueryRefundRequest(nullptr, from) {}
  WechatPayQueryRefundRequest(WechatPayQueryRefundRequest&& from) noexcept
    : WechatPayQueryRefundRequest() {
    *this = ::std::move(from);
  }

  inline WechatPayQueryRefundRequest& operator=(const WechatPayQueryRefundRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayQueryRefundRequest& operator=(WechatPayQueryRefundRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayQueryRefundRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayQueryRefundRequest* internal_default_instance() {
    return reinterpret_cast<const WechatPayQueryRefundRequest*>(
               &_WechatPayQueryRefundRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(WechatPayQueryRefundRequest& a, WechatPayQueryRefundRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayQueryRefundRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayQueryRefundRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayQueryRefundRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayQueryRefundRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayQueryRefundRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayQueryRefundRequest& from) {
    WechatPayQueryRefundRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayQueryRefundRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayQueryRefundRequest";
  }
  protected:
  explicit WechatPayQueryRefundRequest(::google::protobuf::Arena* arena);
  WechatPayQueryRefundRequest(::google::protobuf::Arena* arena, const WechatPayQueryRefundRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutRefundNoFieldNumber = 1,
  };
  // string out_refund_no = 1;
  void clear_out_refund_no() ;
  const std::string& out_refund_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_refund_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_refund_no();
  PROTOBUF_NODISCARD std::string* release_out_refund_no();
  void set_allocated_out_refund_no(std::string* value);

  private:
  const std::string& _internal_out_refund_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_refund_no(
      const std::string& value);
  std::string* _internal_mutable_out_refund_no();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayQueryRefundRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      62, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr out_refund_no_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayQueryOrderByOutTradeNoRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest) */ {
 public:
  inline WechatPayQueryOrderByOutTradeNoRequest() : WechatPayQueryOrderByOutTradeNoRequest(nullptr) {}
  ~WechatPayQueryOrderByOutTradeNoRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayQueryOrderByOutTradeNoRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayQueryOrderByOutTradeNoRequest(const WechatPayQueryOrderByOutTradeNoRequest& from)
      : WechatPayQueryOrderByOutTradeNoRequest(nullptr, from) {}
  WechatPayQueryOrderByOutTradeNoRequest(WechatPayQueryOrderByOutTradeNoRequest&& from) noexcept
    : WechatPayQueryOrderByOutTradeNoRequest() {
    *this = ::std::move(from);
  }

  inline WechatPayQueryOrderByOutTradeNoRequest& operator=(const WechatPayQueryOrderByOutTradeNoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayQueryOrderByOutTradeNoRequest& operator=(WechatPayQueryOrderByOutTradeNoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayQueryOrderByOutTradeNoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayQueryOrderByOutTradeNoRequest* internal_default_instance() {
    return reinterpret_cast<const WechatPayQueryOrderByOutTradeNoRequest*>(
               &_WechatPayQueryOrderByOutTradeNoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(WechatPayQueryOrderByOutTradeNoRequest& a, WechatPayQueryOrderByOutTradeNoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayQueryOrderByOutTradeNoRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayQueryOrderByOutTradeNoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayQueryOrderByOutTradeNoRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayQueryOrderByOutTradeNoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayQueryOrderByOutTradeNoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayQueryOrderByOutTradeNoRequest& from) {
    WechatPayQueryOrderByOutTradeNoRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayQueryOrderByOutTradeNoRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest";
  }
  protected:
  explicit WechatPayQueryOrderByOutTradeNoRequest(::google::protobuf::Arena* arena);
  WechatPayQueryOrderByOutTradeNoRequest(::google::protobuf::Arena* arena, const WechatPayQueryOrderByOutTradeNoRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutTradeNoFieldNumber = 1,
  };
  // string out_trade_no = 1;
  void clear_out_trade_no() ;
  const std::string& out_trade_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_trade_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_trade_no();
  PROTOBUF_NODISCARD std::string* release_out_trade_no();
  void set_allocated_out_trade_no(std::string* value);

  private:
  const std::string& _internal_out_trade_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_trade_no(
      const std::string& value);
  std::string* _internal_mutable_out_trade_no();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      72, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr out_trade_no_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayQueryOrderByIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayQueryOrderByIdRequest) */ {
 public:
  inline WechatPayQueryOrderByIdRequest() : WechatPayQueryOrderByIdRequest(nullptr) {}
  ~WechatPayQueryOrderByIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayQueryOrderByIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayQueryOrderByIdRequest(const WechatPayQueryOrderByIdRequest& from)
      : WechatPayQueryOrderByIdRequest(nullptr, from) {}
  WechatPayQueryOrderByIdRequest(WechatPayQueryOrderByIdRequest&& from) noexcept
    : WechatPayQueryOrderByIdRequest() {
    *this = ::std::move(from);
  }

  inline WechatPayQueryOrderByIdRequest& operator=(const WechatPayQueryOrderByIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayQueryOrderByIdRequest& operator=(WechatPayQueryOrderByIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayQueryOrderByIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayQueryOrderByIdRequest* internal_default_instance() {
    return reinterpret_cast<const WechatPayQueryOrderByIdRequest*>(
               &_WechatPayQueryOrderByIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(WechatPayQueryOrderByIdRequest& a, WechatPayQueryOrderByIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayQueryOrderByIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayQueryOrderByIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayQueryOrderByIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayQueryOrderByIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayQueryOrderByIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayQueryOrderByIdRequest& from) {
    WechatPayQueryOrderByIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayQueryOrderByIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayQueryOrderByIdRequest";
  }
  protected:
  explicit WechatPayQueryOrderByIdRequest(::google::protobuf::Arena* arena);
  WechatPayQueryOrderByIdRequest(::google::protobuf::Arena* arena, const WechatPayQueryOrderByIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransactionIdFieldNumber = 1,
  };
  // string transaction_id = 1;
  void clear_transaction_id() ;
  const std::string& transaction_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transaction_id(Arg_&& arg, Args_... args);
  std::string* mutable_transaction_id();
  PROTOBUF_NODISCARD std::string* release_transaction_id();
  void set_allocated_transaction_id(std::string* value);

  private:
  const std::string& _internal_transaction_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transaction_id(
      const std::string& value);
  std::string* _internal_mutable_transaction_id();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayQueryOrderByIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      66, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr transaction_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayQueryBatchTransferResponse_Detail final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail) */ {
 public:
  inline WechatPayQueryBatchTransferResponse_Detail() : WechatPayQueryBatchTransferResponse_Detail(nullptr) {}
  ~WechatPayQueryBatchTransferResponse_Detail() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayQueryBatchTransferResponse_Detail(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayQueryBatchTransferResponse_Detail(const WechatPayQueryBatchTransferResponse_Detail& from)
      : WechatPayQueryBatchTransferResponse_Detail(nullptr, from) {}
  WechatPayQueryBatchTransferResponse_Detail(WechatPayQueryBatchTransferResponse_Detail&& from) noexcept
    : WechatPayQueryBatchTransferResponse_Detail() {
    *this = ::std::move(from);
  }

  inline WechatPayQueryBatchTransferResponse_Detail& operator=(const WechatPayQueryBatchTransferResponse_Detail& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayQueryBatchTransferResponse_Detail& operator=(WechatPayQueryBatchTransferResponse_Detail&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayQueryBatchTransferResponse_Detail& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayQueryBatchTransferResponse_Detail* internal_default_instance() {
    return reinterpret_cast<const WechatPayQueryBatchTransferResponse_Detail*>(
               &_WechatPayQueryBatchTransferResponse_Detail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(WechatPayQueryBatchTransferResponse_Detail& a, WechatPayQueryBatchTransferResponse_Detail& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayQueryBatchTransferResponse_Detail* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayQueryBatchTransferResponse_Detail* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayQueryBatchTransferResponse_Detail* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayQueryBatchTransferResponse_Detail>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayQueryBatchTransferResponse_Detail& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayQueryBatchTransferResponse_Detail& from) {
    WechatPayQueryBatchTransferResponse_Detail::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayQueryBatchTransferResponse_Detail* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail";
  }
  protected:
  explicit WechatPayQueryBatchTransferResponse_Detail(::google::protobuf::Arena* arena);
  WechatPayQueryBatchTransferResponse_Detail(::google::protobuf::Arena* arena, const WechatPayQueryBatchTransferResponse_Detail& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDetailIdFieldNumber = 1,
    kOutDetailNoFieldNumber = 2,
    kStatusFieldNumber = 3,
  };
  // string detail_id = 1;
  void clear_detail_id() ;
  const std::string& detail_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_detail_id(Arg_&& arg, Args_... args);
  std::string* mutable_detail_id();
  PROTOBUF_NODISCARD std::string* release_detail_id();
  void set_allocated_detail_id(std::string* value);

  private:
  const std::string& _internal_detail_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_detail_id(
      const std::string& value);
  std::string* _internal_mutable_detail_id();

  public:
  // string out_detail_no = 2;
  void clear_out_detail_no() ;
  const std::string& out_detail_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_detail_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_detail_no();
  PROTOBUF_NODISCARD std::string* release_out_detail_no();
  void set_allocated_out_detail_no(std::string* value);

  private:
  const std::string& _internal_out_detail_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_detail_no(
      const std::string& value);
  std::string* _internal_mutable_out_detail_no();

  public:
  // string status = 3;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      92, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr detail_id_;
    ::google::protobuf::internal::ArenaStringPtr out_detail_no_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayQueryBatchTransferResponse_Batch final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch) */ {
 public:
  inline WechatPayQueryBatchTransferResponse_Batch() : WechatPayQueryBatchTransferResponse_Batch(nullptr) {}
  ~WechatPayQueryBatchTransferResponse_Batch() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayQueryBatchTransferResponse_Batch(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayQueryBatchTransferResponse_Batch(const WechatPayQueryBatchTransferResponse_Batch& from)
      : WechatPayQueryBatchTransferResponse_Batch(nullptr, from) {}
  WechatPayQueryBatchTransferResponse_Batch(WechatPayQueryBatchTransferResponse_Batch&& from) noexcept
    : WechatPayQueryBatchTransferResponse_Batch() {
    *this = ::std::move(from);
  }

  inline WechatPayQueryBatchTransferResponse_Batch& operator=(const WechatPayQueryBatchTransferResponse_Batch& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayQueryBatchTransferResponse_Batch& operator=(WechatPayQueryBatchTransferResponse_Batch&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayQueryBatchTransferResponse_Batch& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayQueryBatchTransferResponse_Batch* internal_default_instance() {
    return reinterpret_cast<const WechatPayQueryBatchTransferResponse_Batch*>(
               &_WechatPayQueryBatchTransferResponse_Batch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(WechatPayQueryBatchTransferResponse_Batch& a, WechatPayQueryBatchTransferResponse_Batch& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayQueryBatchTransferResponse_Batch* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayQueryBatchTransferResponse_Batch* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayQueryBatchTransferResponse_Batch* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayQueryBatchTransferResponse_Batch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayQueryBatchTransferResponse_Batch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayQueryBatchTransferResponse_Batch& from) {
    WechatPayQueryBatchTransferResponse_Batch::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayQueryBatchTransferResponse_Batch* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch";
  }
  protected:
  explicit WechatPayQueryBatchTransferResponse_Batch(::google::protobuf::Arena* arena);
  WechatPayQueryBatchTransferResponse_Batch(::google::protobuf::Arena* arena, const WechatPayQueryBatchTransferResponse_Batch& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppIdFieldNumber = 1,
    kMchIdFieldNumber = 2,
    kTransferSceneIdFieldNumber = 9,
    kBatchIdFieldNumber = 11,
    kOutBatchNoFieldNumber = 12,
    kBatchStatusFieldNumber = 13,
    kBatchTypeFieldNumber = 14,
    kBatchNameFieldNumber = 15,
    kBatchRemarkFieldNumber = 16,
    kCloseReasonFieldNumber = 21,
    kCreateTimeFieldNumber = 24,
    kUpdateTimeFieldNumber = 25,
    kTotalAmountFieldNumber = 22,
    kTotalNumFieldNumber = 23,
    kSuccessNumFieldNumber = 27,
    kSuccessAmountFieldNumber = 26,
    kFailAmountFieldNumber = 28,
    kFailNumFieldNumber = 29,
  };
  // string app_id = 1;
  void clear_app_id() ;
  const std::string& app_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_id(Arg_&& arg, Args_... args);
  std::string* mutable_app_id();
  PROTOBUF_NODISCARD std::string* release_app_id();
  void set_allocated_app_id(std::string* value);

  private:
  const std::string& _internal_app_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_id(
      const std::string& value);
  std::string* _internal_mutable_app_id();

  public:
  // string mch_id = 2;
  void clear_mch_id() ;
  const std::string& mch_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mch_id(Arg_&& arg, Args_... args);
  std::string* mutable_mch_id();
  PROTOBUF_NODISCARD std::string* release_mch_id();
  void set_allocated_mch_id(std::string* value);

  private:
  const std::string& _internal_mch_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mch_id(
      const std::string& value);
  std::string* _internal_mutable_mch_id();

  public:
  // string transfer_scene_id = 9;
  void clear_transfer_scene_id() ;
  const std::string& transfer_scene_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transfer_scene_id(Arg_&& arg, Args_... args);
  std::string* mutable_transfer_scene_id();
  PROTOBUF_NODISCARD std::string* release_transfer_scene_id();
  void set_allocated_transfer_scene_id(std::string* value);

  private:
  const std::string& _internal_transfer_scene_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transfer_scene_id(
      const std::string& value);
  std::string* _internal_mutable_transfer_scene_id();

  public:
  // string batch_id = 11;
  void clear_batch_id() ;
  const std::string& batch_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_batch_id(Arg_&& arg, Args_... args);
  std::string* mutable_batch_id();
  PROTOBUF_NODISCARD std::string* release_batch_id();
  void set_allocated_batch_id(std::string* value);

  private:
  const std::string& _internal_batch_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_batch_id(
      const std::string& value);
  std::string* _internal_mutable_batch_id();

  public:
  // string out_batch_no = 12;
  void clear_out_batch_no() ;
  const std::string& out_batch_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_batch_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_batch_no();
  PROTOBUF_NODISCARD std::string* release_out_batch_no();
  void set_allocated_out_batch_no(std::string* value);

  private:
  const std::string& _internal_out_batch_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_batch_no(
      const std::string& value);
  std::string* _internal_mutable_out_batch_no();

  public:
  // string batch_status = 13;
  void clear_batch_status() ;
  const std::string& batch_status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_batch_status(Arg_&& arg, Args_... args);
  std::string* mutable_batch_status();
  PROTOBUF_NODISCARD std::string* release_batch_status();
  void set_allocated_batch_status(std::string* value);

  private:
  const std::string& _internal_batch_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_batch_status(
      const std::string& value);
  std::string* _internal_mutable_batch_status();

  public:
  // string batch_type = 14;
  void clear_batch_type() ;
  const std::string& batch_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_batch_type(Arg_&& arg, Args_... args);
  std::string* mutable_batch_type();
  PROTOBUF_NODISCARD std::string* release_batch_type();
  void set_allocated_batch_type(std::string* value);

  private:
  const std::string& _internal_batch_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_batch_type(
      const std::string& value);
  std::string* _internal_mutable_batch_type();

  public:
  // string batch_name = 15;
  void clear_batch_name() ;
  const std::string& batch_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_batch_name(Arg_&& arg, Args_... args);
  std::string* mutable_batch_name();
  PROTOBUF_NODISCARD std::string* release_batch_name();
  void set_allocated_batch_name(std::string* value);

  private:
  const std::string& _internal_batch_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_batch_name(
      const std::string& value);
  std::string* _internal_mutable_batch_name();

  public:
  // string batch_remark = 16;
  void clear_batch_remark() ;
  const std::string& batch_remark() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_batch_remark(Arg_&& arg, Args_... args);
  std::string* mutable_batch_remark();
  PROTOBUF_NODISCARD std::string* release_batch_remark();
  void set_allocated_batch_remark(std::string* value);

  private:
  const std::string& _internal_batch_remark() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_batch_remark(
      const std::string& value);
  std::string* _internal_mutable_batch_remark();

  public:
  // optional string close_reason = 21;
  bool has_close_reason() const;
  void clear_close_reason() ;
  const std::string& close_reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_close_reason(Arg_&& arg, Args_... args);
  std::string* mutable_close_reason();
  PROTOBUF_NODISCARD std::string* release_close_reason();
  void set_allocated_close_reason(std::string* value);

  private:
  const std::string& _internal_close_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_close_reason(
      const std::string& value);
  std::string* _internal_mutable_close_reason();

  public:
  // optional string create_time = 24;
  bool has_create_time() const;
  void clear_create_time() ;
  const std::string& create_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_create_time(Arg_&& arg, Args_... args);
  std::string* mutable_create_time();
  PROTOBUF_NODISCARD std::string* release_create_time();
  void set_allocated_create_time(std::string* value);

  private:
  const std::string& _internal_create_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_create_time(
      const std::string& value);
  std::string* _internal_mutable_create_time();

  public:
  // optional string update_time = 25;
  bool has_update_time() const;
  void clear_update_time() ;
  const std::string& update_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_update_time(Arg_&& arg, Args_... args);
  std::string* mutable_update_time();
  PROTOBUF_NODISCARD std::string* release_update_time();
  void set_allocated_update_time(std::string* value);

  private:
  const std::string& _internal_update_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_update_time(
      const std::string& value);
  std::string* _internal_mutable_update_time();

  public:
  // int64 total_amount = 22;
  void clear_total_amount() ;
  ::int64_t total_amount() const;
  void set_total_amount(::int64_t value);

  private:
  ::int64_t _internal_total_amount() const;
  void _internal_set_total_amount(::int64_t value);

  public:
  // int32 total_num = 23;
  void clear_total_num() ;
  ::int32_t total_num() const;
  void set_total_num(::int32_t value);

  private:
  ::int32_t _internal_total_num() const;
  void _internal_set_total_num(::int32_t value);

  public:
  // optional int32 success_num = 27;
  bool has_success_num() const;
  void clear_success_num() ;
  ::int32_t success_num() const;
  void set_success_num(::int32_t value);

  private:
  ::int32_t _internal_success_num() const;
  void _internal_set_success_num(::int32_t value);

  public:
  // optional int64 success_amount = 26;
  bool has_success_amount() const;
  void clear_success_amount() ;
  ::int64_t success_amount() const;
  void set_success_amount(::int64_t value);

  private:
  ::int64_t _internal_success_amount() const;
  void _internal_set_success_amount(::int64_t value);

  public:
  // optional int64 fail_amount = 28;
  bool has_fail_amount() const;
  void clear_fail_amount() ;
  ::int64_t fail_amount() const;
  void set_fail_amount(::int64_t value);

  private:
  ::int64_t _internal_fail_amount() const;
  void _internal_set_fail_amount(::int64_t value);

  public:
  // optional int32 fail_num = 29;
  bool has_fail_num() const;
  void clear_fail_num() ;
  ::int32_t fail_num() const;
  void set_fail_num(::int32_t value);

  private:
  ::int32_t _internal_fail_num() const;
  void _internal_set_fail_num(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 18, 0,
      206, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr app_id_;
    ::google::protobuf::internal::ArenaStringPtr mch_id_;
    ::google::protobuf::internal::ArenaStringPtr transfer_scene_id_;
    ::google::protobuf::internal::ArenaStringPtr batch_id_;
    ::google::protobuf::internal::ArenaStringPtr out_batch_no_;
    ::google::protobuf::internal::ArenaStringPtr batch_status_;
    ::google::protobuf::internal::ArenaStringPtr batch_type_;
    ::google::protobuf::internal::ArenaStringPtr batch_name_;
    ::google::protobuf::internal::ArenaStringPtr batch_remark_;
    ::google::protobuf::internal::ArenaStringPtr close_reason_;
    ::google::protobuf::internal::ArenaStringPtr create_time_;
    ::google::protobuf::internal::ArenaStringPtr update_time_;
    ::int64_t total_amount_;
    ::int32_t total_num_;
    ::int32_t success_num_;
    ::int64_t success_amount_;
    ::int64_t fail_amount_;
    ::int32_t fail_num_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayQueryBatchTransferRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayQueryBatchTransferRequest) */ {
 public:
  inline WechatPayQueryBatchTransferRequest() : WechatPayQueryBatchTransferRequest(nullptr) {}
  ~WechatPayQueryBatchTransferRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayQueryBatchTransferRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayQueryBatchTransferRequest(const WechatPayQueryBatchTransferRequest& from)
      : WechatPayQueryBatchTransferRequest(nullptr, from) {}
  WechatPayQueryBatchTransferRequest(WechatPayQueryBatchTransferRequest&& from) noexcept
    : WechatPayQueryBatchTransferRequest() {
    *this = ::std::move(from);
  }

  inline WechatPayQueryBatchTransferRequest& operator=(const WechatPayQueryBatchTransferRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayQueryBatchTransferRequest& operator=(WechatPayQueryBatchTransferRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayQueryBatchTransferRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayQueryBatchTransferRequest* internal_default_instance() {
    return reinterpret_cast<const WechatPayQueryBatchTransferRequest*>(
               &_WechatPayQueryBatchTransferRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(WechatPayQueryBatchTransferRequest& a, WechatPayQueryBatchTransferRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayQueryBatchTransferRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayQueryBatchTransferRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayQueryBatchTransferRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayQueryBatchTransferRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayQueryBatchTransferRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayQueryBatchTransferRequest& from) {
    WechatPayQueryBatchTransferRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayQueryBatchTransferRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayQueryBatchTransferRequest";
  }
  protected:
  explicit WechatPayQueryBatchTransferRequest(::google::protobuf::Arena* arena);
  WechatPayQueryBatchTransferRequest(::google::protobuf::Arena* arena, const WechatPayQueryBatchTransferRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using DetailStatus = WechatPayQueryBatchTransferRequest_DetailStatus;
  static constexpr DetailStatus ALL = WechatPayQueryBatchTransferRequest_DetailStatus_ALL;
  static constexpr DetailStatus SUCCESS = WechatPayQueryBatchTransferRequest_DetailStatus_SUCCESS;
  static constexpr DetailStatus WAIT_PAY = WechatPayQueryBatchTransferRequest_DetailStatus_WAIT_PAY;
  static constexpr DetailStatus FAIL = WechatPayQueryBatchTransferRequest_DetailStatus_FAIL;
  static inline bool DetailStatus_IsValid(int value) {
    return WechatPayQueryBatchTransferRequest_DetailStatus_IsValid(value);
  }
  static constexpr DetailStatus DetailStatus_MIN = WechatPayQueryBatchTransferRequest_DetailStatus_DetailStatus_MIN;
  static constexpr DetailStatus DetailStatus_MAX = WechatPayQueryBatchTransferRequest_DetailStatus_DetailStatus_MAX;
  static constexpr int DetailStatus_ARRAYSIZE = WechatPayQueryBatchTransferRequest_DetailStatus_DetailStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* DetailStatus_descriptor() {
    return WechatPayQueryBatchTransferRequest_DetailStatus_descriptor();
  }
  template <typename T>
  static inline const std::string& DetailStatus_Name(T value) {
    return WechatPayQueryBatchTransferRequest_DetailStatus_Name(value);
  }
  static inline bool DetailStatus_Parse(absl::string_view name, DetailStatus* value) {
    return WechatPayQueryBatchTransferRequest_DetailStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kOutBatchNoFieldNumber = 1,
    kOffsetFieldNumber = 2,
    kLimitFieldNumber = 3,
    kDetailStatusFieldNumber = 9,
  };
  // string out_batch_no = 1;
  void clear_out_batch_no() ;
  const std::string& out_batch_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_batch_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_batch_no();
  PROTOBUF_NODISCARD std::string* release_out_batch_no();
  void set_allocated_out_batch_no(std::string* value);

  private:
  const std::string& _internal_out_batch_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_batch_no(
      const std::string& value);
  std::string* _internal_mutable_out_batch_no();

  public:
  // int32 offset = 2;
  void clear_offset() ;
  ::int32_t offset() const;
  void set_offset(::int32_t value);

  private:
  ::int32_t _internal_offset() const;
  void _internal_set_offset(::int32_t value);

  public:
  // int32 limit = 3;
  void clear_limit() ;
  ::int32_t limit() const;
  void set_limit(::int32_t value);

  private:
  ::int32_t _internal_limit() const;
  void _internal_set_limit(::int32_t value);

  public:
  // .palm.musa.v1.WechatPayQueryBatchTransferRequest.DetailStatus detail_status = 9;
  void clear_detail_status() ;
  ::palm::musa::v1::WechatPayQueryBatchTransferRequest_DetailStatus detail_status() const;
  void set_detail_status(::palm::musa::v1::WechatPayQueryBatchTransferRequest_DetailStatus value);

  private:
  ::palm::musa::v1::WechatPayQueryBatchTransferRequest_DetailStatus _internal_detail_status() const;
  void _internal_set_detail_status(::palm::musa::v1::WechatPayQueryBatchTransferRequest_DetailStatus value);

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayQueryBatchTransferRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      68, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr out_batch_no_;
    ::int32_t offset_;
    ::int32_t limit_;
    int detail_status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayPrepayRequest_Amount final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayPrepayRequest.Amount) */ {
 public:
  inline WechatPayPrepayRequest_Amount() : WechatPayPrepayRequest_Amount(nullptr) {}
  ~WechatPayPrepayRequest_Amount() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayPrepayRequest_Amount(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayPrepayRequest_Amount(const WechatPayPrepayRequest_Amount& from)
      : WechatPayPrepayRequest_Amount(nullptr, from) {}
  WechatPayPrepayRequest_Amount(WechatPayPrepayRequest_Amount&& from) noexcept
    : WechatPayPrepayRequest_Amount() {
    *this = ::std::move(from);
  }

  inline WechatPayPrepayRequest_Amount& operator=(const WechatPayPrepayRequest_Amount& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayPrepayRequest_Amount& operator=(WechatPayPrepayRequest_Amount&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayPrepayRequest_Amount& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayPrepayRequest_Amount* internal_default_instance() {
    return reinterpret_cast<const WechatPayPrepayRequest_Amount*>(
               &_WechatPayPrepayRequest_Amount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(WechatPayPrepayRequest_Amount& a, WechatPayPrepayRequest_Amount& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayPrepayRequest_Amount* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayPrepayRequest_Amount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayPrepayRequest_Amount* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayPrepayRequest_Amount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayPrepayRequest_Amount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayPrepayRequest_Amount& from) {
    WechatPayPrepayRequest_Amount::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayPrepayRequest_Amount* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayPrepayRequest.Amount";
  }
  protected:
  explicit WechatPayPrepayRequest_Amount(::google::protobuf::Arena* arena);
  WechatPayPrepayRequest_Amount(::google::protobuf::Arena* arena, const WechatPayPrepayRequest_Amount& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTotalFieldNumber = 1,
    kCurrencyFieldNumber = 2,
  };
  // int32 total = 1;
  void clear_total() ;
  ::int32_t total() const;
  void set_total(::int32_t value);

  private:
  ::int32_t _internal_total() const;
  void _internal_set_total(::int32_t value);

  public:
  // .palm.musa.v1.WechatPayCurrency currency = 2;
  void clear_currency() ;
  ::palm::musa::v1::WechatPayCurrency currency() const;
  void set_currency(::palm::musa::v1::WechatPayCurrency value);

  private:
  ::palm::musa::v1::WechatPayCurrency _internal_currency() const;
  void _internal_set_currency(::palm::musa::v1::WechatPayCurrency value);

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayPrepayRequest.Amount)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t total_;
    int currency_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayNativeQrCodeUrlResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayNativeQrCodeUrlResponse) */ {
 public:
  inline WechatPayNativeQrCodeUrlResponse() : WechatPayNativeQrCodeUrlResponse(nullptr) {}
  ~WechatPayNativeQrCodeUrlResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayNativeQrCodeUrlResponse(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayNativeQrCodeUrlResponse(const WechatPayNativeQrCodeUrlResponse& from)
      : WechatPayNativeQrCodeUrlResponse(nullptr, from) {}
  WechatPayNativeQrCodeUrlResponse(WechatPayNativeQrCodeUrlResponse&& from) noexcept
    : WechatPayNativeQrCodeUrlResponse() {
    *this = ::std::move(from);
  }

  inline WechatPayNativeQrCodeUrlResponse& operator=(const WechatPayNativeQrCodeUrlResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayNativeQrCodeUrlResponse& operator=(WechatPayNativeQrCodeUrlResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayNativeQrCodeUrlResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayNativeQrCodeUrlResponse* internal_default_instance() {
    return reinterpret_cast<const WechatPayNativeQrCodeUrlResponse*>(
               &_WechatPayNativeQrCodeUrlResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(WechatPayNativeQrCodeUrlResponse& a, WechatPayNativeQrCodeUrlResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayNativeQrCodeUrlResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayNativeQrCodeUrlResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayNativeQrCodeUrlResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayNativeQrCodeUrlResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayNativeQrCodeUrlResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayNativeQrCodeUrlResponse& from) {
    WechatPayNativeQrCodeUrlResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayNativeQrCodeUrlResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayNativeQrCodeUrlResponse";
  }
  protected:
  explicit WechatPayNativeQrCodeUrlResponse(::google::protobuf::Arena* arena);
  WechatPayNativeQrCodeUrlResponse(::google::protobuf::Arena* arena, const WechatPayNativeQrCodeUrlResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUrlFieldNumber = 1,
    kOutTradeNoFieldNumber = 2,
  };
  // string url = 1;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // string out_trade_no = 2;
  void clear_out_trade_no() ;
  const std::string& out_trade_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_trade_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_trade_no();
  PROTOBUF_NODISCARD std::string* release_out_trade_no();
  void set_allocated_out_trade_no(std::string* value);

  private:
  const std::string& _internal_out_trade_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_trade_no(
      const std::string& value);
  std::string* _internal_mutable_out_trade_no();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayNativeQrCodeUrlResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      69, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr url_;
    ::google::protobuf::internal::ArenaStringPtr out_trade_no_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayJsapiPrepayIdResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayJsapiPrepayIdResponse) */ {
 public:
  inline WechatPayJsapiPrepayIdResponse() : WechatPayJsapiPrepayIdResponse(nullptr) {}
  ~WechatPayJsapiPrepayIdResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayJsapiPrepayIdResponse(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayJsapiPrepayIdResponse(const WechatPayJsapiPrepayIdResponse& from)
      : WechatPayJsapiPrepayIdResponse(nullptr, from) {}
  WechatPayJsapiPrepayIdResponse(WechatPayJsapiPrepayIdResponse&& from) noexcept
    : WechatPayJsapiPrepayIdResponse() {
    *this = ::std::move(from);
  }

  inline WechatPayJsapiPrepayIdResponse& operator=(const WechatPayJsapiPrepayIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayJsapiPrepayIdResponse& operator=(WechatPayJsapiPrepayIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayJsapiPrepayIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayJsapiPrepayIdResponse* internal_default_instance() {
    return reinterpret_cast<const WechatPayJsapiPrepayIdResponse*>(
               &_WechatPayJsapiPrepayIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(WechatPayJsapiPrepayIdResponse& a, WechatPayJsapiPrepayIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayJsapiPrepayIdResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayJsapiPrepayIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayJsapiPrepayIdResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayJsapiPrepayIdResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayJsapiPrepayIdResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayJsapiPrepayIdResponse& from) {
    WechatPayJsapiPrepayIdResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayJsapiPrepayIdResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayJsapiPrepayIdResponse";
  }
  protected:
  explicit WechatPayJsapiPrepayIdResponse(::google::protobuf::Arena* arena);
  WechatPayJsapiPrepayIdResponse(::google::protobuf::Arena* arena, const WechatPayJsapiPrepayIdResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppIdFieldNumber = 1,
    kTimeStampFieldNumber = 2,
    kNonceStrFieldNumber = 3,
    kPackageFieldNumber = 4,
    kSignTypeFieldNumber = 5,
    kPaySignFieldNumber = 6,
    kOutTradeNoFieldNumber = 11,
  };
  // string app_id = 1;
  void clear_app_id() ;
  const std::string& app_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_id(Arg_&& arg, Args_... args);
  std::string* mutable_app_id();
  PROTOBUF_NODISCARD std::string* release_app_id();
  void set_allocated_app_id(std::string* value);

  private:
  const std::string& _internal_app_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_id(
      const std::string& value);
  std::string* _internal_mutable_app_id();

  public:
  // string time_stamp = 2;
  void clear_time_stamp() ;
  const std::string& time_stamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_time_stamp(Arg_&& arg, Args_... args);
  std::string* mutable_time_stamp();
  PROTOBUF_NODISCARD std::string* release_time_stamp();
  void set_allocated_time_stamp(std::string* value);

  private:
  const std::string& _internal_time_stamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_time_stamp(
      const std::string& value);
  std::string* _internal_mutable_time_stamp();

  public:
  // string nonce_str = 3;
  void clear_nonce_str() ;
  const std::string& nonce_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nonce_str(Arg_&& arg, Args_... args);
  std::string* mutable_nonce_str();
  PROTOBUF_NODISCARD std::string* release_nonce_str();
  void set_allocated_nonce_str(std::string* value);

  private:
  const std::string& _internal_nonce_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nonce_str(
      const std::string& value);
  std::string* _internal_mutable_nonce_str();

  public:
  // string package = 4;
  void clear_package() ;
  const std::string& package() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_package(Arg_&& arg, Args_... args);
  std::string* mutable_package();
  PROTOBUF_NODISCARD std::string* release_package();
  void set_allocated_package(std::string* value);

  private:
  const std::string& _internal_package() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_package(
      const std::string& value);
  std::string* _internal_mutable_package();

  public:
  // string sign_type = 5;
  void clear_sign_type() ;
  const std::string& sign_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sign_type(Arg_&& arg, Args_... args);
  std::string* mutable_sign_type();
  PROTOBUF_NODISCARD std::string* release_sign_type();
  void set_allocated_sign_type(std::string* value);

  private:
  const std::string& _internal_sign_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sign_type(
      const std::string& value);
  std::string* _internal_mutable_sign_type();

  public:
  // string pay_sign = 6;
  void clear_pay_sign() ;
  const std::string& pay_sign() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pay_sign(Arg_&& arg, Args_... args);
  std::string* mutable_pay_sign();
  PROTOBUF_NODISCARD std::string* release_pay_sign();
  void set_allocated_pay_sign(std::string* value);

  private:
  const std::string& _internal_pay_sign() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pay_sign(
      const std::string& value);
  std::string* _internal_mutable_pay_sign();

  public:
  // string out_trade_no = 11;
  void clear_out_trade_no() ;
  const std::string& out_trade_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_trade_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_trade_no();
  PROTOBUF_NODISCARD std::string* release_out_trade_no();
  void set_allocated_out_trade_no(std::string* value);

  private:
  const std::string& _internal_out_trade_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_trade_no(
      const std::string& value);
  std::string* _internal_mutable_out_trade_no();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayJsapiPrepayIdResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      113, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr app_id_;
    ::google::protobuf::internal::ArenaStringPtr time_stamp_;
    ::google::protobuf::internal::ArenaStringPtr nonce_str_;
    ::google::protobuf::internal::ArenaStringPtr package_;
    ::google::protobuf::internal::ArenaStringPtr sign_type_;
    ::google::protobuf::internal::ArenaStringPtr pay_sign_;
    ::google::protobuf::internal::ArenaStringPtr out_trade_no_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayExecuteBatchTransferResponse_Succeeded final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Succeeded) */ {
 public:
  inline WechatPayExecuteBatchTransferResponse_Succeeded() : WechatPayExecuteBatchTransferResponse_Succeeded(nullptr) {}
  ~WechatPayExecuteBatchTransferResponse_Succeeded() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayExecuteBatchTransferResponse_Succeeded(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayExecuteBatchTransferResponse_Succeeded(const WechatPayExecuteBatchTransferResponse_Succeeded& from)
      : WechatPayExecuteBatchTransferResponse_Succeeded(nullptr, from) {}
  WechatPayExecuteBatchTransferResponse_Succeeded(WechatPayExecuteBatchTransferResponse_Succeeded&& from) noexcept
    : WechatPayExecuteBatchTransferResponse_Succeeded() {
    *this = ::std::move(from);
  }

  inline WechatPayExecuteBatchTransferResponse_Succeeded& operator=(const WechatPayExecuteBatchTransferResponse_Succeeded& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayExecuteBatchTransferResponse_Succeeded& operator=(WechatPayExecuteBatchTransferResponse_Succeeded&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayExecuteBatchTransferResponse_Succeeded& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayExecuteBatchTransferResponse_Succeeded* internal_default_instance() {
    return reinterpret_cast<const WechatPayExecuteBatchTransferResponse_Succeeded*>(
               &_WechatPayExecuteBatchTransferResponse_Succeeded_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(WechatPayExecuteBatchTransferResponse_Succeeded& a, WechatPayExecuteBatchTransferResponse_Succeeded& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayExecuteBatchTransferResponse_Succeeded* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayExecuteBatchTransferResponse_Succeeded* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayExecuteBatchTransferResponse_Succeeded* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayExecuteBatchTransferResponse_Succeeded>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayExecuteBatchTransferResponse_Succeeded& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayExecuteBatchTransferResponse_Succeeded& from) {
    WechatPayExecuteBatchTransferResponse_Succeeded::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayExecuteBatchTransferResponse_Succeeded* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayExecuteBatchTransferResponse.Succeeded";
  }
  protected:
  explicit WechatPayExecuteBatchTransferResponse_Succeeded(::google::protobuf::Arena* arena);
  WechatPayExecuteBatchTransferResponse_Succeeded(::google::protobuf::Arena* arena, const WechatPayExecuteBatchTransferResponse_Succeeded& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBatchIdFieldNumber = 1,
    kCreateTimeFieldNumber = 2,
  };
  // string batch_id = 1;
  void clear_batch_id() ;
  const std::string& batch_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_batch_id(Arg_&& arg, Args_... args);
  std::string* mutable_batch_id();
  PROTOBUF_NODISCARD std::string* release_batch_id();
  void set_allocated_batch_id(std::string* value);

  private:
  const std::string& _internal_batch_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_batch_id(
      const std::string& value);
  std::string* _internal_mutable_batch_id();

  public:
  // string create_time = 2;
  void clear_create_time() ;
  const std::string& create_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_create_time(Arg_&& arg, Args_... args);
  std::string* mutable_create_time();
  PROTOBUF_NODISCARD std::string* release_create_time();
  void set_allocated_create_time(std::string* value);

  private:
  const std::string& _internal_create_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_create_time(
      const std::string& value);
  std::string* _internal_mutable_create_time();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Succeeded)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      88, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr batch_id_;
    ::google::protobuf::internal::ArenaStringPtr create_time_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayExecuteBatchTransferResponse_Detail final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Detail) */ {
 public:
  inline WechatPayExecuteBatchTransferResponse_Detail() : WechatPayExecuteBatchTransferResponse_Detail(nullptr) {}
  ~WechatPayExecuteBatchTransferResponse_Detail() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayExecuteBatchTransferResponse_Detail(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayExecuteBatchTransferResponse_Detail(const WechatPayExecuteBatchTransferResponse_Detail& from)
      : WechatPayExecuteBatchTransferResponse_Detail(nullptr, from) {}
  WechatPayExecuteBatchTransferResponse_Detail(WechatPayExecuteBatchTransferResponse_Detail&& from) noexcept
    : WechatPayExecuteBatchTransferResponse_Detail() {
    *this = ::std::move(from);
  }

  inline WechatPayExecuteBatchTransferResponse_Detail& operator=(const WechatPayExecuteBatchTransferResponse_Detail& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayExecuteBatchTransferResponse_Detail& operator=(WechatPayExecuteBatchTransferResponse_Detail&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayExecuteBatchTransferResponse_Detail& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayExecuteBatchTransferResponse_Detail* internal_default_instance() {
    return reinterpret_cast<const WechatPayExecuteBatchTransferResponse_Detail*>(
               &_WechatPayExecuteBatchTransferResponse_Detail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(WechatPayExecuteBatchTransferResponse_Detail& a, WechatPayExecuteBatchTransferResponse_Detail& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayExecuteBatchTransferResponse_Detail* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayExecuteBatchTransferResponse_Detail* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayExecuteBatchTransferResponse_Detail* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayExecuteBatchTransferResponse_Detail>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayExecuteBatchTransferResponse_Detail& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayExecuteBatchTransferResponse_Detail& from) {
    WechatPayExecuteBatchTransferResponse_Detail::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayExecuteBatchTransferResponse_Detail* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayExecuteBatchTransferResponse.Detail";
  }
  protected:
  explicit WechatPayExecuteBatchTransferResponse_Detail(::google::protobuf::Arena* arena);
  WechatPayExecuteBatchTransferResponse_Detail(::google::protobuf::Arena* arena, const WechatPayExecuteBatchTransferResponse_Detail& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpenIdFieldNumber = 1,
    kOutDetailNoFieldNumber = 2,
  };
  // string open_id = 1;
  void clear_open_id() ;
  const std::string& open_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_open_id(Arg_&& arg, Args_... args);
  std::string* mutable_open_id();
  PROTOBUF_NODISCARD std::string* release_open_id();
  void set_allocated_open_id(std::string* value);

  private:
  const std::string& _internal_open_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_open_id(
      const std::string& value);
  std::string* _internal_mutable_open_id();

  public:
  // string out_detail_no = 2;
  void clear_out_detail_no() ;
  const std::string& out_detail_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_detail_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_detail_no();
  PROTOBUF_NODISCARD std::string* release_out_detail_no();
  void set_allocated_out_detail_no(std::string* value);

  private:
  const std::string& _internal_out_detail_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_detail_no(
      const std::string& value);
  std::string* _internal_mutable_out_detail_no();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Detail)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      86, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr open_id_;
    ::google::protobuf::internal::ArenaStringPtr out_detail_no_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayExecuteBatchTransferRequest_Detail final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail) */ {
 public:
  inline WechatPayExecuteBatchTransferRequest_Detail() : WechatPayExecuteBatchTransferRequest_Detail(nullptr) {}
  ~WechatPayExecuteBatchTransferRequest_Detail() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayExecuteBatchTransferRequest_Detail(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayExecuteBatchTransferRequest_Detail(const WechatPayExecuteBatchTransferRequest_Detail& from)
      : WechatPayExecuteBatchTransferRequest_Detail(nullptr, from) {}
  WechatPayExecuteBatchTransferRequest_Detail(WechatPayExecuteBatchTransferRequest_Detail&& from) noexcept
    : WechatPayExecuteBatchTransferRequest_Detail() {
    *this = ::std::move(from);
  }

  inline WechatPayExecuteBatchTransferRequest_Detail& operator=(const WechatPayExecuteBatchTransferRequest_Detail& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayExecuteBatchTransferRequest_Detail& operator=(WechatPayExecuteBatchTransferRequest_Detail&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayExecuteBatchTransferRequest_Detail& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayExecuteBatchTransferRequest_Detail* internal_default_instance() {
    return reinterpret_cast<const WechatPayExecuteBatchTransferRequest_Detail*>(
               &_WechatPayExecuteBatchTransferRequest_Detail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(WechatPayExecuteBatchTransferRequest_Detail& a, WechatPayExecuteBatchTransferRequest_Detail& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayExecuteBatchTransferRequest_Detail* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayExecuteBatchTransferRequest_Detail* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayExecuteBatchTransferRequest_Detail* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayExecuteBatchTransferRequest_Detail>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayExecuteBatchTransferRequest_Detail& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayExecuteBatchTransferRequest_Detail& from) {
    WechatPayExecuteBatchTransferRequest_Detail::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayExecuteBatchTransferRequest_Detail* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail";
  }
  protected:
  explicit WechatPayExecuteBatchTransferRequest_Detail(::google::protobuf::Arena* arena);
  WechatPayExecuteBatchTransferRequest_Detail(::google::protobuf::Arena* arena, const WechatPayExecuteBatchTransferRequest_Detail& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpenIdFieldNumber = 1,
    kUsernameFieldNumber = 2,
    kRemarkFieldNumber = 4,
    kAmountFieldNumber = 3,
  };
  // string open_id = 1;
  void clear_open_id() ;
  const std::string& open_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_open_id(Arg_&& arg, Args_... args);
  std::string* mutable_open_id();
  PROTOBUF_NODISCARD std::string* release_open_id();
  void set_allocated_open_id(std::string* value);

  private:
  const std::string& _internal_open_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_open_id(
      const std::string& value);
  std::string* _internal_mutable_open_id();

  public:
  // string username = 2;
  void clear_username() ;
  const std::string& username() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_username(Arg_&& arg, Args_... args);
  std::string* mutable_username();
  PROTOBUF_NODISCARD std::string* release_username();
  void set_allocated_username(std::string* value);

  private:
  const std::string& _internal_username() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_username(
      const std::string& value);
  std::string* _internal_mutable_username();

  public:
  // string remark = 4;
  void clear_remark() ;
  const std::string& remark() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_remark(Arg_&& arg, Args_... args);
  std::string* mutable_remark();
  PROTOBUF_NODISCARD std::string* release_remark();
  void set_allocated_remark(std::string* value);

  private:
  const std::string& _internal_remark() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_remark(
      const std::string& value);
  std::string* _internal_mutable_remark();

  public:
  // int64 amount = 3;
  void clear_amount() ;
  ::int64_t amount() const;
  void set_amount(::int64_t value);

  private:
  ::int64_t _internal_amount() const;
  void _internal_set_amount(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      86, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr open_id_;
    ::google::protobuf::internal::ArenaStringPtr username_;
    ::google::protobuf::internal::ArenaStringPtr remark_;
    ::int64_t amount_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayExecuteBatchTransferRequest_Batch final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch) */ {
 public:
  inline WechatPayExecuteBatchTransferRequest_Batch() : WechatPayExecuteBatchTransferRequest_Batch(nullptr) {}
  ~WechatPayExecuteBatchTransferRequest_Batch() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayExecuteBatchTransferRequest_Batch(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayExecuteBatchTransferRequest_Batch(const WechatPayExecuteBatchTransferRequest_Batch& from)
      : WechatPayExecuteBatchTransferRequest_Batch(nullptr, from) {}
  WechatPayExecuteBatchTransferRequest_Batch(WechatPayExecuteBatchTransferRequest_Batch&& from) noexcept
    : WechatPayExecuteBatchTransferRequest_Batch() {
    *this = ::std::move(from);
  }

  inline WechatPayExecuteBatchTransferRequest_Batch& operator=(const WechatPayExecuteBatchTransferRequest_Batch& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayExecuteBatchTransferRequest_Batch& operator=(WechatPayExecuteBatchTransferRequest_Batch&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayExecuteBatchTransferRequest_Batch& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayExecuteBatchTransferRequest_Batch* internal_default_instance() {
    return reinterpret_cast<const WechatPayExecuteBatchTransferRequest_Batch*>(
               &_WechatPayExecuteBatchTransferRequest_Batch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(WechatPayExecuteBatchTransferRequest_Batch& a, WechatPayExecuteBatchTransferRequest_Batch& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayExecuteBatchTransferRequest_Batch* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayExecuteBatchTransferRequest_Batch* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayExecuteBatchTransferRequest_Batch* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayExecuteBatchTransferRequest_Batch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayExecuteBatchTransferRequest_Batch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayExecuteBatchTransferRequest_Batch& from) {
    WechatPayExecuteBatchTransferRequest_Batch::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayExecuteBatchTransferRequest_Batch* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch";
  }
  protected:
  explicit WechatPayExecuteBatchTransferRequest_Batch(::google::protobuf::Arena* arena);
  WechatPayExecuteBatchTransferRequest_Batch(::google::protobuf::Arena* arena, const WechatPayExecuteBatchTransferRequest_Batch& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kRemarkFieldNumber = 2,
    kOutNoFieldNumber = 3,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string remark = 2;
  void clear_remark() ;
  const std::string& remark() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_remark(Arg_&& arg, Args_... args);
  std::string* mutable_remark();
  PROTOBUF_NODISCARD std::string* release_remark();
  void set_allocated_remark(std::string* value);

  private:
  const std::string& _internal_remark() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_remark(
      const std::string& value);
  std::string* _internal_mutable_remark();

  public:
  // optional string out_no = 3;
  bool has_out_no() const;
  void clear_out_no() ;
  const std::string& out_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_no();
  PROTOBUF_NODISCARD std::string* release_out_no();
  void set_allocated_out_no(std::string* value);

  private:
  const std::string& _internal_out_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_no(
      const std::string& value);
  std::string* _internal_mutable_out_no();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      80, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr remark_;
    ::google::protobuf::internal::ArenaStringPtr out_no_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayCreateRefundRequest_Amount final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayCreateRefundRequest.Amount) */ {
 public:
  inline WechatPayCreateRefundRequest_Amount() : WechatPayCreateRefundRequest_Amount(nullptr) {}
  ~WechatPayCreateRefundRequest_Amount() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayCreateRefundRequest_Amount(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayCreateRefundRequest_Amount(const WechatPayCreateRefundRequest_Amount& from)
      : WechatPayCreateRefundRequest_Amount(nullptr, from) {}
  WechatPayCreateRefundRequest_Amount(WechatPayCreateRefundRequest_Amount&& from) noexcept
    : WechatPayCreateRefundRequest_Amount() {
    *this = ::std::move(from);
  }

  inline WechatPayCreateRefundRequest_Amount& operator=(const WechatPayCreateRefundRequest_Amount& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayCreateRefundRequest_Amount& operator=(WechatPayCreateRefundRequest_Amount&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayCreateRefundRequest_Amount& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayCreateRefundRequest_Amount* internal_default_instance() {
    return reinterpret_cast<const WechatPayCreateRefundRequest_Amount*>(
               &_WechatPayCreateRefundRequest_Amount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(WechatPayCreateRefundRequest_Amount& a, WechatPayCreateRefundRequest_Amount& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayCreateRefundRequest_Amount* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayCreateRefundRequest_Amount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayCreateRefundRequest_Amount* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayCreateRefundRequest_Amount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayCreateRefundRequest_Amount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayCreateRefundRequest_Amount& from) {
    WechatPayCreateRefundRequest_Amount::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayCreateRefundRequest_Amount* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayCreateRefundRequest.Amount";
  }
  protected:
  explicit WechatPayCreateRefundRequest_Amount(::google::protobuf::Arena* arena);
  WechatPayCreateRefundRequest_Amount(::google::protobuf::Arena* arena, const WechatPayCreateRefundRequest_Amount& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTotalFieldNumber = 1,
    kRefundFieldNumber = 2,
    kCurrencyFieldNumber = 3,
  };
  // int32 total = 1;
  void clear_total() ;
  ::int32_t total() const;
  void set_total(::int32_t value);

  private:
  ::int32_t _internal_total() const;
  void _internal_set_total(::int32_t value);

  public:
  // int32 refund = 2;
  void clear_refund() ;
  ::int32_t refund() const;
  void set_refund(::int32_t value);

  private:
  ::int32_t _internal_refund() const;
  void _internal_set_refund(::int32_t value);

  public:
  // .palm.musa.v1.WechatPayCurrency currency = 3;
  void clear_currency() ;
  ::palm::musa::v1::WechatPayCurrency currency() const;
  void set_currency(::palm::musa::v1::WechatPayCurrency value);

  private:
  ::palm::musa::v1::WechatPayCurrency _internal_currency() const;
  void _internal_set_currency(::palm::musa::v1::WechatPayCurrency value);

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayCreateRefundRequest.Amount)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t total_;
    ::int32_t refund_;
    int currency_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayCloseOrderRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayCloseOrderRequest) */ {
 public:
  inline WechatPayCloseOrderRequest() : WechatPayCloseOrderRequest(nullptr) {}
  ~WechatPayCloseOrderRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayCloseOrderRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayCloseOrderRequest(const WechatPayCloseOrderRequest& from)
      : WechatPayCloseOrderRequest(nullptr, from) {}
  WechatPayCloseOrderRequest(WechatPayCloseOrderRequest&& from) noexcept
    : WechatPayCloseOrderRequest() {
    *this = ::std::move(from);
  }

  inline WechatPayCloseOrderRequest& operator=(const WechatPayCloseOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayCloseOrderRequest& operator=(WechatPayCloseOrderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayCloseOrderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayCloseOrderRequest* internal_default_instance() {
    return reinterpret_cast<const WechatPayCloseOrderRequest*>(
               &_WechatPayCloseOrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(WechatPayCloseOrderRequest& a, WechatPayCloseOrderRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayCloseOrderRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayCloseOrderRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayCloseOrderRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayCloseOrderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayCloseOrderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayCloseOrderRequest& from) {
    WechatPayCloseOrderRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayCloseOrderRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayCloseOrderRequest";
  }
  protected:
  explicit WechatPayCloseOrderRequest(::google::protobuf::Arena* arena);
  WechatPayCloseOrderRequest(::google::protobuf::Arena* arena, const WechatPayCloseOrderRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutTradeNoFieldNumber = 1,
    kReasonFieldNumber = 2,
  };
  // string out_trade_no = 1;
  void clear_out_trade_no() ;
  const std::string& out_trade_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_trade_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_trade_no();
  PROTOBUF_NODISCARD std::string* release_out_trade_no();
  void set_allocated_out_trade_no(std::string* value);

  private:
  const std::string& _internal_out_trade_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_trade_no(
      const std::string& value);
  std::string* _internal_mutable_out_trade_no();

  public:
  // string reason = 2;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayCloseOrderRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      66, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr out_trade_no_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayBillResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayBillResponse) */ {
 public:
  inline WechatPayBillResponse() : WechatPayBillResponse(nullptr) {}
  ~WechatPayBillResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayBillResponse(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayBillResponse(const WechatPayBillResponse& from)
      : WechatPayBillResponse(nullptr, from) {}
  WechatPayBillResponse(WechatPayBillResponse&& from) noexcept
    : WechatPayBillResponse() {
    *this = ::std::move(from);
  }

  inline WechatPayBillResponse& operator=(const WechatPayBillResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayBillResponse& operator=(WechatPayBillResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayBillResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayBillResponse* internal_default_instance() {
    return reinterpret_cast<const WechatPayBillResponse*>(
               &_WechatPayBillResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(WechatPayBillResponse& a, WechatPayBillResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayBillResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayBillResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayBillResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayBillResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayBillResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayBillResponse& from) {
    WechatPayBillResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayBillResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayBillResponse";
  }
  protected:
  explicit WechatPayBillResponse(::google::protobuf::Arena* arena);
  WechatPayBillResponse(::google::protobuf::Arena* arena, const WechatPayBillResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContentFieldNumber = 1,
  };
  // bytes content = 1;
  void clear_content() ;
  const std::string& content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* value);

  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(
      const std::string& value);
  std::string* _internal_mutable_content();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayBillResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr content_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayBillDate final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayBillDate) */ {
 public:
  inline WechatPayBillDate() : WechatPayBillDate(nullptr) {}
  ~WechatPayBillDate() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayBillDate(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayBillDate(const WechatPayBillDate& from)
      : WechatPayBillDate(nullptr, from) {}
  WechatPayBillDate(WechatPayBillDate&& from) noexcept
    : WechatPayBillDate() {
    *this = ::std::move(from);
  }

  inline WechatPayBillDate& operator=(const WechatPayBillDate& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayBillDate& operator=(WechatPayBillDate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayBillDate& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayBillDate* internal_default_instance() {
    return reinterpret_cast<const WechatPayBillDate*>(
               &_WechatPayBillDate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(WechatPayBillDate& a, WechatPayBillDate& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayBillDate* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayBillDate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayBillDate* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayBillDate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayBillDate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayBillDate& from) {
    WechatPayBillDate::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayBillDate* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayBillDate";
  }
  protected:
  explicit WechatPayBillDate(::google::protobuf::Arena* arena);
  WechatPayBillDate(::google::protobuf::Arena* arena, const WechatPayBillDate& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kYearFieldNumber = 1,
    kMonthFieldNumber = 2,
    kDayFieldNumber = 3,
  };
  // int32 year = 1;
  void clear_year() ;
  ::int32_t year() const;
  void set_year(::int32_t value);

  private:
  ::int32_t _internal_year() const;
  void _internal_set_year(::int32_t value);

  public:
  // int32 month = 2;
  void clear_month() ;
  ::int32_t month() const;
  void set_month(::int32_t value);

  private:
  ::int32_t _internal_month() const;
  void _internal_set_month(::int32_t value);

  public:
  // int32 day = 3;
  void clear_day() ;
  ::int32_t day() const;
  void set_day(::int32_t value);

  private:
  ::int32_t _internal_day() const;
  void _internal_set_day(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayBillDate)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t year_;
    ::int32_t month_;
    ::int32_t day_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class Error final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.Error) */ {
 public:
  inline Error() : Error(nullptr) {}
  ~Error() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Error(::google::protobuf::internal::ConstantInitialized);

  inline Error(const Error& from)
      : Error(nullptr, from) {}
  Error(Error&& from) noexcept
    : Error() {
    *this = ::std::move(from);
  }

  inline Error& operator=(const Error& from) {
    CopyFrom(from);
    return *this;
  }
  inline Error& operator=(Error&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Error& default_instance() {
    return *internal_default_instance();
  }
  static inline const Error* internal_default_instance() {
    return reinterpret_cast<const Error*>(
               &_Error_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Error& a, Error& b) {
    a.Swap(&b);
  }
  inline void Swap(Error* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Error* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Error* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Error>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Error& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Error& from) {
    Error::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Error* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.Error";
  }
  protected:
  explicit Error(::google::protobuf::Arena* arena);
  Error(::google::protobuf::Arena* arena, const Error& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 1,
    kMessageFieldNumber = 2,
  };
  // string code = 1;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.Error)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      38, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayTradeBillRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayTradeBillRequest) */ {
 public:
  inline WechatPayTradeBillRequest() : WechatPayTradeBillRequest(nullptr) {}
  ~WechatPayTradeBillRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayTradeBillRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayTradeBillRequest(const WechatPayTradeBillRequest& from)
      : WechatPayTradeBillRequest(nullptr, from) {}
  WechatPayTradeBillRequest(WechatPayTradeBillRequest&& from) noexcept
    : WechatPayTradeBillRequest() {
    *this = ::std::move(from);
  }

  inline WechatPayTradeBillRequest& operator=(const WechatPayTradeBillRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayTradeBillRequest& operator=(WechatPayTradeBillRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayTradeBillRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayTradeBillRequest* internal_default_instance() {
    return reinterpret_cast<const WechatPayTradeBillRequest*>(
               &_WechatPayTradeBillRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(WechatPayTradeBillRequest& a, WechatPayTradeBillRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayTradeBillRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayTradeBillRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayTradeBillRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayTradeBillRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayTradeBillRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayTradeBillRequest& from) {
    WechatPayTradeBillRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayTradeBillRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayTradeBillRequest";
  }
  protected:
  explicit WechatPayTradeBillRequest(::google::protobuf::Arena* arena);
  WechatPayTradeBillRequest(::google::protobuf::Arena* arena, const WechatPayTradeBillRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using BillType = WechatPayTradeBillRequest_BillType;
  static constexpr BillType ALL = WechatPayTradeBillRequest_BillType_ALL;
  static constexpr BillType SUCCESS = WechatPayTradeBillRequest_BillType_SUCCESS;
  static constexpr BillType REFUND = WechatPayTradeBillRequest_BillType_REFUND;
  static inline bool BillType_IsValid(int value) {
    return WechatPayTradeBillRequest_BillType_IsValid(value);
  }
  static constexpr BillType BillType_MIN = WechatPayTradeBillRequest_BillType_BillType_MIN;
  static constexpr BillType BillType_MAX = WechatPayTradeBillRequest_BillType_BillType_MAX;
  static constexpr int BillType_ARRAYSIZE = WechatPayTradeBillRequest_BillType_BillType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* BillType_descriptor() {
    return WechatPayTradeBillRequest_BillType_descriptor();
  }
  template <typename T>
  static inline const std::string& BillType_Name(T value) {
    return WechatPayTradeBillRequest_BillType_Name(value);
  }
  static inline bool BillType_Parse(absl::string_view name, BillType* value) {
    return WechatPayTradeBillRequest_BillType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kBillDateFieldNumber = 1,
    kBillTypeFieldNumber = 2,
  };
  // .palm.musa.v1.WechatPayBillDate bill_date = 1;
  bool has_bill_date() const;
  void clear_bill_date() ;
  const ::palm::musa::v1::WechatPayBillDate& bill_date() const;
  PROTOBUF_NODISCARD ::palm::musa::v1::WechatPayBillDate* release_bill_date();
  ::palm::musa::v1::WechatPayBillDate* mutable_bill_date();
  void set_allocated_bill_date(::palm::musa::v1::WechatPayBillDate* value);
  void unsafe_arena_set_allocated_bill_date(::palm::musa::v1::WechatPayBillDate* value);
  ::palm::musa::v1::WechatPayBillDate* unsafe_arena_release_bill_date();

  private:
  const ::palm::musa::v1::WechatPayBillDate& _internal_bill_date() const;
  ::palm::musa::v1::WechatPayBillDate* _internal_mutable_bill_date();

  public:
  // .palm.musa.v1.WechatPayTradeBillRequest.BillType bill_type = 2;
  void clear_bill_type() ;
  ::palm::musa::v1::WechatPayTradeBillRequest_BillType bill_type() const;
  void set_bill_type(::palm::musa::v1::WechatPayTradeBillRequest_BillType value);

  private:
  ::palm::musa::v1::WechatPayTradeBillRequest_BillType _internal_bill_type() const;
  void _internal_set_bill_type(::palm::musa::v1::WechatPayTradeBillRequest_BillType value);

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayTradeBillRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::palm::musa::v1::WechatPayBillDate* bill_date_;
    int bill_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayQueryBatchTransferResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayQueryBatchTransferResponse) */ {
 public:
  inline WechatPayQueryBatchTransferResponse() : WechatPayQueryBatchTransferResponse(nullptr) {}
  ~WechatPayQueryBatchTransferResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayQueryBatchTransferResponse(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayQueryBatchTransferResponse(const WechatPayQueryBatchTransferResponse& from)
      : WechatPayQueryBatchTransferResponse(nullptr, from) {}
  WechatPayQueryBatchTransferResponse(WechatPayQueryBatchTransferResponse&& from) noexcept
    : WechatPayQueryBatchTransferResponse() {
    *this = ::std::move(from);
  }

  inline WechatPayQueryBatchTransferResponse& operator=(const WechatPayQueryBatchTransferResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayQueryBatchTransferResponse& operator=(WechatPayQueryBatchTransferResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayQueryBatchTransferResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayQueryBatchTransferResponse* internal_default_instance() {
    return reinterpret_cast<const WechatPayQueryBatchTransferResponse*>(
               &_WechatPayQueryBatchTransferResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(WechatPayQueryBatchTransferResponse& a, WechatPayQueryBatchTransferResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayQueryBatchTransferResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayQueryBatchTransferResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayQueryBatchTransferResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayQueryBatchTransferResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayQueryBatchTransferResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayQueryBatchTransferResponse& from) {
    WechatPayQueryBatchTransferResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayQueryBatchTransferResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayQueryBatchTransferResponse";
  }
  protected:
  explicit WechatPayQueryBatchTransferResponse(::google::protobuf::Arena* arena);
  WechatPayQueryBatchTransferResponse(::google::protobuf::Arena* arena, const WechatPayQueryBatchTransferResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Detail = WechatPayQueryBatchTransferResponse_Detail;
  using Batch = WechatPayQueryBatchTransferResponse_Batch;

  // accessors -------------------------------------------------------

  enum : int {
    kDetailsFieldNumber = 9,
    kBatchFieldNumber = 1,
  };
  // repeated .palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail details = 9;
  int details_size() const;
  private:
  int _internal_details_size() const;

  public:
  void clear_details() ;
  ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Detail* mutable_details(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Detail >*
      mutable_details();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayQueryBatchTransferResponse_Detail>& _internal_details() const;
  ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayQueryBatchTransferResponse_Detail>* _internal_mutable_details();
  public:
  const ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Detail& details(int index) const;
  ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Detail* add_details();
  const ::google::protobuf::RepeatedPtrField< ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Detail >&
      details() const;
  // .palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch batch = 1;
  bool has_batch() const;
  void clear_batch() ;
  const ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch& batch() const;
  PROTOBUF_NODISCARD ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch* release_batch();
  ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch* mutable_batch();
  void set_allocated_batch(::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch* value);
  void unsafe_arena_set_allocated_batch(::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch* value);
  ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch* unsafe_arena_release_batch();

  private:
  const ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch& _internal_batch() const;
  ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch* _internal_mutable_batch();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayQueryBatchTransferResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Detail > details_;
    ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch* batch_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayPrepayRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayPrepayRequest) */ {
 public:
  inline WechatPayPrepayRequest() : WechatPayPrepayRequest(nullptr) {}
  ~WechatPayPrepayRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayPrepayRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayPrepayRequest(const WechatPayPrepayRequest& from)
      : WechatPayPrepayRequest(nullptr, from) {}
  WechatPayPrepayRequest(WechatPayPrepayRequest&& from) noexcept
    : WechatPayPrepayRequest() {
    *this = ::std::move(from);
  }

  inline WechatPayPrepayRequest& operator=(const WechatPayPrepayRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayPrepayRequest& operator=(WechatPayPrepayRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayPrepayRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayPrepayRequest* internal_default_instance() {
    return reinterpret_cast<const WechatPayPrepayRequest*>(
               &_WechatPayPrepayRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(WechatPayPrepayRequest& a, WechatPayPrepayRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayPrepayRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayPrepayRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayPrepayRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayPrepayRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayPrepayRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayPrepayRequest& from) {
    WechatPayPrepayRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayPrepayRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayPrepayRequest";
  }
  protected:
  explicit WechatPayPrepayRequest(::google::protobuf::Arena* arena);
  WechatPayPrepayRequest(::google::protobuf::Arena* arena, const WechatPayPrepayRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Amount = WechatPayPrepayRequest_Amount;

  // accessors -------------------------------------------------------

  enum : int {
    kAppIdFieldNumber = 1,
    kOutTradeNoFieldNumber = 2,
    kPayerOpenIdFieldNumber = 11,
    kDescriptionFieldNumber = 98,
    kNotifyHostFieldNumber = 99,
    kAmountFieldNumber = 12,
  };
  // string app_id = 1;
  void clear_app_id() ;
  const std::string& app_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_id(Arg_&& arg, Args_... args);
  std::string* mutable_app_id();
  PROTOBUF_NODISCARD std::string* release_app_id();
  void set_allocated_app_id(std::string* value);

  private:
  const std::string& _internal_app_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_id(
      const std::string& value);
  std::string* _internal_mutable_app_id();

  public:
  // optional string out_trade_no = 2;
  bool has_out_trade_no() const;
  void clear_out_trade_no() ;
  const std::string& out_trade_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_trade_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_trade_no();
  PROTOBUF_NODISCARD std::string* release_out_trade_no();
  void set_allocated_out_trade_no(std::string* value);

  private:
  const std::string& _internal_out_trade_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_trade_no(
      const std::string& value);
  std::string* _internal_mutable_out_trade_no();

  public:
  // optional string payer_open_id = 11;
  bool has_payer_open_id() const;
  void clear_payer_open_id() ;
  const std::string& payer_open_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payer_open_id(Arg_&& arg, Args_... args);
  std::string* mutable_payer_open_id();
  PROTOBUF_NODISCARD std::string* release_payer_open_id();
  void set_allocated_payer_open_id(std::string* value);

  private:
  const std::string& _internal_payer_open_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payer_open_id(
      const std::string& value);
  std::string* _internal_mutable_payer_open_id();

  public:
  // string description = 98;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string notify_host = 99;
  void clear_notify_host() ;
  const std::string& notify_host() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_notify_host(Arg_&& arg, Args_... args);
  std::string* mutable_notify_host();
  PROTOBUF_NODISCARD std::string* release_notify_host();
  void set_allocated_notify_host(std::string* value);

  private:
  const std::string& _internal_notify_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_notify_host(
      const std::string& value);
  std::string* _internal_mutable_notify_host();

  public:
  // .palm.musa.v1.WechatPayPrepayRequest.Amount amount = 12;
  bool has_amount() const;
  void clear_amount() ;
  const ::palm::musa::v1::WechatPayPrepayRequest_Amount& amount() const;
  PROTOBUF_NODISCARD ::palm::musa::v1::WechatPayPrepayRequest_Amount* release_amount();
  ::palm::musa::v1::WechatPayPrepayRequest_Amount* mutable_amount();
  void set_allocated_amount(::palm::musa::v1::WechatPayPrepayRequest_Amount* value);
  void unsafe_arena_set_allocated_amount(::palm::musa::v1::WechatPayPrepayRequest_Amount* value);
  ::palm::musa::v1::WechatPayPrepayRequest_Amount* unsafe_arena_release_amount();

  private:
  const ::palm::musa::v1::WechatPayPrepayRequest_Amount& _internal_amount() const;
  ::palm::musa::v1::WechatPayPrepayRequest_Amount* _internal_mutable_amount();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayPrepayRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 6, 1,
      97, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr app_id_;
    ::google::protobuf::internal::ArenaStringPtr out_trade_no_;
    ::google::protobuf::internal::ArenaStringPtr payer_open_id_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr notify_host_;
    ::palm::musa::v1::WechatPayPrepayRequest_Amount* amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayFundFlowBillRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayFundFlowBillRequest) */ {
 public:
  inline WechatPayFundFlowBillRequest() : WechatPayFundFlowBillRequest(nullptr) {}
  ~WechatPayFundFlowBillRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayFundFlowBillRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayFundFlowBillRequest(const WechatPayFundFlowBillRequest& from)
      : WechatPayFundFlowBillRequest(nullptr, from) {}
  WechatPayFundFlowBillRequest(WechatPayFundFlowBillRequest&& from) noexcept
    : WechatPayFundFlowBillRequest() {
    *this = ::std::move(from);
  }

  inline WechatPayFundFlowBillRequest& operator=(const WechatPayFundFlowBillRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayFundFlowBillRequest& operator=(WechatPayFundFlowBillRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayFundFlowBillRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayFundFlowBillRequest* internal_default_instance() {
    return reinterpret_cast<const WechatPayFundFlowBillRequest*>(
               &_WechatPayFundFlowBillRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(WechatPayFundFlowBillRequest& a, WechatPayFundFlowBillRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayFundFlowBillRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayFundFlowBillRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayFundFlowBillRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayFundFlowBillRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayFundFlowBillRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayFundFlowBillRequest& from) {
    WechatPayFundFlowBillRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayFundFlowBillRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayFundFlowBillRequest";
  }
  protected:
  explicit WechatPayFundFlowBillRequest(::google::protobuf::Arena* arena);
  WechatPayFundFlowBillRequest(::google::protobuf::Arena* arena, const WechatPayFundFlowBillRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using AccountType = WechatPayFundFlowBillRequest_AccountType;
  static constexpr AccountType BASIC = WechatPayFundFlowBillRequest_AccountType_BASIC;
  static constexpr AccountType OPERATION = WechatPayFundFlowBillRequest_AccountType_OPERATION;
  static constexpr AccountType FEES = WechatPayFundFlowBillRequest_AccountType_FEES;
  static inline bool AccountType_IsValid(int value) {
    return WechatPayFundFlowBillRequest_AccountType_IsValid(value);
  }
  static constexpr AccountType AccountType_MIN = WechatPayFundFlowBillRequest_AccountType_AccountType_MIN;
  static constexpr AccountType AccountType_MAX = WechatPayFundFlowBillRequest_AccountType_AccountType_MAX;
  static constexpr int AccountType_ARRAYSIZE = WechatPayFundFlowBillRequest_AccountType_AccountType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* AccountType_descriptor() {
    return WechatPayFundFlowBillRequest_AccountType_descriptor();
  }
  template <typename T>
  static inline const std::string& AccountType_Name(T value) {
    return WechatPayFundFlowBillRequest_AccountType_Name(value);
  }
  static inline bool AccountType_Parse(absl::string_view name, AccountType* value) {
    return WechatPayFundFlowBillRequest_AccountType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kBillDateFieldNumber = 1,
    kAccountTypeFieldNumber = 2,
  };
  // .palm.musa.v1.WechatPayBillDate bill_date = 1;
  bool has_bill_date() const;
  void clear_bill_date() ;
  const ::palm::musa::v1::WechatPayBillDate& bill_date() const;
  PROTOBUF_NODISCARD ::palm::musa::v1::WechatPayBillDate* release_bill_date();
  ::palm::musa::v1::WechatPayBillDate* mutable_bill_date();
  void set_allocated_bill_date(::palm::musa::v1::WechatPayBillDate* value);
  void unsafe_arena_set_allocated_bill_date(::palm::musa::v1::WechatPayBillDate* value);
  ::palm::musa::v1::WechatPayBillDate* unsafe_arena_release_bill_date();

  private:
  const ::palm::musa::v1::WechatPayBillDate& _internal_bill_date() const;
  ::palm::musa::v1::WechatPayBillDate* _internal_mutable_bill_date();

  public:
  // .palm.musa.v1.WechatPayFundFlowBillRequest.AccountType account_type = 2;
  void clear_account_type() ;
  ::palm::musa::v1::WechatPayFundFlowBillRequest_AccountType account_type() const;
  void set_account_type(::palm::musa::v1::WechatPayFundFlowBillRequest_AccountType value);

  private:
  ::palm::musa::v1::WechatPayFundFlowBillRequest_AccountType _internal_account_type() const;
  void _internal_set_account_type(::palm::musa::v1::WechatPayFundFlowBillRequest_AccountType value);

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayFundFlowBillRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::palm::musa::v1::WechatPayBillDate* bill_date_;
    int account_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayExecuteBatchTransferResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayExecuteBatchTransferResponse) */ {
 public:
  inline WechatPayExecuteBatchTransferResponse() : WechatPayExecuteBatchTransferResponse(nullptr) {}
  ~WechatPayExecuteBatchTransferResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayExecuteBatchTransferResponse(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayExecuteBatchTransferResponse(const WechatPayExecuteBatchTransferResponse& from)
      : WechatPayExecuteBatchTransferResponse(nullptr, from) {}
  WechatPayExecuteBatchTransferResponse(WechatPayExecuteBatchTransferResponse&& from) noexcept
    : WechatPayExecuteBatchTransferResponse() {
    *this = ::std::move(from);
  }

  inline WechatPayExecuteBatchTransferResponse& operator=(const WechatPayExecuteBatchTransferResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayExecuteBatchTransferResponse& operator=(WechatPayExecuteBatchTransferResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayExecuteBatchTransferResponse& default_instance() {
    return *internal_default_instance();
  }
  enum PayloadCase {
    kSucceeded = 11,
    kError = 12,
    PAYLOAD_NOT_SET = 0,
  };

  static inline const WechatPayExecuteBatchTransferResponse* internal_default_instance() {
    return reinterpret_cast<const WechatPayExecuteBatchTransferResponse*>(
               &_WechatPayExecuteBatchTransferResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(WechatPayExecuteBatchTransferResponse& a, WechatPayExecuteBatchTransferResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayExecuteBatchTransferResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayExecuteBatchTransferResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayExecuteBatchTransferResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayExecuteBatchTransferResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayExecuteBatchTransferResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayExecuteBatchTransferResponse& from) {
    WechatPayExecuteBatchTransferResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayExecuteBatchTransferResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayExecuteBatchTransferResponse";
  }
  protected:
  explicit WechatPayExecuteBatchTransferResponse(::google::protobuf::Arena* arena);
  WechatPayExecuteBatchTransferResponse(::google::protobuf::Arena* arena, const WechatPayExecuteBatchTransferResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Detail = WechatPayExecuteBatchTransferResponse_Detail;
  using Succeeded = WechatPayExecuteBatchTransferResponse_Succeeded;

  // accessors -------------------------------------------------------

  enum : int {
    kDetailsFieldNumber = 2,
    kOutBatchNoFieldNumber = 1,
    kSucceededFieldNumber = 11,
    kErrorFieldNumber = 12,
  };
  // repeated .palm.musa.v1.WechatPayExecuteBatchTransferResponse.Detail details = 2;
  int details_size() const;
  private:
  int _internal_details_size() const;

  public:
  void clear_details() ;
  ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Detail* mutable_details(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Detail >*
      mutable_details();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Detail>& _internal_details() const;
  ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Detail>* _internal_mutable_details();
  public:
  const ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Detail& details(int index) const;
  ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Detail* add_details();
  const ::google::protobuf::RepeatedPtrField< ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Detail >&
      details() const;
  // string out_batch_no = 1;
  void clear_out_batch_no() ;
  const std::string& out_batch_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_batch_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_batch_no();
  PROTOBUF_NODISCARD std::string* release_out_batch_no();
  void set_allocated_out_batch_no(std::string* value);

  private:
  const std::string& _internal_out_batch_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_batch_no(
      const std::string& value);
  std::string* _internal_mutable_out_batch_no();

  public:
  // .palm.musa.v1.WechatPayExecuteBatchTransferResponse.Succeeded succeeded = 11;
  bool has_succeeded() const;
  private:
  bool _internal_has_succeeded() const;

  public:
  void clear_succeeded() ;
  const ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded& succeeded() const;
  PROTOBUF_NODISCARD ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded* release_succeeded();
  ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded* mutable_succeeded();
  void set_allocated_succeeded(::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded* value);
  void unsafe_arena_set_allocated_succeeded(::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded* value);
  ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded* unsafe_arena_release_succeeded();

  private:
  const ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded& _internal_succeeded() const;
  ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded* _internal_mutable_succeeded();

  public:
  // .palm.musa.v1.Error error = 12;
  bool has_error() const;
  private:
  bool _internal_has_error() const;

  public:
  void clear_error() ;
  const ::palm::musa::v1::Error& error() const;
  PROTOBUF_NODISCARD ::palm::musa::v1::Error* release_error();
  ::palm::musa::v1::Error* mutable_error();
  void set_allocated_error(::palm::musa::v1::Error* value);
  void unsafe_arena_set_allocated_error(::palm::musa::v1::Error* value);
  ::palm::musa::v1::Error* unsafe_arena_release_error();

  private:
  const ::palm::musa::v1::Error& _internal_error() const;
  ::palm::musa::v1::Error* _internal_mutable_error();

  public:
  void clear_payload();
  PayloadCase payload_case() const;
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayExecuteBatchTransferResponse)
 private:
  class _Internal;
  void set_has_succeeded();
  void set_has_error();

  inline bool has_payload() const;
  inline void clear_has_payload();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 4, 3,
      71, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Detail > details_;
    ::google::protobuf::internal::ArenaStringPtr out_batch_no_;
    union PayloadUnion {
      constexpr PayloadUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded* succeeded_;
      ::palm::musa::v1::Error* error_;
    } payload_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayExecuteBatchTransferRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayExecuteBatchTransferRequest) */ {
 public:
  inline WechatPayExecuteBatchTransferRequest() : WechatPayExecuteBatchTransferRequest(nullptr) {}
  ~WechatPayExecuteBatchTransferRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayExecuteBatchTransferRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayExecuteBatchTransferRequest(const WechatPayExecuteBatchTransferRequest& from)
      : WechatPayExecuteBatchTransferRequest(nullptr, from) {}
  WechatPayExecuteBatchTransferRequest(WechatPayExecuteBatchTransferRequest&& from) noexcept
    : WechatPayExecuteBatchTransferRequest() {
    *this = ::std::move(from);
  }

  inline WechatPayExecuteBatchTransferRequest& operator=(const WechatPayExecuteBatchTransferRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayExecuteBatchTransferRequest& operator=(WechatPayExecuteBatchTransferRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayExecuteBatchTransferRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayExecuteBatchTransferRequest* internal_default_instance() {
    return reinterpret_cast<const WechatPayExecuteBatchTransferRequest*>(
               &_WechatPayExecuteBatchTransferRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(WechatPayExecuteBatchTransferRequest& a, WechatPayExecuteBatchTransferRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayExecuteBatchTransferRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayExecuteBatchTransferRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayExecuteBatchTransferRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayExecuteBatchTransferRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayExecuteBatchTransferRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayExecuteBatchTransferRequest& from) {
    WechatPayExecuteBatchTransferRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayExecuteBatchTransferRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayExecuteBatchTransferRequest";
  }
  protected:
  explicit WechatPayExecuteBatchTransferRequest(::google::protobuf::Arena* arena);
  WechatPayExecuteBatchTransferRequest(::google::protobuf::Arena* arena, const WechatPayExecuteBatchTransferRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Batch = WechatPayExecuteBatchTransferRequest_Batch;
  using Detail = WechatPayExecuteBatchTransferRequest_Detail;

  // accessors -------------------------------------------------------

  enum : int {
    kDetailsFieldNumber = 3,
    kAppIdFieldNumber = 1,
    kSceneIdFieldNumber = 9,
    kBatchFieldNumber = 2,
  };
  // repeated .palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail details = 3;
  int details_size() const;
  private:
  int _internal_details_size() const;

  public:
  void clear_details() ;
  ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Detail* mutable_details(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Detail >*
      mutable_details();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Detail>& _internal_details() const;
  ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Detail>* _internal_mutable_details();
  public:
  const ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Detail& details(int index) const;
  ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Detail* add_details();
  const ::google::protobuf::RepeatedPtrField< ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Detail >&
      details() const;
  // string app_id = 1;
  void clear_app_id() ;
  const std::string& app_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_id(Arg_&& arg, Args_... args);
  std::string* mutable_app_id();
  PROTOBUF_NODISCARD std::string* release_app_id();
  void set_allocated_app_id(std::string* value);

  private:
  const std::string& _internal_app_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_id(
      const std::string& value);
  std::string* _internal_mutable_app_id();

  public:
  // string scene_id = 9;
  void clear_scene_id() ;
  const std::string& scene_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_scene_id(Arg_&& arg, Args_... args);
  std::string* mutable_scene_id();
  PROTOBUF_NODISCARD std::string* release_scene_id();
  void set_allocated_scene_id(std::string* value);

  private:
  const std::string& _internal_scene_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_scene_id(
      const std::string& value);
  std::string* _internal_mutable_scene_id();

  public:
  // .palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch batch = 2;
  bool has_batch() const;
  void clear_batch() ;
  const ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch& batch() const;
  PROTOBUF_NODISCARD ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch* release_batch();
  ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch* mutable_batch();
  void set_allocated_batch(::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch* value);
  void unsafe_arena_set_allocated_batch(::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch* value);
  ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch* unsafe_arena_release_batch();

  private:
  const ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch& _internal_batch() const;
  ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch* _internal_mutable_batch();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayExecuteBatchTransferRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      72, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Detail > details_;
    ::google::protobuf::internal::ArenaStringPtr app_id_;
    ::google::protobuf::internal::ArenaStringPtr scene_id_;
    ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch* batch_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};// -------------------------------------------------------------------

class WechatPayCreateRefundRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.musa.v1.WechatPayCreateRefundRequest) */ {
 public:
  inline WechatPayCreateRefundRequest() : WechatPayCreateRefundRequest(nullptr) {}
  ~WechatPayCreateRefundRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatPayCreateRefundRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatPayCreateRefundRequest(const WechatPayCreateRefundRequest& from)
      : WechatPayCreateRefundRequest(nullptr, from) {}
  WechatPayCreateRefundRequest(WechatPayCreateRefundRequest&& from) noexcept
    : WechatPayCreateRefundRequest() {
    *this = ::std::move(from);
  }

  inline WechatPayCreateRefundRequest& operator=(const WechatPayCreateRefundRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatPayCreateRefundRequest& operator=(WechatPayCreateRefundRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatPayCreateRefundRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatPayCreateRefundRequest* internal_default_instance() {
    return reinterpret_cast<const WechatPayCreateRefundRequest*>(
               &_WechatPayCreateRefundRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(WechatPayCreateRefundRequest& a, WechatPayCreateRefundRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatPayCreateRefundRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatPayCreateRefundRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatPayCreateRefundRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatPayCreateRefundRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatPayCreateRefundRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatPayCreateRefundRequest& from) {
    WechatPayCreateRefundRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatPayCreateRefundRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.musa.v1.WechatPayCreateRefundRequest";
  }
  protected:
  explicit WechatPayCreateRefundRequest(::google::protobuf::Arena* arena);
  WechatPayCreateRefundRequest(::google::protobuf::Arena* arena, const WechatPayCreateRefundRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Amount = WechatPayCreateRefundRequest_Amount;

  // accessors -------------------------------------------------------

  enum : int {
    kOutTradeNoFieldNumber = 1,
    kReasonFieldNumber = 2,
    kNotifyHostFieldNumber = 11,
    kAmountFieldNumber = 3,
  };
  // string out_trade_no = 1;
  void clear_out_trade_no() ;
  const std::string& out_trade_no() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out_trade_no(Arg_&& arg, Args_... args);
  std::string* mutable_out_trade_no();
  PROTOBUF_NODISCARD std::string* release_out_trade_no();
  void set_allocated_out_trade_no(std::string* value);

  private:
  const std::string& _internal_out_trade_no() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_out_trade_no(
      const std::string& value);
  std::string* _internal_mutable_out_trade_no();

  public:
  // string reason = 2;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // string notify_host = 11;
  void clear_notify_host() ;
  const std::string& notify_host() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_notify_host(Arg_&& arg, Args_... args);
  std::string* mutable_notify_host();
  PROTOBUF_NODISCARD std::string* release_notify_host();
  void set_allocated_notify_host(std::string* value);

  private:
  const std::string& _internal_notify_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_notify_host(
      const std::string& value);
  std::string* _internal_mutable_notify_host();

  public:
  // .palm.musa.v1.WechatPayCreateRefundRequest.Amount amount = 3;
  bool has_amount() const;
  void clear_amount() ;
  const ::palm::musa::v1::WechatPayCreateRefundRequest_Amount& amount() const;
  PROTOBUF_NODISCARD ::palm::musa::v1::WechatPayCreateRefundRequest_Amount* release_amount();
  ::palm::musa::v1::WechatPayCreateRefundRequest_Amount* mutable_amount();
  void set_allocated_amount(::palm::musa::v1::WechatPayCreateRefundRequest_Amount* value);
  void unsafe_arena_set_allocated_amount(::palm::musa::v1::WechatPayCreateRefundRequest_Amount* value);
  ::palm::musa::v1::WechatPayCreateRefundRequest_Amount* unsafe_arena_release_amount();

  private:
  const ::palm::musa::v1::WechatPayCreateRefundRequest_Amount& _internal_amount() const;
  ::palm::musa::v1::WechatPayCreateRefundRequest_Amount* _internal_mutable_amount();

  public:
  // @@protoc_insertion_point(class_scope:palm.musa.v1.WechatPayCreateRefundRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      79, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr out_trade_no_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::google::protobuf::internal::ArenaStringPtr notify_host_;
    ::palm::musa::v1::WechatPayCreateRefundRequest_Amount* amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_musa_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// WechatPayPrepayRequest_Amount

// int32 total = 1;
inline void WechatPayPrepayRequest_Amount::clear_total() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.total_ = 0;
}
inline ::int32_t WechatPayPrepayRequest_Amount::total() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayPrepayRequest.Amount.total)
  return _internal_total();
}
inline void WechatPayPrepayRequest_Amount::set_total(::int32_t value) {
  _internal_set_total(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayPrepayRequest.Amount.total)
}
inline ::int32_t WechatPayPrepayRequest_Amount::_internal_total() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_;
}
inline void WechatPayPrepayRequest_Amount::_internal_set_total(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_ = value;
}

// .palm.musa.v1.WechatPayCurrency currency = 2;
inline void WechatPayPrepayRequest_Amount::clear_currency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.currency_ = 0;
}
inline ::palm::musa::v1::WechatPayCurrency WechatPayPrepayRequest_Amount::currency() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayPrepayRequest.Amount.currency)
  return _internal_currency();
}
inline void WechatPayPrepayRequest_Amount::set_currency(::palm::musa::v1::WechatPayCurrency value) {
  _internal_set_currency(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayPrepayRequest.Amount.currency)
}
inline ::palm::musa::v1::WechatPayCurrency WechatPayPrepayRequest_Amount::_internal_currency() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::musa::v1::WechatPayCurrency>(_impl_.currency_);
}
inline void WechatPayPrepayRequest_Amount::_internal_set_currency(::palm::musa::v1::WechatPayCurrency value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.currency_ = value;
}

// -------------------------------------------------------------------

// WechatPayPrepayRequest

// string app_id = 1;
inline void WechatPayPrepayRequest::clear_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.ClearToEmpty();
}
inline const std::string& WechatPayPrepayRequest::app_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayPrepayRequest.app_id)
  return _internal_app_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayPrepayRequest::set_app_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayPrepayRequest.app_id)
}
inline std::string* WechatPayPrepayRequest::mutable_app_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_app_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayPrepayRequest.app_id)
  return _s;
}
inline const std::string& WechatPayPrepayRequest::_internal_app_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.app_id_.Get();
}
inline void WechatPayPrepayRequest::_internal_set_app_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(value, GetArena());
}
inline std::string* WechatPayPrepayRequest::_internal_mutable_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.app_id_.Mutable( GetArena());
}
inline std::string* WechatPayPrepayRequest::release_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayPrepayRequest.app_id)
  return _impl_.app_id_.Release();
}
inline void WechatPayPrepayRequest::set_allocated_app_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.app_id_.IsDefault()) {
          _impl_.app_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayPrepayRequest.app_id)
}

// optional string out_trade_no = 2;
inline bool WechatPayPrepayRequest::has_out_trade_no() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void WechatPayPrepayRequest::clear_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_trade_no_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& WechatPayPrepayRequest::out_trade_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayPrepayRequest.out_trade_no)
  return _internal_out_trade_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayPrepayRequest::set_out_trade_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.out_trade_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayPrepayRequest.out_trade_no)
}
inline std::string* WechatPayPrepayRequest::mutable_out_trade_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_trade_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayPrepayRequest.out_trade_no)
  return _s;
}
inline const std::string& WechatPayPrepayRequest::_internal_out_trade_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_trade_no_.Get();
}
inline void WechatPayPrepayRequest::_internal_set_out_trade_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.out_trade_no_.Set(value, GetArena());
}
inline std::string* WechatPayPrepayRequest::_internal_mutable_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.out_trade_no_.Mutable( GetArena());
}
inline std::string* WechatPayPrepayRequest::release_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayPrepayRequest.out_trade_no)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.out_trade_no_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.out_trade_no_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void WechatPayPrepayRequest::set_allocated_out_trade_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.out_trade_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_trade_no_.IsDefault()) {
          _impl_.out_trade_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayPrepayRequest.out_trade_no)
}

// optional string payer_open_id = 11;
inline bool WechatPayPrepayRequest::has_payer_open_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void WechatPayPrepayRequest::clear_payer_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.payer_open_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& WechatPayPrepayRequest::payer_open_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayPrepayRequest.payer_open_id)
  return _internal_payer_open_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayPrepayRequest::set_payer_open_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.payer_open_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayPrepayRequest.payer_open_id)
}
inline std::string* WechatPayPrepayRequest::mutable_payer_open_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payer_open_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayPrepayRequest.payer_open_id)
  return _s;
}
inline const std::string& WechatPayPrepayRequest::_internal_payer_open_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.payer_open_id_.Get();
}
inline void WechatPayPrepayRequest::_internal_set_payer_open_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.payer_open_id_.Set(value, GetArena());
}
inline std::string* WechatPayPrepayRequest::_internal_mutable_payer_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.payer_open_id_.Mutable( GetArena());
}
inline std::string* WechatPayPrepayRequest::release_payer_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayPrepayRequest.payer_open_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.payer_open_id_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.payer_open_id_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void WechatPayPrepayRequest::set_allocated_payer_open_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.payer_open_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payer_open_id_.IsDefault()) {
          _impl_.payer_open_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayPrepayRequest.payer_open_id)
}

// .palm.musa.v1.WechatPayPrepayRequest.Amount amount = 12;
inline bool WechatPayPrepayRequest::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline void WechatPayPrepayRequest::clear_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::palm::musa::v1::WechatPayPrepayRequest_Amount& WechatPayPrepayRequest::_internal_amount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::musa::v1::WechatPayPrepayRequest_Amount* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::musa::v1::WechatPayPrepayRequest_Amount&>(::palm::musa::v1::_WechatPayPrepayRequest_Amount_default_instance_);
}
inline const ::palm::musa::v1::WechatPayPrepayRequest_Amount& WechatPayPrepayRequest::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayPrepayRequest.amount)
  return _internal_amount();
}
inline void WechatPayPrepayRequest::unsafe_arena_set_allocated_amount(::palm::musa::v1::WechatPayPrepayRequest_Amount* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::palm::musa::v1::WechatPayPrepayRequest_Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.musa.v1.WechatPayPrepayRequest.amount)
}
inline ::palm::musa::v1::WechatPayPrepayRequest_Amount* WechatPayPrepayRequest::release_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::palm::musa::v1::WechatPayPrepayRequest_Amount* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::musa::v1::WechatPayPrepayRequest_Amount* WechatPayPrepayRequest::unsafe_arena_release_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayPrepayRequest.amount)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::palm::musa::v1::WechatPayPrepayRequest_Amount* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::palm::musa::v1::WechatPayPrepayRequest_Amount* WechatPayPrepayRequest::_internal_mutable_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.amount_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::musa::v1::WechatPayPrepayRequest_Amount>(GetArena());
    _impl_.amount_ = reinterpret_cast<::palm::musa::v1::WechatPayPrepayRequest_Amount*>(p);
  }
  return _impl_.amount_;
}
inline ::palm::musa::v1::WechatPayPrepayRequest_Amount* WechatPayPrepayRequest::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::musa::v1::WechatPayPrepayRequest_Amount* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayPrepayRequest.amount)
  return _msg;
}
inline void WechatPayPrepayRequest::set_allocated_amount(::palm::musa::v1::WechatPayPrepayRequest_Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::musa::v1::WechatPayPrepayRequest_Amount*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::musa::v1::WechatPayPrepayRequest_Amount*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.amount_ = reinterpret_cast<::palm::musa::v1::WechatPayPrepayRequest_Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayPrepayRequest.amount)
}

// string description = 98;
inline void WechatPayPrepayRequest::clear_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& WechatPayPrepayRequest::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayPrepayRequest.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayPrepayRequest::set_description(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayPrepayRequest.description)
}
inline std::string* WechatPayPrepayRequest::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayPrepayRequest.description)
  return _s;
}
inline const std::string& WechatPayPrepayRequest::_internal_description() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.description_.Get();
}
inline void WechatPayPrepayRequest::_internal_set_description(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.description_.Set(value, GetArena());
}
inline std::string* WechatPayPrepayRequest::_internal_mutable_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* WechatPayPrepayRequest::release_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayPrepayRequest.description)
  return _impl_.description_.Release();
}
inline void WechatPayPrepayRequest::set_allocated_description(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayPrepayRequest.description)
}

// string notify_host = 99;
inline void WechatPayPrepayRequest::clear_notify_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.notify_host_.ClearToEmpty();
}
inline const std::string& WechatPayPrepayRequest::notify_host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayPrepayRequest.notify_host)
  return _internal_notify_host();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayPrepayRequest::set_notify_host(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.notify_host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayPrepayRequest.notify_host)
}
inline std::string* WechatPayPrepayRequest::mutable_notify_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_notify_host();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayPrepayRequest.notify_host)
  return _s;
}
inline const std::string& WechatPayPrepayRequest::_internal_notify_host() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.notify_host_.Get();
}
inline void WechatPayPrepayRequest::_internal_set_notify_host(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.notify_host_.Set(value, GetArena());
}
inline std::string* WechatPayPrepayRequest::_internal_mutable_notify_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.notify_host_.Mutable( GetArena());
}
inline std::string* WechatPayPrepayRequest::release_notify_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayPrepayRequest.notify_host)
  return _impl_.notify_host_.Release();
}
inline void WechatPayPrepayRequest::set_allocated_notify_host(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.notify_host_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.notify_host_.IsDefault()) {
          _impl_.notify_host_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayPrepayRequest.notify_host)
}

// -------------------------------------------------------------------

// WechatPayCloseOrderRequest

// string out_trade_no = 1;
inline void WechatPayCloseOrderRequest::clear_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_trade_no_.ClearToEmpty();
}
inline const std::string& WechatPayCloseOrderRequest::out_trade_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayCloseOrderRequest.out_trade_no)
  return _internal_out_trade_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayCloseOrderRequest::set_out_trade_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_trade_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayCloseOrderRequest.out_trade_no)
}
inline std::string* WechatPayCloseOrderRequest::mutable_out_trade_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_trade_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayCloseOrderRequest.out_trade_no)
  return _s;
}
inline const std::string& WechatPayCloseOrderRequest::_internal_out_trade_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_trade_no_.Get();
}
inline void WechatPayCloseOrderRequest::_internal_set_out_trade_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_trade_no_.Set(value, GetArena());
}
inline std::string* WechatPayCloseOrderRequest::_internal_mutable_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_trade_no_.Mutable( GetArena());
}
inline std::string* WechatPayCloseOrderRequest::release_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayCloseOrderRequest.out_trade_no)
  return _impl_.out_trade_no_.Release();
}
inline void WechatPayCloseOrderRequest::set_allocated_out_trade_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_trade_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_trade_no_.IsDefault()) {
          _impl_.out_trade_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayCloseOrderRequest.out_trade_no)
}

// string reason = 2;
inline void WechatPayCloseOrderRequest::clear_reason() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& WechatPayCloseOrderRequest::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayCloseOrderRequest.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayCloseOrderRequest::set_reason(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayCloseOrderRequest.reason)
}
inline std::string* WechatPayCloseOrderRequest::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayCloseOrderRequest.reason)
  return _s;
}
inline const std::string& WechatPayCloseOrderRequest::_internal_reason() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.reason_.Get();
}
inline void WechatPayCloseOrderRequest::_internal_set_reason(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* WechatPayCloseOrderRequest::_internal_mutable_reason() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* WechatPayCloseOrderRequest::release_reason() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayCloseOrderRequest.reason)
  return _impl_.reason_.Release();
}
inline void WechatPayCloseOrderRequest::set_allocated_reason(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reason_.IsDefault()) {
          _impl_.reason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayCloseOrderRequest.reason)
}

// -------------------------------------------------------------------

// Error

// string code = 1;
inline void Error::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& Error::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.Error.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Error::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.Error.code)
}
inline std::string* Error::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.Error.code)
  return _s;
}
inline const std::string& Error::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void Error::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* Error::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* Error::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.Error.code)
  return _impl_.code_.Release();
}
inline void Error::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.Error.code)
}

// string message = 2;
inline void Error::clear_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& Error::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.Error.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Error::set_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.Error.message)
}
inline std::string* Error::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.Error.message)
  return _s;
}
inline const std::string& Error::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.message_.Get();
}
inline void Error::_internal_set_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(value, GetArena());
}
inline std::string* Error::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* Error::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.Error.message)
  return _impl_.message_.Release();
}
inline void Error::set_allocated_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.Error.message)
}

// -------------------------------------------------------------------

// WechatPayNativeQrCodeUrlResponse

// string url = 1;
inline void WechatPayNativeQrCodeUrlResponse::clear_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& WechatPayNativeQrCodeUrlResponse::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayNativeQrCodeUrlResponse.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayNativeQrCodeUrlResponse::set_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayNativeQrCodeUrlResponse.url)
}
inline std::string* WechatPayNativeQrCodeUrlResponse::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayNativeQrCodeUrlResponse.url)
  return _s;
}
inline const std::string& WechatPayNativeQrCodeUrlResponse::_internal_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.url_.Get();
}
inline void WechatPayNativeQrCodeUrlResponse::_internal_set_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(value, GetArena());
}
inline std::string* WechatPayNativeQrCodeUrlResponse::_internal_mutable_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* WechatPayNativeQrCodeUrlResponse::release_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayNativeQrCodeUrlResponse.url)
  return _impl_.url_.Release();
}
inline void WechatPayNativeQrCodeUrlResponse::set_allocated_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayNativeQrCodeUrlResponse.url)
}

// string out_trade_no = 2;
inline void WechatPayNativeQrCodeUrlResponse::clear_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_trade_no_.ClearToEmpty();
}
inline const std::string& WechatPayNativeQrCodeUrlResponse::out_trade_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayNativeQrCodeUrlResponse.out_trade_no)
  return _internal_out_trade_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayNativeQrCodeUrlResponse::set_out_trade_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_trade_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayNativeQrCodeUrlResponse.out_trade_no)
}
inline std::string* WechatPayNativeQrCodeUrlResponse::mutable_out_trade_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_trade_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayNativeQrCodeUrlResponse.out_trade_no)
  return _s;
}
inline const std::string& WechatPayNativeQrCodeUrlResponse::_internal_out_trade_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_trade_no_.Get();
}
inline void WechatPayNativeQrCodeUrlResponse::_internal_set_out_trade_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_trade_no_.Set(value, GetArena());
}
inline std::string* WechatPayNativeQrCodeUrlResponse::_internal_mutable_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_trade_no_.Mutable( GetArena());
}
inline std::string* WechatPayNativeQrCodeUrlResponse::release_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayNativeQrCodeUrlResponse.out_trade_no)
  return _impl_.out_trade_no_.Release();
}
inline void WechatPayNativeQrCodeUrlResponse::set_allocated_out_trade_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_trade_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_trade_no_.IsDefault()) {
          _impl_.out_trade_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayNativeQrCodeUrlResponse.out_trade_no)
}

// -------------------------------------------------------------------

// WechatPayTradeResponse

// string trade_state = 1;
inline void WechatPayTradeResponse::clear_trade_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.trade_state_.ClearToEmpty();
}
inline const std::string& WechatPayTradeResponse::trade_state() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayTradeResponse.trade_state)
  return _internal_trade_state();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayTradeResponse::set_trade_state(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.trade_state_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayTradeResponse.trade_state)
}
inline std::string* WechatPayTradeResponse::mutable_trade_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_trade_state();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayTradeResponse.trade_state)
  return _s;
}
inline const std::string& WechatPayTradeResponse::_internal_trade_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.trade_state_.Get();
}
inline void WechatPayTradeResponse::_internal_set_trade_state(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.trade_state_.Set(value, GetArena());
}
inline std::string* WechatPayTradeResponse::_internal_mutable_trade_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.trade_state_.Mutable( GetArena());
}
inline std::string* WechatPayTradeResponse::release_trade_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayTradeResponse.trade_state)
  return _impl_.trade_state_.Release();
}
inline void WechatPayTradeResponse::set_allocated_trade_state(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.trade_state_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.trade_state_.IsDefault()) {
          _impl_.trade_state_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayTradeResponse.trade_state)
}

// string trade_state_desc = 2;
inline void WechatPayTradeResponse::clear_trade_state_desc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.trade_state_desc_.ClearToEmpty();
}
inline const std::string& WechatPayTradeResponse::trade_state_desc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayTradeResponse.trade_state_desc)
  return _internal_trade_state_desc();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayTradeResponse::set_trade_state_desc(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.trade_state_desc_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayTradeResponse.trade_state_desc)
}
inline std::string* WechatPayTradeResponse::mutable_trade_state_desc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_trade_state_desc();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayTradeResponse.trade_state_desc)
  return _s;
}
inline const std::string& WechatPayTradeResponse::_internal_trade_state_desc() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.trade_state_desc_.Get();
}
inline void WechatPayTradeResponse::_internal_set_trade_state_desc(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.trade_state_desc_.Set(value, GetArena());
}
inline std::string* WechatPayTradeResponse::_internal_mutable_trade_state_desc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.trade_state_desc_.Mutable( GetArena());
}
inline std::string* WechatPayTradeResponse::release_trade_state_desc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayTradeResponse.trade_state_desc)
  return _impl_.trade_state_desc_.Release();
}
inline void WechatPayTradeResponse::set_allocated_trade_state_desc(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.trade_state_desc_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.trade_state_desc_.IsDefault()) {
          _impl_.trade_state_desc_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayTradeResponse.trade_state_desc)
}

// -------------------------------------------------------------------

// WechatPayQueryOrderByIdRequest

// string transaction_id = 1;
inline void WechatPayQueryOrderByIdRequest::clear_transaction_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.transaction_id_.ClearToEmpty();
}
inline const std::string& WechatPayQueryOrderByIdRequest::transaction_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryOrderByIdRequest.transaction_id)
  return _internal_transaction_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryOrderByIdRequest::set_transaction_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.transaction_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryOrderByIdRequest.transaction_id)
}
inline std::string* WechatPayQueryOrderByIdRequest::mutable_transaction_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_transaction_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryOrderByIdRequest.transaction_id)
  return _s;
}
inline const std::string& WechatPayQueryOrderByIdRequest::_internal_transaction_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.transaction_id_.Get();
}
inline void WechatPayQueryOrderByIdRequest::_internal_set_transaction_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.transaction_id_.Set(value, GetArena());
}
inline std::string* WechatPayQueryOrderByIdRequest::_internal_mutable_transaction_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.transaction_id_.Mutable( GetArena());
}
inline std::string* WechatPayQueryOrderByIdRequest::release_transaction_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryOrderByIdRequest.transaction_id)
  return _impl_.transaction_id_.Release();
}
inline void WechatPayQueryOrderByIdRequest::set_allocated_transaction_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.transaction_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.transaction_id_.IsDefault()) {
          _impl_.transaction_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryOrderByIdRequest.transaction_id)
}

// -------------------------------------------------------------------

// WechatPayQueryOrderByOutTradeNoRequest

// string out_trade_no = 1;
inline void WechatPayQueryOrderByOutTradeNoRequest::clear_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_trade_no_.ClearToEmpty();
}
inline const std::string& WechatPayQueryOrderByOutTradeNoRequest::out_trade_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest.out_trade_no)
  return _internal_out_trade_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryOrderByOutTradeNoRequest::set_out_trade_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_trade_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest.out_trade_no)
}
inline std::string* WechatPayQueryOrderByOutTradeNoRequest::mutable_out_trade_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_trade_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest.out_trade_no)
  return _s;
}
inline const std::string& WechatPayQueryOrderByOutTradeNoRequest::_internal_out_trade_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_trade_no_.Get();
}
inline void WechatPayQueryOrderByOutTradeNoRequest::_internal_set_out_trade_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_trade_no_.Set(value, GetArena());
}
inline std::string* WechatPayQueryOrderByOutTradeNoRequest::_internal_mutable_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_trade_no_.Mutable( GetArena());
}
inline std::string* WechatPayQueryOrderByOutTradeNoRequest::release_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest.out_trade_no)
  return _impl_.out_trade_no_.Release();
}
inline void WechatPayQueryOrderByOutTradeNoRequest::set_allocated_out_trade_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_trade_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_trade_no_.IsDefault()) {
          _impl_.out_trade_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryOrderByOutTradeNoRequest.out_trade_no)
}

// -------------------------------------------------------------------

// WechatPayJsapiPrepayIdResponse

// string app_id = 1;
inline void WechatPayJsapiPrepayIdResponse::clear_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.ClearToEmpty();
}
inline const std::string& WechatPayJsapiPrepayIdResponse::app_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayJsapiPrepayIdResponse.app_id)
  return _internal_app_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayJsapiPrepayIdResponse::set_app_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayJsapiPrepayIdResponse.app_id)
}
inline std::string* WechatPayJsapiPrepayIdResponse::mutable_app_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_app_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayJsapiPrepayIdResponse.app_id)
  return _s;
}
inline const std::string& WechatPayJsapiPrepayIdResponse::_internal_app_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.app_id_.Get();
}
inline void WechatPayJsapiPrepayIdResponse::_internal_set_app_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(value, GetArena());
}
inline std::string* WechatPayJsapiPrepayIdResponse::_internal_mutable_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.app_id_.Mutable( GetArena());
}
inline std::string* WechatPayJsapiPrepayIdResponse::release_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayJsapiPrepayIdResponse.app_id)
  return _impl_.app_id_.Release();
}
inline void WechatPayJsapiPrepayIdResponse::set_allocated_app_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.app_id_.IsDefault()) {
          _impl_.app_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayJsapiPrepayIdResponse.app_id)
}

// string time_stamp = 2;
inline void WechatPayJsapiPrepayIdResponse::clear_time_stamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_stamp_.ClearToEmpty();
}
inline const std::string& WechatPayJsapiPrepayIdResponse::time_stamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayJsapiPrepayIdResponse.time_stamp)
  return _internal_time_stamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayJsapiPrepayIdResponse::set_time_stamp(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.time_stamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayJsapiPrepayIdResponse.time_stamp)
}
inline std::string* WechatPayJsapiPrepayIdResponse::mutable_time_stamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_time_stamp();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayJsapiPrepayIdResponse.time_stamp)
  return _s;
}
inline const std::string& WechatPayJsapiPrepayIdResponse::_internal_time_stamp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_stamp_.Get();
}
inline void WechatPayJsapiPrepayIdResponse::_internal_set_time_stamp(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.time_stamp_.Set(value, GetArena());
}
inline std::string* WechatPayJsapiPrepayIdResponse::_internal_mutable_time_stamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.time_stamp_.Mutable( GetArena());
}
inline std::string* WechatPayJsapiPrepayIdResponse::release_time_stamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayJsapiPrepayIdResponse.time_stamp)
  return _impl_.time_stamp_.Release();
}
inline void WechatPayJsapiPrepayIdResponse::set_allocated_time_stamp(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_stamp_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.time_stamp_.IsDefault()) {
          _impl_.time_stamp_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayJsapiPrepayIdResponse.time_stamp)
}

// string nonce_str = 3;
inline void WechatPayJsapiPrepayIdResponse::clear_nonce_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nonce_str_.ClearToEmpty();
}
inline const std::string& WechatPayJsapiPrepayIdResponse::nonce_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayJsapiPrepayIdResponse.nonce_str)
  return _internal_nonce_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayJsapiPrepayIdResponse::set_nonce_str(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nonce_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayJsapiPrepayIdResponse.nonce_str)
}
inline std::string* WechatPayJsapiPrepayIdResponse::mutable_nonce_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nonce_str();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayJsapiPrepayIdResponse.nonce_str)
  return _s;
}
inline const std::string& WechatPayJsapiPrepayIdResponse::_internal_nonce_str() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nonce_str_.Get();
}
inline void WechatPayJsapiPrepayIdResponse::_internal_set_nonce_str(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nonce_str_.Set(value, GetArena());
}
inline std::string* WechatPayJsapiPrepayIdResponse::_internal_mutable_nonce_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.nonce_str_.Mutable( GetArena());
}
inline std::string* WechatPayJsapiPrepayIdResponse::release_nonce_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayJsapiPrepayIdResponse.nonce_str)
  return _impl_.nonce_str_.Release();
}
inline void WechatPayJsapiPrepayIdResponse::set_allocated_nonce_str(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nonce_str_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nonce_str_.IsDefault()) {
          _impl_.nonce_str_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayJsapiPrepayIdResponse.nonce_str)
}

// string package = 4;
inline void WechatPayJsapiPrepayIdResponse::clear_package() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.package_.ClearToEmpty();
}
inline const std::string& WechatPayJsapiPrepayIdResponse::package() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayJsapiPrepayIdResponse.package)
  return _internal_package();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayJsapiPrepayIdResponse::set_package(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.package_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayJsapiPrepayIdResponse.package)
}
inline std::string* WechatPayJsapiPrepayIdResponse::mutable_package() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_package();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayJsapiPrepayIdResponse.package)
  return _s;
}
inline const std::string& WechatPayJsapiPrepayIdResponse::_internal_package() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.package_.Get();
}
inline void WechatPayJsapiPrepayIdResponse::_internal_set_package(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.package_.Set(value, GetArena());
}
inline std::string* WechatPayJsapiPrepayIdResponse::_internal_mutable_package() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.package_.Mutable( GetArena());
}
inline std::string* WechatPayJsapiPrepayIdResponse::release_package() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayJsapiPrepayIdResponse.package)
  return _impl_.package_.Release();
}
inline void WechatPayJsapiPrepayIdResponse::set_allocated_package(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.package_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.package_.IsDefault()) {
          _impl_.package_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayJsapiPrepayIdResponse.package)
}

// string sign_type = 5;
inline void WechatPayJsapiPrepayIdResponse::clear_sign_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sign_type_.ClearToEmpty();
}
inline const std::string& WechatPayJsapiPrepayIdResponse::sign_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayJsapiPrepayIdResponse.sign_type)
  return _internal_sign_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayJsapiPrepayIdResponse::set_sign_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sign_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayJsapiPrepayIdResponse.sign_type)
}
inline std::string* WechatPayJsapiPrepayIdResponse::mutable_sign_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sign_type();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayJsapiPrepayIdResponse.sign_type)
  return _s;
}
inline const std::string& WechatPayJsapiPrepayIdResponse::_internal_sign_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sign_type_.Get();
}
inline void WechatPayJsapiPrepayIdResponse::_internal_set_sign_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sign_type_.Set(value, GetArena());
}
inline std::string* WechatPayJsapiPrepayIdResponse::_internal_mutable_sign_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.sign_type_.Mutable( GetArena());
}
inline std::string* WechatPayJsapiPrepayIdResponse::release_sign_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayJsapiPrepayIdResponse.sign_type)
  return _impl_.sign_type_.Release();
}
inline void WechatPayJsapiPrepayIdResponse::set_allocated_sign_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sign_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sign_type_.IsDefault()) {
          _impl_.sign_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayJsapiPrepayIdResponse.sign_type)
}

// string pay_sign = 6;
inline void WechatPayJsapiPrepayIdResponse::clear_pay_sign() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pay_sign_.ClearToEmpty();
}
inline const std::string& WechatPayJsapiPrepayIdResponse::pay_sign() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayJsapiPrepayIdResponse.pay_sign)
  return _internal_pay_sign();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayJsapiPrepayIdResponse::set_pay_sign(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pay_sign_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayJsapiPrepayIdResponse.pay_sign)
}
inline std::string* WechatPayJsapiPrepayIdResponse::mutable_pay_sign() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pay_sign();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayJsapiPrepayIdResponse.pay_sign)
  return _s;
}
inline const std::string& WechatPayJsapiPrepayIdResponse::_internal_pay_sign() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pay_sign_.Get();
}
inline void WechatPayJsapiPrepayIdResponse::_internal_set_pay_sign(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pay_sign_.Set(value, GetArena());
}
inline std::string* WechatPayJsapiPrepayIdResponse::_internal_mutable_pay_sign() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.pay_sign_.Mutable( GetArena());
}
inline std::string* WechatPayJsapiPrepayIdResponse::release_pay_sign() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayJsapiPrepayIdResponse.pay_sign)
  return _impl_.pay_sign_.Release();
}
inline void WechatPayJsapiPrepayIdResponse::set_allocated_pay_sign(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pay_sign_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pay_sign_.IsDefault()) {
          _impl_.pay_sign_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayJsapiPrepayIdResponse.pay_sign)
}

// string out_trade_no = 11;
inline void WechatPayJsapiPrepayIdResponse::clear_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_trade_no_.ClearToEmpty();
}
inline const std::string& WechatPayJsapiPrepayIdResponse::out_trade_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayJsapiPrepayIdResponse.out_trade_no)
  return _internal_out_trade_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayJsapiPrepayIdResponse::set_out_trade_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_trade_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayJsapiPrepayIdResponse.out_trade_no)
}
inline std::string* WechatPayJsapiPrepayIdResponse::mutable_out_trade_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_trade_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayJsapiPrepayIdResponse.out_trade_no)
  return _s;
}
inline const std::string& WechatPayJsapiPrepayIdResponse::_internal_out_trade_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_trade_no_.Get();
}
inline void WechatPayJsapiPrepayIdResponse::_internal_set_out_trade_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_trade_no_.Set(value, GetArena());
}
inline std::string* WechatPayJsapiPrepayIdResponse::_internal_mutable_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_trade_no_.Mutable( GetArena());
}
inline std::string* WechatPayJsapiPrepayIdResponse::release_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayJsapiPrepayIdResponse.out_trade_no)
  return _impl_.out_trade_no_.Release();
}
inline void WechatPayJsapiPrepayIdResponse::set_allocated_out_trade_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_trade_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_trade_no_.IsDefault()) {
          _impl_.out_trade_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayJsapiPrepayIdResponse.out_trade_no)
}

// -------------------------------------------------------------------

// WechatPayBillDate

// int32 year = 1;
inline void WechatPayBillDate::clear_year() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.year_ = 0;
}
inline ::int32_t WechatPayBillDate::year() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayBillDate.year)
  return _internal_year();
}
inline void WechatPayBillDate::set_year(::int32_t value) {
  _internal_set_year(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayBillDate.year)
}
inline ::int32_t WechatPayBillDate::_internal_year() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.year_;
}
inline void WechatPayBillDate::_internal_set_year(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.year_ = value;
}

// int32 month = 2;
inline void WechatPayBillDate::clear_month() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.month_ = 0;
}
inline ::int32_t WechatPayBillDate::month() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayBillDate.month)
  return _internal_month();
}
inline void WechatPayBillDate::set_month(::int32_t value) {
  _internal_set_month(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayBillDate.month)
}
inline ::int32_t WechatPayBillDate::_internal_month() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.month_;
}
inline void WechatPayBillDate::_internal_set_month(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.month_ = value;
}

// int32 day = 3;
inline void WechatPayBillDate::clear_day() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.day_ = 0;
}
inline ::int32_t WechatPayBillDate::day() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayBillDate.day)
  return _internal_day();
}
inline void WechatPayBillDate::set_day(::int32_t value) {
  _internal_set_day(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayBillDate.day)
}
inline ::int32_t WechatPayBillDate::_internal_day() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.day_;
}
inline void WechatPayBillDate::_internal_set_day(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.day_ = value;
}

// -------------------------------------------------------------------

// WechatPayBillResponse

// bytes content = 1;
inline void WechatPayBillResponse::clear_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_.ClearToEmpty();
}
inline const std::string& WechatPayBillResponse::content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayBillResponse.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayBillResponse::set_content(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayBillResponse.content)
}
inline std::string* WechatPayBillResponse::mutable_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayBillResponse.content)
  return _s;
}
inline const std::string& WechatPayBillResponse::_internal_content() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.content_.Get();
}
inline void WechatPayBillResponse::_internal_set_content(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_.Set(value, GetArena());
}
inline std::string* WechatPayBillResponse::_internal_mutable_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.content_.Mutable( GetArena());
}
inline std::string* WechatPayBillResponse::release_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayBillResponse.content)
  return _impl_.content_.Release();
}
inline void WechatPayBillResponse::set_allocated_content(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.content_.IsDefault()) {
          _impl_.content_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayBillResponse.content)
}

// -------------------------------------------------------------------

// WechatPayTradeBillRequest

// .palm.musa.v1.WechatPayBillDate bill_date = 1;
inline bool WechatPayTradeBillRequest::has_bill_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bill_date_ != nullptr);
  return value;
}
inline void WechatPayTradeBillRequest::clear_bill_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.bill_date_ != nullptr) _impl_.bill_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::musa::v1::WechatPayBillDate& WechatPayTradeBillRequest::_internal_bill_date() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::musa::v1::WechatPayBillDate* p = _impl_.bill_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::musa::v1::WechatPayBillDate&>(::palm::musa::v1::_WechatPayBillDate_default_instance_);
}
inline const ::palm::musa::v1::WechatPayBillDate& WechatPayTradeBillRequest::bill_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayTradeBillRequest.bill_date)
  return _internal_bill_date();
}
inline void WechatPayTradeBillRequest::unsafe_arena_set_allocated_bill_date(::palm::musa::v1::WechatPayBillDate* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bill_date_);
  }
  _impl_.bill_date_ = reinterpret_cast<::palm::musa::v1::WechatPayBillDate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.musa.v1.WechatPayTradeBillRequest.bill_date)
}
inline ::palm::musa::v1::WechatPayBillDate* WechatPayTradeBillRequest::release_bill_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::musa::v1::WechatPayBillDate* released = _impl_.bill_date_;
  _impl_.bill_date_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::musa::v1::WechatPayBillDate* WechatPayTradeBillRequest::unsafe_arena_release_bill_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayTradeBillRequest.bill_date)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::musa::v1::WechatPayBillDate* temp = _impl_.bill_date_;
  _impl_.bill_date_ = nullptr;
  return temp;
}
inline ::palm::musa::v1::WechatPayBillDate* WechatPayTradeBillRequest::_internal_mutable_bill_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.bill_date_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::musa::v1::WechatPayBillDate>(GetArena());
    _impl_.bill_date_ = reinterpret_cast<::palm::musa::v1::WechatPayBillDate*>(p);
  }
  return _impl_.bill_date_;
}
inline ::palm::musa::v1::WechatPayBillDate* WechatPayTradeBillRequest::mutable_bill_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::musa::v1::WechatPayBillDate* _msg = _internal_mutable_bill_date();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayTradeBillRequest.bill_date)
  return _msg;
}
inline void WechatPayTradeBillRequest::set_allocated_bill_date(::palm::musa::v1::WechatPayBillDate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::musa::v1::WechatPayBillDate*>(_impl_.bill_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::musa::v1::WechatPayBillDate*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bill_date_ = reinterpret_cast<::palm::musa::v1::WechatPayBillDate*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayTradeBillRequest.bill_date)
}

// .palm.musa.v1.WechatPayTradeBillRequest.BillType bill_type = 2;
inline void WechatPayTradeBillRequest::clear_bill_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bill_type_ = 0;
}
inline ::palm::musa::v1::WechatPayTradeBillRequest_BillType WechatPayTradeBillRequest::bill_type() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayTradeBillRequest.bill_type)
  return _internal_bill_type();
}
inline void WechatPayTradeBillRequest::set_bill_type(::palm::musa::v1::WechatPayTradeBillRequest_BillType value) {
  _internal_set_bill_type(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayTradeBillRequest.bill_type)
}
inline ::palm::musa::v1::WechatPayTradeBillRequest_BillType WechatPayTradeBillRequest::_internal_bill_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::musa::v1::WechatPayTradeBillRequest_BillType>(_impl_.bill_type_);
}
inline void WechatPayTradeBillRequest::_internal_set_bill_type(::palm::musa::v1::WechatPayTradeBillRequest_BillType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bill_type_ = value;
}

// -------------------------------------------------------------------

// WechatPayFundFlowBillRequest

// .palm.musa.v1.WechatPayBillDate bill_date = 1;
inline bool WechatPayFundFlowBillRequest::has_bill_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bill_date_ != nullptr);
  return value;
}
inline void WechatPayFundFlowBillRequest::clear_bill_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.bill_date_ != nullptr) _impl_.bill_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::musa::v1::WechatPayBillDate& WechatPayFundFlowBillRequest::_internal_bill_date() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::musa::v1::WechatPayBillDate* p = _impl_.bill_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::musa::v1::WechatPayBillDate&>(::palm::musa::v1::_WechatPayBillDate_default_instance_);
}
inline const ::palm::musa::v1::WechatPayBillDate& WechatPayFundFlowBillRequest::bill_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayFundFlowBillRequest.bill_date)
  return _internal_bill_date();
}
inline void WechatPayFundFlowBillRequest::unsafe_arena_set_allocated_bill_date(::palm::musa::v1::WechatPayBillDate* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bill_date_);
  }
  _impl_.bill_date_ = reinterpret_cast<::palm::musa::v1::WechatPayBillDate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.musa.v1.WechatPayFundFlowBillRequest.bill_date)
}
inline ::palm::musa::v1::WechatPayBillDate* WechatPayFundFlowBillRequest::release_bill_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::musa::v1::WechatPayBillDate* released = _impl_.bill_date_;
  _impl_.bill_date_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::musa::v1::WechatPayBillDate* WechatPayFundFlowBillRequest::unsafe_arena_release_bill_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayFundFlowBillRequest.bill_date)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::musa::v1::WechatPayBillDate* temp = _impl_.bill_date_;
  _impl_.bill_date_ = nullptr;
  return temp;
}
inline ::palm::musa::v1::WechatPayBillDate* WechatPayFundFlowBillRequest::_internal_mutable_bill_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.bill_date_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::musa::v1::WechatPayBillDate>(GetArena());
    _impl_.bill_date_ = reinterpret_cast<::palm::musa::v1::WechatPayBillDate*>(p);
  }
  return _impl_.bill_date_;
}
inline ::palm::musa::v1::WechatPayBillDate* WechatPayFundFlowBillRequest::mutable_bill_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::musa::v1::WechatPayBillDate* _msg = _internal_mutable_bill_date();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayFundFlowBillRequest.bill_date)
  return _msg;
}
inline void WechatPayFundFlowBillRequest::set_allocated_bill_date(::palm::musa::v1::WechatPayBillDate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::musa::v1::WechatPayBillDate*>(_impl_.bill_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::musa::v1::WechatPayBillDate*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bill_date_ = reinterpret_cast<::palm::musa::v1::WechatPayBillDate*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayFundFlowBillRequest.bill_date)
}

// .palm.musa.v1.WechatPayFundFlowBillRequest.AccountType account_type = 2;
inline void WechatPayFundFlowBillRequest::clear_account_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.account_type_ = 0;
}
inline ::palm::musa::v1::WechatPayFundFlowBillRequest_AccountType WechatPayFundFlowBillRequest::account_type() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayFundFlowBillRequest.account_type)
  return _internal_account_type();
}
inline void WechatPayFundFlowBillRequest::set_account_type(::palm::musa::v1::WechatPayFundFlowBillRequest_AccountType value) {
  _internal_set_account_type(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayFundFlowBillRequest.account_type)
}
inline ::palm::musa::v1::WechatPayFundFlowBillRequest_AccountType WechatPayFundFlowBillRequest::_internal_account_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::musa::v1::WechatPayFundFlowBillRequest_AccountType>(_impl_.account_type_);
}
inline void WechatPayFundFlowBillRequest::_internal_set_account_type(::palm::musa::v1::WechatPayFundFlowBillRequest_AccountType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.account_type_ = value;
}

// -------------------------------------------------------------------

// WechatPayCreateRefundRequest_Amount

// int32 total = 1;
inline void WechatPayCreateRefundRequest_Amount::clear_total() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.total_ = 0;
}
inline ::int32_t WechatPayCreateRefundRequest_Amount::total() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayCreateRefundRequest.Amount.total)
  return _internal_total();
}
inline void WechatPayCreateRefundRequest_Amount::set_total(::int32_t value) {
  _internal_set_total(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayCreateRefundRequest.Amount.total)
}
inline ::int32_t WechatPayCreateRefundRequest_Amount::_internal_total() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_;
}
inline void WechatPayCreateRefundRequest_Amount::_internal_set_total(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_ = value;
}

// int32 refund = 2;
inline void WechatPayCreateRefundRequest_Amount::clear_refund() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.refund_ = 0;
}
inline ::int32_t WechatPayCreateRefundRequest_Amount::refund() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayCreateRefundRequest.Amount.refund)
  return _internal_refund();
}
inline void WechatPayCreateRefundRequest_Amount::set_refund(::int32_t value) {
  _internal_set_refund(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayCreateRefundRequest.Amount.refund)
}
inline ::int32_t WechatPayCreateRefundRequest_Amount::_internal_refund() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.refund_;
}
inline void WechatPayCreateRefundRequest_Amount::_internal_set_refund(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.refund_ = value;
}

// .palm.musa.v1.WechatPayCurrency currency = 3;
inline void WechatPayCreateRefundRequest_Amount::clear_currency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.currency_ = 0;
}
inline ::palm::musa::v1::WechatPayCurrency WechatPayCreateRefundRequest_Amount::currency() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayCreateRefundRequest.Amount.currency)
  return _internal_currency();
}
inline void WechatPayCreateRefundRequest_Amount::set_currency(::palm::musa::v1::WechatPayCurrency value) {
  _internal_set_currency(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayCreateRefundRequest.Amount.currency)
}
inline ::palm::musa::v1::WechatPayCurrency WechatPayCreateRefundRequest_Amount::_internal_currency() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::musa::v1::WechatPayCurrency>(_impl_.currency_);
}
inline void WechatPayCreateRefundRequest_Amount::_internal_set_currency(::palm::musa::v1::WechatPayCurrency value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.currency_ = value;
}

// -------------------------------------------------------------------

// WechatPayCreateRefundRequest

// string out_trade_no = 1;
inline void WechatPayCreateRefundRequest::clear_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_trade_no_.ClearToEmpty();
}
inline const std::string& WechatPayCreateRefundRequest::out_trade_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayCreateRefundRequest.out_trade_no)
  return _internal_out_trade_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayCreateRefundRequest::set_out_trade_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_trade_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayCreateRefundRequest.out_trade_no)
}
inline std::string* WechatPayCreateRefundRequest::mutable_out_trade_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_trade_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayCreateRefundRequest.out_trade_no)
  return _s;
}
inline const std::string& WechatPayCreateRefundRequest::_internal_out_trade_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_trade_no_.Get();
}
inline void WechatPayCreateRefundRequest::_internal_set_out_trade_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_trade_no_.Set(value, GetArena());
}
inline std::string* WechatPayCreateRefundRequest::_internal_mutable_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_trade_no_.Mutable( GetArena());
}
inline std::string* WechatPayCreateRefundRequest::release_out_trade_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayCreateRefundRequest.out_trade_no)
  return _impl_.out_trade_no_.Release();
}
inline void WechatPayCreateRefundRequest::set_allocated_out_trade_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_trade_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_trade_no_.IsDefault()) {
          _impl_.out_trade_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayCreateRefundRequest.out_trade_no)
}

// string reason = 2;
inline void WechatPayCreateRefundRequest::clear_reason() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& WechatPayCreateRefundRequest::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayCreateRefundRequest.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayCreateRefundRequest::set_reason(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayCreateRefundRequest.reason)
}
inline std::string* WechatPayCreateRefundRequest::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayCreateRefundRequest.reason)
  return _s;
}
inline const std::string& WechatPayCreateRefundRequest::_internal_reason() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.reason_.Get();
}
inline void WechatPayCreateRefundRequest::_internal_set_reason(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* WechatPayCreateRefundRequest::_internal_mutable_reason() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* WechatPayCreateRefundRequest::release_reason() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayCreateRefundRequest.reason)
  return _impl_.reason_.Release();
}
inline void WechatPayCreateRefundRequest::set_allocated_reason(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reason_.IsDefault()) {
          _impl_.reason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayCreateRefundRequest.reason)
}

// .palm.musa.v1.WechatPayCreateRefundRequest.Amount amount = 3;
inline bool WechatPayCreateRefundRequest::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline void WechatPayCreateRefundRequest::clear_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::musa::v1::WechatPayCreateRefundRequest_Amount& WechatPayCreateRefundRequest::_internal_amount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::musa::v1::WechatPayCreateRefundRequest_Amount* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::musa::v1::WechatPayCreateRefundRequest_Amount&>(::palm::musa::v1::_WechatPayCreateRefundRequest_Amount_default_instance_);
}
inline const ::palm::musa::v1::WechatPayCreateRefundRequest_Amount& WechatPayCreateRefundRequest::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayCreateRefundRequest.amount)
  return _internal_amount();
}
inline void WechatPayCreateRefundRequest::unsafe_arena_set_allocated_amount(::palm::musa::v1::WechatPayCreateRefundRequest_Amount* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::palm::musa::v1::WechatPayCreateRefundRequest_Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.musa.v1.WechatPayCreateRefundRequest.amount)
}
inline ::palm::musa::v1::WechatPayCreateRefundRequest_Amount* WechatPayCreateRefundRequest::release_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::musa::v1::WechatPayCreateRefundRequest_Amount* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::musa::v1::WechatPayCreateRefundRequest_Amount* WechatPayCreateRefundRequest::unsafe_arena_release_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayCreateRefundRequest.amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::musa::v1::WechatPayCreateRefundRequest_Amount* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::palm::musa::v1::WechatPayCreateRefundRequest_Amount* WechatPayCreateRefundRequest::_internal_mutable_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.amount_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::musa::v1::WechatPayCreateRefundRequest_Amount>(GetArena());
    _impl_.amount_ = reinterpret_cast<::palm::musa::v1::WechatPayCreateRefundRequest_Amount*>(p);
  }
  return _impl_.amount_;
}
inline ::palm::musa::v1::WechatPayCreateRefundRequest_Amount* WechatPayCreateRefundRequest::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::musa::v1::WechatPayCreateRefundRequest_Amount* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayCreateRefundRequest.amount)
  return _msg;
}
inline void WechatPayCreateRefundRequest::set_allocated_amount(::palm::musa::v1::WechatPayCreateRefundRequest_Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::musa::v1::WechatPayCreateRefundRequest_Amount*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::musa::v1::WechatPayCreateRefundRequest_Amount*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.amount_ = reinterpret_cast<::palm::musa::v1::WechatPayCreateRefundRequest_Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayCreateRefundRequest.amount)
}

// string notify_host = 11;
inline void WechatPayCreateRefundRequest::clear_notify_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.notify_host_.ClearToEmpty();
}
inline const std::string& WechatPayCreateRefundRequest::notify_host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayCreateRefundRequest.notify_host)
  return _internal_notify_host();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayCreateRefundRequest::set_notify_host(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.notify_host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayCreateRefundRequest.notify_host)
}
inline std::string* WechatPayCreateRefundRequest::mutable_notify_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_notify_host();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayCreateRefundRequest.notify_host)
  return _s;
}
inline const std::string& WechatPayCreateRefundRequest::_internal_notify_host() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.notify_host_.Get();
}
inline void WechatPayCreateRefundRequest::_internal_set_notify_host(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.notify_host_.Set(value, GetArena());
}
inline std::string* WechatPayCreateRefundRequest::_internal_mutable_notify_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.notify_host_.Mutable( GetArena());
}
inline std::string* WechatPayCreateRefundRequest::release_notify_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayCreateRefundRequest.notify_host)
  return _impl_.notify_host_.Release();
}
inline void WechatPayCreateRefundRequest::set_allocated_notify_host(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.notify_host_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.notify_host_.IsDefault()) {
          _impl_.notify_host_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayCreateRefundRequest.notify_host)
}

// -------------------------------------------------------------------

// WechatPayQueryRefundRequest

// string out_refund_no = 1;
inline void WechatPayQueryRefundRequest::clear_out_refund_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_refund_no_.ClearToEmpty();
}
inline const std::string& WechatPayQueryRefundRequest::out_refund_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryRefundRequest.out_refund_no)
  return _internal_out_refund_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryRefundRequest::set_out_refund_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_refund_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryRefundRequest.out_refund_no)
}
inline std::string* WechatPayQueryRefundRequest::mutable_out_refund_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_refund_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryRefundRequest.out_refund_no)
  return _s;
}
inline const std::string& WechatPayQueryRefundRequest::_internal_out_refund_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_refund_no_.Get();
}
inline void WechatPayQueryRefundRequest::_internal_set_out_refund_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_refund_no_.Set(value, GetArena());
}
inline std::string* WechatPayQueryRefundRequest::_internal_mutable_out_refund_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_refund_no_.Mutable( GetArena());
}
inline std::string* WechatPayQueryRefundRequest::release_out_refund_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryRefundRequest.out_refund_no)
  return _impl_.out_refund_no_.Release();
}
inline void WechatPayQueryRefundRequest::set_allocated_out_refund_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_refund_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_refund_no_.IsDefault()) {
          _impl_.out_refund_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryRefundRequest.out_refund_no)
}

// -------------------------------------------------------------------

// WechatPayRefundResponse

// string out_refund_no = 1;
inline void WechatPayRefundResponse::clear_out_refund_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_refund_no_.ClearToEmpty();
}
inline const std::string& WechatPayRefundResponse::out_refund_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayRefundResponse.out_refund_no)
  return _internal_out_refund_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayRefundResponse::set_out_refund_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_refund_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayRefundResponse.out_refund_no)
}
inline std::string* WechatPayRefundResponse::mutable_out_refund_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_refund_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayRefundResponse.out_refund_no)
  return _s;
}
inline const std::string& WechatPayRefundResponse::_internal_out_refund_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_refund_no_.Get();
}
inline void WechatPayRefundResponse::_internal_set_out_refund_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_refund_no_.Set(value, GetArena());
}
inline std::string* WechatPayRefundResponse::_internal_mutable_out_refund_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_refund_no_.Mutable( GetArena());
}
inline std::string* WechatPayRefundResponse::release_out_refund_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayRefundResponse.out_refund_no)
  return _impl_.out_refund_no_.Release();
}
inline void WechatPayRefundResponse::set_allocated_out_refund_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_refund_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_refund_no_.IsDefault()) {
          _impl_.out_refund_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayRefundResponse.out_refund_no)
}

// string channel = 2;
inline void WechatPayRefundResponse::clear_channel() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.channel_.ClearToEmpty();
}
inline const std::string& WechatPayRefundResponse::channel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayRefundResponse.channel)
  return _internal_channel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayRefundResponse::set_channel(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.channel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayRefundResponse.channel)
}
inline std::string* WechatPayRefundResponse::mutable_channel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_channel();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayRefundResponse.channel)
  return _s;
}
inline const std::string& WechatPayRefundResponse::_internal_channel() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.channel_.Get();
}
inline void WechatPayRefundResponse::_internal_set_channel(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.channel_.Set(value, GetArena());
}
inline std::string* WechatPayRefundResponse::_internal_mutable_channel() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.channel_.Mutable( GetArena());
}
inline std::string* WechatPayRefundResponse::release_channel() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayRefundResponse.channel)
  return _impl_.channel_.Release();
}
inline void WechatPayRefundResponse::set_allocated_channel(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.channel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.channel_.IsDefault()) {
          _impl_.channel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayRefundResponse.channel)
}

// string status = 3;
inline void WechatPayRefundResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& WechatPayRefundResponse::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayRefundResponse.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayRefundResponse::set_status(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayRefundResponse.status)
}
inline std::string* WechatPayRefundResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayRefundResponse.status)
  return _s;
}
inline const std::string& WechatPayRefundResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_.Get();
}
inline void WechatPayRefundResponse::_internal_set_status(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_.Set(value, GetArena());
}
inline std::string* WechatPayRefundResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* WechatPayRefundResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayRefundResponse.status)
  return _impl_.status_.Release();
}
inline void WechatPayRefundResponse::set_allocated_status(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.status_.IsDefault()) {
          _impl_.status_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayRefundResponse.status)
}

// string user_received_account = 4;
inline void WechatPayRefundResponse::clear_user_received_account() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_received_account_.ClearToEmpty();
}
inline const std::string& WechatPayRefundResponse::user_received_account() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayRefundResponse.user_received_account)
  return _internal_user_received_account();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayRefundResponse::set_user_received_account(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_received_account_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayRefundResponse.user_received_account)
}
inline std::string* WechatPayRefundResponse::mutable_user_received_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user_received_account();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayRefundResponse.user_received_account)
  return _s;
}
inline const std::string& WechatPayRefundResponse::_internal_user_received_account() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_received_account_.Get();
}
inline void WechatPayRefundResponse::_internal_set_user_received_account(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_received_account_.Set(value, GetArena());
}
inline std::string* WechatPayRefundResponse::_internal_mutable_user_received_account() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.user_received_account_.Mutable( GetArena());
}
inline std::string* WechatPayRefundResponse::release_user_received_account() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayRefundResponse.user_received_account)
  return _impl_.user_received_account_.Release();
}
inline void WechatPayRefundResponse::set_allocated_user_received_account(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_received_account_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.user_received_account_.IsDefault()) {
          _impl_.user_received_account_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayRefundResponse.user_received_account)
}

// string create_time = 99;
inline void WechatPayRefundResponse::clear_create_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.create_time_.ClearToEmpty();
}
inline const std::string& WechatPayRefundResponse::create_time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayRefundResponse.create_time)
  return _internal_create_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayRefundResponse::set_create_time(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.create_time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayRefundResponse.create_time)
}
inline std::string* WechatPayRefundResponse::mutable_create_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_create_time();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayRefundResponse.create_time)
  return _s;
}
inline const std::string& WechatPayRefundResponse::_internal_create_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.create_time_.Get();
}
inline void WechatPayRefundResponse::_internal_set_create_time(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.create_time_.Set(value, GetArena());
}
inline std::string* WechatPayRefundResponse::_internal_mutable_create_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.create_time_.Mutable( GetArena());
}
inline std::string* WechatPayRefundResponse::release_create_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayRefundResponse.create_time)
  return _impl_.create_time_.Release();
}
inline void WechatPayRefundResponse::set_allocated_create_time(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.create_time_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.create_time_.IsDefault()) {
          _impl_.create_time_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayRefundResponse.create_time)
}

// -------------------------------------------------------------------

// WechatPayTransferGetElectronicReceiptRequest

// .palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest.AcceptType accept_type = 1;
inline void WechatPayTransferGetElectronicReceiptRequest::clear_accept_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.accept_type_ = 0;
}
inline ::palm::musa::v1::WechatPayTransferGetElectronicReceiptRequest_AcceptType WechatPayTransferGetElectronicReceiptRequest::accept_type() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest.accept_type)
  return _internal_accept_type();
}
inline void WechatPayTransferGetElectronicReceiptRequest::set_accept_type(::palm::musa::v1::WechatPayTransferGetElectronicReceiptRequest_AcceptType value) {
  _internal_set_accept_type(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest.accept_type)
}
inline ::palm::musa::v1::WechatPayTransferGetElectronicReceiptRequest_AcceptType WechatPayTransferGetElectronicReceiptRequest::_internal_accept_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::musa::v1::WechatPayTransferGetElectronicReceiptRequest_AcceptType>(_impl_.accept_type_);
}
inline void WechatPayTransferGetElectronicReceiptRequest::_internal_set_accept_type(::palm::musa::v1::WechatPayTransferGetElectronicReceiptRequest_AcceptType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.accept_type_ = value;
}

// optional string out_batch_no = 2;
inline bool WechatPayTransferGetElectronicReceiptRequest::has_out_batch_no() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void WechatPayTransferGetElectronicReceiptRequest::clear_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_batch_no_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& WechatPayTransferGetElectronicReceiptRequest::out_batch_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest.out_batch_no)
  return _internal_out_batch_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayTransferGetElectronicReceiptRequest::set_out_batch_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.out_batch_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest.out_batch_no)
}
inline std::string* WechatPayTransferGetElectronicReceiptRequest::mutable_out_batch_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_batch_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest.out_batch_no)
  return _s;
}
inline const std::string& WechatPayTransferGetElectronicReceiptRequest::_internal_out_batch_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_batch_no_.Get();
}
inline void WechatPayTransferGetElectronicReceiptRequest::_internal_set_out_batch_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.out_batch_no_.Set(value, GetArena());
}
inline std::string* WechatPayTransferGetElectronicReceiptRequest::_internal_mutable_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.out_batch_no_.Mutable( GetArena());
}
inline std::string* WechatPayTransferGetElectronicReceiptRequest::release_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest.out_batch_no)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.out_batch_no_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.out_batch_no_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void WechatPayTransferGetElectronicReceiptRequest::set_allocated_out_batch_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.out_batch_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_batch_no_.IsDefault()) {
          _impl_.out_batch_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest.out_batch_no)
}

// string out_detail_no = 3;
inline void WechatPayTransferGetElectronicReceiptRequest::clear_out_detail_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_detail_no_.ClearToEmpty();
}
inline const std::string& WechatPayTransferGetElectronicReceiptRequest::out_detail_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest.out_detail_no)
  return _internal_out_detail_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayTransferGetElectronicReceiptRequest::set_out_detail_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_detail_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest.out_detail_no)
}
inline std::string* WechatPayTransferGetElectronicReceiptRequest::mutable_out_detail_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_detail_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest.out_detail_no)
  return _s;
}
inline const std::string& WechatPayTransferGetElectronicReceiptRequest::_internal_out_detail_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_detail_no_.Get();
}
inline void WechatPayTransferGetElectronicReceiptRequest::_internal_set_out_detail_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_detail_no_.Set(value, GetArena());
}
inline std::string* WechatPayTransferGetElectronicReceiptRequest::_internal_mutable_out_detail_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_detail_no_.Mutable( GetArena());
}
inline std::string* WechatPayTransferGetElectronicReceiptRequest::release_out_detail_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest.out_detail_no)
  return _impl_.out_detail_no_.Release();
}
inline void WechatPayTransferGetElectronicReceiptRequest::set_allocated_out_detail_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_detail_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_detail_no_.IsDefault()) {
          _impl_.out_detail_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest.out_detail_no)
}

// -------------------------------------------------------------------

// WechatPayTransferGetReceiptResponse

// bytes payload = 1;
inline void WechatPayTransferGetReceiptResponse::clear_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.payload_.ClearToEmpty();
}
inline const std::string& WechatPayTransferGetReceiptResponse::payload() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayTransferGetReceiptResponse.payload)
  return _internal_payload();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayTransferGetReceiptResponse::set_payload(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.payload_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayTransferGetReceiptResponse.payload)
}
inline std::string* WechatPayTransferGetReceiptResponse::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayTransferGetReceiptResponse.payload)
  return _s;
}
inline const std::string& WechatPayTransferGetReceiptResponse::_internal_payload() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.payload_.Get();
}
inline void WechatPayTransferGetReceiptResponse::_internal_set_payload(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.payload_.Set(value, GetArena());
}
inline std::string* WechatPayTransferGetReceiptResponse::_internal_mutable_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.payload_.Mutable( GetArena());
}
inline std::string* WechatPayTransferGetReceiptResponse::release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayTransferGetReceiptResponse.payload)
  return _impl_.payload_.Release();
}
inline void WechatPayTransferGetReceiptResponse::set_allocated_payload(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.payload_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payload_.IsDefault()) {
          _impl_.payload_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayTransferGetReceiptResponse.payload)
}

// -------------------------------------------------------------------

// WechatPayTransferGetBillReceiptRequest

// string out_batch_no = 1;
inline void WechatPayTransferGetBillReceiptRequest::clear_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_batch_no_.ClearToEmpty();
}
inline const std::string& WechatPayTransferGetBillReceiptRequest::out_batch_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayTransferGetBillReceiptRequest.out_batch_no)
  return _internal_out_batch_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayTransferGetBillReceiptRequest::set_out_batch_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_batch_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayTransferGetBillReceiptRequest.out_batch_no)
}
inline std::string* WechatPayTransferGetBillReceiptRequest::mutable_out_batch_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_batch_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayTransferGetBillReceiptRequest.out_batch_no)
  return _s;
}
inline const std::string& WechatPayTransferGetBillReceiptRequest::_internal_out_batch_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_batch_no_.Get();
}
inline void WechatPayTransferGetBillReceiptRequest::_internal_set_out_batch_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_batch_no_.Set(value, GetArena());
}
inline std::string* WechatPayTransferGetBillReceiptRequest::_internal_mutable_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_batch_no_.Mutable( GetArena());
}
inline std::string* WechatPayTransferGetBillReceiptRequest::release_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayTransferGetBillReceiptRequest.out_batch_no)
  return _impl_.out_batch_no_.Release();
}
inline void WechatPayTransferGetBillReceiptRequest::set_allocated_out_batch_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_batch_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_batch_no_.IsDefault()) {
          _impl_.out_batch_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayTransferGetBillReceiptRequest.out_batch_no)
}

// -------------------------------------------------------------------

// WechatPayExecuteBatchTransferRequest_Batch

// string name = 1;
inline void WechatPayExecuteBatchTransferRequest_Batch::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& WechatPayExecuteBatchTransferRequest_Batch::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayExecuteBatchTransferRequest_Batch::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch.name)
}
inline std::string* WechatPayExecuteBatchTransferRequest_Batch::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch.name)
  return _s;
}
inline const std::string& WechatPayExecuteBatchTransferRequest_Batch::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void WechatPayExecuteBatchTransferRequest_Batch::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* WechatPayExecuteBatchTransferRequest_Batch::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* WechatPayExecuteBatchTransferRequest_Batch::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch.name)
  return _impl_.name_.Release();
}
inline void WechatPayExecuteBatchTransferRequest_Batch::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch.name)
}

// string remark = 2;
inline void WechatPayExecuteBatchTransferRequest_Batch::clear_remark() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.remark_.ClearToEmpty();
}
inline const std::string& WechatPayExecuteBatchTransferRequest_Batch::remark() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch.remark)
  return _internal_remark();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayExecuteBatchTransferRequest_Batch::set_remark(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.remark_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch.remark)
}
inline std::string* WechatPayExecuteBatchTransferRequest_Batch::mutable_remark() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_remark();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch.remark)
  return _s;
}
inline const std::string& WechatPayExecuteBatchTransferRequest_Batch::_internal_remark() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.remark_.Get();
}
inline void WechatPayExecuteBatchTransferRequest_Batch::_internal_set_remark(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.remark_.Set(value, GetArena());
}
inline std::string* WechatPayExecuteBatchTransferRequest_Batch::_internal_mutable_remark() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.remark_.Mutable( GetArena());
}
inline std::string* WechatPayExecuteBatchTransferRequest_Batch::release_remark() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch.remark)
  return _impl_.remark_.Release();
}
inline void WechatPayExecuteBatchTransferRequest_Batch::set_allocated_remark(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.remark_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.remark_.IsDefault()) {
          _impl_.remark_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch.remark)
}

// optional string out_no = 3;
inline bool WechatPayExecuteBatchTransferRequest_Batch::has_out_no() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void WechatPayExecuteBatchTransferRequest_Batch::clear_out_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_no_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& WechatPayExecuteBatchTransferRequest_Batch::out_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch.out_no)
  return _internal_out_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayExecuteBatchTransferRequest_Batch::set_out_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.out_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch.out_no)
}
inline std::string* WechatPayExecuteBatchTransferRequest_Batch::mutable_out_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch.out_no)
  return _s;
}
inline const std::string& WechatPayExecuteBatchTransferRequest_Batch::_internal_out_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_no_.Get();
}
inline void WechatPayExecuteBatchTransferRequest_Batch::_internal_set_out_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.out_no_.Set(value, GetArena());
}
inline std::string* WechatPayExecuteBatchTransferRequest_Batch::_internal_mutable_out_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.out_no_.Mutable( GetArena());
}
inline std::string* WechatPayExecuteBatchTransferRequest_Batch::release_out_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch.out_no)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.out_no_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.out_no_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void WechatPayExecuteBatchTransferRequest_Batch::set_allocated_out_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.out_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_no_.IsDefault()) {
          _impl_.out_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch.out_no)
}

// -------------------------------------------------------------------

// WechatPayExecuteBatchTransferRequest_Detail

// string open_id = 1;
inline void WechatPayExecuteBatchTransferRequest_Detail::clear_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.ClearToEmpty();
}
inline const std::string& WechatPayExecuteBatchTransferRequest_Detail::open_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail.open_id)
  return _internal_open_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayExecuteBatchTransferRequest_Detail::set_open_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail.open_id)
}
inline std::string* WechatPayExecuteBatchTransferRequest_Detail::mutable_open_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_open_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail.open_id)
  return _s;
}
inline const std::string& WechatPayExecuteBatchTransferRequest_Detail::_internal_open_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.open_id_.Get();
}
inline void WechatPayExecuteBatchTransferRequest_Detail::_internal_set_open_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(value, GetArena());
}
inline std::string* WechatPayExecuteBatchTransferRequest_Detail::_internal_mutable_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.open_id_.Mutable( GetArena());
}
inline std::string* WechatPayExecuteBatchTransferRequest_Detail::release_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail.open_id)
  return _impl_.open_id_.Release();
}
inline void WechatPayExecuteBatchTransferRequest_Detail::set_allocated_open_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.open_id_.IsDefault()) {
          _impl_.open_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail.open_id)
}

// string username = 2;
inline void WechatPayExecuteBatchTransferRequest_Detail::clear_username() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.username_.ClearToEmpty();
}
inline const std::string& WechatPayExecuteBatchTransferRequest_Detail::username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail.username)
  return _internal_username();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayExecuteBatchTransferRequest_Detail::set_username(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail.username)
}
inline std::string* WechatPayExecuteBatchTransferRequest_Detail::mutable_username() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_username();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail.username)
  return _s;
}
inline const std::string& WechatPayExecuteBatchTransferRequest_Detail::_internal_username() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.username_.Get();
}
inline void WechatPayExecuteBatchTransferRequest_Detail::_internal_set_username(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.username_.Set(value, GetArena());
}
inline std::string* WechatPayExecuteBatchTransferRequest_Detail::_internal_mutable_username() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.username_.Mutable( GetArena());
}
inline std::string* WechatPayExecuteBatchTransferRequest_Detail::release_username() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail.username)
  return _impl_.username_.Release();
}
inline void WechatPayExecuteBatchTransferRequest_Detail::set_allocated_username(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.username_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.username_.IsDefault()) {
          _impl_.username_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail.username)
}

// int64 amount = 3;
inline void WechatPayExecuteBatchTransferRequest_Detail::clear_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.amount_ = ::int64_t{0};
}
inline ::int64_t WechatPayExecuteBatchTransferRequest_Detail::amount() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail.amount)
  return _internal_amount();
}
inline void WechatPayExecuteBatchTransferRequest_Detail::set_amount(::int64_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail.amount)
}
inline ::int64_t WechatPayExecuteBatchTransferRequest_Detail::_internal_amount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.amount_;
}
inline void WechatPayExecuteBatchTransferRequest_Detail::_internal_set_amount(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.amount_ = value;
}

// string remark = 4;
inline void WechatPayExecuteBatchTransferRequest_Detail::clear_remark() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.remark_.ClearToEmpty();
}
inline const std::string& WechatPayExecuteBatchTransferRequest_Detail::remark() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail.remark)
  return _internal_remark();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayExecuteBatchTransferRequest_Detail::set_remark(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.remark_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail.remark)
}
inline std::string* WechatPayExecuteBatchTransferRequest_Detail::mutable_remark() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_remark();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail.remark)
  return _s;
}
inline const std::string& WechatPayExecuteBatchTransferRequest_Detail::_internal_remark() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.remark_.Get();
}
inline void WechatPayExecuteBatchTransferRequest_Detail::_internal_set_remark(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.remark_.Set(value, GetArena());
}
inline std::string* WechatPayExecuteBatchTransferRequest_Detail::_internal_mutable_remark() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.remark_.Mutable( GetArena());
}
inline std::string* WechatPayExecuteBatchTransferRequest_Detail::release_remark() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail.remark)
  return _impl_.remark_.Release();
}
inline void WechatPayExecuteBatchTransferRequest_Detail::set_allocated_remark(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.remark_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.remark_.IsDefault()) {
          _impl_.remark_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail.remark)
}

// -------------------------------------------------------------------

// WechatPayExecuteBatchTransferRequest

// string app_id = 1;
inline void WechatPayExecuteBatchTransferRequest::clear_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.ClearToEmpty();
}
inline const std::string& WechatPayExecuteBatchTransferRequest::app_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferRequest.app_id)
  return _internal_app_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayExecuteBatchTransferRequest::set_app_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayExecuteBatchTransferRequest.app_id)
}
inline std::string* WechatPayExecuteBatchTransferRequest::mutable_app_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_app_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferRequest.app_id)
  return _s;
}
inline const std::string& WechatPayExecuteBatchTransferRequest::_internal_app_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.app_id_.Get();
}
inline void WechatPayExecuteBatchTransferRequest::_internal_set_app_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(value, GetArena());
}
inline std::string* WechatPayExecuteBatchTransferRequest::_internal_mutable_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.app_id_.Mutable( GetArena());
}
inline std::string* WechatPayExecuteBatchTransferRequest::release_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayExecuteBatchTransferRequest.app_id)
  return _impl_.app_id_.Release();
}
inline void WechatPayExecuteBatchTransferRequest::set_allocated_app_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.app_id_.IsDefault()) {
          _impl_.app_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayExecuteBatchTransferRequest.app_id)
}

// .palm.musa.v1.WechatPayExecuteBatchTransferRequest.Batch batch = 2;
inline bool WechatPayExecuteBatchTransferRequest::has_batch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.batch_ != nullptr);
  return value;
}
inline void WechatPayExecuteBatchTransferRequest::clear_batch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.batch_ != nullptr) _impl_.batch_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch& WechatPayExecuteBatchTransferRequest::_internal_batch() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch* p = _impl_.batch_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch&>(::palm::musa::v1::_WechatPayExecuteBatchTransferRequest_Batch_default_instance_);
}
inline const ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch& WechatPayExecuteBatchTransferRequest::batch() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferRequest.batch)
  return _internal_batch();
}
inline void WechatPayExecuteBatchTransferRequest::unsafe_arena_set_allocated_batch(::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.batch_);
  }
  _impl_.batch_ = reinterpret_cast<::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.musa.v1.WechatPayExecuteBatchTransferRequest.batch)
}
inline ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch* WechatPayExecuteBatchTransferRequest::release_batch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch* released = _impl_.batch_;
  _impl_.batch_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch* WechatPayExecuteBatchTransferRequest::unsafe_arena_release_batch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayExecuteBatchTransferRequest.batch)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch* temp = _impl_.batch_;
  _impl_.batch_ = nullptr;
  return temp;
}
inline ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch* WechatPayExecuteBatchTransferRequest::_internal_mutable_batch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.batch_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch>(GetArena());
    _impl_.batch_ = reinterpret_cast<::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch*>(p);
  }
  return _impl_.batch_;
}
inline ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch* WechatPayExecuteBatchTransferRequest::mutable_batch() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch* _msg = _internal_mutable_batch();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferRequest.batch)
  return _msg;
}
inline void WechatPayExecuteBatchTransferRequest::set_allocated_batch(::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch*>(_impl_.batch_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.batch_ = reinterpret_cast<::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Batch*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayExecuteBatchTransferRequest.batch)
}

// repeated .palm.musa.v1.WechatPayExecuteBatchTransferRequest.Detail details = 3;
inline int WechatPayExecuteBatchTransferRequest::_internal_details_size() const {
  return _internal_details().size();
}
inline int WechatPayExecuteBatchTransferRequest::details_size() const {
  return _internal_details_size();
}
inline void WechatPayExecuteBatchTransferRequest::clear_details() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.details_.Clear();
}
inline ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Detail* WechatPayExecuteBatchTransferRequest::mutable_details(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferRequest.details)
  return _internal_mutable_details()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Detail>* WechatPayExecuteBatchTransferRequest::mutable_details()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.musa.v1.WechatPayExecuteBatchTransferRequest.details)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_details();
}
inline const ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Detail& WechatPayExecuteBatchTransferRequest::details(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferRequest.details)
  return _internal_details().Get(index);
}
inline ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Detail* WechatPayExecuteBatchTransferRequest::add_details() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Detail* _add = _internal_mutable_details()->Add();
  // @@protoc_insertion_point(field_add:palm.musa.v1.WechatPayExecuteBatchTransferRequest.details)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Detail>& WechatPayExecuteBatchTransferRequest::details() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.musa.v1.WechatPayExecuteBatchTransferRequest.details)
  return _internal_details();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Detail>&
WechatPayExecuteBatchTransferRequest::_internal_details() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.details_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayExecuteBatchTransferRequest_Detail>*
WechatPayExecuteBatchTransferRequest::_internal_mutable_details() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.details_;
}

// string scene_id = 9;
inline void WechatPayExecuteBatchTransferRequest::clear_scene_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.scene_id_.ClearToEmpty();
}
inline const std::string& WechatPayExecuteBatchTransferRequest::scene_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferRequest.scene_id)
  return _internal_scene_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayExecuteBatchTransferRequest::set_scene_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.scene_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayExecuteBatchTransferRequest.scene_id)
}
inline std::string* WechatPayExecuteBatchTransferRequest::mutable_scene_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_scene_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferRequest.scene_id)
  return _s;
}
inline const std::string& WechatPayExecuteBatchTransferRequest::_internal_scene_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.scene_id_.Get();
}
inline void WechatPayExecuteBatchTransferRequest::_internal_set_scene_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.scene_id_.Set(value, GetArena());
}
inline std::string* WechatPayExecuteBatchTransferRequest::_internal_mutable_scene_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.scene_id_.Mutable( GetArena());
}
inline std::string* WechatPayExecuteBatchTransferRequest::release_scene_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayExecuteBatchTransferRequest.scene_id)
  return _impl_.scene_id_.Release();
}
inline void WechatPayExecuteBatchTransferRequest::set_allocated_scene_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.scene_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.scene_id_.IsDefault()) {
          _impl_.scene_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayExecuteBatchTransferRequest.scene_id)
}

// -------------------------------------------------------------------

// WechatPayExecuteBatchTransferResponse_Detail

// string open_id = 1;
inline void WechatPayExecuteBatchTransferResponse_Detail::clear_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.ClearToEmpty();
}
inline const std::string& WechatPayExecuteBatchTransferResponse_Detail::open_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Detail.open_id)
  return _internal_open_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayExecuteBatchTransferResponse_Detail::set_open_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Detail.open_id)
}
inline std::string* WechatPayExecuteBatchTransferResponse_Detail::mutable_open_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_open_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Detail.open_id)
  return _s;
}
inline const std::string& WechatPayExecuteBatchTransferResponse_Detail::_internal_open_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.open_id_.Get();
}
inline void WechatPayExecuteBatchTransferResponse_Detail::_internal_set_open_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(value, GetArena());
}
inline std::string* WechatPayExecuteBatchTransferResponse_Detail::_internal_mutable_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.open_id_.Mutable( GetArena());
}
inline std::string* WechatPayExecuteBatchTransferResponse_Detail::release_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Detail.open_id)
  return _impl_.open_id_.Release();
}
inline void WechatPayExecuteBatchTransferResponse_Detail::set_allocated_open_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.open_id_.IsDefault()) {
          _impl_.open_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Detail.open_id)
}

// string out_detail_no = 2;
inline void WechatPayExecuteBatchTransferResponse_Detail::clear_out_detail_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_detail_no_.ClearToEmpty();
}
inline const std::string& WechatPayExecuteBatchTransferResponse_Detail::out_detail_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Detail.out_detail_no)
  return _internal_out_detail_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayExecuteBatchTransferResponse_Detail::set_out_detail_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_detail_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Detail.out_detail_no)
}
inline std::string* WechatPayExecuteBatchTransferResponse_Detail::mutable_out_detail_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_detail_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Detail.out_detail_no)
  return _s;
}
inline const std::string& WechatPayExecuteBatchTransferResponse_Detail::_internal_out_detail_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_detail_no_.Get();
}
inline void WechatPayExecuteBatchTransferResponse_Detail::_internal_set_out_detail_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_detail_no_.Set(value, GetArena());
}
inline std::string* WechatPayExecuteBatchTransferResponse_Detail::_internal_mutable_out_detail_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_detail_no_.Mutable( GetArena());
}
inline std::string* WechatPayExecuteBatchTransferResponse_Detail::release_out_detail_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Detail.out_detail_no)
  return _impl_.out_detail_no_.Release();
}
inline void WechatPayExecuteBatchTransferResponse_Detail::set_allocated_out_detail_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_detail_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_detail_no_.IsDefault()) {
          _impl_.out_detail_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Detail.out_detail_no)
}

// -------------------------------------------------------------------

// WechatPayExecuteBatchTransferResponse_Succeeded

// string batch_id = 1;
inline void WechatPayExecuteBatchTransferResponse_Succeeded::clear_batch_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.batch_id_.ClearToEmpty();
}
inline const std::string& WechatPayExecuteBatchTransferResponse_Succeeded::batch_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Succeeded.batch_id)
  return _internal_batch_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayExecuteBatchTransferResponse_Succeeded::set_batch_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.batch_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Succeeded.batch_id)
}
inline std::string* WechatPayExecuteBatchTransferResponse_Succeeded::mutable_batch_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_batch_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Succeeded.batch_id)
  return _s;
}
inline const std::string& WechatPayExecuteBatchTransferResponse_Succeeded::_internal_batch_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.batch_id_.Get();
}
inline void WechatPayExecuteBatchTransferResponse_Succeeded::_internal_set_batch_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.batch_id_.Set(value, GetArena());
}
inline std::string* WechatPayExecuteBatchTransferResponse_Succeeded::_internal_mutable_batch_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.batch_id_.Mutable( GetArena());
}
inline std::string* WechatPayExecuteBatchTransferResponse_Succeeded::release_batch_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Succeeded.batch_id)
  return _impl_.batch_id_.Release();
}
inline void WechatPayExecuteBatchTransferResponse_Succeeded::set_allocated_batch_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.batch_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.batch_id_.IsDefault()) {
          _impl_.batch_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Succeeded.batch_id)
}

// string create_time = 2;
inline void WechatPayExecuteBatchTransferResponse_Succeeded::clear_create_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.create_time_.ClearToEmpty();
}
inline const std::string& WechatPayExecuteBatchTransferResponse_Succeeded::create_time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Succeeded.create_time)
  return _internal_create_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayExecuteBatchTransferResponse_Succeeded::set_create_time(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.create_time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Succeeded.create_time)
}
inline std::string* WechatPayExecuteBatchTransferResponse_Succeeded::mutable_create_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_create_time();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Succeeded.create_time)
  return _s;
}
inline const std::string& WechatPayExecuteBatchTransferResponse_Succeeded::_internal_create_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.create_time_.Get();
}
inline void WechatPayExecuteBatchTransferResponse_Succeeded::_internal_set_create_time(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.create_time_.Set(value, GetArena());
}
inline std::string* WechatPayExecuteBatchTransferResponse_Succeeded::_internal_mutable_create_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.create_time_.Mutable( GetArena());
}
inline std::string* WechatPayExecuteBatchTransferResponse_Succeeded::release_create_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Succeeded.create_time)
  return _impl_.create_time_.Release();
}
inline void WechatPayExecuteBatchTransferResponse_Succeeded::set_allocated_create_time(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.create_time_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.create_time_.IsDefault()) {
          _impl_.create_time_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayExecuteBatchTransferResponse.Succeeded.create_time)
}

// -------------------------------------------------------------------

// WechatPayExecuteBatchTransferResponse

// string out_batch_no = 1;
inline void WechatPayExecuteBatchTransferResponse::clear_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_batch_no_.ClearToEmpty();
}
inline const std::string& WechatPayExecuteBatchTransferResponse::out_batch_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferResponse.out_batch_no)
  return _internal_out_batch_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayExecuteBatchTransferResponse::set_out_batch_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_batch_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayExecuteBatchTransferResponse.out_batch_no)
}
inline std::string* WechatPayExecuteBatchTransferResponse::mutable_out_batch_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_batch_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferResponse.out_batch_no)
  return _s;
}
inline const std::string& WechatPayExecuteBatchTransferResponse::_internal_out_batch_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_batch_no_.Get();
}
inline void WechatPayExecuteBatchTransferResponse::_internal_set_out_batch_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_batch_no_.Set(value, GetArena());
}
inline std::string* WechatPayExecuteBatchTransferResponse::_internal_mutable_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_batch_no_.Mutable( GetArena());
}
inline std::string* WechatPayExecuteBatchTransferResponse::release_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayExecuteBatchTransferResponse.out_batch_no)
  return _impl_.out_batch_no_.Release();
}
inline void WechatPayExecuteBatchTransferResponse::set_allocated_out_batch_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_batch_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_batch_no_.IsDefault()) {
          _impl_.out_batch_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayExecuteBatchTransferResponse.out_batch_no)
}

// repeated .palm.musa.v1.WechatPayExecuteBatchTransferResponse.Detail details = 2;
inline int WechatPayExecuteBatchTransferResponse::_internal_details_size() const {
  return _internal_details().size();
}
inline int WechatPayExecuteBatchTransferResponse::details_size() const {
  return _internal_details_size();
}
inline void WechatPayExecuteBatchTransferResponse::clear_details() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.details_.Clear();
}
inline ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Detail* WechatPayExecuteBatchTransferResponse::mutable_details(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferResponse.details)
  return _internal_mutable_details()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Detail>* WechatPayExecuteBatchTransferResponse::mutable_details()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.musa.v1.WechatPayExecuteBatchTransferResponse.details)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_details();
}
inline const ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Detail& WechatPayExecuteBatchTransferResponse::details(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferResponse.details)
  return _internal_details().Get(index);
}
inline ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Detail* WechatPayExecuteBatchTransferResponse::add_details() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Detail* _add = _internal_mutable_details()->Add();
  // @@protoc_insertion_point(field_add:palm.musa.v1.WechatPayExecuteBatchTransferResponse.details)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Detail>& WechatPayExecuteBatchTransferResponse::details() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.musa.v1.WechatPayExecuteBatchTransferResponse.details)
  return _internal_details();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Detail>&
WechatPayExecuteBatchTransferResponse::_internal_details() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.details_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Detail>*
WechatPayExecuteBatchTransferResponse::_internal_mutable_details() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.details_;
}

// .palm.musa.v1.WechatPayExecuteBatchTransferResponse.Succeeded succeeded = 11;
inline bool WechatPayExecuteBatchTransferResponse::has_succeeded() const {
  return payload_case() == kSucceeded;
}
inline bool WechatPayExecuteBatchTransferResponse::_internal_has_succeeded() const {
  return payload_case() == kSucceeded;
}
inline void WechatPayExecuteBatchTransferResponse::set_has_succeeded() {
  _impl_._oneof_case_[0] = kSucceeded;
}
inline void WechatPayExecuteBatchTransferResponse::clear_succeeded() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (payload_case() == kSucceeded) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.succeeded_;
    }
    clear_has_payload();
  }
}
inline ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded* WechatPayExecuteBatchTransferResponse::release_succeeded() {
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayExecuteBatchTransferResponse.succeeded)
  if (payload_case() == kSucceeded) {
    clear_has_payload();
    auto* temp = _impl_.payload_.succeeded_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.succeeded_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded& WechatPayExecuteBatchTransferResponse::_internal_succeeded() const {
  return payload_case() == kSucceeded ? *_impl_.payload_.succeeded_ : reinterpret_cast<::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded&>(::palm::musa::v1::_WechatPayExecuteBatchTransferResponse_Succeeded_default_instance_);
}
inline const ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded& WechatPayExecuteBatchTransferResponse::succeeded() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferResponse.succeeded)
  return _internal_succeeded();
}
inline ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded* WechatPayExecuteBatchTransferResponse::unsafe_arena_release_succeeded() {
  // @@protoc_insertion_point(field_unsafe_arena_release:palm.musa.v1.WechatPayExecuteBatchTransferResponse.succeeded)
  if (payload_case() == kSucceeded) {
    clear_has_payload();
    auto* temp = _impl_.payload_.succeeded_;
    _impl_.payload_.succeeded_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void WechatPayExecuteBatchTransferResponse::unsafe_arena_set_allocated_succeeded(::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_succeeded();
    _impl_.payload_.succeeded_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.musa.v1.WechatPayExecuteBatchTransferResponse.succeeded)
}
inline ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded* WechatPayExecuteBatchTransferResponse::_internal_mutable_succeeded() {
  if (payload_case() != kSucceeded) {
    clear_payload();
    set_has_succeeded();
    _impl_.payload_.succeeded_ = CreateMaybeMessage<::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded>(GetArena());
  }
  return _impl_.payload_.succeeded_;
}
inline ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded* WechatPayExecuteBatchTransferResponse::mutable_succeeded() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::musa::v1::WechatPayExecuteBatchTransferResponse_Succeeded* _msg = _internal_mutable_succeeded();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferResponse.succeeded)
  return _msg;
}

// .palm.musa.v1.Error error = 12;
inline bool WechatPayExecuteBatchTransferResponse::has_error() const {
  return payload_case() == kError;
}
inline bool WechatPayExecuteBatchTransferResponse::_internal_has_error() const {
  return payload_case() == kError;
}
inline void WechatPayExecuteBatchTransferResponse::set_has_error() {
  _impl_._oneof_case_[0] = kError;
}
inline void WechatPayExecuteBatchTransferResponse::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (payload_case() == kError) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.error_;
    }
    clear_has_payload();
  }
}
inline ::palm::musa::v1::Error* WechatPayExecuteBatchTransferResponse::release_error() {
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayExecuteBatchTransferResponse.error)
  if (payload_case() == kError) {
    clear_has_payload();
    auto* temp = _impl_.payload_.error_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.error_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::palm::musa::v1::Error& WechatPayExecuteBatchTransferResponse::_internal_error() const {
  return payload_case() == kError ? *_impl_.payload_.error_ : reinterpret_cast<::palm::musa::v1::Error&>(::palm::musa::v1::_Error_default_instance_);
}
inline const ::palm::musa::v1::Error& WechatPayExecuteBatchTransferResponse::error() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayExecuteBatchTransferResponse.error)
  return _internal_error();
}
inline ::palm::musa::v1::Error* WechatPayExecuteBatchTransferResponse::unsafe_arena_release_error() {
  // @@protoc_insertion_point(field_unsafe_arena_release:palm.musa.v1.WechatPayExecuteBatchTransferResponse.error)
  if (payload_case() == kError) {
    clear_has_payload();
    auto* temp = _impl_.payload_.error_;
    _impl_.payload_.error_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void WechatPayExecuteBatchTransferResponse::unsafe_arena_set_allocated_error(::palm::musa::v1::Error* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_error();
    _impl_.payload_.error_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.musa.v1.WechatPayExecuteBatchTransferResponse.error)
}
inline ::palm::musa::v1::Error* WechatPayExecuteBatchTransferResponse::_internal_mutable_error() {
  if (payload_case() != kError) {
    clear_payload();
    set_has_error();
    _impl_.payload_.error_ = CreateMaybeMessage<::palm::musa::v1::Error>(GetArena());
  }
  return _impl_.payload_.error_;
}
inline ::palm::musa::v1::Error* WechatPayExecuteBatchTransferResponse::mutable_error() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::musa::v1::Error* _msg = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayExecuteBatchTransferResponse.error)
  return _msg;
}

inline bool WechatPayExecuteBatchTransferResponse::has_payload() const {
  return payload_case() != PAYLOAD_NOT_SET;
}
inline void WechatPayExecuteBatchTransferResponse::clear_has_payload() {
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}
inline WechatPayExecuteBatchTransferResponse::PayloadCase WechatPayExecuteBatchTransferResponse::payload_case() const {
  return WechatPayExecuteBatchTransferResponse::PayloadCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// WechatPayQueryBatchTransferRequest

// string out_batch_no = 1;
inline void WechatPayQueryBatchTransferRequest::clear_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_batch_no_.ClearToEmpty();
}
inline const std::string& WechatPayQueryBatchTransferRequest::out_batch_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferRequest.out_batch_no)
  return _internal_out_batch_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryBatchTransferRequest::set_out_batch_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_batch_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferRequest.out_batch_no)
}
inline std::string* WechatPayQueryBatchTransferRequest::mutable_out_batch_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_batch_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferRequest.out_batch_no)
  return _s;
}
inline const std::string& WechatPayQueryBatchTransferRequest::_internal_out_batch_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_batch_no_.Get();
}
inline void WechatPayQueryBatchTransferRequest::_internal_set_out_batch_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_batch_no_.Set(value, GetArena());
}
inline std::string* WechatPayQueryBatchTransferRequest::_internal_mutable_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_batch_no_.Mutable( GetArena());
}
inline std::string* WechatPayQueryBatchTransferRequest::release_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryBatchTransferRequest.out_batch_no)
  return _impl_.out_batch_no_.Release();
}
inline void WechatPayQueryBatchTransferRequest::set_allocated_out_batch_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_batch_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_batch_no_.IsDefault()) {
          _impl_.out_batch_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferRequest.out_batch_no)
}

// int32 offset = 2;
inline void WechatPayQueryBatchTransferRequest::clear_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.offset_ = 0;
}
inline ::int32_t WechatPayQueryBatchTransferRequest::offset() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferRequest.offset)
  return _internal_offset();
}
inline void WechatPayQueryBatchTransferRequest::set_offset(::int32_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferRequest.offset)
}
inline ::int32_t WechatPayQueryBatchTransferRequest::_internal_offset() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.offset_;
}
inline void WechatPayQueryBatchTransferRequest::_internal_set_offset(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.offset_ = value;
}

// int32 limit = 3;
inline void WechatPayQueryBatchTransferRequest::clear_limit() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.limit_ = 0;
}
inline ::int32_t WechatPayQueryBatchTransferRequest::limit() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferRequest.limit)
  return _internal_limit();
}
inline void WechatPayQueryBatchTransferRequest::set_limit(::int32_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferRequest.limit)
}
inline ::int32_t WechatPayQueryBatchTransferRequest::_internal_limit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.limit_;
}
inline void WechatPayQueryBatchTransferRequest::_internal_set_limit(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.limit_ = value;
}

// .palm.musa.v1.WechatPayQueryBatchTransferRequest.DetailStatus detail_status = 9;
inline void WechatPayQueryBatchTransferRequest::clear_detail_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.detail_status_ = 0;
}
inline ::palm::musa::v1::WechatPayQueryBatchTransferRequest_DetailStatus WechatPayQueryBatchTransferRequest::detail_status() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferRequest.detail_status)
  return _internal_detail_status();
}
inline void WechatPayQueryBatchTransferRequest::set_detail_status(::palm::musa::v1::WechatPayQueryBatchTransferRequest_DetailStatus value) {
  _internal_set_detail_status(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferRequest.detail_status)
}
inline ::palm::musa::v1::WechatPayQueryBatchTransferRequest_DetailStatus WechatPayQueryBatchTransferRequest::_internal_detail_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::musa::v1::WechatPayQueryBatchTransferRequest_DetailStatus>(_impl_.detail_status_);
}
inline void WechatPayQueryBatchTransferRequest::_internal_set_detail_status(::palm::musa::v1::WechatPayQueryBatchTransferRequest_DetailStatus value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.detail_status_ = value;
}

// -------------------------------------------------------------------

// WechatPayQueryBatchTransferResponse_Detail

// string detail_id = 1;
inline void WechatPayQueryBatchTransferResponse_Detail::clear_detail_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.detail_id_.ClearToEmpty();
}
inline const std::string& WechatPayQueryBatchTransferResponse_Detail::detail_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail.detail_id)
  return _internal_detail_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryBatchTransferResponse_Detail::set_detail_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.detail_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail.detail_id)
}
inline std::string* WechatPayQueryBatchTransferResponse_Detail::mutable_detail_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_detail_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail.detail_id)
  return _s;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Detail::_internal_detail_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.detail_id_.Get();
}
inline void WechatPayQueryBatchTransferResponse_Detail::_internal_set_detail_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.detail_id_.Set(value, GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Detail::_internal_mutable_detail_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.detail_id_.Mutable( GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Detail::release_detail_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail.detail_id)
  return _impl_.detail_id_.Release();
}
inline void WechatPayQueryBatchTransferResponse_Detail::set_allocated_detail_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.detail_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.detail_id_.IsDefault()) {
          _impl_.detail_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail.detail_id)
}

// string out_detail_no = 2;
inline void WechatPayQueryBatchTransferResponse_Detail::clear_out_detail_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_detail_no_.ClearToEmpty();
}
inline const std::string& WechatPayQueryBatchTransferResponse_Detail::out_detail_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail.out_detail_no)
  return _internal_out_detail_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryBatchTransferResponse_Detail::set_out_detail_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_detail_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail.out_detail_no)
}
inline std::string* WechatPayQueryBatchTransferResponse_Detail::mutable_out_detail_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_detail_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail.out_detail_no)
  return _s;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Detail::_internal_out_detail_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_detail_no_.Get();
}
inline void WechatPayQueryBatchTransferResponse_Detail::_internal_set_out_detail_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_detail_no_.Set(value, GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Detail::_internal_mutable_out_detail_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_detail_no_.Mutable( GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Detail::release_out_detail_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail.out_detail_no)
  return _impl_.out_detail_no_.Release();
}
inline void WechatPayQueryBatchTransferResponse_Detail::set_allocated_out_detail_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_detail_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_detail_no_.IsDefault()) {
          _impl_.out_detail_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail.out_detail_no)
}

// string status = 3;
inline void WechatPayQueryBatchTransferResponse_Detail::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& WechatPayQueryBatchTransferResponse_Detail::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryBatchTransferResponse_Detail::set_status(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail.status)
}
inline std::string* WechatPayQueryBatchTransferResponse_Detail::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail.status)
  return _s;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Detail::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_.Get();
}
inline void WechatPayQueryBatchTransferResponse_Detail::_internal_set_status(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_.Set(value, GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Detail::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Detail::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail.status)
  return _impl_.status_.Release();
}
inline void WechatPayQueryBatchTransferResponse_Detail::set_allocated_status(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.status_.IsDefault()) {
          _impl_.status_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail.status)
}

// -------------------------------------------------------------------

// WechatPayQueryBatchTransferResponse_Batch

// string app_id = 1;
inline void WechatPayQueryBatchTransferResponse_Batch::clear_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.ClearToEmpty();
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::app_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.app_id)
  return _internal_app_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryBatchTransferResponse_Batch::set_app_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.app_id)
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::mutable_app_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_app_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.app_id)
  return _s;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::_internal_app_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.app_id_.Get();
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_app_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(value, GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::_internal_mutable_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.app_id_.Mutable( GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::release_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.app_id)
  return _impl_.app_id_.Release();
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_allocated_app_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.app_id_.IsDefault()) {
          _impl_.app_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.app_id)
}

// string mch_id = 2;
inline void WechatPayQueryBatchTransferResponse_Batch::clear_mch_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mch_id_.ClearToEmpty();
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::mch_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.mch_id)
  return _internal_mch_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryBatchTransferResponse_Batch::set_mch_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mch_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.mch_id)
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::mutable_mch_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mch_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.mch_id)
  return _s;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::_internal_mch_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mch_id_.Get();
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_mch_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mch_id_.Set(value, GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::_internal_mutable_mch_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.mch_id_.Mutable( GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::release_mch_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.mch_id)
  return _impl_.mch_id_.Release();
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_allocated_mch_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mch_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.mch_id_.IsDefault()) {
          _impl_.mch_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.mch_id)
}

// string transfer_scene_id = 9;
inline void WechatPayQueryBatchTransferResponse_Batch::clear_transfer_scene_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.transfer_scene_id_.ClearToEmpty();
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::transfer_scene_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.transfer_scene_id)
  return _internal_transfer_scene_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryBatchTransferResponse_Batch::set_transfer_scene_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.transfer_scene_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.transfer_scene_id)
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::mutable_transfer_scene_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_transfer_scene_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.transfer_scene_id)
  return _s;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::_internal_transfer_scene_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.transfer_scene_id_.Get();
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_transfer_scene_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.transfer_scene_id_.Set(value, GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::_internal_mutable_transfer_scene_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.transfer_scene_id_.Mutable( GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::release_transfer_scene_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.transfer_scene_id)
  return _impl_.transfer_scene_id_.Release();
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_allocated_transfer_scene_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.transfer_scene_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.transfer_scene_id_.IsDefault()) {
          _impl_.transfer_scene_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.transfer_scene_id)
}

// string batch_id = 11;
inline void WechatPayQueryBatchTransferResponse_Batch::clear_batch_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.batch_id_.ClearToEmpty();
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::batch_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_id)
  return _internal_batch_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryBatchTransferResponse_Batch::set_batch_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.batch_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_id)
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::mutable_batch_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_batch_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_id)
  return _s;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::_internal_batch_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.batch_id_.Get();
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_batch_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.batch_id_.Set(value, GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::_internal_mutable_batch_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.batch_id_.Mutable( GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::release_batch_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_id)
  return _impl_.batch_id_.Release();
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_allocated_batch_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.batch_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.batch_id_.IsDefault()) {
          _impl_.batch_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_id)
}

// string out_batch_no = 12;
inline void WechatPayQueryBatchTransferResponse_Batch::clear_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_batch_no_.ClearToEmpty();
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::out_batch_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.out_batch_no)
  return _internal_out_batch_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryBatchTransferResponse_Batch::set_out_batch_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_batch_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.out_batch_no)
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::mutable_out_batch_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_batch_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.out_batch_no)
  return _s;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::_internal_out_batch_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_batch_no_.Get();
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_out_batch_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_batch_no_.Set(value, GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::_internal_mutable_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_batch_no_.Mutable( GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::release_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.out_batch_no)
  return _impl_.out_batch_no_.Release();
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_allocated_out_batch_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_batch_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_batch_no_.IsDefault()) {
          _impl_.out_batch_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.out_batch_no)
}

// string batch_status = 13;
inline void WechatPayQueryBatchTransferResponse_Batch::clear_batch_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.batch_status_.ClearToEmpty();
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::batch_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_status)
  return _internal_batch_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryBatchTransferResponse_Batch::set_batch_status(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.batch_status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_status)
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::mutable_batch_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_batch_status();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_status)
  return _s;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::_internal_batch_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.batch_status_.Get();
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_batch_status(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.batch_status_.Set(value, GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::_internal_mutable_batch_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.batch_status_.Mutable( GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::release_batch_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_status)
  return _impl_.batch_status_.Release();
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_allocated_batch_status(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.batch_status_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.batch_status_.IsDefault()) {
          _impl_.batch_status_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_status)
}

// string batch_type = 14;
inline void WechatPayQueryBatchTransferResponse_Batch::clear_batch_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.batch_type_.ClearToEmpty();
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::batch_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_type)
  return _internal_batch_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryBatchTransferResponse_Batch::set_batch_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.batch_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_type)
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::mutable_batch_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_batch_type();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_type)
  return _s;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::_internal_batch_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.batch_type_.Get();
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_batch_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.batch_type_.Set(value, GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::_internal_mutable_batch_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.batch_type_.Mutable( GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::release_batch_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_type)
  return _impl_.batch_type_.Release();
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_allocated_batch_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.batch_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.batch_type_.IsDefault()) {
          _impl_.batch_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_type)
}

// string batch_name = 15;
inline void WechatPayQueryBatchTransferResponse_Batch::clear_batch_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.batch_name_.ClearToEmpty();
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::batch_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_name)
  return _internal_batch_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryBatchTransferResponse_Batch::set_batch_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.batch_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_name)
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::mutable_batch_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_batch_name();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_name)
  return _s;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::_internal_batch_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.batch_name_.Get();
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_batch_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.batch_name_.Set(value, GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::_internal_mutable_batch_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.batch_name_.Mutable( GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::release_batch_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_name)
  return _impl_.batch_name_.Release();
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_allocated_batch_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.batch_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.batch_name_.IsDefault()) {
          _impl_.batch_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_name)
}

// string batch_remark = 16;
inline void WechatPayQueryBatchTransferResponse_Batch::clear_batch_remark() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.batch_remark_.ClearToEmpty();
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::batch_remark() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_remark)
  return _internal_batch_remark();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryBatchTransferResponse_Batch::set_batch_remark(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.batch_remark_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_remark)
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::mutable_batch_remark() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_batch_remark();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_remark)
  return _s;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::_internal_batch_remark() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.batch_remark_.Get();
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_batch_remark(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.batch_remark_.Set(value, GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::_internal_mutable_batch_remark() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.batch_remark_.Mutable( GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::release_batch_remark() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_remark)
  return _impl_.batch_remark_.Release();
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_allocated_batch_remark(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.batch_remark_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.batch_remark_.IsDefault()) {
          _impl_.batch_remark_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.batch_remark)
}

// optional string close_reason = 21;
inline bool WechatPayQueryBatchTransferResponse_Batch::has_close_reason() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void WechatPayQueryBatchTransferResponse_Batch::clear_close_reason() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.close_reason_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::close_reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.close_reason)
  return _internal_close_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryBatchTransferResponse_Batch::set_close_reason(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.close_reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.close_reason)
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::mutable_close_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_close_reason();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.close_reason)
  return _s;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::_internal_close_reason() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.close_reason_.Get();
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_close_reason(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.close_reason_.Set(value, GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::_internal_mutable_close_reason() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.close_reason_.Mutable( GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::release_close_reason() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.close_reason)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.close_reason_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.close_reason_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_allocated_close_reason(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.close_reason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.close_reason_.IsDefault()) {
          _impl_.close_reason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.close_reason)
}

// int64 total_amount = 22;
inline void WechatPayQueryBatchTransferResponse_Batch::clear_total_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.total_amount_ = ::int64_t{0};
}
inline ::int64_t WechatPayQueryBatchTransferResponse_Batch::total_amount() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.total_amount)
  return _internal_total_amount();
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_total_amount(::int64_t value) {
  _internal_set_total_amount(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.total_amount)
}
inline ::int64_t WechatPayQueryBatchTransferResponse_Batch::_internal_total_amount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_amount_;
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_total_amount(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_amount_ = value;
}

// int32 total_num = 23;
inline void WechatPayQueryBatchTransferResponse_Batch::clear_total_num() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.total_num_ = 0;
}
inline ::int32_t WechatPayQueryBatchTransferResponse_Batch::total_num() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.total_num)
  return _internal_total_num();
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_total_num(::int32_t value) {
  _internal_set_total_num(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.total_num)
}
inline ::int32_t WechatPayQueryBatchTransferResponse_Batch::_internal_total_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_num_;
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_total_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_num_ = value;
}

// optional string create_time = 24;
inline bool WechatPayQueryBatchTransferResponse_Batch::has_create_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void WechatPayQueryBatchTransferResponse_Batch::clear_create_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.create_time_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::create_time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.create_time)
  return _internal_create_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryBatchTransferResponse_Batch::set_create_time(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.create_time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.create_time)
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::mutable_create_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_create_time();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.create_time)
  return _s;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::_internal_create_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.create_time_.Get();
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_create_time(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.create_time_.Set(value, GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::_internal_mutable_create_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.create_time_.Mutable( GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::release_create_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.create_time)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.create_time_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.create_time_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_allocated_create_time(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.create_time_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.create_time_.IsDefault()) {
          _impl_.create_time_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.create_time)
}

// optional string update_time = 25;
inline bool WechatPayQueryBatchTransferResponse_Batch::has_update_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void WechatPayQueryBatchTransferResponse_Batch::clear_update_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.update_time_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::update_time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.update_time)
  return _internal_update_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryBatchTransferResponse_Batch::set_update_time(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.update_time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.update_time)
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::mutable_update_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_update_time();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.update_time)
  return _s;
}
inline const std::string& WechatPayQueryBatchTransferResponse_Batch::_internal_update_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.update_time_.Get();
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_update_time(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.update_time_.Set(value, GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::_internal_mutable_update_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.update_time_.Mutable( GetArena());
}
inline std::string* WechatPayQueryBatchTransferResponse_Batch::release_update_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.update_time)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.update_time_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.update_time_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_allocated_update_time(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.update_time_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.update_time_.IsDefault()) {
          _impl_.update_time_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.update_time)
}

// optional int64 success_amount = 26;
inline bool WechatPayQueryBatchTransferResponse_Batch::has_success_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void WechatPayQueryBatchTransferResponse_Batch::clear_success_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.success_amount_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t WechatPayQueryBatchTransferResponse_Batch::success_amount() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.success_amount)
  return _internal_success_amount();
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_success_amount(::int64_t value) {
  _internal_set_success_amount(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.success_amount)
}
inline ::int64_t WechatPayQueryBatchTransferResponse_Batch::_internal_success_amount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.success_amount_;
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_success_amount(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.success_amount_ = value;
}

// optional int32 success_num = 27;
inline bool WechatPayQueryBatchTransferResponse_Batch::has_success_num() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void WechatPayQueryBatchTransferResponse_Batch::clear_success_num() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.success_num_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t WechatPayQueryBatchTransferResponse_Batch::success_num() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.success_num)
  return _internal_success_num();
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_success_num(::int32_t value) {
  _internal_set_success_num(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.success_num)
}
inline ::int32_t WechatPayQueryBatchTransferResponse_Batch::_internal_success_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.success_num_;
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_success_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.success_num_ = value;
}

// optional int64 fail_amount = 28;
inline bool WechatPayQueryBatchTransferResponse_Batch::has_fail_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void WechatPayQueryBatchTransferResponse_Batch::clear_fail_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fail_amount_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t WechatPayQueryBatchTransferResponse_Batch::fail_amount() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.fail_amount)
  return _internal_fail_amount();
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_fail_amount(::int64_t value) {
  _internal_set_fail_amount(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.fail_amount)
}
inline ::int64_t WechatPayQueryBatchTransferResponse_Batch::_internal_fail_amount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fail_amount_;
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_fail_amount(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.fail_amount_ = value;
}

// optional int32 fail_num = 29;
inline bool WechatPayQueryBatchTransferResponse_Batch::has_fail_num() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void WechatPayQueryBatchTransferResponse_Batch::clear_fail_num() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fail_num_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t WechatPayQueryBatchTransferResponse_Batch::fail_num() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.fail_num)
  return _internal_fail_num();
}
inline void WechatPayQueryBatchTransferResponse_Batch::set_fail_num(::int32_t value) {
  _internal_set_fail_num(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch.fail_num)
}
inline ::int32_t WechatPayQueryBatchTransferResponse_Batch::_internal_fail_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fail_num_;
}
inline void WechatPayQueryBatchTransferResponse_Batch::_internal_set_fail_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.fail_num_ = value;
}

// -------------------------------------------------------------------

// WechatPayQueryBatchTransferResponse

// .palm.musa.v1.WechatPayQueryBatchTransferResponse.Batch batch = 1;
inline bool WechatPayQueryBatchTransferResponse::has_batch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.batch_ != nullptr);
  return value;
}
inline void WechatPayQueryBatchTransferResponse::clear_batch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.batch_ != nullptr) _impl_.batch_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch& WechatPayQueryBatchTransferResponse::_internal_batch() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch* p = _impl_.batch_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch&>(::palm::musa::v1::_WechatPayQueryBatchTransferResponse_Batch_default_instance_);
}
inline const ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch& WechatPayQueryBatchTransferResponse::batch() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.batch)
  return _internal_batch();
}
inline void WechatPayQueryBatchTransferResponse::unsafe_arena_set_allocated_batch(::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.batch_);
  }
  _impl_.batch_ = reinterpret_cast<::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferResponse.batch)
}
inline ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch* WechatPayQueryBatchTransferResponse::release_batch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch* released = _impl_.batch_;
  _impl_.batch_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch* WechatPayQueryBatchTransferResponse::unsafe_arena_release_batch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryBatchTransferResponse.batch)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch* temp = _impl_.batch_;
  _impl_.batch_ = nullptr;
  return temp;
}
inline ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch* WechatPayQueryBatchTransferResponse::_internal_mutable_batch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.batch_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch>(GetArena());
    _impl_.batch_ = reinterpret_cast<::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch*>(p);
  }
  return _impl_.batch_;
}
inline ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch* WechatPayQueryBatchTransferResponse::mutable_batch() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch* _msg = _internal_mutable_batch();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferResponse.batch)
  return _msg;
}
inline void WechatPayQueryBatchTransferResponse::set_allocated_batch(::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch*>(_impl_.batch_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.batch_ = reinterpret_cast<::palm::musa::v1::WechatPayQueryBatchTransferResponse_Batch*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryBatchTransferResponse.batch)
}

// repeated .palm.musa.v1.WechatPayQueryBatchTransferResponse.Detail details = 9;
inline int WechatPayQueryBatchTransferResponse::_internal_details_size() const {
  return _internal_details().size();
}
inline int WechatPayQueryBatchTransferResponse::details_size() const {
  return _internal_details_size();
}
inline void WechatPayQueryBatchTransferResponse::clear_details() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.details_.Clear();
}
inline ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Detail* WechatPayQueryBatchTransferResponse::mutable_details(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryBatchTransferResponse.details)
  return _internal_mutable_details()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayQueryBatchTransferResponse_Detail>* WechatPayQueryBatchTransferResponse::mutable_details()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.musa.v1.WechatPayQueryBatchTransferResponse.details)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_details();
}
inline const ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Detail& WechatPayQueryBatchTransferResponse::details(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryBatchTransferResponse.details)
  return _internal_details().Get(index);
}
inline ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Detail* WechatPayQueryBatchTransferResponse::add_details() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::musa::v1::WechatPayQueryBatchTransferResponse_Detail* _add = _internal_mutable_details()->Add();
  // @@protoc_insertion_point(field_add:palm.musa.v1.WechatPayQueryBatchTransferResponse.details)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayQueryBatchTransferResponse_Detail>& WechatPayQueryBatchTransferResponse::details() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.musa.v1.WechatPayQueryBatchTransferResponse.details)
  return _internal_details();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayQueryBatchTransferResponse_Detail>&
WechatPayQueryBatchTransferResponse::_internal_details() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.details_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::musa::v1::WechatPayQueryBatchTransferResponse_Detail>*
WechatPayQueryBatchTransferResponse::_internal_mutable_details() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.details_;
}

// -------------------------------------------------------------------

// WechatPayQueryTransferDetailRequest

// string out_batch_no = 1;
inline void WechatPayQueryTransferDetailRequest::clear_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_batch_no_.ClearToEmpty();
}
inline const std::string& WechatPayQueryTransferDetailRequest::out_batch_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryTransferDetailRequest.out_batch_no)
  return _internal_out_batch_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryTransferDetailRequest::set_out_batch_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_batch_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryTransferDetailRequest.out_batch_no)
}
inline std::string* WechatPayQueryTransferDetailRequest::mutable_out_batch_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_batch_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryTransferDetailRequest.out_batch_no)
  return _s;
}
inline const std::string& WechatPayQueryTransferDetailRequest::_internal_out_batch_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_batch_no_.Get();
}
inline void WechatPayQueryTransferDetailRequest::_internal_set_out_batch_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_batch_no_.Set(value, GetArena());
}
inline std::string* WechatPayQueryTransferDetailRequest::_internal_mutable_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_batch_no_.Mutable( GetArena());
}
inline std::string* WechatPayQueryTransferDetailRequest::release_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryTransferDetailRequest.out_batch_no)
  return _impl_.out_batch_no_.Release();
}
inline void WechatPayQueryTransferDetailRequest::set_allocated_out_batch_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_batch_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_batch_no_.IsDefault()) {
          _impl_.out_batch_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryTransferDetailRequest.out_batch_no)
}

// string out_detail_no = 2;
inline void WechatPayQueryTransferDetailRequest::clear_out_detail_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_detail_no_.ClearToEmpty();
}
inline const std::string& WechatPayQueryTransferDetailRequest::out_detail_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryTransferDetailRequest.out_detail_no)
  return _internal_out_detail_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryTransferDetailRequest::set_out_detail_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_detail_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryTransferDetailRequest.out_detail_no)
}
inline std::string* WechatPayQueryTransferDetailRequest::mutable_out_detail_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_detail_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryTransferDetailRequest.out_detail_no)
  return _s;
}
inline const std::string& WechatPayQueryTransferDetailRequest::_internal_out_detail_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_detail_no_.Get();
}
inline void WechatPayQueryTransferDetailRequest::_internal_set_out_detail_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_detail_no_.Set(value, GetArena());
}
inline std::string* WechatPayQueryTransferDetailRequest::_internal_mutable_out_detail_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_detail_no_.Mutable( GetArena());
}
inline std::string* WechatPayQueryTransferDetailRequest::release_out_detail_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryTransferDetailRequest.out_detail_no)
  return _impl_.out_detail_no_.Release();
}
inline void WechatPayQueryTransferDetailRequest::set_allocated_out_detail_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_detail_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_detail_no_.IsDefault()) {
          _impl_.out_detail_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryTransferDetailRequest.out_detail_no)
}

// -------------------------------------------------------------------

// WechatPayQueryTransferDetailResponse

// string app_id = 1;
inline void WechatPayQueryTransferDetailResponse::clear_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.ClearToEmpty();
}
inline const std::string& WechatPayQueryTransferDetailResponse::app_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryTransferDetailResponse.app_id)
  return _internal_app_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryTransferDetailResponse::set_app_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryTransferDetailResponse.app_id)
}
inline std::string* WechatPayQueryTransferDetailResponse::mutable_app_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_app_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryTransferDetailResponse.app_id)
  return _s;
}
inline const std::string& WechatPayQueryTransferDetailResponse::_internal_app_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.app_id_.Get();
}
inline void WechatPayQueryTransferDetailResponse::_internal_set_app_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(value, GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::_internal_mutable_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.app_id_.Mutable( GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::release_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryTransferDetailResponse.app_id)
  return _impl_.app_id_.Release();
}
inline void WechatPayQueryTransferDetailResponse::set_allocated_app_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.app_id_.IsDefault()) {
          _impl_.app_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryTransferDetailResponse.app_id)
}

// string mch_id = 2;
inline void WechatPayQueryTransferDetailResponse::clear_mch_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mch_id_.ClearToEmpty();
}
inline const std::string& WechatPayQueryTransferDetailResponse::mch_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryTransferDetailResponse.mch_id)
  return _internal_mch_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryTransferDetailResponse::set_mch_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mch_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryTransferDetailResponse.mch_id)
}
inline std::string* WechatPayQueryTransferDetailResponse::mutable_mch_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mch_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryTransferDetailResponse.mch_id)
  return _s;
}
inline const std::string& WechatPayQueryTransferDetailResponse::_internal_mch_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mch_id_.Get();
}
inline void WechatPayQueryTransferDetailResponse::_internal_set_mch_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mch_id_.Set(value, GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::_internal_mutable_mch_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.mch_id_.Mutable( GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::release_mch_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryTransferDetailResponse.mch_id)
  return _impl_.mch_id_.Release();
}
inline void WechatPayQueryTransferDetailResponse::set_allocated_mch_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mch_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.mch_id_.IsDefault()) {
          _impl_.mch_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryTransferDetailResponse.mch_id)
}

// string open_id = 3;
inline void WechatPayQueryTransferDetailResponse::clear_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.ClearToEmpty();
}
inline const std::string& WechatPayQueryTransferDetailResponse::open_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryTransferDetailResponse.open_id)
  return _internal_open_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryTransferDetailResponse::set_open_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryTransferDetailResponse.open_id)
}
inline std::string* WechatPayQueryTransferDetailResponse::mutable_open_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_open_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryTransferDetailResponse.open_id)
  return _s;
}
inline const std::string& WechatPayQueryTransferDetailResponse::_internal_open_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.open_id_.Get();
}
inline void WechatPayQueryTransferDetailResponse::_internal_set_open_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(value, GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::_internal_mutable_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.open_id_.Mutable( GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::release_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryTransferDetailResponse.open_id)
  return _impl_.open_id_.Release();
}
inline void WechatPayQueryTransferDetailResponse::set_allocated_open_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.open_id_.IsDefault()) {
          _impl_.open_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryTransferDetailResponse.open_id)
}

// optional string user_name = 4;
inline bool WechatPayQueryTransferDetailResponse::has_user_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void WechatPayQueryTransferDetailResponse::clear_user_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& WechatPayQueryTransferDetailResponse::user_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryTransferDetailResponse.user_name)
  return _internal_user_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryTransferDetailResponse::set_user_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.user_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryTransferDetailResponse.user_name)
}
inline std::string* WechatPayQueryTransferDetailResponse::mutable_user_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user_name();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryTransferDetailResponse.user_name)
  return _s;
}
inline const std::string& WechatPayQueryTransferDetailResponse::_internal_user_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_name_.Get();
}
inline void WechatPayQueryTransferDetailResponse::_internal_set_user_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.user_name_.Set(value, GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::_internal_mutable_user_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.user_name_.Mutable( GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::release_user_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryTransferDetailResponse.user_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.user_name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_name_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void WechatPayQueryTransferDetailResponse::set_allocated_user_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.user_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.user_name_.IsDefault()) {
          _impl_.user_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryTransferDetailResponse.user_name)
}

// string batch_id = 11;
inline void WechatPayQueryTransferDetailResponse::clear_batch_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.batch_id_.ClearToEmpty();
}
inline const std::string& WechatPayQueryTransferDetailResponse::batch_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryTransferDetailResponse.batch_id)
  return _internal_batch_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryTransferDetailResponse::set_batch_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.batch_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryTransferDetailResponse.batch_id)
}
inline std::string* WechatPayQueryTransferDetailResponse::mutable_batch_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_batch_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryTransferDetailResponse.batch_id)
  return _s;
}
inline const std::string& WechatPayQueryTransferDetailResponse::_internal_batch_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.batch_id_.Get();
}
inline void WechatPayQueryTransferDetailResponse::_internal_set_batch_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.batch_id_.Set(value, GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::_internal_mutable_batch_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.batch_id_.Mutable( GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::release_batch_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryTransferDetailResponse.batch_id)
  return _impl_.batch_id_.Release();
}
inline void WechatPayQueryTransferDetailResponse::set_allocated_batch_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.batch_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.batch_id_.IsDefault()) {
          _impl_.batch_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryTransferDetailResponse.batch_id)
}

// string out_batch_no = 12;
inline void WechatPayQueryTransferDetailResponse::clear_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_batch_no_.ClearToEmpty();
}
inline const std::string& WechatPayQueryTransferDetailResponse::out_batch_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryTransferDetailResponse.out_batch_no)
  return _internal_out_batch_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryTransferDetailResponse::set_out_batch_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_batch_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryTransferDetailResponse.out_batch_no)
}
inline std::string* WechatPayQueryTransferDetailResponse::mutable_out_batch_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_batch_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryTransferDetailResponse.out_batch_no)
  return _s;
}
inline const std::string& WechatPayQueryTransferDetailResponse::_internal_out_batch_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_batch_no_.Get();
}
inline void WechatPayQueryTransferDetailResponse::_internal_set_out_batch_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_batch_no_.Set(value, GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::_internal_mutable_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_batch_no_.Mutable( GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::release_out_batch_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryTransferDetailResponse.out_batch_no)
  return _impl_.out_batch_no_.Release();
}
inline void WechatPayQueryTransferDetailResponse::set_allocated_out_batch_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_batch_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_batch_no_.IsDefault()) {
          _impl_.out_batch_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryTransferDetailResponse.out_batch_no)
}

// string out_detail_no = 13;
inline void WechatPayQueryTransferDetailResponse::clear_out_detail_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_detail_no_.ClearToEmpty();
}
inline const std::string& WechatPayQueryTransferDetailResponse::out_detail_no() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryTransferDetailResponse.out_detail_no)
  return _internal_out_detail_no();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryTransferDetailResponse::set_out_detail_no(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_detail_no_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryTransferDetailResponse.out_detail_no)
}
inline std::string* WechatPayQueryTransferDetailResponse::mutable_out_detail_no() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_out_detail_no();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryTransferDetailResponse.out_detail_no)
  return _s;
}
inline const std::string& WechatPayQueryTransferDetailResponse::_internal_out_detail_no() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.out_detail_no_.Get();
}
inline void WechatPayQueryTransferDetailResponse::_internal_set_out_detail_no(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.out_detail_no_.Set(value, GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::_internal_mutable_out_detail_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.out_detail_no_.Mutable( GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::release_out_detail_no() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryTransferDetailResponse.out_detail_no)
  return _impl_.out_detail_no_.Release();
}
inline void WechatPayQueryTransferDetailResponse::set_allocated_out_detail_no(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.out_detail_no_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.out_detail_no_.IsDefault()) {
          _impl_.out_detail_no_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryTransferDetailResponse.out_detail_no)
}

// string detail_id = 14;
inline void WechatPayQueryTransferDetailResponse::clear_detail_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.detail_id_.ClearToEmpty();
}
inline const std::string& WechatPayQueryTransferDetailResponse::detail_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryTransferDetailResponse.detail_id)
  return _internal_detail_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryTransferDetailResponse::set_detail_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.detail_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryTransferDetailResponse.detail_id)
}
inline std::string* WechatPayQueryTransferDetailResponse::mutable_detail_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_detail_id();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryTransferDetailResponse.detail_id)
  return _s;
}
inline const std::string& WechatPayQueryTransferDetailResponse::_internal_detail_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.detail_id_.Get();
}
inline void WechatPayQueryTransferDetailResponse::_internal_set_detail_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.detail_id_.Set(value, GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::_internal_mutable_detail_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.detail_id_.Mutable( GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::release_detail_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryTransferDetailResponse.detail_id)
  return _impl_.detail_id_.Release();
}
inline void WechatPayQueryTransferDetailResponse::set_allocated_detail_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.detail_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.detail_id_.IsDefault()) {
          _impl_.detail_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryTransferDetailResponse.detail_id)
}

// string detail_status = 15;
inline void WechatPayQueryTransferDetailResponse::clear_detail_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.detail_status_.ClearToEmpty();
}
inline const std::string& WechatPayQueryTransferDetailResponse::detail_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryTransferDetailResponse.detail_status)
  return _internal_detail_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryTransferDetailResponse::set_detail_status(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.detail_status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryTransferDetailResponse.detail_status)
}
inline std::string* WechatPayQueryTransferDetailResponse::mutable_detail_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_detail_status();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryTransferDetailResponse.detail_status)
  return _s;
}
inline const std::string& WechatPayQueryTransferDetailResponse::_internal_detail_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.detail_status_.Get();
}
inline void WechatPayQueryTransferDetailResponse::_internal_set_detail_status(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.detail_status_.Set(value, GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::_internal_mutable_detail_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.detail_status_.Mutable( GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::release_detail_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryTransferDetailResponse.detail_status)
  return _impl_.detail_status_.Release();
}
inline void WechatPayQueryTransferDetailResponse::set_allocated_detail_status(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.detail_status_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.detail_status_.IsDefault()) {
          _impl_.detail_status_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryTransferDetailResponse.detail_status)
}

// int64 transfer_amount = 16;
inline void WechatPayQueryTransferDetailResponse::clear_transfer_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.transfer_amount_ = ::int64_t{0};
}
inline ::int64_t WechatPayQueryTransferDetailResponse::transfer_amount() const {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryTransferDetailResponse.transfer_amount)
  return _internal_transfer_amount();
}
inline void WechatPayQueryTransferDetailResponse::set_transfer_amount(::int64_t value) {
  _internal_set_transfer_amount(value);
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryTransferDetailResponse.transfer_amount)
}
inline ::int64_t WechatPayQueryTransferDetailResponse::_internal_transfer_amount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.transfer_amount_;
}
inline void WechatPayQueryTransferDetailResponse::_internal_set_transfer_amount(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.transfer_amount_ = value;
}

// string transfer_remark = 17;
inline void WechatPayQueryTransferDetailResponse::clear_transfer_remark() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.transfer_remark_.ClearToEmpty();
}
inline const std::string& WechatPayQueryTransferDetailResponse::transfer_remark() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryTransferDetailResponse.transfer_remark)
  return _internal_transfer_remark();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryTransferDetailResponse::set_transfer_remark(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.transfer_remark_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryTransferDetailResponse.transfer_remark)
}
inline std::string* WechatPayQueryTransferDetailResponse::mutable_transfer_remark() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_transfer_remark();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryTransferDetailResponse.transfer_remark)
  return _s;
}
inline const std::string& WechatPayQueryTransferDetailResponse::_internal_transfer_remark() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.transfer_remark_.Get();
}
inline void WechatPayQueryTransferDetailResponse::_internal_set_transfer_remark(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.transfer_remark_.Set(value, GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::_internal_mutable_transfer_remark() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.transfer_remark_.Mutable( GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::release_transfer_remark() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryTransferDetailResponse.transfer_remark)
  return _impl_.transfer_remark_.Release();
}
inline void WechatPayQueryTransferDetailResponse::set_allocated_transfer_remark(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.transfer_remark_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.transfer_remark_.IsDefault()) {
          _impl_.transfer_remark_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryTransferDetailResponse.transfer_remark)
}

// optional string fail_reason = 18;
inline bool WechatPayQueryTransferDetailResponse::has_fail_reason() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void WechatPayQueryTransferDetailResponse::clear_fail_reason() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fail_reason_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& WechatPayQueryTransferDetailResponse::fail_reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryTransferDetailResponse.fail_reason)
  return _internal_fail_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryTransferDetailResponse::set_fail_reason(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.fail_reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryTransferDetailResponse.fail_reason)
}
inline std::string* WechatPayQueryTransferDetailResponse::mutable_fail_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fail_reason();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryTransferDetailResponse.fail_reason)
  return _s;
}
inline const std::string& WechatPayQueryTransferDetailResponse::_internal_fail_reason() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fail_reason_.Get();
}
inline void WechatPayQueryTransferDetailResponse::_internal_set_fail_reason(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.fail_reason_.Set(value, GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::_internal_mutable_fail_reason() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.fail_reason_.Mutable( GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::release_fail_reason() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryTransferDetailResponse.fail_reason)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.fail_reason_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.fail_reason_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void WechatPayQueryTransferDetailResponse::set_allocated_fail_reason(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.fail_reason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.fail_reason_.IsDefault()) {
          _impl_.fail_reason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryTransferDetailResponse.fail_reason)
}

// string initiate_time = 19;
inline void WechatPayQueryTransferDetailResponse::clear_initiate_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.initiate_time_.ClearToEmpty();
}
inline const std::string& WechatPayQueryTransferDetailResponse::initiate_time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryTransferDetailResponse.initiate_time)
  return _internal_initiate_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryTransferDetailResponse::set_initiate_time(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.initiate_time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryTransferDetailResponse.initiate_time)
}
inline std::string* WechatPayQueryTransferDetailResponse::mutable_initiate_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_initiate_time();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryTransferDetailResponse.initiate_time)
  return _s;
}
inline const std::string& WechatPayQueryTransferDetailResponse::_internal_initiate_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.initiate_time_.Get();
}
inline void WechatPayQueryTransferDetailResponse::_internal_set_initiate_time(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.initiate_time_.Set(value, GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::_internal_mutable_initiate_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.initiate_time_.Mutable( GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::release_initiate_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryTransferDetailResponse.initiate_time)
  return _impl_.initiate_time_.Release();
}
inline void WechatPayQueryTransferDetailResponse::set_allocated_initiate_time(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.initiate_time_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.initiate_time_.IsDefault()) {
          _impl_.initiate_time_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryTransferDetailResponse.initiate_time)
}

// string update_time = 20;
inline void WechatPayQueryTransferDetailResponse::clear_update_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.update_time_.ClearToEmpty();
}
inline const std::string& WechatPayQueryTransferDetailResponse::update_time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.musa.v1.WechatPayQueryTransferDetailResponse.update_time)
  return _internal_update_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatPayQueryTransferDetailResponse::set_update_time(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.update_time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.musa.v1.WechatPayQueryTransferDetailResponse.update_time)
}
inline std::string* WechatPayQueryTransferDetailResponse::mutable_update_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_update_time();
  // @@protoc_insertion_point(field_mutable:palm.musa.v1.WechatPayQueryTransferDetailResponse.update_time)
  return _s;
}
inline const std::string& WechatPayQueryTransferDetailResponse::_internal_update_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.update_time_.Get();
}
inline void WechatPayQueryTransferDetailResponse::_internal_set_update_time(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.update_time_.Set(value, GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::_internal_mutable_update_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.update_time_.Mutable( GetArena());
}
inline std::string* WechatPayQueryTransferDetailResponse::release_update_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.musa.v1.WechatPayQueryTransferDetailResponse.update_time)
  return _impl_.update_time_.Release();
}
inline void WechatPayQueryTransferDetailResponse::set_allocated_update_time(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.update_time_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.update_time_.IsDefault()) {
          _impl_.update_time_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.musa.v1.WechatPayQueryTransferDetailResponse.update_time)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace musa
}  // namespace palm


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::palm::musa::v1::WechatPayTradeBillRequest_BillType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::musa::v1::WechatPayTradeBillRequest_BillType>() {
  return ::palm::musa::v1::WechatPayTradeBillRequest_BillType_descriptor();
}
template <>
struct is_proto_enum<::palm::musa::v1::WechatPayFundFlowBillRequest_AccountType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::musa::v1::WechatPayFundFlowBillRequest_AccountType>() {
  return ::palm::musa::v1::WechatPayFundFlowBillRequest_AccountType_descriptor();
}
template <>
struct is_proto_enum<::palm::musa::v1::WechatPayTransferGetElectronicReceiptRequest_AcceptType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::musa::v1::WechatPayTransferGetElectronicReceiptRequest_AcceptType>() {
  return ::palm::musa::v1::WechatPayTransferGetElectronicReceiptRequest_AcceptType_descriptor();
}
template <>
struct is_proto_enum<::palm::musa::v1::WechatPayQueryBatchTransferRequest_DetailStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::musa::v1::WechatPayQueryBatchTransferRequest_DetailStatus>() {
  return ::palm::musa::v1::WechatPayQueryBatchTransferRequest_DetailStatus_descriptor();
}
template <>
struct is_proto_enum<::palm::musa::v1::WechatPayCurrency> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::musa::v1::WechatPayCurrency>() {
  return ::palm::musa::v1::WechatPayCurrency_descriptor();
}
template <>
struct is_proto_enum<::palm::musa::v1::WechatPayNotifyAction> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::musa::v1::WechatPayNotifyAction>() {
  return ::palm::musa::v1::WechatPayNotifyAction_descriptor();
}
template <>
struct is_proto_enum<::palm::musa::v1::WechatPayTarType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::musa::v1::WechatPayTarType>() {
  return ::palm::musa::v1::WechatPayTarType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_musa_2eproto_2epb_2eh
