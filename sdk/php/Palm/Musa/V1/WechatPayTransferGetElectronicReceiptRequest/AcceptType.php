<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: musa.proto

namespace Palm\Musa\V1\WechatPayTransferGetElectronicReceiptRequest;

use UnexpectedValueException;

/**
 * Protobuf type <code>palm.musa.v1.WechatPayTransferGetElectronicReceiptRequest.AcceptType</code>
 */
class AcceptType
{
    /**
     * Generated from protobuf enum <code>BATCH_TRANSFER = 0;</code>
     */
    const BATCH_TRANSFER = 0;
    /**
     * Generated from protobuf enum <code>TRANSFER_TO_POCKET = 1;</code>
     */
    const TRANSFER_TO_POCKET = 1;
    /**
     * Generated from protobuf enum <code>TRANSFER_TO_BANK = 2;</code>
     */
    const TRANSFER_TO_BANK = 2;

    private static $valueToName = [
        self::BATCH_TRANSFER => 'BATCH_TRANSFER',
        self::TRANSFER_TO_POCKET => 'TRANSFER_TO_POCKET',
        self::TRANSFER_TO_BANK => 'TRANSFER_TO_BANK',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(AcceptType::class, \Palm\Musa\V1\WechatPayTransferGetElectronicReceiptRequest_AcceptType::class);

