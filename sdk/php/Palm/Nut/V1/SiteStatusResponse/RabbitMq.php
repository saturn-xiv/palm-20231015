<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nut.proto

namespace Palm\Nut\V1\SiteStatusResponse;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>palm.nut.v1.SiteStatusResponse.RabbitMq</code>
 */
class RabbitMq extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string protocol = 1;</code>
     */
    protected $protocol = '';
    /**
     * Generated from protobuf field <code>uint32 heartbeat = 2;</code>
     */
    protected $heartbeat = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $protocol
     *     @type int $heartbeat
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Nut::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string protocol = 1;</code>
     * @return string
     */
    public function getProtocol()
    {
        return $this->protocol;
    }

    /**
     * Generated from protobuf field <code>string protocol = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setProtocol($var)
    {
        GPBUtil::checkString($var, True);
        $this->protocol = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 heartbeat = 2;</code>
     * @return int
     */
    public function getHeartbeat()
    {
        return $this->heartbeat;
    }

    /**
     * Generated from protobuf field <code>uint32 heartbeat = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setHeartbeat($var)
    {
        GPBUtil::checkUint32($var);
        $this->heartbeat = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(RabbitMq::class, \Palm\Nut\V1\SiteStatusResponse_RabbitMq::class);

