<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ops-router.proto

namespace Palm\Ops\Router\V1\Profile\Network\Wan;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>palm.ops.router.v1.Profile.Network.Wan.Ethernet</code>
 */
class Ethernet extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * Generated from protobuf field <code>string device = 2;</code>
     */
    protected $device = '';
    /**
     * Generated from protobuf field <code>uint32 metric = 99;</code>
     */
    protected $metric = 0;
    protected $ip;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *     @type string $device
     *     @type \Palm\Ops\Router\V1\Profile\Network\Wan\Dhcp $dhcp
     *     @type \Palm\Ops\Router\V1\Profile\Network\Wan\StaticIp $static_ip
     *     @type int $metric
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\OpsRouter::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string device = 2;</code>
     * @return string
     */
    public function getDevice()
    {
        return $this->device;
    }

    /**
     * Generated from protobuf field <code>string device = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDevice($var)
    {
        GPBUtil::checkString($var, True);
        $this->device = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.palm.ops.router.v1.Profile.Network.Wan.Dhcp dhcp = 11;</code>
     * @return \Palm\Ops\Router\V1\Profile\Network\Wan\Dhcp|null
     */
    public function getDhcp()
    {
        return $this->readOneof(11);
    }

    public function hasDhcp()
    {
        return $this->hasOneof(11);
    }

    /**
     * Generated from protobuf field <code>.palm.ops.router.v1.Profile.Network.Wan.Dhcp dhcp = 11;</code>
     * @param \Palm\Ops\Router\V1\Profile\Network\Wan\Dhcp $var
     * @return $this
     */
    public function setDhcp($var)
    {
        GPBUtil::checkMessage($var, \Palm\Ops\Router\V1\Profile\Network\Wan\Dhcp::class);
        $this->writeOneof(11, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.palm.ops.router.v1.Profile.Network.Wan.StaticIp static_ip = 12;</code>
     * @return \Palm\Ops\Router\V1\Profile\Network\Wan\StaticIp|null
     */
    public function getStaticIp()
    {
        return $this->readOneof(12);
    }

    public function hasStaticIp()
    {
        return $this->hasOneof(12);
    }

    /**
     * Generated from protobuf field <code>.palm.ops.router.v1.Profile.Network.Wan.StaticIp static_ip = 12;</code>
     * @param \Palm\Ops\Router\V1\Profile\Network\Wan\StaticIp $var
     * @return $this
     */
    public function setStaticIp($var)
    {
        GPBUtil::checkMessage($var, \Palm\Ops\Router\V1\Profile\Network\Wan\StaticIp::class);
        $this->writeOneof(12, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 metric = 99;</code>
     * @return int
     */
    public function getMetric()
    {
        return $this->metric;
    }

    /**
     * Generated from protobuf field <code>uint32 metric = 99;</code>
     * @param int $var
     * @return $this
     */
    public function setMetric($var)
    {
        GPBUtil::checkUint32($var);
        $this->metric = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getIp()
    {
        return $this->whichOneof("ip");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Ethernet::class, \Palm\Ops\Router\V1\Profile_Network_Wan_Ethernet::class);

