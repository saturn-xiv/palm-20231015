/**
 * @fileoverview gRPC-Web generated client stub for palm.metasequoia.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v4.24.3
// source: metasequoia.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as google_protobuf_duration_pb from 'google-protobuf/google/protobuf/duration_pb'; // proto import: "google/protobuf/duration.proto"
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb'; // proto import: "google/protobuf/empty.proto"
import * as metasequoia_pb from './metasequoia_pb'; // proto import: "metasequoia.proto"


export class UserClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorSignInByPassword = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/SignInByPassword',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserSignInByPasswordRequest,
    metasequoia_pb.UserSignInResponse,
    (request: metasequoia_pb.UserSignInByPasswordRequest) => {
      return request.serializeBinary();
    },
    metasequoia_pb.UserSignInResponse.deserializeBinary
  );

  signInByPassword(
    request: metasequoia_pb.UserSignInByPasswordRequest,
    metadata?: grpcWeb.Metadata | null): Promise<metasequoia_pb.UserSignInResponse>;

  signInByPassword(
    request: metasequoia_pb.UserSignInByPasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: metasequoia_pb.UserSignInResponse) => void): grpcWeb.ClientReadableStream<metasequoia_pb.UserSignInResponse>;

  signInByPassword(
    request: metasequoia_pb.UserSignInByPasswordRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: metasequoia_pb.UserSignInResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/SignInByPassword',
        request,
        metadata || {},
        this.methodDescriptorSignInByPassword,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/SignInByPassword',
    request,
    metadata || {},
    this.methodDescriptorSignInByPassword);
  }

  methodDescriptorSignUpByEmail = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/SignUpByEmail',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserSignUpByEmailRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.UserSignUpByEmailRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  signUpByEmail(
    request: metasequoia_pb.UserSignUpByEmailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  signUpByEmail(
    request: metasequoia_pb.UserSignUpByEmailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  signUpByEmail(
    request: metasequoia_pb.UserSignUpByEmailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/SignUpByEmail',
        request,
        metadata || {},
        this.methodDescriptorSignUpByEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/SignUpByEmail',
    request,
    metadata || {},
    this.methodDescriptorSignUpByEmail);
  }

  methodDescriptorConfirmByEmail = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/ConfirmByEmail',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserQueryRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.UserQueryRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  confirmByEmail(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  confirmByEmail(
    request: metasequoia_pb.UserQueryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  confirmByEmail(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/ConfirmByEmail',
        request,
        metadata || {},
        this.methodDescriptorConfirmByEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/ConfirmByEmail',
    request,
    metadata || {},
    this.methodDescriptorConfirmByEmail);
  }

  methodDescriptorConfirmByToken = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/ConfirmByToken',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserTokenRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.UserTokenRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  confirmByToken(
    request: metasequoia_pb.UserTokenRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  confirmByToken(
    request: metasequoia_pb.UserTokenRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  confirmByToken(
    request: metasequoia_pb.UserTokenRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/ConfirmByToken',
        request,
        metadata || {},
        this.methodDescriptorConfirmByToken,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/ConfirmByToken',
    request,
    metadata || {},
    this.methodDescriptorConfirmByToken);
  }

  methodDescriptorUnlockByEmail = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/UnlockByEmail',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserQueryRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.UserQueryRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  unlockByEmail(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  unlockByEmail(
    request: metasequoia_pb.UserQueryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  unlockByEmail(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/UnlockByEmail',
        request,
        metadata || {},
        this.methodDescriptorUnlockByEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/UnlockByEmail',
    request,
    metadata || {},
    this.methodDescriptorUnlockByEmail);
  }

  methodDescriptorUnlockByToken = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/UnlockByToken',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserTokenRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.UserTokenRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  unlockByToken(
    request: metasequoia_pb.UserTokenRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  unlockByToken(
    request: metasequoia_pb.UserTokenRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  unlockByToken(
    request: metasequoia_pb.UserTokenRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/UnlockByToken',
        request,
        metadata || {},
        this.methodDescriptorUnlockByToken,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/UnlockByToken',
    request,
    metadata || {},
    this.methodDescriptorUnlockByToken);
  }

  methodDescriptorForgotPassword = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/ForgotPassword',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserQueryRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.UserQueryRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  forgotPassword(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  forgotPassword(
    request: metasequoia_pb.UserQueryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  forgotPassword(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/ForgotPassword',
        request,
        metadata || {},
        this.methodDescriptorForgotPassword,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/ForgotPassword',
    request,
    metadata || {},
    this.methodDescriptorForgotPassword);
  }

  methodDescriptorResetPassword = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/ResetPassword',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserResetPasswordRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.UserResetPasswordRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  resetPassword(
    request: metasequoia_pb.UserResetPasswordRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  resetPassword(
    request: metasequoia_pb.UserResetPasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  resetPassword(
    request: metasequoia_pb.UserResetPasswordRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/ResetPassword',
        request,
        metadata || {},
        this.methodDescriptorResetPassword,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/ResetPassword',
    request,
    metadata || {},
    this.methodDescriptorResetPassword);
  }

  methodDescriptorRefresh = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/Refresh',
    grpcWeb.MethodType.UNARY,
    google_protobuf_duration_pb.Duration,
    metasequoia_pb.UserSignInResponse,
    (request: google_protobuf_duration_pb.Duration) => {
      return request.serializeBinary();
    },
    metasequoia_pb.UserSignInResponse.deserializeBinary
  );

  refresh(
    request: google_protobuf_duration_pb.Duration,
    metadata?: grpcWeb.Metadata | null): Promise<metasequoia_pb.UserSignInResponse>;

  refresh(
    request: google_protobuf_duration_pb.Duration,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: metasequoia_pb.UserSignInResponse) => void): grpcWeb.ClientReadableStream<metasequoia_pb.UserSignInResponse>;

  refresh(
    request: google_protobuf_duration_pb.Duration,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: metasequoia_pb.UserSignInResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/Refresh',
        request,
        metadata || {},
        this.methodDescriptorRefresh,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/Refresh',
    request,
    metadata || {},
    this.methodDescriptorRefresh);
  }

  methodDescriptorLogs = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/Logs',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserLogsRequest,
    metasequoia_pb.UserLogsResponse,
    (request: metasequoia_pb.UserLogsRequest) => {
      return request.serializeBinary();
    },
    metasequoia_pb.UserLogsResponse.deserializeBinary
  );

  logs(
    request: metasequoia_pb.UserLogsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<metasequoia_pb.UserLogsResponse>;

  logs(
    request: metasequoia_pb.UserLogsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: metasequoia_pb.UserLogsResponse) => void): grpcWeb.ClientReadableStream<metasequoia_pb.UserLogsResponse>;

  logs(
    request: metasequoia_pb.UserLogsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: metasequoia_pb.UserLogsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/Logs',
        request,
        metadata || {},
        this.methodDescriptorLogs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/Logs',
    request,
    metadata || {},
    this.methodDescriptorLogs);
  }

  methodDescriptorSetProfile = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/SetProfile',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserProfile,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.UserProfile) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  setProfile(
    request: metasequoia_pb.UserProfile,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  setProfile(
    request: metasequoia_pb.UserProfile,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  setProfile(
    request: metasequoia_pb.UserProfile,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/SetProfile',
        request,
        metadata || {},
        this.methodDescriptorSetProfile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/SetProfile',
    request,
    metadata || {},
    this.methodDescriptorSetProfile);
  }

  methodDescriptorGetProfile = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/GetProfile',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    metasequoia_pb.UserProfile,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    metasequoia_pb.UserProfile.deserializeBinary
  );

  getProfile(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<metasequoia_pb.UserProfile>;

  getProfile(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: metasequoia_pb.UserProfile) => void): grpcWeb.ClientReadableStream<metasequoia_pb.UserProfile>;

  getProfile(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: metasequoia_pb.UserProfile) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/GetProfile',
        request,
        metadata || {},
        this.methodDescriptorGetProfile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/GetProfile',
    request,
    metadata || {},
    this.methodDescriptorGetProfile);
  }

  methodDescriptorChangePassword = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/ChangePassword',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserChangePasswordRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.UserChangePasswordRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  changePassword(
    request: metasequoia_pb.UserChangePasswordRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  changePassword(
    request: metasequoia_pb.UserChangePasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  changePassword(
    request: metasequoia_pb.UserChangePasswordRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/ChangePassword',
        request,
        metadata || {},
        this.methodDescriptorChangePassword,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/ChangePassword',
    request,
    metadata || {},
    this.methodDescriptorChangePassword);
  }

  methodDescriptorSignOut = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/SignOut',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  signOut(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  signOut(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  signOut(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/SignOut',
        request,
        metadata || {},
        this.methodDescriptorSignOut,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/SignOut',
    request,
    metadata || {},
    this.methodDescriptorSignOut);
  }

  methodDescriptorIndex = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/Index',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    metasequoia_pb.UserIndexResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    metasequoia_pb.UserIndexResponse.deserializeBinary
  );

  index(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<metasequoia_pb.UserIndexResponse>;

  index(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: metasequoia_pb.UserIndexResponse) => void): grpcWeb.ClientReadableStream<metasequoia_pb.UserIndexResponse>;

  index(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: metasequoia_pb.UserIndexResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/Index',
        request,
        metadata || {},
        this.methodDescriptorIndex,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/Index',
    request,
    metadata || {},
    this.methodDescriptorIndex);
  }

  methodDescriptorShow = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/Show',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserQueryRequest,
    metasequoia_pb.UserIndexResponse.Item,
    (request: metasequoia_pb.UserQueryRequest) => {
      return request.serializeBinary();
    },
    metasequoia_pb.UserIndexResponse.Item.deserializeBinary
  );

  show(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<metasequoia_pb.UserIndexResponse.Item>;

  show(
    request: metasequoia_pb.UserQueryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: metasequoia_pb.UserIndexResponse.Item) => void): grpcWeb.ClientReadableStream<metasequoia_pb.UserIndexResponse.Item>;

  show(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: metasequoia_pb.UserIndexResponse.Item) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/Show',
        request,
        metadata || {},
        this.methodDescriptorShow,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/Show',
    request,
    metadata || {},
    this.methodDescriptorShow);
  }

  methodDescriptorDisable = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/Disable',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserQueryRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.UserQueryRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  disable(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  disable(
    request: metasequoia_pb.UserQueryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  disable(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/Disable',
        request,
        metadata || {},
        this.methodDescriptorDisable,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/Disable',
    request,
    metadata || {},
    this.methodDescriptorDisable);
  }

  methodDescriptorEnable = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/Enable',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserQueryRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.UserQueryRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  enable(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  enable(
    request: metasequoia_pb.UserQueryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  enable(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/Enable',
        request,
        metadata || {},
        this.methodDescriptorEnable,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/Enable',
    request,
    metadata || {},
    this.methodDescriptorEnable);
  }

  methodDescriptorLock = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/Lock',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserQueryRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.UserQueryRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  lock(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  lock(
    request: metasequoia_pb.UserQueryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  lock(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/Lock',
        request,
        metadata || {},
        this.methodDescriptorLock,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/Lock',
    request,
    metadata || {},
    this.methodDescriptorLock);
  }

  methodDescriptorUnlock = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/Unlock',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserQueryRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.UserQueryRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  unlock(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  unlock(
    request: metasequoia_pb.UserQueryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  unlock(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/Unlock',
        request,
        metadata || {},
        this.methodDescriptorUnlock,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/Unlock',
    request,
    metadata || {},
    this.methodDescriptorUnlock);
  }

  methodDescriptorConfirm = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/Confirm',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserQueryRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.UserQueryRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  confirm(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  confirm(
    request: metasequoia_pb.UserQueryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  confirm(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/Confirm',
        request,
        metadata || {},
        this.methodDescriptorConfirm,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/Confirm',
    request,
    metadata || {},
    this.methodDescriptorConfirm);
  }

  methodDescriptorDelete = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/Delete',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserQueryRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.UserQueryRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  delete(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  delete(
    request: metasequoia_pb.UserQueryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  delete(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/Delete',
        request,
        metadata || {},
        this.methodDescriptorDelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/Delete',
    request,
    metadata || {},
    this.methodDescriptorDelete);
  }

  methodDescriptorSetPassword = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.User/SetPassword',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserSetPasswordRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.UserSetPasswordRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  setPassword(
    request: metasequoia_pb.UserSetPasswordRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  setPassword(
    request: metasequoia_pb.UserSetPasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  setPassword(
    request: metasequoia_pb.UserSetPasswordRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.User/SetPassword',
        request,
        metadata || {},
        this.methodDescriptorSetPassword,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.User/SetPassword',
    request,
    metadata || {},
    this.methodDescriptorSetPassword);
  }

}

export class RbacClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCan = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Rbac/Can',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.RbacCanRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.RbacCanRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  can(
    request: metasequoia_pb.RbacCanRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  can(
    request: metasequoia_pb.RbacCanRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  can(
    request: metasequoia_pb.RbacCanRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Rbac/Can',
        request,
        metadata || {},
        this.methodDescriptorCan,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Rbac/Can',
    request,
    metadata || {},
    this.methodDescriptorCan);
  }

  methodDescriptorHas = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Rbac/Has',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.RbacHasRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.RbacHasRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  has(
    request: metasequoia_pb.RbacHasRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  has(
    request: metasequoia_pb.RbacHasRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  has(
    request: metasequoia_pb.RbacHasRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Rbac/Has',
        request,
        metadata || {},
        this.methodDescriptorHas,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Rbac/Has',
    request,
    metadata || {},
    this.methodDescriptorHas);
  }

  methodDescriptorGetRolesForUser = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Rbac/GetRolesForUser',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserQueryRequest,
    metasequoia_pb.RbacRolesResponse,
    (request: metasequoia_pb.UserQueryRequest) => {
      return request.serializeBinary();
    },
    metasequoia_pb.RbacRolesResponse.deserializeBinary
  );

  getRolesForUser(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<metasequoia_pb.RbacRolesResponse>;

  getRolesForUser(
    request: metasequoia_pb.UserQueryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: metasequoia_pb.RbacRolesResponse) => void): grpcWeb.ClientReadableStream<metasequoia_pb.RbacRolesResponse>;

  getRolesForUser(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: metasequoia_pb.RbacRolesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Rbac/GetRolesForUser',
        request,
        metadata || {},
        this.methodDescriptorGetRolesForUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Rbac/GetRolesForUser',
    request,
    metadata || {},
    this.methodDescriptorGetRolesForUser);
  }

  methodDescriptorGetImplicitRolesForUser = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Rbac/GetImplicitRolesForUser',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserQueryRequest,
    metasequoia_pb.RbacRolesResponse,
    (request: metasequoia_pb.UserQueryRequest) => {
      return request.serializeBinary();
    },
    metasequoia_pb.RbacRolesResponse.deserializeBinary
  );

  getImplicitRolesForUser(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<metasequoia_pb.RbacRolesResponse>;

  getImplicitRolesForUser(
    request: metasequoia_pb.UserQueryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: metasequoia_pb.RbacRolesResponse) => void): grpcWeb.ClientReadableStream<metasequoia_pb.RbacRolesResponse>;

  getImplicitRolesForUser(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: metasequoia_pb.RbacRolesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Rbac/GetImplicitRolesForUser',
        request,
        metadata || {},
        this.methodDescriptorGetImplicitRolesForUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Rbac/GetImplicitRolesForUser',
    request,
    metadata || {},
    this.methodDescriptorGetImplicitRolesForUser);
  }

  methodDescriptorAddRolesForUser = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Rbac/AddRolesForUser',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.RbacRolesForUserRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.RbacRolesForUserRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  addRolesForUser(
    request: metasequoia_pb.RbacRolesForUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  addRolesForUser(
    request: metasequoia_pb.RbacRolesForUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  addRolesForUser(
    request: metasequoia_pb.RbacRolesForUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Rbac/AddRolesForUser',
        request,
        metadata || {},
        this.methodDescriptorAddRolesForUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Rbac/AddRolesForUser',
    request,
    metadata || {},
    this.methodDescriptorAddRolesForUser);
  }

  methodDescriptorDeleteRolesForUser = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Rbac/DeleteRolesForUser',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.RbacRolesForUserRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.RbacRolesForUserRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deleteRolesForUser(
    request: metasequoia_pb.RbacRolesForUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deleteRolesForUser(
    request: metasequoia_pb.RbacRolesForUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deleteRolesForUser(
    request: metasequoia_pb.RbacRolesForUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Rbac/DeleteRolesForUser',
        request,
        metadata || {},
        this.methodDescriptorDeleteRolesForUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Rbac/DeleteRolesForUser',
    request,
    metadata || {},
    this.methodDescriptorDeleteRolesForUser);
  }

  methodDescriptorAddPermissionsForRole = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Rbac/AddPermissionsForRole',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.RbacPermissionsForRoleRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.RbacPermissionsForRoleRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  addPermissionsForRole(
    request: metasequoia_pb.RbacPermissionsForRoleRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  addPermissionsForRole(
    request: metasequoia_pb.RbacPermissionsForRoleRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  addPermissionsForRole(
    request: metasequoia_pb.RbacPermissionsForRoleRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Rbac/AddPermissionsForRole',
        request,
        metadata || {},
        this.methodDescriptorAddPermissionsForRole,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Rbac/AddPermissionsForRole',
    request,
    metadata || {},
    this.methodDescriptorAddPermissionsForRole);
  }

  methodDescriptorDeletePermissionsForRole = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Rbac/DeletePermissionsForRole',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.RbacPermissionsForRoleRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.RbacPermissionsForRoleRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deletePermissionsForRole(
    request: metasequoia_pb.RbacPermissionsForRoleRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deletePermissionsForRole(
    request: metasequoia_pb.RbacPermissionsForRoleRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deletePermissionsForRole(
    request: metasequoia_pb.RbacPermissionsForRoleRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Rbac/DeletePermissionsForRole',
        request,
        metadata || {},
        this.methodDescriptorDeletePermissionsForRole,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Rbac/DeletePermissionsForRole',
    request,
    metadata || {},
    this.methodDescriptorDeletePermissionsForRole);
  }

  methodDescriptorGetPermissionsForUser = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Rbac/GetPermissionsForUser',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserQueryRequest,
    metasequoia_pb.RbacPermissionsResponse,
    (request: metasequoia_pb.UserQueryRequest) => {
      return request.serializeBinary();
    },
    metasequoia_pb.RbacPermissionsResponse.deserializeBinary
  );

  getPermissionsForUser(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<metasequoia_pb.RbacPermissionsResponse>;

  getPermissionsForUser(
    request: metasequoia_pb.UserQueryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: metasequoia_pb.RbacPermissionsResponse) => void): grpcWeb.ClientReadableStream<metasequoia_pb.RbacPermissionsResponse>;

  getPermissionsForUser(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: metasequoia_pb.RbacPermissionsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Rbac/GetPermissionsForUser',
        request,
        metadata || {},
        this.methodDescriptorGetPermissionsForUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Rbac/GetPermissionsForUser',
    request,
    metadata || {},
    this.methodDescriptorGetPermissionsForUser);
  }

  methodDescriptorGetImplicitPermissionsForUser = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Rbac/GetImplicitPermissionsForUser',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.UserQueryRequest,
    metasequoia_pb.RbacPermissionsResponse,
    (request: metasequoia_pb.UserQueryRequest) => {
      return request.serializeBinary();
    },
    metasequoia_pb.RbacPermissionsResponse.deserializeBinary
  );

  getImplicitPermissionsForUser(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<metasequoia_pb.RbacPermissionsResponse>;

  getImplicitPermissionsForUser(
    request: metasequoia_pb.UserQueryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: metasequoia_pb.RbacPermissionsResponse) => void): grpcWeb.ClientReadableStream<metasequoia_pb.RbacPermissionsResponse>;

  getImplicitPermissionsForUser(
    request: metasequoia_pb.UserQueryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: metasequoia_pb.RbacPermissionsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Rbac/GetImplicitPermissionsForUser',
        request,
        metadata || {},
        this.methodDescriptorGetImplicitPermissionsForUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Rbac/GetImplicitPermissionsForUser',
    request,
    metadata || {},
    this.methodDescriptorGetImplicitPermissionsForUser);
  }

  methodDescriptorAddPermissionsForUser = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Rbac/AddPermissionsForUser',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.RbacPermissionsForUserRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.RbacPermissionsForUserRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  addPermissionsForUser(
    request: metasequoia_pb.RbacPermissionsForUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  addPermissionsForUser(
    request: metasequoia_pb.RbacPermissionsForUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  addPermissionsForUser(
    request: metasequoia_pb.RbacPermissionsForUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Rbac/AddPermissionsForUser',
        request,
        metadata || {},
        this.methodDescriptorAddPermissionsForUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Rbac/AddPermissionsForUser',
    request,
    metadata || {},
    this.methodDescriptorAddPermissionsForUser);
  }

  methodDescriptorDeletePermissionsForUser = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Rbac/DeletePermissionsForUser',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.RbacPermissionsForUserRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.RbacPermissionsForUserRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deletePermissionsForUser(
    request: metasequoia_pb.RbacPermissionsForUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deletePermissionsForUser(
    request: metasequoia_pb.RbacPermissionsForUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deletePermissionsForUser(
    request: metasequoia_pb.RbacPermissionsForUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Rbac/DeletePermissionsForUser',
        request,
        metadata || {},
        this.methodDescriptorDeletePermissionsForUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Rbac/DeletePermissionsForUser',
    request,
    metadata || {},
    this.methodDescriptorDeletePermissionsForUser);
  }

}

export class SettingClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorSet = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Setting/Set',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.SettingSetRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.SettingSetRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  set(
    request: metasequoia_pb.SettingSetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  set(
    request: metasequoia_pb.SettingSetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  set(
    request: metasequoia_pb.SettingSetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Setting/Set',
        request,
        metadata || {},
        this.methodDescriptorSet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Setting/Set',
    request,
    metadata || {},
    this.methodDescriptorSet);
  }

  methodDescriptorGet = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Setting/Get',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.SettingGetRequest,
    metasequoia_pb.SettingsResponse.Item,
    (request: metasequoia_pb.SettingGetRequest) => {
      return request.serializeBinary();
    },
    metasequoia_pb.SettingsResponse.Item.deserializeBinary
  );

  get(
    request: metasequoia_pb.SettingGetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<metasequoia_pb.SettingsResponse.Item>;

  get(
    request: metasequoia_pb.SettingGetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: metasequoia_pb.SettingsResponse.Item) => void): grpcWeb.ClientReadableStream<metasequoia_pb.SettingsResponse.Item>;

  get(
    request: metasequoia_pb.SettingGetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: metasequoia_pb.SettingsResponse.Item) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Setting/Get',
        request,
        metadata || {},
        this.methodDescriptorGet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Setting/Get',
    request,
    metadata || {},
    this.methodDescriptorGet);
  }

  methodDescriptorByUser = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Setting/ByUser',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.SettingByUserRequest,
    metasequoia_pb.SettingsResponse,
    (request: metasequoia_pb.SettingByUserRequest) => {
      return request.serializeBinary();
    },
    metasequoia_pb.SettingsResponse.deserializeBinary
  );

  byUser(
    request: metasequoia_pb.SettingByUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<metasequoia_pb.SettingsResponse>;

  byUser(
    request: metasequoia_pb.SettingByUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: metasequoia_pb.SettingsResponse) => void): grpcWeb.ClientReadableStream<metasequoia_pb.SettingsResponse>;

  byUser(
    request: metasequoia_pb.SettingByUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: metasequoia_pb.SettingsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Setting/ByUser',
        request,
        metadata || {},
        this.methodDescriptorByUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Setting/ByUser',
    request,
    metadata || {},
    this.methodDescriptorByUser);
  }

  methodDescriptorMy = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Setting/My',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    metasequoia_pb.SettingsResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    metasequoia_pb.SettingsResponse.deserializeBinary
  );

  my(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<metasequoia_pb.SettingsResponse>;

  my(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: metasequoia_pb.SettingsResponse) => void): grpcWeb.ClientReadableStream<metasequoia_pb.SettingsResponse>;

  my(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: metasequoia_pb.SettingsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Setting/My',
        request,
        metadata || {},
        this.methodDescriptorMy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Setting/My',
    request,
    metadata || {},
    this.methodDescriptorMy);
  }

  methodDescriptorGlobal = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Setting/Global',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    metasequoia_pb.SettingsResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    metasequoia_pb.SettingsResponse.deserializeBinary
  );

  global(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<metasequoia_pb.SettingsResponse>;

  global(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: metasequoia_pb.SettingsResponse) => void): grpcWeb.ClientReadableStream<metasequoia_pb.SettingsResponse>;

  global(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: metasequoia_pb.SettingsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Setting/Global',
        request,
        metadata || {},
        this.methodDescriptorGlobal,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Setting/Global',
    request,
    metadata || {},
    this.methodDescriptorGlobal);
  }

}

export class LocaleClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorSet = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Locale/Set',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.LocaleSetRequest,
    google_protobuf_empty_pb.Empty,
    (request: metasequoia_pb.LocaleSetRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  set(
    request: metasequoia_pb.LocaleSetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  set(
    request: metasequoia_pb.LocaleSetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  set(
    request: metasequoia_pb.LocaleSetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Locale/Set',
        request,
        metadata || {},
        this.methodDescriptorSet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Locale/Set',
    request,
    metadata || {},
    this.methodDescriptorSet);
  }

  methodDescriptorGet = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Locale/Get',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.LocaleGetRequest,
    metasequoia_pb.LocalesResponse.Item,
    (request: metasequoia_pb.LocaleGetRequest) => {
      return request.serializeBinary();
    },
    metasequoia_pb.LocalesResponse.Item.deserializeBinary
  );

  get(
    request: metasequoia_pb.LocaleGetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<metasequoia_pb.LocalesResponse.Item>;

  get(
    request: metasequoia_pb.LocaleGetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: metasequoia_pb.LocalesResponse.Item) => void): grpcWeb.ClientReadableStream<metasequoia_pb.LocalesResponse.Item>;

  get(
    request: metasequoia_pb.LocaleGetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: metasequoia_pb.LocalesResponse.Item) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Locale/Get',
        request,
        metadata || {},
        this.methodDescriptorGet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Locale/Get',
    request,
    metadata || {},
    this.methodDescriptorGet);
  }

  methodDescriptorByLang = new grpcWeb.MethodDescriptor(
    '/palm.metasequoia.v1.Locale/ByLang',
    grpcWeb.MethodType.UNARY,
    metasequoia_pb.LocaleByLangRequest,
    metasequoia_pb.LocalesResponse,
    (request: metasequoia_pb.LocaleByLangRequest) => {
      return request.serializeBinary();
    },
    metasequoia_pb.LocalesResponse.deserializeBinary
  );

  byLang(
    request: metasequoia_pb.LocaleByLangRequest,
    metadata?: grpcWeb.Metadata | null): Promise<metasequoia_pb.LocalesResponse>;

  byLang(
    request: metasequoia_pb.LocaleByLangRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: metasequoia_pb.LocalesResponse) => void): grpcWeb.ClientReadableStream<metasequoia_pb.LocalesResponse>;

  byLang(
    request: metasequoia_pb.LocaleByLangRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: metasequoia_pb.LocalesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/palm.metasequoia.v1.Locale/ByLang',
        request,
        metadata || {},
        this.methodDescriptorByLang,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/palm.metasequoia.v1.Locale/ByLang',
    request,
    metadata || {},
    this.methodDescriptorByLang);
  }

}

