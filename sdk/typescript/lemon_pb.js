// source: lemon.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
goog.exportSymbol('proto.palm.lemon.v1.CleanWhiteHomePage', null, global);
goog.exportSymbol('proto.palm.lemon.v1.CleanWhiteLayout', null, global);
goog.exportSymbol('proto.palm.lemon.v1.DocsyHomePage', null, global);
goog.exportSymbol('proto.palm.lemon.v1.DocsyLayout', null, global);
goog.exportSymbol('proto.palm.lemon.v1.GantryHomePage', null, global);
goog.exportSymbol('proto.palm.lemon.v1.GantryLayout', null, global);
goog.exportSymbol('proto.palm.lemon.v1.HinodeHomePage', null, global);
goog.exportSymbol('proto.palm.lemon.v1.HinodeLayout', null, global);
goog.exportSymbol('proto.palm.lemon.v1.Page', null, global);
goog.exportSymbol('proto.palm.lemon.v1.Rss', null, global);
goog.exportSymbol('proto.palm.lemon.v1.Rss.Link', null, global);
goog.exportSymbol('proto.palm.lemon.v1.SiteHomePageRequest', null, global);
goog.exportSymbol('proto.palm.lemon.v1.SiteHomePageResponse', null, global);
goog.exportSymbol('proto.palm.lemon.v1.SiteHomePageResponse.PayloadCase', null, global);
goog.exportSymbol('proto.palm.lemon.v1.SiteLayoutRequest', null, global);
goog.exportSymbol('proto.palm.lemon.v1.SiteLayoutResponse', null, global);
goog.exportSymbol('proto.palm.lemon.v1.SiteLayoutResponse.LayoutCase', null, global);
goog.exportSymbol('proto.palm.lemon.v1.SiteRssResponse', null, global);
goog.exportSymbol('proto.palm.lemon.v1.SiteShowPageRequest', null, global);
goog.exportSymbol('proto.palm.lemon.v1.SiteShowPageResponse', null, global);
goog.exportSymbol('proto.palm.lemon.v1.SiteShowPageResponse.Link', null, global);
goog.exportSymbol('proto.palm.lemon.v1.SiteSitemapResponse', null, global);
goog.exportSymbol('proto.palm.lemon.v1.Sitemap', null, global);
goog.exportSymbol('proto.palm.lemon.v1.Sitemap.BodyCase', null, global);
goog.exportSymbol('proto.palm.lemon.v1.Sitemap.Index', null, global);
goog.exportSymbol('proto.palm.lemon.v1.Sitemap.Link', null, global);
goog.exportSymbol('proto.palm.lemon.v1.Sitemap.Link.ChangeFreq', null, global);
goog.exportSymbol('proto.palm.lemon.v1.Sitemap.UrlSet', null, global);
goog.exportSymbol('proto.palm.lemon.v1.Theme', null, global);
goog.exportSymbol('proto.palm.lemon.v1.UniversalHomePage', null, global);
goog.exportSymbol('proto.palm.lemon.v1.UniversalLayout', null, global);
goog.exportSymbol('proto.palm.lemon.v1.XCorporationHomePage', null, global);
goog.exportSymbol('proto.palm.lemon.v1.XCorporationLayout', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.SiteLayoutRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.SiteLayoutRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.SiteLayoutRequest.displayName = 'proto.palm.lemon.v1.SiteLayoutRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.SiteLayoutResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.palm.lemon.v1.SiteLayoutResponse.oneofGroups_);
};
goog.inherits(proto.palm.lemon.v1.SiteLayoutResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.SiteLayoutResponse.displayName = 'proto.palm.lemon.v1.SiteLayoutResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.SiteRssResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.SiteRssResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.SiteRssResponse.displayName = 'proto.palm.lemon.v1.SiteRssResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.SiteSitemapResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.SiteSitemapResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.SiteSitemapResponse.displayName = 'proto.palm.lemon.v1.SiteSitemapResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.SiteShowPageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.SiteShowPageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.SiteShowPageRequest.displayName = 'proto.palm.lemon.v1.SiteShowPageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.SiteShowPageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.palm.lemon.v1.SiteShowPageResponse.repeatedFields_, null);
};
goog.inherits(proto.palm.lemon.v1.SiteShowPageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.SiteShowPageResponse.displayName = 'proto.palm.lemon.v1.SiteShowPageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.SiteShowPageResponse.Link = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.SiteShowPageResponse.Link, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.SiteShowPageResponse.Link.displayName = 'proto.palm.lemon.v1.SiteShowPageResponse.Link';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.SiteHomePageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.SiteHomePageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.SiteHomePageRequest.displayName = 'proto.palm.lemon.v1.SiteHomePageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.SiteHomePageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.palm.lemon.v1.SiteHomePageResponse.oneofGroups_);
};
goog.inherits(proto.palm.lemon.v1.SiteHomePageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.SiteHomePageResponse.displayName = 'proto.palm.lemon.v1.SiteHomePageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.CleanWhiteLayout = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.CleanWhiteLayout, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.CleanWhiteLayout.displayName = 'proto.palm.lemon.v1.CleanWhiteLayout';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.DocsyLayout = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.DocsyLayout, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.DocsyLayout.displayName = 'proto.palm.lemon.v1.DocsyLayout';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.GantryLayout = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.GantryLayout, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.GantryLayout.displayName = 'proto.palm.lemon.v1.GantryLayout';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.HinodeLayout = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.HinodeLayout, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.HinodeLayout.displayName = 'proto.palm.lemon.v1.HinodeLayout';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.UniversalLayout = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.UniversalLayout, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.UniversalLayout.displayName = 'proto.palm.lemon.v1.UniversalLayout';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.XCorporationLayout = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.XCorporationLayout, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.XCorporationLayout.displayName = 'proto.palm.lemon.v1.XCorporationLayout';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.CleanWhiteHomePage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.CleanWhiteHomePage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.CleanWhiteHomePage.displayName = 'proto.palm.lemon.v1.CleanWhiteHomePage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.DocsyHomePage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.DocsyHomePage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.DocsyHomePage.displayName = 'proto.palm.lemon.v1.DocsyHomePage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.GantryHomePage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.GantryHomePage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.GantryHomePage.displayName = 'proto.palm.lemon.v1.GantryHomePage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.HinodeHomePage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.HinodeHomePage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.HinodeHomePage.displayName = 'proto.palm.lemon.v1.HinodeHomePage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.UniversalHomePage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.UniversalHomePage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.UniversalHomePage.displayName = 'proto.palm.lemon.v1.UniversalHomePage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.XCorporationHomePage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.XCorporationHomePage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.XCorporationHomePage.displayName = 'proto.palm.lemon.v1.XCorporationHomePage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.Rss = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.palm.lemon.v1.Rss.repeatedFields_, null);
};
goog.inherits(proto.palm.lemon.v1.Rss, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.Rss.displayName = 'proto.palm.lemon.v1.Rss';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.Rss.Link = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.Rss.Link, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.Rss.Link.displayName = 'proto.palm.lemon.v1.Rss.Link';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.Sitemap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.palm.lemon.v1.Sitemap.oneofGroups_);
};
goog.inherits(proto.palm.lemon.v1.Sitemap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.Sitemap.displayName = 'proto.palm.lemon.v1.Sitemap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.Sitemap.Link = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.Sitemap.Link, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.Sitemap.Link.displayName = 'proto.palm.lemon.v1.Sitemap.Link';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.Sitemap.UrlSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.palm.lemon.v1.Sitemap.UrlSet.repeatedFields_, null);
};
goog.inherits(proto.palm.lemon.v1.Sitemap.UrlSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.Sitemap.UrlSet.displayName = 'proto.palm.lemon.v1.Sitemap.UrlSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.Sitemap.Index = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.palm.lemon.v1.Sitemap.Index.repeatedFields_, null);
};
goog.inherits(proto.palm.lemon.v1.Sitemap.Index, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.Sitemap.Index.displayName = 'proto.palm.lemon.v1.Sitemap.Index';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.palm.lemon.v1.Page = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.palm.lemon.v1.Page, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.palm.lemon.v1.Page.displayName = 'proto.palm.lemon.v1.Page';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.SiteLayoutRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.SiteLayoutRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.SiteLayoutRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteLayoutRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    locale: jspb.Message.getFieldWithDefault(msg, 1, ""),
    theme: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.SiteLayoutRequest}
 */
proto.palm.lemon.v1.SiteLayoutRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.SiteLayoutRequest;
  return proto.palm.lemon.v1.SiteLayoutRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.SiteLayoutRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.SiteLayoutRequest}
 */
proto.palm.lemon.v1.SiteLayoutRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocale(value);
      break;
    case 2:
      var value = /** @type {!proto.palm.lemon.v1.Theme} */ (reader.readEnum());
      msg.setTheme(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.SiteLayoutRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.SiteLayoutRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.SiteLayoutRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteLayoutRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocale();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTheme();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string locale = 1;
 * @return {string}
 */
proto.palm.lemon.v1.SiteLayoutRequest.prototype.getLocale = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.lemon.v1.SiteLayoutRequest} returns this
 */
proto.palm.lemon.v1.SiteLayoutRequest.prototype.setLocale = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Theme theme = 2;
 * @return {!proto.palm.lemon.v1.Theme}
 */
proto.palm.lemon.v1.SiteLayoutRequest.prototype.getTheme = function() {
  return /** @type {!proto.palm.lemon.v1.Theme} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.palm.lemon.v1.Theme} value
 * @return {!proto.palm.lemon.v1.SiteLayoutRequest} returns this
 */
proto.palm.lemon.v1.SiteLayoutRequest.prototype.setTheme = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.palm.lemon.v1.SiteLayoutResponse.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.palm.lemon.v1.SiteLayoutResponse.LayoutCase = {
  LAYOUT_NOT_SET: 0,
  CLEAN_WHITE: 1,
  DOCSY: 2,
  GANTRY: 3,
  HINODE: 4,
  UNIVERSAL: 5,
  X_CORPORATION: 6
};

/**
 * @return {proto.palm.lemon.v1.SiteLayoutResponse.LayoutCase}
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.getLayoutCase = function() {
  return /** @type {proto.palm.lemon.v1.SiteLayoutResponse.LayoutCase} */(jspb.Message.computeOneofCase(this, proto.palm.lemon.v1.SiteLayoutResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.SiteLayoutResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.SiteLayoutResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteLayoutResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    cleanWhite: (f = msg.getCleanWhite()) && proto.palm.lemon.v1.CleanWhiteLayout.toObject(includeInstance, f),
    docsy: (f = msg.getDocsy()) && proto.palm.lemon.v1.DocsyLayout.toObject(includeInstance, f),
    gantry: (f = msg.getGantry()) && proto.palm.lemon.v1.GantryLayout.toObject(includeInstance, f),
    hinode: (f = msg.getHinode()) && proto.palm.lemon.v1.HinodeLayout.toObject(includeInstance, f),
    universal: (f = msg.getUniversal()) && proto.palm.lemon.v1.UniversalLayout.toObject(includeInstance, f),
    xCorporation: (f = msg.getXCorporation()) && proto.palm.lemon.v1.XCorporationLayout.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.SiteLayoutResponse}
 */
proto.palm.lemon.v1.SiteLayoutResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.SiteLayoutResponse;
  return proto.palm.lemon.v1.SiteLayoutResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.SiteLayoutResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.SiteLayoutResponse}
 */
proto.palm.lemon.v1.SiteLayoutResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.palm.lemon.v1.CleanWhiteLayout;
      reader.readMessage(value,proto.palm.lemon.v1.CleanWhiteLayout.deserializeBinaryFromReader);
      msg.setCleanWhite(value);
      break;
    case 2:
      var value = new proto.palm.lemon.v1.DocsyLayout;
      reader.readMessage(value,proto.palm.lemon.v1.DocsyLayout.deserializeBinaryFromReader);
      msg.setDocsy(value);
      break;
    case 3:
      var value = new proto.palm.lemon.v1.GantryLayout;
      reader.readMessage(value,proto.palm.lemon.v1.GantryLayout.deserializeBinaryFromReader);
      msg.setGantry(value);
      break;
    case 4:
      var value = new proto.palm.lemon.v1.HinodeLayout;
      reader.readMessage(value,proto.palm.lemon.v1.HinodeLayout.deserializeBinaryFromReader);
      msg.setHinode(value);
      break;
    case 5:
      var value = new proto.palm.lemon.v1.UniversalLayout;
      reader.readMessage(value,proto.palm.lemon.v1.UniversalLayout.deserializeBinaryFromReader);
      msg.setUniversal(value);
      break;
    case 6:
      var value = new proto.palm.lemon.v1.XCorporationLayout;
      reader.readMessage(value,proto.palm.lemon.v1.XCorporationLayout.deserializeBinaryFromReader);
      msg.setXCorporation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.SiteLayoutResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.SiteLayoutResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteLayoutResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCleanWhite();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.palm.lemon.v1.CleanWhiteLayout.serializeBinaryToWriter
    );
  }
  f = message.getDocsy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.palm.lemon.v1.DocsyLayout.serializeBinaryToWriter
    );
  }
  f = message.getGantry();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.palm.lemon.v1.GantryLayout.serializeBinaryToWriter
    );
  }
  f = message.getHinode();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.palm.lemon.v1.HinodeLayout.serializeBinaryToWriter
    );
  }
  f = message.getUniversal();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.palm.lemon.v1.UniversalLayout.serializeBinaryToWriter
    );
  }
  f = message.getXCorporation();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.palm.lemon.v1.XCorporationLayout.serializeBinaryToWriter
    );
  }
};


/**
 * optional CleanWhiteLayout clean_white = 1;
 * @return {?proto.palm.lemon.v1.CleanWhiteLayout}
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.getCleanWhite = function() {
  return /** @type{?proto.palm.lemon.v1.CleanWhiteLayout} */ (
    jspb.Message.getWrapperField(this, proto.palm.lemon.v1.CleanWhiteLayout, 1));
};


/**
 * @param {?proto.palm.lemon.v1.CleanWhiteLayout|undefined} value
 * @return {!proto.palm.lemon.v1.SiteLayoutResponse} returns this
*/
proto.palm.lemon.v1.SiteLayoutResponse.prototype.setCleanWhite = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.palm.lemon.v1.SiteLayoutResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.lemon.v1.SiteLayoutResponse} returns this
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.clearCleanWhite = function() {
  return this.setCleanWhite(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.hasCleanWhite = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DocsyLayout docsy = 2;
 * @return {?proto.palm.lemon.v1.DocsyLayout}
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.getDocsy = function() {
  return /** @type{?proto.palm.lemon.v1.DocsyLayout} */ (
    jspb.Message.getWrapperField(this, proto.palm.lemon.v1.DocsyLayout, 2));
};


/**
 * @param {?proto.palm.lemon.v1.DocsyLayout|undefined} value
 * @return {!proto.palm.lemon.v1.SiteLayoutResponse} returns this
*/
proto.palm.lemon.v1.SiteLayoutResponse.prototype.setDocsy = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.palm.lemon.v1.SiteLayoutResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.lemon.v1.SiteLayoutResponse} returns this
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.clearDocsy = function() {
  return this.setDocsy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.hasDocsy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GantryLayout gantry = 3;
 * @return {?proto.palm.lemon.v1.GantryLayout}
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.getGantry = function() {
  return /** @type{?proto.palm.lemon.v1.GantryLayout} */ (
    jspb.Message.getWrapperField(this, proto.palm.lemon.v1.GantryLayout, 3));
};


/**
 * @param {?proto.palm.lemon.v1.GantryLayout|undefined} value
 * @return {!proto.palm.lemon.v1.SiteLayoutResponse} returns this
*/
proto.palm.lemon.v1.SiteLayoutResponse.prototype.setGantry = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.palm.lemon.v1.SiteLayoutResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.lemon.v1.SiteLayoutResponse} returns this
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.clearGantry = function() {
  return this.setGantry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.hasGantry = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional HinodeLayout hinode = 4;
 * @return {?proto.palm.lemon.v1.HinodeLayout}
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.getHinode = function() {
  return /** @type{?proto.palm.lemon.v1.HinodeLayout} */ (
    jspb.Message.getWrapperField(this, proto.palm.lemon.v1.HinodeLayout, 4));
};


/**
 * @param {?proto.palm.lemon.v1.HinodeLayout|undefined} value
 * @return {!proto.palm.lemon.v1.SiteLayoutResponse} returns this
*/
proto.palm.lemon.v1.SiteLayoutResponse.prototype.setHinode = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.palm.lemon.v1.SiteLayoutResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.lemon.v1.SiteLayoutResponse} returns this
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.clearHinode = function() {
  return this.setHinode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.hasHinode = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional UniversalLayout universal = 5;
 * @return {?proto.palm.lemon.v1.UniversalLayout}
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.getUniversal = function() {
  return /** @type{?proto.palm.lemon.v1.UniversalLayout} */ (
    jspb.Message.getWrapperField(this, proto.palm.lemon.v1.UniversalLayout, 5));
};


/**
 * @param {?proto.palm.lemon.v1.UniversalLayout|undefined} value
 * @return {!proto.palm.lemon.v1.SiteLayoutResponse} returns this
*/
proto.palm.lemon.v1.SiteLayoutResponse.prototype.setUniversal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.palm.lemon.v1.SiteLayoutResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.lemon.v1.SiteLayoutResponse} returns this
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.clearUniversal = function() {
  return this.setUniversal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.hasUniversal = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional XCorporationLayout x_corporation = 6;
 * @return {?proto.palm.lemon.v1.XCorporationLayout}
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.getXCorporation = function() {
  return /** @type{?proto.palm.lemon.v1.XCorporationLayout} */ (
    jspb.Message.getWrapperField(this, proto.palm.lemon.v1.XCorporationLayout, 6));
};


/**
 * @param {?proto.palm.lemon.v1.XCorporationLayout|undefined} value
 * @return {!proto.palm.lemon.v1.SiteLayoutResponse} returns this
*/
proto.palm.lemon.v1.SiteLayoutResponse.prototype.setXCorporation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.palm.lemon.v1.SiteLayoutResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.lemon.v1.SiteLayoutResponse} returns this
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.clearXCorporation = function() {
  return this.setXCorporation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.lemon.v1.SiteLayoutResponse.prototype.hasXCorporation = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.SiteRssResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.SiteRssResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.SiteRssResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteRssResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsMap: (f = msg.getItemsMap()) ? f.toObject(includeInstance, proto.palm.lemon.v1.Rss.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.SiteRssResponse}
 */
proto.palm.lemon.v1.SiteRssResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.SiteRssResponse;
  return proto.palm.lemon.v1.SiteRssResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.SiteRssResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.SiteRssResponse}
 */
proto.palm.lemon.v1.SiteRssResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getItemsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.palm.lemon.v1.Rss.deserializeBinaryFromReader, "", new proto.palm.lemon.v1.Rss());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.SiteRssResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.SiteRssResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.SiteRssResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteRssResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.palm.lemon.v1.Rss.serializeBinaryToWriter);
  }
};


/**
 * map<string, Rss> items = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.palm.lemon.v1.Rss>}
 */
proto.palm.lemon.v1.SiteRssResponse.prototype.getItemsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.palm.lemon.v1.Rss>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.palm.lemon.v1.Rss));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.palm.lemon.v1.SiteRssResponse} returns this
 */
proto.palm.lemon.v1.SiteRssResponse.prototype.clearItemsMap = function() {
  this.getItemsMap().clear();
  return this;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.SiteSitemapResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.SiteSitemapResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.SiteSitemapResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteSitemapResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsMap: (f = msg.getItemsMap()) ? f.toObject(includeInstance, proto.palm.lemon.v1.Sitemap.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.SiteSitemapResponse}
 */
proto.palm.lemon.v1.SiteSitemapResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.SiteSitemapResponse;
  return proto.palm.lemon.v1.SiteSitemapResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.SiteSitemapResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.SiteSitemapResponse}
 */
proto.palm.lemon.v1.SiteSitemapResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getItemsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.palm.lemon.v1.Sitemap.deserializeBinaryFromReader, "", new proto.palm.lemon.v1.Sitemap());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.SiteSitemapResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.SiteSitemapResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.SiteSitemapResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteSitemapResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.palm.lemon.v1.Sitemap.serializeBinaryToWriter);
  }
};


/**
 * map<string, Sitemap> items = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.palm.lemon.v1.Sitemap>}
 */
proto.palm.lemon.v1.SiteSitemapResponse.prototype.getItemsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.palm.lemon.v1.Sitemap>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.palm.lemon.v1.Sitemap));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.palm.lemon.v1.SiteSitemapResponse} returns this
 */
proto.palm.lemon.v1.SiteSitemapResponse.prototype.clearItemsMap = function() {
  this.getItemsMap().clear();
  return this;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.SiteShowPageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.SiteShowPageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.SiteShowPageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteShowPageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    slug: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.SiteShowPageRequest}
 */
proto.palm.lemon.v1.SiteShowPageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.SiteShowPageRequest;
  return proto.palm.lemon.v1.SiteShowPageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.SiteShowPageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.SiteShowPageRequest}
 */
proto.palm.lemon.v1.SiteShowPageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.SiteShowPageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.SiteShowPageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.SiteShowPageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteShowPageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlug();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string slug = 1;
 * @return {string}
 */
proto.palm.lemon.v1.SiteShowPageRequest.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.lemon.v1.SiteShowPageRequest} returns this
 */
proto.palm.lemon.v1.SiteShowPageRequest.prototype.setSlug = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.palm.lemon.v1.SiteShowPageResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.SiteShowPageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.SiteShowPageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.SiteShowPageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteShowPageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    page: (f = msg.getPage()) && proto.palm.lemon.v1.Page.toObject(includeInstance, f),
    relatedList: jspb.Message.toObjectList(msg.getRelatedList(),
    proto.palm.lemon.v1.SiteShowPageResponse.Link.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.SiteShowPageResponse}
 */
proto.palm.lemon.v1.SiteShowPageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.SiteShowPageResponse;
  return proto.palm.lemon.v1.SiteShowPageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.SiteShowPageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.SiteShowPageResponse}
 */
proto.palm.lemon.v1.SiteShowPageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.palm.lemon.v1.Page;
      reader.readMessage(value,proto.palm.lemon.v1.Page.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    case 2:
      var value = new proto.palm.lemon.v1.SiteShowPageResponse.Link;
      reader.readMessage(value,proto.palm.lemon.v1.SiteShowPageResponse.Link.deserializeBinaryFromReader);
      msg.addRelated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.SiteShowPageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.SiteShowPageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.SiteShowPageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteShowPageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.palm.lemon.v1.Page.serializeBinaryToWriter
    );
  }
  f = message.getRelatedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.palm.lemon.v1.SiteShowPageResponse.Link.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.SiteShowPageResponse.Link.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.SiteShowPageResponse.Link.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.SiteShowPageResponse.Link} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteShowPageResponse.Link.toObject = function(includeInstance, msg) {
  var f, obj = {
    slug: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.SiteShowPageResponse.Link}
 */
proto.palm.lemon.v1.SiteShowPageResponse.Link.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.SiteShowPageResponse.Link;
  return proto.palm.lemon.v1.SiteShowPageResponse.Link.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.SiteShowPageResponse.Link} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.SiteShowPageResponse.Link}
 */
proto.palm.lemon.v1.SiteShowPageResponse.Link.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.SiteShowPageResponse.Link.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.SiteShowPageResponse.Link.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.SiteShowPageResponse.Link} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteShowPageResponse.Link.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlug();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string slug = 1;
 * @return {string}
 */
proto.palm.lemon.v1.SiteShowPageResponse.Link.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.lemon.v1.SiteShowPageResponse.Link} returns this
 */
proto.palm.lemon.v1.SiteShowPageResponse.Link.prototype.setSlug = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.palm.lemon.v1.SiteShowPageResponse.Link.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.lemon.v1.SiteShowPageResponse.Link} returns this
 */
proto.palm.lemon.v1.SiteShowPageResponse.Link.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Page page = 1;
 * @return {?proto.palm.lemon.v1.Page}
 */
proto.palm.lemon.v1.SiteShowPageResponse.prototype.getPage = function() {
  return /** @type{?proto.palm.lemon.v1.Page} */ (
    jspb.Message.getWrapperField(this, proto.palm.lemon.v1.Page, 1));
};


/**
 * @param {?proto.palm.lemon.v1.Page|undefined} value
 * @return {!proto.palm.lemon.v1.SiteShowPageResponse} returns this
*/
proto.palm.lemon.v1.SiteShowPageResponse.prototype.setPage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.lemon.v1.SiteShowPageResponse} returns this
 */
proto.palm.lemon.v1.SiteShowPageResponse.prototype.clearPage = function() {
  return this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.lemon.v1.SiteShowPageResponse.prototype.hasPage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Link related = 2;
 * @return {!Array<!proto.palm.lemon.v1.SiteShowPageResponse.Link>}
 */
proto.palm.lemon.v1.SiteShowPageResponse.prototype.getRelatedList = function() {
  return /** @type{!Array<!proto.palm.lemon.v1.SiteShowPageResponse.Link>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.palm.lemon.v1.SiteShowPageResponse.Link, 2));
};


/**
 * @param {!Array<!proto.palm.lemon.v1.SiteShowPageResponse.Link>} value
 * @return {!proto.palm.lemon.v1.SiteShowPageResponse} returns this
*/
proto.palm.lemon.v1.SiteShowPageResponse.prototype.setRelatedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.palm.lemon.v1.SiteShowPageResponse.Link=} opt_value
 * @param {number=} opt_index
 * @return {!proto.palm.lemon.v1.SiteShowPageResponse.Link}
 */
proto.palm.lemon.v1.SiteShowPageResponse.prototype.addRelated = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.palm.lemon.v1.SiteShowPageResponse.Link, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.palm.lemon.v1.SiteShowPageResponse} returns this
 */
proto.palm.lemon.v1.SiteShowPageResponse.prototype.clearRelatedList = function() {
  return this.setRelatedList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.SiteHomePageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.SiteHomePageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.SiteHomePageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteHomePageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    locale: jspb.Message.getFieldWithDefault(msg, 1, ""),
    theme: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.SiteHomePageRequest}
 */
proto.palm.lemon.v1.SiteHomePageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.SiteHomePageRequest;
  return proto.palm.lemon.v1.SiteHomePageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.SiteHomePageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.SiteHomePageRequest}
 */
proto.palm.lemon.v1.SiteHomePageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocale(value);
      break;
    case 2:
      var value = /** @type {!proto.palm.lemon.v1.Theme} */ (reader.readEnum());
      msg.setTheme(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.SiteHomePageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.SiteHomePageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.SiteHomePageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteHomePageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocale();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTheme();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string locale = 1;
 * @return {string}
 */
proto.palm.lemon.v1.SiteHomePageRequest.prototype.getLocale = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.lemon.v1.SiteHomePageRequest} returns this
 */
proto.palm.lemon.v1.SiteHomePageRequest.prototype.setLocale = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Theme theme = 2;
 * @return {!proto.palm.lemon.v1.Theme}
 */
proto.palm.lemon.v1.SiteHomePageRequest.prototype.getTheme = function() {
  return /** @type {!proto.palm.lemon.v1.Theme} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.palm.lemon.v1.Theme} value
 * @return {!proto.palm.lemon.v1.SiteHomePageRequest} returns this
 */
proto.palm.lemon.v1.SiteHomePageRequest.prototype.setTheme = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.palm.lemon.v1.SiteHomePageResponse.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.palm.lemon.v1.SiteHomePageResponse.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  CLEAN_WHITE: 1,
  DOCSY: 2,
  GANTRY: 3,
  HINODE: 4,
  UNIVERSAL: 5,
  X_CORPORATION: 6
};

/**
 * @return {proto.palm.lemon.v1.SiteHomePageResponse.PayloadCase}
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.getPayloadCase = function() {
  return /** @type {proto.palm.lemon.v1.SiteHomePageResponse.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.palm.lemon.v1.SiteHomePageResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.SiteHomePageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.SiteHomePageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteHomePageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    cleanWhite: (f = msg.getCleanWhite()) && proto.palm.lemon.v1.CleanWhiteHomePage.toObject(includeInstance, f),
    docsy: (f = msg.getDocsy()) && proto.palm.lemon.v1.DocsyHomePage.toObject(includeInstance, f),
    gantry: (f = msg.getGantry()) && proto.palm.lemon.v1.GantryHomePage.toObject(includeInstance, f),
    hinode: (f = msg.getHinode()) && proto.palm.lemon.v1.HinodeHomePage.toObject(includeInstance, f),
    universal: (f = msg.getUniversal()) && proto.palm.lemon.v1.UniversalHomePage.toObject(includeInstance, f),
    xCorporation: (f = msg.getXCorporation()) && proto.palm.lemon.v1.XCorporationHomePage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.SiteHomePageResponse}
 */
proto.palm.lemon.v1.SiteHomePageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.SiteHomePageResponse;
  return proto.palm.lemon.v1.SiteHomePageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.SiteHomePageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.SiteHomePageResponse}
 */
proto.palm.lemon.v1.SiteHomePageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.palm.lemon.v1.CleanWhiteHomePage;
      reader.readMessage(value,proto.palm.lemon.v1.CleanWhiteHomePage.deserializeBinaryFromReader);
      msg.setCleanWhite(value);
      break;
    case 2:
      var value = new proto.palm.lemon.v1.DocsyHomePage;
      reader.readMessage(value,proto.palm.lemon.v1.DocsyHomePage.deserializeBinaryFromReader);
      msg.setDocsy(value);
      break;
    case 3:
      var value = new proto.palm.lemon.v1.GantryHomePage;
      reader.readMessage(value,proto.palm.lemon.v1.GantryHomePage.deserializeBinaryFromReader);
      msg.setGantry(value);
      break;
    case 4:
      var value = new proto.palm.lemon.v1.HinodeHomePage;
      reader.readMessage(value,proto.palm.lemon.v1.HinodeHomePage.deserializeBinaryFromReader);
      msg.setHinode(value);
      break;
    case 5:
      var value = new proto.palm.lemon.v1.UniversalHomePage;
      reader.readMessage(value,proto.palm.lemon.v1.UniversalHomePage.deserializeBinaryFromReader);
      msg.setUniversal(value);
      break;
    case 6:
      var value = new proto.palm.lemon.v1.XCorporationHomePage;
      reader.readMessage(value,proto.palm.lemon.v1.XCorporationHomePage.deserializeBinaryFromReader);
      msg.setXCorporation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.SiteHomePageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.SiteHomePageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.SiteHomePageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCleanWhite();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.palm.lemon.v1.CleanWhiteHomePage.serializeBinaryToWriter
    );
  }
  f = message.getDocsy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.palm.lemon.v1.DocsyHomePage.serializeBinaryToWriter
    );
  }
  f = message.getGantry();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.palm.lemon.v1.GantryHomePage.serializeBinaryToWriter
    );
  }
  f = message.getHinode();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.palm.lemon.v1.HinodeHomePage.serializeBinaryToWriter
    );
  }
  f = message.getUniversal();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.palm.lemon.v1.UniversalHomePage.serializeBinaryToWriter
    );
  }
  f = message.getXCorporation();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.palm.lemon.v1.XCorporationHomePage.serializeBinaryToWriter
    );
  }
};


/**
 * optional CleanWhiteHomePage clean_white = 1;
 * @return {?proto.palm.lemon.v1.CleanWhiteHomePage}
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.getCleanWhite = function() {
  return /** @type{?proto.palm.lemon.v1.CleanWhiteHomePage} */ (
    jspb.Message.getWrapperField(this, proto.palm.lemon.v1.CleanWhiteHomePage, 1));
};


/**
 * @param {?proto.palm.lemon.v1.CleanWhiteHomePage|undefined} value
 * @return {!proto.palm.lemon.v1.SiteHomePageResponse} returns this
*/
proto.palm.lemon.v1.SiteHomePageResponse.prototype.setCleanWhite = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.palm.lemon.v1.SiteHomePageResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.lemon.v1.SiteHomePageResponse} returns this
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.clearCleanWhite = function() {
  return this.setCleanWhite(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.hasCleanWhite = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DocsyHomePage docsy = 2;
 * @return {?proto.palm.lemon.v1.DocsyHomePage}
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.getDocsy = function() {
  return /** @type{?proto.palm.lemon.v1.DocsyHomePage} */ (
    jspb.Message.getWrapperField(this, proto.palm.lemon.v1.DocsyHomePage, 2));
};


/**
 * @param {?proto.palm.lemon.v1.DocsyHomePage|undefined} value
 * @return {!proto.palm.lemon.v1.SiteHomePageResponse} returns this
*/
proto.palm.lemon.v1.SiteHomePageResponse.prototype.setDocsy = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.palm.lemon.v1.SiteHomePageResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.lemon.v1.SiteHomePageResponse} returns this
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.clearDocsy = function() {
  return this.setDocsy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.hasDocsy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GantryHomePage gantry = 3;
 * @return {?proto.palm.lemon.v1.GantryHomePage}
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.getGantry = function() {
  return /** @type{?proto.palm.lemon.v1.GantryHomePage} */ (
    jspb.Message.getWrapperField(this, proto.palm.lemon.v1.GantryHomePage, 3));
};


/**
 * @param {?proto.palm.lemon.v1.GantryHomePage|undefined} value
 * @return {!proto.palm.lemon.v1.SiteHomePageResponse} returns this
*/
proto.palm.lemon.v1.SiteHomePageResponse.prototype.setGantry = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.palm.lemon.v1.SiteHomePageResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.lemon.v1.SiteHomePageResponse} returns this
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.clearGantry = function() {
  return this.setGantry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.hasGantry = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional HinodeHomePage hinode = 4;
 * @return {?proto.palm.lemon.v1.HinodeHomePage}
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.getHinode = function() {
  return /** @type{?proto.palm.lemon.v1.HinodeHomePage} */ (
    jspb.Message.getWrapperField(this, proto.palm.lemon.v1.HinodeHomePage, 4));
};


/**
 * @param {?proto.palm.lemon.v1.HinodeHomePage|undefined} value
 * @return {!proto.palm.lemon.v1.SiteHomePageResponse} returns this
*/
proto.palm.lemon.v1.SiteHomePageResponse.prototype.setHinode = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.palm.lemon.v1.SiteHomePageResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.lemon.v1.SiteHomePageResponse} returns this
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.clearHinode = function() {
  return this.setHinode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.hasHinode = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional UniversalHomePage universal = 5;
 * @return {?proto.palm.lemon.v1.UniversalHomePage}
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.getUniversal = function() {
  return /** @type{?proto.palm.lemon.v1.UniversalHomePage} */ (
    jspb.Message.getWrapperField(this, proto.palm.lemon.v1.UniversalHomePage, 5));
};


/**
 * @param {?proto.palm.lemon.v1.UniversalHomePage|undefined} value
 * @return {!proto.palm.lemon.v1.SiteHomePageResponse} returns this
*/
proto.palm.lemon.v1.SiteHomePageResponse.prototype.setUniversal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.palm.lemon.v1.SiteHomePageResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.lemon.v1.SiteHomePageResponse} returns this
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.clearUniversal = function() {
  return this.setUniversal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.hasUniversal = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional XCorporationHomePage x_corporation = 6;
 * @return {?proto.palm.lemon.v1.XCorporationHomePage}
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.getXCorporation = function() {
  return /** @type{?proto.palm.lemon.v1.XCorporationHomePage} */ (
    jspb.Message.getWrapperField(this, proto.palm.lemon.v1.XCorporationHomePage, 6));
};


/**
 * @param {?proto.palm.lemon.v1.XCorporationHomePage|undefined} value
 * @return {!proto.palm.lemon.v1.SiteHomePageResponse} returns this
*/
proto.palm.lemon.v1.SiteHomePageResponse.prototype.setXCorporation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.palm.lemon.v1.SiteHomePageResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.lemon.v1.SiteHomePageResponse} returns this
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.clearXCorporation = function() {
  return this.setXCorporation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.lemon.v1.SiteHomePageResponse.prototype.hasXCorporation = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.CleanWhiteLayout.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.CleanWhiteLayout.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.CleanWhiteLayout} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.CleanWhiteLayout.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.CleanWhiteLayout}
 */
proto.palm.lemon.v1.CleanWhiteLayout.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.CleanWhiteLayout;
  return proto.palm.lemon.v1.CleanWhiteLayout.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.CleanWhiteLayout} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.CleanWhiteLayout}
 */
proto.palm.lemon.v1.CleanWhiteLayout.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.CleanWhiteLayout.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.CleanWhiteLayout.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.CleanWhiteLayout} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.CleanWhiteLayout.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.DocsyLayout.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.DocsyLayout.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.DocsyLayout} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.DocsyLayout.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.DocsyLayout}
 */
proto.palm.lemon.v1.DocsyLayout.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.DocsyLayout;
  return proto.palm.lemon.v1.DocsyLayout.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.DocsyLayout} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.DocsyLayout}
 */
proto.palm.lemon.v1.DocsyLayout.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.DocsyLayout.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.DocsyLayout.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.DocsyLayout} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.DocsyLayout.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.GantryLayout.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.GantryLayout.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.GantryLayout} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.GantryLayout.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.GantryLayout}
 */
proto.palm.lemon.v1.GantryLayout.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.GantryLayout;
  return proto.palm.lemon.v1.GantryLayout.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.GantryLayout} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.GantryLayout}
 */
proto.palm.lemon.v1.GantryLayout.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.GantryLayout.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.GantryLayout.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.GantryLayout} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.GantryLayout.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.HinodeLayout.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.HinodeLayout.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.HinodeLayout} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.HinodeLayout.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.HinodeLayout}
 */
proto.palm.lemon.v1.HinodeLayout.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.HinodeLayout;
  return proto.palm.lemon.v1.HinodeLayout.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.HinodeLayout} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.HinodeLayout}
 */
proto.palm.lemon.v1.HinodeLayout.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.HinodeLayout.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.HinodeLayout.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.HinodeLayout} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.HinodeLayout.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.UniversalLayout.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.UniversalLayout.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.UniversalLayout} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.UniversalLayout.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.UniversalLayout}
 */
proto.palm.lemon.v1.UniversalLayout.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.UniversalLayout;
  return proto.palm.lemon.v1.UniversalLayout.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.UniversalLayout} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.UniversalLayout}
 */
proto.palm.lemon.v1.UniversalLayout.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.UniversalLayout.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.UniversalLayout.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.UniversalLayout} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.UniversalLayout.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.XCorporationLayout.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.XCorporationLayout.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.XCorporationLayout} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.XCorporationLayout.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.XCorporationLayout}
 */
proto.palm.lemon.v1.XCorporationLayout.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.XCorporationLayout;
  return proto.palm.lemon.v1.XCorporationLayout.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.XCorporationLayout} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.XCorporationLayout}
 */
proto.palm.lemon.v1.XCorporationLayout.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.XCorporationLayout.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.XCorporationLayout.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.XCorporationLayout} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.XCorporationLayout.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.CleanWhiteHomePage.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.CleanWhiteHomePage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.CleanWhiteHomePage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.CleanWhiteHomePage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.CleanWhiteHomePage}
 */
proto.palm.lemon.v1.CleanWhiteHomePage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.CleanWhiteHomePage;
  return proto.palm.lemon.v1.CleanWhiteHomePage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.CleanWhiteHomePage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.CleanWhiteHomePage}
 */
proto.palm.lemon.v1.CleanWhiteHomePage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.CleanWhiteHomePage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.CleanWhiteHomePage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.CleanWhiteHomePage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.CleanWhiteHomePage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.DocsyHomePage.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.DocsyHomePage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.DocsyHomePage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.DocsyHomePage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.DocsyHomePage}
 */
proto.palm.lemon.v1.DocsyHomePage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.DocsyHomePage;
  return proto.palm.lemon.v1.DocsyHomePage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.DocsyHomePage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.DocsyHomePage}
 */
proto.palm.lemon.v1.DocsyHomePage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.DocsyHomePage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.DocsyHomePage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.DocsyHomePage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.DocsyHomePage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.GantryHomePage.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.GantryHomePage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.GantryHomePage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.GantryHomePage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.GantryHomePage}
 */
proto.palm.lemon.v1.GantryHomePage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.GantryHomePage;
  return proto.palm.lemon.v1.GantryHomePage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.GantryHomePage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.GantryHomePage}
 */
proto.palm.lemon.v1.GantryHomePage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.GantryHomePage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.GantryHomePage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.GantryHomePage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.GantryHomePage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.HinodeHomePage.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.HinodeHomePage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.HinodeHomePage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.HinodeHomePage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.HinodeHomePage}
 */
proto.palm.lemon.v1.HinodeHomePage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.HinodeHomePage;
  return proto.palm.lemon.v1.HinodeHomePage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.HinodeHomePage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.HinodeHomePage}
 */
proto.palm.lemon.v1.HinodeHomePage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.HinodeHomePage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.HinodeHomePage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.HinodeHomePage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.HinodeHomePage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.UniversalHomePage.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.UniversalHomePage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.UniversalHomePage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.UniversalHomePage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.UniversalHomePage}
 */
proto.palm.lemon.v1.UniversalHomePage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.UniversalHomePage;
  return proto.palm.lemon.v1.UniversalHomePage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.UniversalHomePage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.UniversalHomePage}
 */
proto.palm.lemon.v1.UniversalHomePage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.UniversalHomePage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.UniversalHomePage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.UniversalHomePage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.UniversalHomePage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.XCorporationHomePage.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.XCorporationHomePage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.XCorporationHomePage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.XCorporationHomePage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.XCorporationHomePage}
 */
proto.palm.lemon.v1.XCorporationHomePage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.XCorporationHomePage;
  return proto.palm.lemon.v1.XCorporationHomePage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.XCorporationHomePage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.XCorporationHomePage}
 */
proto.palm.lemon.v1.XCorporationHomePage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.XCorporationHomePage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.XCorporationHomePage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.XCorporationHomePage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.XCorporationHomePage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.palm.lemon.v1.Rss.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.Rss.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.Rss.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.Rss} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.Rss.toObject = function(includeInstance, msg) {
  var f, obj = {
    home: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    linksList: jspb.Message.toObjectList(msg.getLinksList(),
    proto.palm.lemon.v1.Rss.Link.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.Rss}
 */
proto.palm.lemon.v1.Rss.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.Rss;
  return proto.palm.lemon.v1.Rss.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.Rss} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.Rss}
 */
proto.palm.lemon.v1.Rss.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHome(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = new proto.palm.lemon.v1.Rss.Link;
      reader.readMessage(value,proto.palm.lemon.v1.Rss.Link.deserializeBinaryFromReader);
      msg.addLinks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.Rss.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.Rss.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.Rss} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.Rss.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHome();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLinksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.palm.lemon.v1.Rss.Link.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.Rss.Link.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.Rss.Link.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.Rss.Link} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.Rss.Link.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.Rss.Link}
 */
proto.palm.lemon.v1.Rss.Link.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.Rss.Link;
  return proto.palm.lemon.v1.Rss.Link.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.Rss.Link} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.Rss.Link}
 */
proto.palm.lemon.v1.Rss.Link.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.Rss.Link.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.Rss.Link.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.Rss.Link} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.Rss.Link.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.palm.lemon.v1.Rss.Link.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.lemon.v1.Rss.Link} returns this
 */
proto.palm.lemon.v1.Rss.Link.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.palm.lemon.v1.Rss.Link.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.lemon.v1.Rss.Link} returns this
 */
proto.palm.lemon.v1.Rss.Link.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.palm.lemon.v1.Rss.Link.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.lemon.v1.Rss.Link} returns this
 */
proto.palm.lemon.v1.Rss.Link.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp updated_at = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.palm.lemon.v1.Rss.Link.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.palm.lemon.v1.Rss.Link} returns this
*/
proto.palm.lemon.v1.Rss.Link.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.lemon.v1.Rss.Link} returns this
 */
proto.palm.lemon.v1.Rss.Link.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.lemon.v1.Rss.Link.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string home = 1;
 * @return {string}
 */
proto.palm.lemon.v1.Rss.prototype.getHome = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.lemon.v1.Rss} returns this
 */
proto.palm.lemon.v1.Rss.prototype.setHome = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.palm.lemon.v1.Rss.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.lemon.v1.Rss} returns this
 */
proto.palm.lemon.v1.Rss.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.palm.lemon.v1.Rss.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.lemon.v1.Rss} returns this
 */
proto.palm.lemon.v1.Rss.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Link links = 9;
 * @return {!Array<!proto.palm.lemon.v1.Rss.Link>}
 */
proto.palm.lemon.v1.Rss.prototype.getLinksList = function() {
  return /** @type{!Array<!proto.palm.lemon.v1.Rss.Link>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.palm.lemon.v1.Rss.Link, 9));
};


/**
 * @param {!Array<!proto.palm.lemon.v1.Rss.Link>} value
 * @return {!proto.palm.lemon.v1.Rss} returns this
*/
proto.palm.lemon.v1.Rss.prototype.setLinksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.palm.lemon.v1.Rss.Link=} opt_value
 * @param {number=} opt_index
 * @return {!proto.palm.lemon.v1.Rss.Link}
 */
proto.palm.lemon.v1.Rss.prototype.addLinks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.palm.lemon.v1.Rss.Link, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.palm.lemon.v1.Rss} returns this
 */
proto.palm.lemon.v1.Rss.prototype.clearLinksList = function() {
  return this.setLinksList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.palm.lemon.v1.Sitemap.oneofGroups_ = [[11,12]];

/**
 * @enum {number}
 */
proto.palm.lemon.v1.Sitemap.BodyCase = {
  BODY_NOT_SET: 0,
  URLSET: 11,
  INDEX: 12
};

/**
 * @return {proto.palm.lemon.v1.Sitemap.BodyCase}
 */
proto.palm.lemon.v1.Sitemap.prototype.getBodyCase = function() {
  return /** @type {proto.palm.lemon.v1.Sitemap.BodyCase} */(jspb.Message.computeOneofCase(this, proto.palm.lemon.v1.Sitemap.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.Sitemap.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.Sitemap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.Sitemap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.Sitemap.toObject = function(includeInstance, msg) {
  var f, obj = {
    home: jspb.Message.getFieldWithDefault(msg, 1, ""),
    urlset: (f = msg.getUrlset()) && proto.palm.lemon.v1.Sitemap.UrlSet.toObject(includeInstance, f),
    index: (f = msg.getIndex()) && proto.palm.lemon.v1.Sitemap.Index.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.Sitemap}
 */
proto.palm.lemon.v1.Sitemap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.Sitemap;
  return proto.palm.lemon.v1.Sitemap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.Sitemap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.Sitemap}
 */
proto.palm.lemon.v1.Sitemap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHome(value);
      break;
    case 11:
      var value = new proto.palm.lemon.v1.Sitemap.UrlSet;
      reader.readMessage(value,proto.palm.lemon.v1.Sitemap.UrlSet.deserializeBinaryFromReader);
      msg.setUrlset(value);
      break;
    case 12:
      var value = new proto.palm.lemon.v1.Sitemap.Index;
      reader.readMessage(value,proto.palm.lemon.v1.Sitemap.Index.deserializeBinaryFromReader);
      msg.setIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.Sitemap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.Sitemap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.Sitemap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.Sitemap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHome();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUrlset();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.palm.lemon.v1.Sitemap.UrlSet.serializeBinaryToWriter
    );
  }
  f = message.getIndex();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.palm.lemon.v1.Sitemap.Index.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.Sitemap.Link.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.Sitemap.Link.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.Sitemap.Link} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.Sitemap.Link.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getFieldWithDefault(msg, 1, ""),
    changeFreq: jspb.Message.getFieldWithDefault(msg, 2, 0),
    priority: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.Sitemap.Link}
 */
proto.palm.lemon.v1.Sitemap.Link.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.Sitemap.Link;
  return proto.palm.lemon.v1.Sitemap.Link.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.Sitemap.Link} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.Sitemap.Link}
 */
proto.palm.lemon.v1.Sitemap.Link.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 2:
      var value = /** @type {!proto.palm.lemon.v1.Sitemap.Link.ChangeFreq} */ (reader.readEnum());
      msg.setChangeFreq(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPriority(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.Sitemap.Link.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.Sitemap.Link.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.Sitemap.Link} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.Sitemap.Link.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChangeFreq();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.palm.lemon.v1.Sitemap.Link.ChangeFreq = {
  NEVER: 0,
  ALWAYS: 1,
  HOURLY: 2,
  DAILY: 3,
  WEEKLY: 4,
  MONTHLY: 5,
  YEARLY: 6
};

/**
 * optional string path = 1;
 * @return {string}
 */
proto.palm.lemon.v1.Sitemap.Link.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.lemon.v1.Sitemap.Link} returns this
 */
proto.palm.lemon.v1.Sitemap.Link.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ChangeFreq change_freq = 2;
 * @return {!proto.palm.lemon.v1.Sitemap.Link.ChangeFreq}
 */
proto.palm.lemon.v1.Sitemap.Link.prototype.getChangeFreq = function() {
  return /** @type {!proto.palm.lemon.v1.Sitemap.Link.ChangeFreq} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.palm.lemon.v1.Sitemap.Link.ChangeFreq} value
 * @return {!proto.palm.lemon.v1.Sitemap.Link} returns this
 */
proto.palm.lemon.v1.Sitemap.Link.prototype.setChangeFreq = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional float priority = 3;
 * @return {number}
 */
proto.palm.lemon.v1.Sitemap.Link.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.palm.lemon.v1.Sitemap.Link} returns this
 */
proto.palm.lemon.v1.Sitemap.Link.prototype.setPriority = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp updated_at = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.palm.lemon.v1.Sitemap.Link.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.palm.lemon.v1.Sitemap.Link} returns this
*/
proto.palm.lemon.v1.Sitemap.Link.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.lemon.v1.Sitemap.Link} returns this
 */
proto.palm.lemon.v1.Sitemap.Link.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.lemon.v1.Sitemap.Link.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.palm.lemon.v1.Sitemap.UrlSet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.Sitemap.UrlSet.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.Sitemap.UrlSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.Sitemap.UrlSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.Sitemap.UrlSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    linksList: jspb.Message.toObjectList(msg.getLinksList(),
    proto.palm.lemon.v1.Sitemap.Link.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.Sitemap.UrlSet}
 */
proto.palm.lemon.v1.Sitemap.UrlSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.Sitemap.UrlSet;
  return proto.palm.lemon.v1.Sitemap.UrlSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.Sitemap.UrlSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.Sitemap.UrlSet}
 */
proto.palm.lemon.v1.Sitemap.UrlSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.palm.lemon.v1.Sitemap.Link;
      reader.readMessage(value,proto.palm.lemon.v1.Sitemap.Link.deserializeBinaryFromReader);
      msg.addLinks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.Sitemap.UrlSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.Sitemap.UrlSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.Sitemap.UrlSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.Sitemap.UrlSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLinksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.palm.lemon.v1.Sitemap.Link.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Link links = 1;
 * @return {!Array<!proto.palm.lemon.v1.Sitemap.Link>}
 */
proto.palm.lemon.v1.Sitemap.UrlSet.prototype.getLinksList = function() {
  return /** @type{!Array<!proto.palm.lemon.v1.Sitemap.Link>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.palm.lemon.v1.Sitemap.Link, 1));
};


/**
 * @param {!Array<!proto.palm.lemon.v1.Sitemap.Link>} value
 * @return {!proto.palm.lemon.v1.Sitemap.UrlSet} returns this
*/
proto.palm.lemon.v1.Sitemap.UrlSet.prototype.setLinksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.palm.lemon.v1.Sitemap.Link=} opt_value
 * @param {number=} opt_index
 * @return {!proto.palm.lemon.v1.Sitemap.Link}
 */
proto.palm.lemon.v1.Sitemap.UrlSet.prototype.addLinks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.palm.lemon.v1.Sitemap.Link, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.palm.lemon.v1.Sitemap.UrlSet} returns this
 */
proto.palm.lemon.v1.Sitemap.UrlSet.prototype.clearLinksList = function() {
  return this.setLinksList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.palm.lemon.v1.Sitemap.Index.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.Sitemap.Index.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.Sitemap.Index.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.Sitemap.Index} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.Sitemap.Index.toObject = function(includeInstance, msg) {
  var f, obj = {
    linksList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.Sitemap.Index}
 */
proto.palm.lemon.v1.Sitemap.Index.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.Sitemap.Index;
  return proto.palm.lemon.v1.Sitemap.Index.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.Sitemap.Index} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.Sitemap.Index}
 */
proto.palm.lemon.v1.Sitemap.Index.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addLinks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.Sitemap.Index.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.Sitemap.Index.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.Sitemap.Index} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.Sitemap.Index.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLinksList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string links = 1;
 * @return {!Array<string>}
 */
proto.palm.lemon.v1.Sitemap.Index.prototype.getLinksList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.palm.lemon.v1.Sitemap.Index} returns this
 */
proto.palm.lemon.v1.Sitemap.Index.prototype.setLinksList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.palm.lemon.v1.Sitemap.Index} returns this
 */
proto.palm.lemon.v1.Sitemap.Index.prototype.addLinks = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.palm.lemon.v1.Sitemap.Index} returns this
 */
proto.palm.lemon.v1.Sitemap.Index.prototype.clearLinksList = function() {
  return this.setLinksList([]);
};


/**
 * optional string home = 1;
 * @return {string}
 */
proto.palm.lemon.v1.Sitemap.prototype.getHome = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.lemon.v1.Sitemap} returns this
 */
proto.palm.lemon.v1.Sitemap.prototype.setHome = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional UrlSet urlset = 11;
 * @return {?proto.palm.lemon.v1.Sitemap.UrlSet}
 */
proto.palm.lemon.v1.Sitemap.prototype.getUrlset = function() {
  return /** @type{?proto.palm.lemon.v1.Sitemap.UrlSet} */ (
    jspb.Message.getWrapperField(this, proto.palm.lemon.v1.Sitemap.UrlSet, 11));
};


/**
 * @param {?proto.palm.lemon.v1.Sitemap.UrlSet|undefined} value
 * @return {!proto.palm.lemon.v1.Sitemap} returns this
*/
proto.palm.lemon.v1.Sitemap.prototype.setUrlset = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.palm.lemon.v1.Sitemap.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.lemon.v1.Sitemap} returns this
 */
proto.palm.lemon.v1.Sitemap.prototype.clearUrlset = function() {
  return this.setUrlset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.lemon.v1.Sitemap.prototype.hasUrlset = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Index index = 12;
 * @return {?proto.palm.lemon.v1.Sitemap.Index}
 */
proto.palm.lemon.v1.Sitemap.prototype.getIndex = function() {
  return /** @type{?proto.palm.lemon.v1.Sitemap.Index} */ (
    jspb.Message.getWrapperField(this, proto.palm.lemon.v1.Sitemap.Index, 12));
};


/**
 * @param {?proto.palm.lemon.v1.Sitemap.Index|undefined} value
 * @return {!proto.palm.lemon.v1.Sitemap} returns this
*/
proto.palm.lemon.v1.Sitemap.prototype.setIndex = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.palm.lemon.v1.Sitemap.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.palm.lemon.v1.Sitemap} returns this
 */
proto.palm.lemon.v1.Sitemap.prototype.clearIndex = function() {
  return this.setIndex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.palm.lemon.v1.Sitemap.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.palm.lemon.v1.Page.prototype.toObject = function(opt_includeInstance) {
  return proto.palm.lemon.v1.Page.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.palm.lemon.v1.Page} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.Page.toObject = function(includeInstance, msg) {
  var f, obj = {
    slug: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.palm.lemon.v1.Page}
 */
proto.palm.lemon.v1.Page.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.palm.lemon.v1.Page;
  return proto.palm.lemon.v1.Page.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.palm.lemon.v1.Page} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.palm.lemon.v1.Page}
 */
proto.palm.lemon.v1.Page.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.palm.lemon.v1.Page.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.palm.lemon.v1.Page.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.palm.lemon.v1.Page} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.palm.lemon.v1.Page.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlug();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string slug = 1;
 * @return {string}
 */
proto.palm.lemon.v1.Page.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.lemon.v1.Page} returns this
 */
proto.palm.lemon.v1.Page.prototype.setSlug = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.palm.lemon.v1.Page.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.palm.lemon.v1.Page} returns this
 */
proto.palm.lemon.v1.Page.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.palm.lemon.v1.Theme = {
  UNIVERSAL: 0,
  CLEANWHITE: 1,
  DOCSY: 2,
  GANTRY: 3,
  HINODE: 4,
  XCORPORATION: 5
};

goog.object.extend(exports, proto.palm.lemon.v1);
