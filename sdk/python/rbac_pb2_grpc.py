# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import rbac_pb2 as rbac__pb2


class RbacStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetRolesForUser = channel.unary_unary(
                '/palm.rbac.v1.Rbac/GetRolesForUser',
                request_serializer=rbac__pb2.UserRequest.SerializeToString,
                response_deserializer=rbac__pb2.RolesResponse.FromString,
                )
        self.GetImplicitRolesForUser = channel.unary_unary(
                '/palm.rbac.v1.Rbac/GetImplicitRolesForUser',
                request_serializer=rbac__pb2.UserRequest.SerializeToString,
                response_deserializer=rbac__pb2.RolesResponse.FromString,
                )
        self.AddRolesForUser = channel.unary_unary(
                '/palm.rbac.v1.Rbac/AddRolesForUser',
                request_serializer=rbac__pb2.RolesForUserRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteRolesForUser = channel.unary_unary(
                '/palm.rbac.v1.Rbac/DeleteRolesForUser',
                request_serializer=rbac__pb2.RolesForUserRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.HasImplicitRoleForUser = channel.unary_unary(
                '/palm.rbac.v1.Rbac/HasImplicitRoleForUser',
                request_serializer=rbac__pb2.HasRoleForUserRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteUser = channel.unary_unary(
                '/palm.rbac.v1.Rbac/DeleteUser',
                request_serializer=rbac__pb2.UserRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.AddPermissionsForUser = channel.unary_unary(
                '/palm.rbac.v1.Rbac/AddPermissionsForUser',
                request_serializer=rbac__pb2.PermissionsForUserRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeletePermissionsForUser = channel.unary_unary(
                '/palm.rbac.v1.Rbac/DeletePermissionsForUser',
                request_serializer=rbac__pb2.PermissionsForUserRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetPermissionsForUser = channel.unary_unary(
                '/palm.rbac.v1.Rbac/GetPermissionsForUser',
                request_serializer=rbac__pb2.UserRequest.SerializeToString,
                response_deserializer=rbac__pb2.PermissionsResponse.FromString,
                )
        self.GetImplicitPermissionsForUser = channel.unary_unary(
                '/palm.rbac.v1.Rbac/GetImplicitPermissionsForUser',
                request_serializer=rbac__pb2.UserRequest.SerializeToString,
                response_deserializer=rbac__pb2.PermissionsResponse.FromString,
                )
        self.HasImplicitPermissionsForUser = channel.unary_unary(
                '/palm.rbac.v1.Rbac/HasImplicitPermissionsForUser',
                request_serializer=rbac__pb2.UserRequest.SerializeToString,
                response_deserializer=rbac__pb2.PermissionsResponse.FromString,
                )
        self.GetUsersForRole = channel.unary_unary(
                '/palm.rbac.v1.Rbac/GetUsersForRole',
                request_serializer=rbac__pb2.RoleRequest.SerializeToString,
                response_deserializer=rbac__pb2.UsersResponse.FromString,
                )
        self.GetImplicitUsersForRole = channel.unary_unary(
                '/palm.rbac.v1.Rbac/GetImplicitUsersForRole',
                request_serializer=rbac__pb2.RoleRequest.SerializeToString,
                response_deserializer=rbac__pb2.UsersResponse.FromString,
                )
        self.DeleteRole = channel.unary_unary(
                '/palm.rbac.v1.Rbac/DeleteRole',
                request_serializer=rbac__pb2.RoleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.AddPermissionsForRole = channel.unary_unary(
                '/palm.rbac.v1.Rbac/AddPermissionsForRole',
                request_serializer=rbac__pb2.PermissionsForRoleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeletePermissionsForRole = channel.unary_unary(
                '/palm.rbac.v1.Rbac/DeletePermissionsForRole',
                request_serializer=rbac__pb2.PermissionsForRoleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetPermissionsForRole = channel.unary_unary(
                '/palm.rbac.v1.Rbac/GetPermissionsForRole',
                request_serializer=rbac__pb2.RoleRequest.SerializeToString,
                response_deserializer=rbac__pb2.PermissionsResponse.FromString,
                )


class RbacServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetRolesForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImplicitRolesForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddRolesForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRolesForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HasImplicitRoleForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPermissionsForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePermissionsForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPermissionsForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImplicitPermissionsForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HasImplicitPermissionsForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUsersForRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImplicitUsersForRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPermissionsForRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePermissionsForRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPermissionsForRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RbacServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetRolesForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRolesForUser,
                    request_deserializer=rbac__pb2.UserRequest.FromString,
                    response_serializer=rbac__pb2.RolesResponse.SerializeToString,
            ),
            'GetImplicitRolesForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImplicitRolesForUser,
                    request_deserializer=rbac__pb2.UserRequest.FromString,
                    response_serializer=rbac__pb2.RolesResponse.SerializeToString,
            ),
            'AddRolesForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AddRolesForUser,
                    request_deserializer=rbac__pb2.RolesForUserRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteRolesForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRolesForUser,
                    request_deserializer=rbac__pb2.RolesForUserRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'HasImplicitRoleForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.HasImplicitRoleForUser,
                    request_deserializer=rbac__pb2.HasRoleForUserRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=rbac__pb2.UserRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AddPermissionsForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPermissionsForUser,
                    request_deserializer=rbac__pb2.PermissionsForUserRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeletePermissionsForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePermissionsForUser,
                    request_deserializer=rbac__pb2.PermissionsForUserRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetPermissionsForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPermissionsForUser,
                    request_deserializer=rbac__pb2.UserRequest.FromString,
                    response_serializer=rbac__pb2.PermissionsResponse.SerializeToString,
            ),
            'GetImplicitPermissionsForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImplicitPermissionsForUser,
                    request_deserializer=rbac__pb2.UserRequest.FromString,
                    response_serializer=rbac__pb2.PermissionsResponse.SerializeToString,
            ),
            'HasImplicitPermissionsForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.HasImplicitPermissionsForUser,
                    request_deserializer=rbac__pb2.UserRequest.FromString,
                    response_serializer=rbac__pb2.PermissionsResponse.SerializeToString,
            ),
            'GetUsersForRole': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsersForRole,
                    request_deserializer=rbac__pb2.RoleRequest.FromString,
                    response_serializer=rbac__pb2.UsersResponse.SerializeToString,
            ),
            'GetImplicitUsersForRole': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImplicitUsersForRole,
                    request_deserializer=rbac__pb2.RoleRequest.FromString,
                    response_serializer=rbac__pb2.UsersResponse.SerializeToString,
            ),
            'DeleteRole': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRole,
                    request_deserializer=rbac__pb2.RoleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AddPermissionsForRole': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPermissionsForRole,
                    request_deserializer=rbac__pb2.PermissionsForRoleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeletePermissionsForRole': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePermissionsForRole,
                    request_deserializer=rbac__pb2.PermissionsForRoleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetPermissionsForRole': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPermissionsForRole,
                    request_deserializer=rbac__pb2.RoleRequest.FromString,
                    response_serializer=rbac__pb2.PermissionsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'palm.rbac.v1.Rbac', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Rbac(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetRolesForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.rbac.v1.Rbac/GetRolesForUser',
            rbac__pb2.UserRequest.SerializeToString,
            rbac__pb2.RolesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetImplicitRolesForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.rbac.v1.Rbac/GetImplicitRolesForUser',
            rbac__pb2.UserRequest.SerializeToString,
            rbac__pb2.RolesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddRolesForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.rbac.v1.Rbac/AddRolesForUser',
            rbac__pb2.RolesForUserRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRolesForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.rbac.v1.Rbac/DeleteRolesForUser',
            rbac__pb2.RolesForUserRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HasImplicitRoleForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.rbac.v1.Rbac/HasImplicitRoleForUser',
            rbac__pb2.HasRoleForUserRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.rbac.v1.Rbac/DeleteUser',
            rbac__pb2.UserRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddPermissionsForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.rbac.v1.Rbac/AddPermissionsForUser',
            rbac__pb2.PermissionsForUserRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePermissionsForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.rbac.v1.Rbac/DeletePermissionsForUser',
            rbac__pb2.PermissionsForUserRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPermissionsForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.rbac.v1.Rbac/GetPermissionsForUser',
            rbac__pb2.UserRequest.SerializeToString,
            rbac__pb2.PermissionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetImplicitPermissionsForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.rbac.v1.Rbac/GetImplicitPermissionsForUser',
            rbac__pb2.UserRequest.SerializeToString,
            rbac__pb2.PermissionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HasImplicitPermissionsForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.rbac.v1.Rbac/HasImplicitPermissionsForUser',
            rbac__pb2.UserRequest.SerializeToString,
            rbac__pb2.PermissionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUsersForRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.rbac.v1.Rbac/GetUsersForRole',
            rbac__pb2.RoleRequest.SerializeToString,
            rbac__pb2.UsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetImplicitUsersForRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.rbac.v1.Rbac/GetImplicitUsersForRole',
            rbac__pb2.RoleRequest.SerializeToString,
            rbac__pb2.UsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.rbac.v1.Rbac/DeleteRole',
            rbac__pb2.RoleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddPermissionsForRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.rbac.v1.Rbac/AddPermissionsForRole',
            rbac__pb2.PermissionsForRoleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePermissionsForRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.rbac.v1.Rbac/DeletePermissionsForRole',
            rbac__pb2.PermissionsForRoleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPermissionsForRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.rbac.v1.Rbac/GetPermissionsForRole',
            rbac__pb2.RoleRequest.SerializeToString,
            rbac__pb2.PermissionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
