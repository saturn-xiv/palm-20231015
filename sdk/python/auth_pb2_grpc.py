# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import auth_pb2 as auth__pb2
from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import nut_pb2 as nut__pb2
import orchid_pb2 as orchid__pb2


class UserStub(object):
    """----------------------------------------------------------------------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SignIn = channel.unary_unary(
                '/palm.auth.v1.User/SignIn',
                request_serializer=auth__pb2.UserSignInRequest.SerializeToString,
                response_deserializer=auth__pb2.UserSignInResponse.FromString,
                )
        self.SignUp = channel.unary_unary(
                '/palm.auth.v1.User/SignUp',
                request_serializer=auth__pb2.UserSignUpRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ConfirmByEmail = channel.unary_unary(
                '/palm.auth.v1.User/ConfirmByEmail',
                request_serializer=auth__pb2.UserQueryRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ConfirmByToken = channel.unary_unary(
                '/palm.auth.v1.User/ConfirmByToken',
                request_serializer=auth__pb2.UserTokenRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.UnlockByEmail = channel.unary_unary(
                '/palm.auth.v1.User/UnlockByEmail',
                request_serializer=auth__pb2.UserQueryRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.UnlockByToken = channel.unary_unary(
                '/palm.auth.v1.User/UnlockByToken',
                request_serializer=auth__pb2.UserTokenRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ForgotPassword = channel.unary_unary(
                '/palm.auth.v1.User/ForgotPassword',
                request_serializer=auth__pb2.UserQueryRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ResetPassword = channel.unary_unary(
                '/palm.auth.v1.User/ResetPassword',
                request_serializer=auth__pb2.UserResetPasswordRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Refresh = channel.unary_unary(
                '/palm.auth.v1.User/Refresh',
                request_serializer=google_dot_protobuf_dot_duration__pb2.Duration.SerializeToString,
                response_deserializer=auth__pb2.UserSignInResponse.FromString,
                )
        self.Logs = channel.unary_unary(
                '/palm.auth.v1.User/Logs',
                request_serializer=nut__pb2.Pager.SerializeToString,
                response_deserializer=auth__pb2.UserLogsResponse.FromString,
                )
        self.SetProfile = channel.unary_unary(
                '/palm.auth.v1.User/SetProfile',
                request_serializer=auth__pb2.UserSetProfileRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ChangePassword = channel.unary_unary(
                '/palm.auth.v1.User/ChangePassword',
                request_serializer=auth__pb2.UserChangePasswordRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.SignOut = channel.unary_unary(
                '/palm.auth.v1.User/SignOut',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Index = channel.unary_unary(
                '/palm.auth.v1.User/Index',
                request_serializer=nut__pb2.Pager.SerializeToString,
                response_deserializer=auth__pb2.UserIndexResponse.FromString,
                )
        self.Show = channel.unary_unary(
                '/palm.auth.v1.User/Show',
                request_serializer=nut__pb2.IdRequest.SerializeToString,
                response_deserializer=auth__pb2.UserIndexResponse.Item.FromString,
                )
        self.Disable = channel.unary_unary(
                '/palm.auth.v1.User/Disable',
                request_serializer=nut__pb2.IdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Enable = channel.unary_unary(
                '/palm.auth.v1.User/Enable',
                request_serializer=nut__pb2.IdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Lock = channel.unary_unary(
                '/palm.auth.v1.User/Lock',
                request_serializer=nut__pb2.IdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Unlock = channel.unary_unary(
                '/palm.auth.v1.User/Unlock',
                request_serializer=nut__pb2.IdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Confirm = channel.unary_unary(
                '/palm.auth.v1.User/Confirm',
                request_serializer=nut__pb2.IdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Delete = channel.unary_unary(
                '/palm.auth.v1.User/Delete',
                request_serializer=nut__pb2.IdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.SetPassword = channel.unary_unary(
                '/palm.auth.v1.User/SetPassword',
                request_serializer=auth__pb2.UserSetPasswordRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserServicer(object):
    """----------------------------------------------------------------------------

    """

    def SignIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignUp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfirmByEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfirmByToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnlockByEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnlockByToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForgotPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Refresh(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangePassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignOut(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Index(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Show(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Disable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Enable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Lock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Confirm(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SignIn': grpc.unary_unary_rpc_method_handler(
                    servicer.SignIn,
                    request_deserializer=auth__pb2.UserSignInRequest.FromString,
                    response_serializer=auth__pb2.UserSignInResponse.SerializeToString,
            ),
            'SignUp': grpc.unary_unary_rpc_method_handler(
                    servicer.SignUp,
                    request_deserializer=auth__pb2.UserSignUpRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ConfirmByEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmByEmail,
                    request_deserializer=auth__pb2.UserQueryRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ConfirmByToken': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmByToken,
                    request_deserializer=auth__pb2.UserTokenRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UnlockByEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.UnlockByEmail,
                    request_deserializer=auth__pb2.UserQueryRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UnlockByToken': grpc.unary_unary_rpc_method_handler(
                    servicer.UnlockByToken,
                    request_deserializer=auth__pb2.UserTokenRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ForgotPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ForgotPassword,
                    request_deserializer=auth__pb2.UserQueryRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ResetPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetPassword,
                    request_deserializer=auth__pb2.UserResetPasswordRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Refresh': grpc.unary_unary_rpc_method_handler(
                    servicer.Refresh,
                    request_deserializer=google_dot_protobuf_dot_duration__pb2.Duration.FromString,
                    response_serializer=auth__pb2.UserSignInResponse.SerializeToString,
            ),
            'Logs': grpc.unary_unary_rpc_method_handler(
                    servicer.Logs,
                    request_deserializer=nut__pb2.Pager.FromString,
                    response_serializer=auth__pb2.UserLogsResponse.SerializeToString,
            ),
            'SetProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.SetProfile,
                    request_deserializer=auth__pb2.UserSetProfileRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ChangePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangePassword,
                    request_deserializer=auth__pb2.UserChangePasswordRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SignOut': grpc.unary_unary_rpc_method_handler(
                    servicer.SignOut,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Index': grpc.unary_unary_rpc_method_handler(
                    servicer.Index,
                    request_deserializer=nut__pb2.Pager.FromString,
                    response_serializer=auth__pb2.UserIndexResponse.SerializeToString,
            ),
            'Show': grpc.unary_unary_rpc_method_handler(
                    servicer.Show,
                    request_deserializer=nut__pb2.IdRequest.FromString,
                    response_serializer=auth__pb2.UserIndexResponse.Item.SerializeToString,
            ),
            'Disable': grpc.unary_unary_rpc_method_handler(
                    servicer.Disable,
                    request_deserializer=nut__pb2.IdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Enable': grpc.unary_unary_rpc_method_handler(
                    servicer.Enable,
                    request_deserializer=nut__pb2.IdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Lock': grpc.unary_unary_rpc_method_handler(
                    servicer.Lock,
                    request_deserializer=nut__pb2.IdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Unlock': grpc.unary_unary_rpc_method_handler(
                    servicer.Unlock,
                    request_deserializer=nut__pb2.IdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Confirm': grpc.unary_unary_rpc_method_handler(
                    servicer.Confirm,
                    request_deserializer=nut__pb2.IdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=nut__pb2.IdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPassword,
                    request_deserializer=auth__pb2.UserSetPasswordRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'palm.auth.v1.User', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class User(object):
    """----------------------------------------------------------------------------

    """

    @staticmethod
    def SignIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/SignIn',
            auth__pb2.UserSignInRequest.SerializeToString,
            auth__pb2.UserSignInResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignUp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/SignUp',
            auth__pb2.UserSignUpRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConfirmByEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/ConfirmByEmail',
            auth__pb2.UserQueryRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConfirmByToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/ConfirmByToken',
            auth__pb2.UserTokenRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnlockByEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/UnlockByEmail',
            auth__pb2.UserQueryRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnlockByToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/UnlockByToken',
            auth__pb2.UserTokenRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ForgotPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/ForgotPassword',
            auth__pb2.UserQueryRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/ResetPassword',
            auth__pb2.UserResetPasswordRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Refresh(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/Refresh',
            google_dot_protobuf_dot_duration__pb2.Duration.SerializeToString,
            auth__pb2.UserSignInResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Logs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/Logs',
            nut__pb2.Pager.SerializeToString,
            auth__pb2.UserLogsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/SetProfile',
            auth__pb2.UserSetProfileRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/ChangePassword',
            auth__pb2.UserChangePasswordRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignOut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/SignOut',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Index(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/Index',
            nut__pb2.Pager.SerializeToString,
            auth__pb2.UserIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Show(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/Show',
            nut__pb2.IdRequest.SerializeToString,
            auth__pb2.UserIndexResponse.Item.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Disable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/Disable',
            nut__pb2.IdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Enable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/Enable',
            nut__pb2.IdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Lock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/Lock',
            nut__pb2.IdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/Unlock',
            nut__pb2.IdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Confirm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/Confirm',
            nut__pb2.IdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/Delete',
            nut__pb2.IdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.User/SetPassword',
            auth__pb2.UserSetPasswordRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class GoogleStub(object):
    """----------------------------------------------------------------------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SignInUrl = channel.unary_unary(
                '/palm.auth.v1.Google/SignInUrl',
                request_serializer=auth__pb2.GoogleSignInUrlRequest.SerializeToString,
                response_deserializer=auth__pb2.GoogleSignInUrlResponse.FromString,
                )
        self.SignIn = channel.unary_unary(
                '/palm.auth.v1.Google/SignIn',
                request_serializer=auth__pb2.SignInByGoogleRequest.SerializeToString,
                response_deserializer=auth__pb2.UserSignInResponse.FromString,
                )


class GoogleServicer(object):
    """----------------------------------------------------------------------------
    """

    def SignInUrl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GoogleServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SignInUrl': grpc.unary_unary_rpc_method_handler(
                    servicer.SignInUrl,
                    request_deserializer=auth__pb2.GoogleSignInUrlRequest.FromString,
                    response_serializer=auth__pb2.GoogleSignInUrlResponse.SerializeToString,
            ),
            'SignIn': grpc.unary_unary_rpc_method_handler(
                    servicer.SignIn,
                    request_deserializer=auth__pb2.SignInByGoogleRequest.FromString,
                    response_serializer=auth__pb2.UserSignInResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'palm.auth.v1.Google', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Google(object):
    """----------------------------------------------------------------------------
    """

    @staticmethod
    def SignInUrl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Google/SignInUrl',
            auth__pb2.GoogleSignInUrlRequest.SerializeToString,
            auth__pb2.GoogleSignInUrlResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Google/SignIn',
            auth__pb2.SignInByGoogleRequest.SerializeToString,
            auth__pb2.UserSignInResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class WechatStub(object):
    """----------------------------------------------------------------------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Oauth2SignInState = channel.unary_unary(
                '/palm.auth.v1.Wechat/Oauth2SignInState',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=auth__pb2.WechatOauth2SignInStateResponse.FromString,
                )
        self.Oauth2SignInUrl = channel.unary_unary(
                '/palm.auth.v1.Wechat/Oauth2SignInUrl',
                request_serializer=auth__pb2.WechatOauth2SignInUrlRequest.SerializeToString,
                response_deserializer=orchid__pb2.WechatOauth2QrConnectResponse.FromString,
                )
        self.SignInByOauth2 = channel.unary_unary(
                '/palm.auth.v1.Wechat/SignInByOauth2',
                request_serializer=auth__pb2.SignInByWechatOauth2Request.SerializeToString,
                response_deserializer=auth__pb2.UserSignInResponse.FromString,
                )
        self.AllOauth2User = channel.unary_unary(
                '/palm.auth.v1.Wechat/AllOauth2User',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=auth__pb2.WechatAllOauth2UserResponse.FromString,
                )
        self.DestroyOauth2User = channel.unary_unary(
                '/palm.auth.v1.Wechat/DestroyOauth2User',
                request_serializer=nut__pb2.IdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.BindOauth2UserById = channel.unary_unary(
                '/palm.auth.v1.Wechat/BindOauth2UserById',
                request_serializer=auth__pb2.WechatUserBindByIdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.BindOauth2UserByAccount = channel.unary_unary(
                '/palm.auth.v1.Wechat/BindOauth2UserByAccount',
                request_serializer=auth__pb2.WechatUserBindByAccountRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetOauth2UserById = channel.unary_unary(
                '/palm.auth.v1.Wechat/GetOauth2UserById',
                request_serializer=nut__pb2.IdRequest.SerializeToString,
                response_deserializer=auth__pb2.WechatAllOauth2UserResponse.Item.FromString,
                )
        self.GetOauth2UserByOpenId = channel.unary_unary(
                '/palm.auth.v1.Wechat/GetOauth2UserByOpenId',
                request_serializer=auth__pb2.WechatUserQueryByOpenIdRequest.SerializeToString,
                response_deserializer=auth__pb2.WechatAllOauth2UserResponse.Item.FromString,
                )
        self.GetOauth2UserByUnionId = channel.unary_unary(
                '/palm.auth.v1.Wechat/GetOauth2UserByUnionId',
                request_serializer=auth__pb2.WechatUserQueryByUnionIdRequest.SerializeToString,
                response_deserializer=auth__pb2.WechatAllOauth2UserResponse.FromString,
                )
        self.AllMiniProgramUser = channel.unary_unary(
                '/palm.auth.v1.Wechat/AllMiniProgramUser',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=auth__pb2.WechatAllMiniProgramUserResponse.FromString,
                )
        self.DestroyMiniProgramUser = channel.unary_unary(
                '/palm.auth.v1.Wechat/DestroyMiniProgramUser',
                request_serializer=nut__pb2.IdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.BindMiniProgramUserById = channel.unary_unary(
                '/palm.auth.v1.Wechat/BindMiniProgramUserById',
                request_serializer=auth__pb2.WechatUserBindByIdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetMiniProgramUserById = channel.unary_unary(
                '/palm.auth.v1.Wechat/GetMiniProgramUserById',
                request_serializer=nut__pb2.IdRequest.SerializeToString,
                response_deserializer=auth__pb2.WechatAllMiniProgramUserResponse.Item.FromString,
                )
        self.GetMiniProgramUserByOpenId = channel.unary_unary(
                '/palm.auth.v1.Wechat/GetMiniProgramUserByOpenId',
                request_serializer=auth__pb2.WechatUserQueryByOpenIdRequest.SerializeToString,
                response_deserializer=auth__pb2.WechatAllMiniProgramUserResponse.Item.FromString,
                )
        self.GetMiniProgramUserByUnionId = channel.unary_unary(
                '/palm.auth.v1.Wechat/GetMiniProgramUserByUnionId',
                request_serializer=auth__pb2.WechatUserQueryByUnionIdRequest.SerializeToString,
                response_deserializer=auth__pb2.WechatAllMiniProgramUserResponse.FromString,
                )


class WechatServicer(object):
    """----------------------------------------------------------------------------
    """

    def Oauth2SignInState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Oauth2SignInUrl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignInByOauth2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AllOauth2User(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DestroyOauth2User(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BindOauth2UserById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BindOauth2UserByAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOauth2UserById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOauth2UserByOpenId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOauth2UserByUnionId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AllMiniProgramUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DestroyMiniProgramUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BindMiniProgramUserById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMiniProgramUserById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMiniProgramUserByOpenId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMiniProgramUserByUnionId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WechatServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Oauth2SignInState': grpc.unary_unary_rpc_method_handler(
                    servicer.Oauth2SignInState,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=auth__pb2.WechatOauth2SignInStateResponse.SerializeToString,
            ),
            'Oauth2SignInUrl': grpc.unary_unary_rpc_method_handler(
                    servicer.Oauth2SignInUrl,
                    request_deserializer=auth__pb2.WechatOauth2SignInUrlRequest.FromString,
                    response_serializer=orchid__pb2.WechatOauth2QrConnectResponse.SerializeToString,
            ),
            'SignInByOauth2': grpc.unary_unary_rpc_method_handler(
                    servicer.SignInByOauth2,
                    request_deserializer=auth__pb2.SignInByWechatOauth2Request.FromString,
                    response_serializer=auth__pb2.UserSignInResponse.SerializeToString,
            ),
            'AllOauth2User': grpc.unary_unary_rpc_method_handler(
                    servicer.AllOauth2User,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=auth__pb2.WechatAllOauth2UserResponse.SerializeToString,
            ),
            'DestroyOauth2User': grpc.unary_unary_rpc_method_handler(
                    servicer.DestroyOauth2User,
                    request_deserializer=nut__pb2.IdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'BindOauth2UserById': grpc.unary_unary_rpc_method_handler(
                    servicer.BindOauth2UserById,
                    request_deserializer=auth__pb2.WechatUserBindByIdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'BindOauth2UserByAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.BindOauth2UserByAccount,
                    request_deserializer=auth__pb2.WechatUserBindByAccountRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetOauth2UserById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOauth2UserById,
                    request_deserializer=nut__pb2.IdRequest.FromString,
                    response_serializer=auth__pb2.WechatAllOauth2UserResponse.Item.SerializeToString,
            ),
            'GetOauth2UserByOpenId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOauth2UserByOpenId,
                    request_deserializer=auth__pb2.WechatUserQueryByOpenIdRequest.FromString,
                    response_serializer=auth__pb2.WechatAllOauth2UserResponse.Item.SerializeToString,
            ),
            'GetOauth2UserByUnionId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOauth2UserByUnionId,
                    request_deserializer=auth__pb2.WechatUserQueryByUnionIdRequest.FromString,
                    response_serializer=auth__pb2.WechatAllOauth2UserResponse.SerializeToString,
            ),
            'AllMiniProgramUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AllMiniProgramUser,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=auth__pb2.WechatAllMiniProgramUserResponse.SerializeToString,
            ),
            'DestroyMiniProgramUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DestroyMiniProgramUser,
                    request_deserializer=nut__pb2.IdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'BindMiniProgramUserById': grpc.unary_unary_rpc_method_handler(
                    servicer.BindMiniProgramUserById,
                    request_deserializer=auth__pb2.WechatUserBindByIdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetMiniProgramUserById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMiniProgramUserById,
                    request_deserializer=nut__pb2.IdRequest.FromString,
                    response_serializer=auth__pb2.WechatAllMiniProgramUserResponse.Item.SerializeToString,
            ),
            'GetMiniProgramUserByOpenId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMiniProgramUserByOpenId,
                    request_deserializer=auth__pb2.WechatUserQueryByOpenIdRequest.FromString,
                    response_serializer=auth__pb2.WechatAllMiniProgramUserResponse.Item.SerializeToString,
            ),
            'GetMiniProgramUserByUnionId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMiniProgramUserByUnionId,
                    request_deserializer=auth__pb2.WechatUserQueryByUnionIdRequest.FromString,
                    response_serializer=auth__pb2.WechatAllMiniProgramUserResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'palm.auth.v1.Wechat', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Wechat(object):
    """----------------------------------------------------------------------------
    """

    @staticmethod
    def Oauth2SignInState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Wechat/Oauth2SignInState',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            auth__pb2.WechatOauth2SignInStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Oauth2SignInUrl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Wechat/Oauth2SignInUrl',
            auth__pb2.WechatOauth2SignInUrlRequest.SerializeToString,
            orchid__pb2.WechatOauth2QrConnectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignInByOauth2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Wechat/SignInByOauth2',
            auth__pb2.SignInByWechatOauth2Request.SerializeToString,
            auth__pb2.UserSignInResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AllOauth2User(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Wechat/AllOauth2User',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            auth__pb2.WechatAllOauth2UserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DestroyOauth2User(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Wechat/DestroyOauth2User',
            nut__pb2.IdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BindOauth2UserById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Wechat/BindOauth2UserById',
            auth__pb2.WechatUserBindByIdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BindOauth2UserByAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Wechat/BindOauth2UserByAccount',
            auth__pb2.WechatUserBindByAccountRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOauth2UserById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Wechat/GetOauth2UserById',
            nut__pb2.IdRequest.SerializeToString,
            auth__pb2.WechatAllOauth2UserResponse.Item.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOauth2UserByOpenId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Wechat/GetOauth2UserByOpenId',
            auth__pb2.WechatUserQueryByOpenIdRequest.SerializeToString,
            auth__pb2.WechatAllOauth2UserResponse.Item.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOauth2UserByUnionId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Wechat/GetOauth2UserByUnionId',
            auth__pb2.WechatUserQueryByUnionIdRequest.SerializeToString,
            auth__pb2.WechatAllOauth2UserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AllMiniProgramUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Wechat/AllMiniProgramUser',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            auth__pb2.WechatAllMiniProgramUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DestroyMiniProgramUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Wechat/DestroyMiniProgramUser',
            nut__pb2.IdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BindMiniProgramUserById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Wechat/BindMiniProgramUserById',
            auth__pb2.WechatUserBindByIdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMiniProgramUserById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Wechat/GetMiniProgramUserById',
            nut__pb2.IdRequest.SerializeToString,
            auth__pb2.WechatAllMiniProgramUserResponse.Item.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMiniProgramUserByOpenId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Wechat/GetMiniProgramUserByOpenId',
            auth__pb2.WechatUserQueryByOpenIdRequest.SerializeToString,
            auth__pb2.WechatAllMiniProgramUserResponse.Item.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMiniProgramUserByUnionId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Wechat/GetMiniProgramUserByUnionId',
            auth__pb2.WechatUserQueryByUnionIdRequest.SerializeToString,
            auth__pb2.WechatAllMiniProgramUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AttachmentStub(object):
    """----------------------------------------------------------------------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Index = channel.unary_unary(
                '/palm.auth.v1.Attachment/Index',
                request_serializer=nut__pb2.Pager.SerializeToString,
                response_deserializer=auth__pb2.AttachmentIndexResponse.FromString,
                )
        self.Destroy = channel.unary_unary(
                '/palm.auth.v1.Attachment/Destroy',
                request_serializer=nut__pb2.IdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Show = channel.unary_unary(
                '/palm.auth.v1.Attachment/Show',
                request_serializer=auth__pb2.AttachmentShowRequest.SerializeToString,
                response_deserializer=auth__pb2.AttachmentShowResponse.FromString,
                )


class AttachmentServicer(object):
    """----------------------------------------------------------------------------

    """

    def Index(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Destroy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Show(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AttachmentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Index': grpc.unary_unary_rpc_method_handler(
                    servicer.Index,
                    request_deserializer=nut__pb2.Pager.FromString,
                    response_serializer=auth__pb2.AttachmentIndexResponse.SerializeToString,
            ),
            'Destroy': grpc.unary_unary_rpc_method_handler(
                    servicer.Destroy,
                    request_deserializer=nut__pb2.IdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Show': grpc.unary_unary_rpc_method_handler(
                    servicer.Show,
                    request_deserializer=auth__pb2.AttachmentShowRequest.FromString,
                    response_serializer=auth__pb2.AttachmentShowResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'palm.auth.v1.Attachment', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Attachment(object):
    """----------------------------------------------------------------------------

    """

    @staticmethod
    def Index(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Attachment/Index',
            nut__pb2.Pager.SerializeToString,
            auth__pb2.AttachmentIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Destroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Attachment/Destroy',
            nut__pb2.IdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Show(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Attachment/Show',
            auth__pb2.AttachmentShowRequest.SerializeToString,
            auth__pb2.AttachmentShowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class LocaleStub(object):
    """----------------------------------------------------------------------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/palm.auth.v1.Locale/Create',
                request_serializer=auth__pb2.LocaleCreateRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Update = channel.unary_unary(
                '/palm.auth.v1.Locale/Update',
                request_serializer=auth__pb2.LocaleUpdateRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ByLangAndCode = channel.unary_unary(
                '/palm.auth.v1.Locale/ByLangAndCode',
                request_serializer=auth__pb2.LocaleByLangAndCodeRequest.SerializeToString,
                response_deserializer=auth__pb2.LocaleIndexResponse.Item.FromString,
                )
        self.ById = channel.unary_unary(
                '/palm.auth.v1.Locale/ById',
                request_serializer=nut__pb2.IdRequest.SerializeToString,
                response_deserializer=auth__pb2.LocaleIndexResponse.Item.FromString,
                )
        self.ByLang = channel.unary_unary(
                '/palm.auth.v1.Locale/ByLang',
                request_serializer=auth__pb2.LocaleByLangRequest.SerializeToString,
                response_deserializer=auth__pb2.LocaleListResponse.FromString,
                )
        self.ByCode = channel.unary_unary(
                '/palm.auth.v1.Locale/ByCode',
                request_serializer=auth__pb2.LocaleByCodeRequest.SerializeToString,
                response_deserializer=auth__pb2.LocaleListResponse.FromString,
                )
        self.Index = channel.unary_unary(
                '/palm.auth.v1.Locale/Index',
                request_serializer=nut__pb2.Pager.SerializeToString,
                response_deserializer=auth__pb2.LocaleIndexResponse.FromString,
                )
        self.Destroy = channel.unary_unary(
                '/palm.auth.v1.Locale/Destroy',
                request_serializer=nut__pb2.IdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class LocaleServicer(object):
    """----------------------------------------------------------------------------

    """

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ByLangAndCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ByLang(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ByCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Index(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Destroy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LocaleServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=auth__pb2.LocaleCreateRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=auth__pb2.LocaleUpdateRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ByLangAndCode': grpc.unary_unary_rpc_method_handler(
                    servicer.ByLangAndCode,
                    request_deserializer=auth__pb2.LocaleByLangAndCodeRequest.FromString,
                    response_serializer=auth__pb2.LocaleIndexResponse.Item.SerializeToString,
            ),
            'ById': grpc.unary_unary_rpc_method_handler(
                    servicer.ById,
                    request_deserializer=nut__pb2.IdRequest.FromString,
                    response_serializer=auth__pb2.LocaleIndexResponse.Item.SerializeToString,
            ),
            'ByLang': grpc.unary_unary_rpc_method_handler(
                    servicer.ByLang,
                    request_deserializer=auth__pb2.LocaleByLangRequest.FromString,
                    response_serializer=auth__pb2.LocaleListResponse.SerializeToString,
            ),
            'ByCode': grpc.unary_unary_rpc_method_handler(
                    servicer.ByCode,
                    request_deserializer=auth__pb2.LocaleByCodeRequest.FromString,
                    response_serializer=auth__pb2.LocaleListResponse.SerializeToString,
            ),
            'Index': grpc.unary_unary_rpc_method_handler(
                    servicer.Index,
                    request_deserializer=nut__pb2.Pager.FromString,
                    response_serializer=auth__pb2.LocaleIndexResponse.SerializeToString,
            ),
            'Destroy': grpc.unary_unary_rpc_method_handler(
                    servicer.Destroy,
                    request_deserializer=nut__pb2.IdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'palm.auth.v1.Locale', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Locale(object):
    """----------------------------------------------------------------------------

    """

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Locale/Create',
            auth__pb2.LocaleCreateRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Locale/Update',
            auth__pb2.LocaleUpdateRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ByLangAndCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Locale/ByLangAndCode',
            auth__pb2.LocaleByLangAndCodeRequest.SerializeToString,
            auth__pb2.LocaleIndexResponse.Item.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Locale/ById',
            nut__pb2.IdRequest.SerializeToString,
            auth__pb2.LocaleIndexResponse.Item.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ByLang(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Locale/ByLang',
            auth__pb2.LocaleByLangRequest.SerializeToString,
            auth__pb2.LocaleListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ByCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Locale/ByCode',
            auth__pb2.LocaleByCodeRequest.SerializeToString,
            auth__pb2.LocaleListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Index(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Locale/Index',
            nut__pb2.Pager.SerializeToString,
            auth__pb2.LocaleIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Destroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/palm.auth.v1.Locale/Destroy',
            nut__pb2.IdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
