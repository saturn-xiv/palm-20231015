# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mall.proto

require 'google/protobuf'


descriptor_data = "\n\nmall.proto\x12\x0cpalm.mall.v1\"\xd9\x01\n\x05Order\"\xcf\x01\n\x06Status\x12\n\n\x06Voided\x10\x00\x12\x0b\n\x07Pending\x10\x01\x12\x0e\n\nProcessing\x10\x02\x12\n\n\x06Shiped\x10\x03\x12\x0c\n\x08\x43omplete\x10\x04\x12\x0c\n\x08\x43\x61nceled\x10\x05\x12\n\n\x06\x44\x65nied\x10\x06\x12\x14\n\x10\x43\x61nceledReversal\x10\x07\x12\n\n\x06\x46\x61iled\x10\x08\x12\x0c\n\x08Refunded\x10\t\x12\x0c\n\x08Reversed\x10\n\x12\x0e\n\nChargeback\x10\x0b\x12\x0b\n\x07\x45xpired\x10\x0c\x12\r\n\tProcessed\x10\r2\x05\n\x03Sku2\x05\n\x03SpuBR\n*com.github.saturn_xiv.palm.plugins.mall.v1P\x01Z\"github.com/saturn_xiv/palm/mall/v2b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Palm
  module Mall
    module V1
      Order = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("palm.mall.v1.Order").msgclass
      Order::Status = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("palm.mall.v1.Order.Status").enummodule
    end
  end
end
